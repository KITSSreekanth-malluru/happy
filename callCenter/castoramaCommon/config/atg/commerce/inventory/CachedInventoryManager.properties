# @version $Id: //product/DCS/version/7.2/templates/DCS/config/atg/commerce/inventory/CastoInventoryManager.properties#1 $$Change: 361300 $
$class=atg.commerce.inventory.RepositoryInventoryManager

#
# This is where inventory information is stored.
#
repository=CachedInventoryRepository

#
# The item descriptor type for inventory information.
#
itemType=inventory

#
# The query used to find inventory information for a 
# particulat catalog item.
#
catalogRefIdMatchQuery=catalogRefId=?0

#
# The repository containing the product catalog.
#
catalogRefRepository^=/atg/commerce/catalog/CatalogTools.catalog

#
# The item descriptor type of the product catalog items.
#
catalogRefItemType^=/atg/commerce/catalog/CatalogTools.baseSKUItemType

#
# This should use the same transaction manager as the rest of the system.
#
transactionManager^=/atg/commerce/fulfillment/Configuration.transactionManager

#
# Messages sent from the inventory manager set the message source
# to this
#
messageSourceName=CachedInventoryManager

#
# This is the port over which UpdateInventory messages are sent.
#
updateInventoryPort=UpdateInventoryPort

#
# This is the port over which scenario events are sent.
# ThresholdInventoryReached is a scenario event.
#
inventoryEventPort=InventoryEventPort

#
# These are the values used for the respective levels, if there
# is no value defined in the repository.  Remember, -1 implies an
# infinite amount.
#
defaultStockLevel=-1
defaultBackorderLevel=0
defaultPreorderLevel=0

#################################################
#
# Locking configuration
#
#################################################
getRowLock=true
maximumRetriesPerRowLock=5
millisecondDelayBeforeLockRetry=500

# if the table or column names change, update this
#inventoryRowLockSQL=UPDATE dcs_inventory SET inventory_lock = ? WHERE catalog_ref_id = ?
