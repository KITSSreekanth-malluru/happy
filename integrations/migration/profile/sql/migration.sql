-- 	Expected
-- &1 DESTINATION SCHEMA NAME
-- &2 MIGRATION SCHEMA NAME
-- &3 CATALOG SCHEMA NAME

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

-- fix login: to be sure that all emails are "corrupted" and all logins are valid
UPDATE "&1".DPS_USER SET LOGIN = REPLACE(LOGIN, '#', '@');

COMMIT;

UPDATE "&2".DPS_USER SET LOGIN = REPLACE(LOGIN, '#', '@');

COMMIT;
-- fix login: end

UPDATE "&2".DPS_USER SET EMAIL = REPLACE(EMAIL, '@', '#');

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

SELECT COUNT(1) FROM "&1".DPS_CONTACT_INFO;
SELECT COUNT(1) FROM "&2".DPS_CONTACT_INFO;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

UPDATE "&1".DPS_CONTACT_INFO a
   SET (USER_ID, FIRST_NAME, MIDDLE_NAME, LAST_NAME, ADDRESS1, ADDRESS2, CITY, STATE, POSTAL_CODE, 
        COUNTRY, PHONE_NUMBER, FAX_NUMBER, PREFIX, SUFFIX, JOB_TITLE, COMPANY_NAME, ADDRESS3, COUNTY) =  
    (SELECT USER_ID, FIRST_NAME, MIDDLE_NAME, LAST_NAME, ADDRESS1, ADDRESS2, CITY, STATE, POSTAL_CODE,
            COUNTRY, PHONE_NUMBER, FAX_NUMBER, PREFIX, SUFFIX, JOB_TITLE, COMPANY_NAME, ADDRESS3, COUNTY 
       FROM "&2".DPS_CONTACT_INFO b
      WHERE b.ID = a.ID)
 WHERE EXISTS (SELECT 1 FROM "&2".DPS_CONTACT_INFO c
                WHERE c.ID = a.ID);
                      
COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

INSERT INTO "&1".DPS_CONTACT_INFO
   (ID, USER_ID, FIRST_NAME, MIDDLE_NAME, LAST_NAME, ADDRESS1, ADDRESS2, CITY, STATE, POSTAL_CODE, 
    COUNTRY, PHONE_NUMBER, FAX_NUMBER, PREFIX, SUFFIX, JOB_TITLE, COMPANY_NAME, ADDRESS3, COUNTY)
SELECT 
   ID, USER_ID, FIRST_NAME, MIDDLE_NAME, LAST_NAME, ADDRESS1, ADDRESS2, CITY, STATE, POSTAL_CODE,
   COUNTRY, PHONE_NUMBER, FAX_NUMBER, PREFIX, SUFFIX, JOB_TITLE, COMPANY_NAME, ADDRESS3, COUNTY
  FROM "&2".DPS_CONTACT_INFO a
 WHERE NOT EXISTS (SELECT 1 FROM "&1".DPS_CONTACT_INFO b
                    WHERE b.ID = a.ID);

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

SELECT COUNT(1) FROM "&1".DPS_CONTACT_INFO;

SELECT COUNT(1) FROM "&1".CASTO_CONTACT_INFO;
SELECT COUNT(1) FROM "&2".CASTO_CONTACT_INFO;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

UPDATE "&1".CASTO_CONTACT_INFO a
   SET (SOCIETE) =  
    (SELECT SOCIETE
       FROM "&2".CASTO_CONTACT_INFO b
      WHERE b.ID = a.ID)
 WHERE EXISTS (SELECT 1 FROM "&2".CASTO_CONTACT_INFO c
                WHERE c.ID = a.ID);                     

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

INSERT INTO "&1".CASTO_CONTACT_INFO
   (ID,SOCIETE)
SELECT 
   ID,SOCIETE
  FROM "&2".CASTO_CONTACT_INFO a
 WHERE NOT EXISTS (SELECT 1 FROM "&1".CASTO_CONTACT_INFO b
                    WHERE b.ID = a.ID);

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

SELECT COUNT(1) FROM "&1".CASTO_CONTACT_INFO;

SELECT COUNT(1) FROM "&1".DPS_USER;
SELECT COUNT(1) FROM "&2".DPS_USER;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

UPDATE "&1".DPS_USER a
   SET (LOGIN, PASSWORD, MEMBER, FIRST_NAME, MIDDLE_NAME, LAST_NAME, USER_TYPE, LOCALE, 
     LASTACTIVITY_DATE, REGISTRATION_DATE, EMAIL, EMAIL_STATUS, RECEIVE_EMAIL, GENDER, DATE_OF_BIRTH,
     SECURITYSTATUS, AUTO_LOGIN, LASTPWDUPDATE, GENERATEDPWD, LAST_EMAILED, DESCRIPTION) =  
(SELECT LOGIN, PASSWORD, MEMBER, FIRST_NAME, MIDDLE_NAME, LAST_NAME, USER_TYPE, LOCALE, 
   LASTACTIVITY_DATE, REGISTRATION_DATE, EMAIL, EMAIL_STATUS, RECEIVE_EMAIL, GENDER, DATE_OF_BIRTH,
   SECURITYSTATUS, AUTO_LOGIN, LASTPWDUPDATE, GENERATEDPWD, LAST_EMAILED, DESCRIPTION
       FROM "&2".DPS_USER b
      WHERE b.ID = a.ID)
 WHERE EXISTS (SELECT 1 FROM "&2".DPS_USER c
                WHERE c.ID = a.ID);

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

INSERT INTO "&1".DPS_USER
   (ID, LOGIN, PASSWORD, MEMBER, FIRST_NAME, MIDDLE_NAME, LAST_NAME, USER_TYPE, LOCALE, 
     LASTACTIVITY_DATE, REGISTRATION_DATE, EMAIL, EMAIL_STATUS, RECEIVE_EMAIL, GENDER, DATE_OF_BIRTH,
     SECURITYSTATUS, AUTO_LOGIN, LASTPWDUPDATE, GENERATEDPWD, LAST_EMAILED, DESCRIPTION)
SELECT 
   ID, LOGIN, PASSWORD, MEMBER, FIRST_NAME, MIDDLE_NAME, LAST_NAME, USER_TYPE, LOCALE, 
   LASTACTIVITY_DATE, REGISTRATION_DATE, EMAIL, EMAIL_STATUS, RECEIVE_EMAIL, GENDER, DATE_OF_BIRTH,
   SECURITYSTATUS, AUTO_LOGIN, LASTPWDUPDATE, GENERATEDPWD, LAST_EMAILED, DESCRIPTION
  FROM "&2".DPS_USER a
 WHERE NOT EXISTS (SELECT 1 FROM "&1".DPS_USER b
                    WHERE b.ID = a.ID);

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

SELECT COUNT(1) FROM "&1".DPS_USER;

SELECT COUNT(1) FROM "&1".DPS_USER_ADDRESS;
SELECT COUNT(1) FROM "&2".DPS_USER_ADDRESS;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

UPDATE "&1".DPS_USER_ADDRESS a
   SET (BILLING_ADDR_ID, SHIPPING_ADDR_ID) =  
(SELECT BILLING_ADDR_ID, SHIPPING_ADDR_ID
   FROM "&2".DPS_USER_ADDRESS b
  WHERE b.ID = a.ID)
 WHERE EXISTS (SELECT 1 FROM "&2".DPS_USER_ADDRESS c
                WHERE c.ID = a.ID);

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

INSERT INTO "&1".DPS_USER_ADDRESS
   (ID, BILLING_ADDR_ID, SHIPPING_ADDR_ID)
SELECT 
   ID, BILLING_ADDR_ID, SHIPPING_ADDR_ID
  FROM "&2".DPS_USER_ADDRESS a
 WHERE NOT EXISTS (SELECT 1 FROM "&1".DPS_USER_ADDRESS b
                    WHERE b.ID = a.ID);

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

SELECT COUNT(1) FROM "&1".DPS_USER_ADDRESS;

SELECT COUNT(1) FROM "&1".DCS_USER;
SELECT COUNT(1) FROM "&2".DCS_USER;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

UPDATE "&1".DCS_USER a
   SET (ALLOW_PARTIAL_SHIP,DAYTIME_PHONE_NUM,EXPRESS_CHECKOUT,DEFAULT_CARRIER) =  
(SELECT ALLOW_PARTIAL_SHIP,DAYTIME_PHONE_NUM,EXPRESS_CHECKOUT,DEFAULT_CARRIER
   FROM casto_migration.DCS_USER b
  WHERE b.USER_ID = a.USER_ID)
 WHERE EXISTS (SELECT 1 FROM "&2".DCS_USER c
                WHERE c.USER_ID = a.USER_ID);

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

INSERT INTO "&1".DCS_USER
   (USER_ID,ALLOW_PARTIAL_SHIP,DAYTIME_PHONE_NUM,EXPRESS_CHECKOUT,DEFAULT_CARRIER)
SELECT 
   USER_ID,ALLOW_PARTIAL_SHIP,DAYTIME_PHONE_NUM,EXPRESS_CHECKOUT,DEFAULT_CARRIER
  FROM "&2".DCS_USER a
 WHERE NOT EXISTS (SELECT 1 FROM "&1".DCS_USER b
                    WHERE b.USER_ID = a.USER_ID);

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

SELECT COUNT(1) FROM "&1".DCS_USER;

SELECT COUNT(1) FROM "&1".CASTO_USER;
SELECT COUNT(1) FROM "&2".CASTO_USER;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

UPDATE "&1".CASTO_USER a
   SET (CIVILITE, ACCES_FO, NUMEROCARTEATOUT, SUPPRIME, TYPEMAJPROFIL, 
        DATEMAJPROFIL, UTILISATEUR_CONCEPTION_CUISINE) =  
(SELECT CIVILITE, ACCES_FO, NUMEROCARTEATOUT, SUPPRIME, TYPEMAJPROFIL,
   DATEMAJPROFIL, UTILISATEUR_CONCEPTION_CUISINE
   FROM "&2".CASTO_USER b
  WHERE b.ID = a.ID)
 WHERE EXISTS (SELECT 1 FROM "&2".CASTO_USER c
                WHERE c.ID = a.ID);

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

UPDATE "&1".CASTO_USER a
   SET (PASSWORD_HASHED) =  
(SELECT 0
   FROM "&2".DPS_USER b
  WHERE b.ID = a.ID)
 WHERE EXISTS (SELECT 1 FROM "&2".DPS_USER c
                WHERE c.ID = a.ID);

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

INSERT INTO "&1".CASTO_USER
   (ID, CIVILITE, ACCES_FO, NUMEROCARTEATOUT, SUPPRIME, TYPEMAJPROFIL, 
    DATEMAJPROFIL, UTILISATEUR_CONCEPTION_CUISINE, PASSWORD_HASHED)
SELECT 
   ID, CIVILITE, ACCES_FO, NUMEROCARTEATOUT, SUPPRIME, TYPEMAJPROFIL,
   DATEMAJPROFIL, UTILISATEUR_CONCEPTION_CUISINE, 0
  FROM "&2".CASTO_USER a
 WHERE NOT EXISTS (SELECT 1 FROM "&1".CASTO_USER b
                    WHERE b.ID = a.ID);

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

SELECT COUNT(1) FROM "&1".CASTO_USER;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

TRUNCATE TABLE "&2".CASTO_ABONNEMENT_NEWSLETTER_T;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

SELECT COUNT(1) FROM "&2".CASTO_ABONNEMENT_NEWSLETTER;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

INSERT INTO "&2".CASTO_ABONNEMENT_NEWSLETTER_T
   (EMAIL, ACCES_PARTENAIRES_CASTO, DATECREATION, RECEIVE_EMAIL, PROPRIETAIRE_LOCATAIRE, 
    NBPERSONNES, CARTEATOUT, MAISONCAMPAGNE, MAISON, JARDIN, DATEDESINCRPTION, 
    DATEDERNIEREMODIFICATION, ESPRIT_CONTEMPORAIN, ESPRIT_TECHNICOLOR, ESPRIT_CHARME, 
    ESPRIT_AUTHENTIQUE, DATEINSCRIPTION, PROFILE_ID)
SELECT
    A.EMAIL, A.ACCES_PARTENAIRES_CASTO, A.DATECREATION, A.RECEIVE_EMAIL, A.PROPRIETAIRE_LOCATAIRE, 
    A.NBPERSONNES, A.CARTEATOUT, A.MAISONCAMPAGNE, A.MAISON, A.JARDIN, A.DATEDESINCRPTION, 
    A.DATEDERNIEREMODIFICATION, A.ESPRIT_CONTEMPORAIN, A.ESPRIT_TECHNICOLOR, A.ESPRIT_CHARME, 
    A.ESPRIT_AUTHENTIQUE, A.DATEINSCRIPTION, B.PROFILE_ID
  FROM "&2".CASTO_ABONNEMENT_NEWSLETTER A,
(SELECT MAX(T1.ID) PROFILE_ID, T1.ABONNEMENT_NEWSLETTER_ID
   FROM "&2".CASTO_USER_NEWSLETTER T1, "&2".DPS_USER T2
  WHERE T1.ID = T2.ID
  GROUP BY T1.ABONNEMENT_NEWSLETTER_ID) B
 WHERE A.EMAIL = B.ABONNEMENT_NEWSLETTER_ID (+);

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

SELECT COUNT(1) FROM "&2".CASTO_ABONNEMENT_NEWSLETTER_T;

SELECT COUNT(1) FROM "&1".CASTO_ABONNEMENT_NEWSLETTER;
SELECT COUNT(1) FROM "&2".CASTO_ABONNEMENT_NEWSLETTER_T;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

UPDATE "&1".CASTO_ABONNEMENT_NEWSLETTER a
   SET (ACCES_PARTENAIRES_CASTO, DATECREATION, RECEIVE_EMAIL, PROPRIETAIRE_LOCATAIRE, 
    NBPERSONNES, CARTEATOUT, MAISONCAMPAGNE, MAISON, JARDIN, DATEDESINCRPTION, 
    DATEDERNIEREMODIFICATION, ESPRIT_CONTEMPORAIN, ESPRIT_TECHNICOLOR, ESPRIT_CHARME, 
    ESPRIT_AUTHENTIQUE, DATEINSCRIPTION, PROFILE_ID) =  
(SELECT ACCES_PARTENAIRES_CASTO, DATECREATION, RECEIVE_EMAIL, PROPRIETAIRE_LOCATAIRE, 
    NBPERSONNES, CARTEATOUT, MAISONCAMPAGNE, MAISON, JARDIN, DATEDESINCRPTION, 
    DATEDERNIEREMODIFICATION, ESPRIT_CONTEMPORAIN, ESPRIT_TECHNICOLOR, ESPRIT_CHARME, 
    ESPRIT_AUTHENTIQUE, DATEINSCRIPTION, PROFILE_ID
   FROM "&2".CASTO_ABONNEMENT_NEWSLETTER_T b
  WHERE b.EMAIL = a.EMAIL)
 WHERE EXISTS (SELECT 1 FROM "&2".CASTO_ABONNEMENT_NEWSLETTER_T c
                WHERE c.EMAIL = a.EMAIL);

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

INSERT INTO "&1".CASTO_ABONNEMENT_NEWSLETTER
   (EMAIL, ACCES_PARTENAIRES_CASTO, DATECREATION, RECEIVE_EMAIL, PROPRIETAIRE_LOCATAIRE, 
    NBPERSONNES, CARTEATOUT, MAISONCAMPAGNE, MAISON, JARDIN, DATEDESINCRPTION, 
    DATEDERNIEREMODIFICATION, ESPRIT_CONTEMPORAIN, ESPRIT_TECHNICOLOR, ESPRIT_CHARME, 
    ESPRIT_AUTHENTIQUE, DATEINSCRIPTION, PROFILE_ID)
SELECT 
   EMAIL, ACCES_PARTENAIRES_CASTO, DATECREATION, RECEIVE_EMAIL, PROPRIETAIRE_LOCATAIRE, 
   NBPERSONNES, CARTEATOUT, MAISONCAMPAGNE, MAISON, JARDIN, DATEDESINCRPTION, 
   DATEDERNIEREMODIFICATION, ESPRIT_CONTEMPORAIN, ESPRIT_TECHNICOLOR, ESPRIT_CHARME, 
   ESPRIT_AUTHENTIQUE, DATEINSCRIPTION, PROFILE_ID
  FROM "&2".CASTO_ABONNEMENT_NEWSLETTER_T a
 WHERE NOT EXISTS (SELECT 1 FROM "&1".CASTO_ABONNEMENT_NEWSLETTER b
                    WHERE b.EMAIL = a.EMAIL);

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

SELECT COUNT(1) FROM "&1".CASTO_ABONNEMENT_NEWSLETTER;

UPDATE "&1".CASTO_ABONNEMENT_NEWSLETTER a
   SET (MAGASIN) =  
(SELECT ID_MAGASIN_REF
   FROM "&2".CASTO_USER b
  WHERE b.ID = a.PROFILE_ID)
 WHERE EXISTS (SELECT 1 FROM "&2".CASTO_USER c, "&3".CASTO_MAGASIN d
                WHERE c.ID = a.PROFILE_ID
                  AND c.ID_MAGASIN_REF = d.ID);

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

UPDATE "&1".CASTO_ABONNEMENT_NEWSLETTER a
   SET (MAGASIN) =  
(SELECT MAX(c.ID)
   FROM "&2".CASTO_ABONNEMENT_NEWSLETTER b, "&3".CASTO_MAGASIN c
  WHERE UPPER(c.NOM) = UPPER(b.MAGASIN) 
    AND b.EMAIL = a.EMAIL)
 WHERE EXISTS (SELECT 1
                 FROM "&2".CASTO_ABONNEMENT_NEWSLETTER d, "&3".CASTO_MAGASIN e
                WHERE UPPER(e.NOM) = UPPER(d.MAGASIN) 
                  AND d.EMAIL = a.EMAIL);

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

TRUNCATE TABLE "&2".DPS_OTHER_ADDR_T;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

INSERT INTO "&2".DPS_OTHER_ADDR_T
   (USER_ID, ADDRESS_ID)
SELECT USER_ID, ADDRESS_ID
  FROM
   (SELECT A1.USER_ID, A1.ADDRESS_ID 
      FROM "&2".DPS_OTHER_ADDR A1 
     INNER JOIN "&2".DPS_CONTACT_INFO C1 ON A1.ADDRESS_ID = C1.ID 
     WHERE C1.ADDRESS1 IS NOT NULL OR C1.LAST_NAME IS NOT NULL
    UNION 
    SELECT A2.ID AS USER_ID, A2.HOME_ADDR_ID AS ADDRESS_ID
      FROM "&2".DPS_USER_ADDRESS A2 
     INNER JOIN "&2".DPS_CONTACT_INFO C2 ON A2.HOME_ADDR_ID = C2.ID 
     WHERE C2.ADDRESS1 IS NOT NULL OR C2.LAST_NAME IS NOT NULL
    UNION
    SELECT A3.USER_ID, A3.ADDRESS_ID 
      FROM "&2".CASTO_OTHER_BILLING_ADDR A3 
     INNER JOIN "&2".DPS_CONTACT_INFO C3 ON A3.ADDRESS_ID = C3.ID 
     WHERE C3.ADDRESS1 IS NOT NULL OR C3.LAST_NAME IS NOT NULL
    UNION
   SELECT A4.USER_ID, A4.ADDRESS_ID
     FROM "&2".CASTO_OTHER_BILLSHIP_ADDR A4 
    INNER JOIN "&2".DPS_CONTACT_INFO C4 ON A4.ADDRESS_ID = C4.ID 
    WHERE C4.ADDRESS1 IS NOT NULL AND C4.LAST_NAME IS NOT NULL)
 GROUP BY USER_ID, ADDRESS_ID;
 
COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

SELECT COUNT(1) FROM "&2".DPS_OTHER_ADDR_T;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

DISCONNECT;
quit;