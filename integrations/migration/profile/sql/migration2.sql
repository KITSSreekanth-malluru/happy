-- 	Expected
-- &1 DESTINATION SCHEMA NAME
-- &2 MIGRATION SCHEMA NAME

SELECT COUNT(1) FROM "&1".DPS_OTHER_ADDR;
SELECT COUNT(1) FROM "&2".DPS_OTHER_ADDR_T;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

UPDATE "&1".DPS_OTHER_ADDR SET TAG = ADDRESS_ID;

COMMIT;

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

DECLARE
  VAR_USER_ID VARCHAR2(50);
  VAR_ADDR_ID VARCHAR2(50);
  VAR_TAG_NUM NUMBER;
BEGIN

 VAR_USER_ID := '';
 VAR_TAG_NUM := 1;

 FOR CURSOR1 IN (SELECT USER_ID AS U_ID, ADDRESS_ID AS A_ID, MIN(TYPE)
                   FROM
                     (SELECT USER_ID, ADDRESS_ID, 1 AS TYPE
                        FROM "&1".DPS_OTHER_ADDR
                      UNION
                      SELECT USER_ID, ADDRESS_ID, 2 AS TYPE 
                        FROM "&2".DPS_OTHER_ADDR_T)
                  GROUP BY USER_ID, ADDRESS_ID   
                  ORDER BY U_ID, 3)
 LOOP
  IF VAR_USER_ID = CURSOR1.U_ID THEN
    VAR_TAG_NUM := VAR_TAG_NUM + 1;
  ELSE
    VAR_USER_ID := CURSOR1.U_ID;
    VAR_TAG_NUM := 1;
  END IF;
  VAR_ADDR_ID := CURSOR1.A_ID;
  IF VAR_TAG_NUM < 4 THEN
    UPDATE "&1".DPS_OTHER_ADDR SET TAG = 'Adresse ' || TO_CHAR(VAR_TAG_NUM) 
     WHERE USER_ID = VAR_USER_ID AND ADDRESS_ID = VAR_ADDR_ID;
    
    INSERT INTO "&1".DPS_OTHER_ADDR (USER_ID, ADDRESS_ID, TAG) 
    SELECT VAR_USER_ID, VAR_ADDR_ID, 'Adresse ' || TO_CHAR(VAR_TAG_NUM)
      FROM DUAL
     WHERE NOT EXISTS (SELECT 1 FROM "&1".DPS_OTHER_ADDR b
                        WHERE USER_ID = VAR_USER_ID AND ADDRESS_ID = VAR_ADDR_ID);
  END IF;
 END LOOP;
 COMMIT;
END;
/

SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') AS DATETIME FROM DUAL;

SELECT COUNT(1) FROM "&1".DPS_OTHER_ADDR;

DISCONNECT;
quit;