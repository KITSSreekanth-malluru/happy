<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>

  <!-- You must include a display name with the web application.  If you do not then when 
       you run your web application on JBoss (or other app server) you will be graced with 
       a NullPointerException from within the NucleusServlet
       
       java.lang.NullPointerException
          atg.servlet.NameContextManager.initializeSessionNameContext(NameContextManager.java:504)
          atg.taglib.dspjsp.Utils.checkParentSessionNameContext(Unknown Source)
          atg.filter.dspjsp.PageFilter.doFilter(Unknown Source)
          org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:75)
    -->
  <display-name>Castorama iPhone Application</display-name>

  <!-- FOR APPSERVERS OTHER THAN DAS -->
  <!-- This setting tells JBoss that it needs to manage session replication.  If you 
       deploy this web application on a non-farmed JBoss server you will see this 
       error message in the server console:
       
       13:04:35,751 ERROR [JBossCacheManager] JBossCacheService to Tomcat clustering not found
       13:04:35,751 ERROR [TomcatDeployer] Failed to setup clustering, clustering disabled       

  <distributable/>
    -->
  
  <!-- FOR APPSERVERS OTHER THAN DAS -->
  <!-- 
     This is the name/value of the "parent web application", i.e. the name
     of a web application, which has a SessionNameContextServlet defined in it
     that will define the session scope for this web application. 
     Setting this here allows the child application to share the same session 
     scope with the above application.  Meaning these two apps share session.
     The parent web application OOTB is DafEar.base.

   
  <context-param>
    <param-name>atg.session.parentContextName</param-name>
    <param-value>/dyn</param-value>
  </context-param>
  -->
  
  <!-- FOR APPSERVERS OTHER THAN DAS   -->
  <context-param>
    <param-name>atg.dafear.bootstrapContextName</param-name>
    <param-value>/dyn</param-value>
    <description>The name of the DAF bootstrap WAR context.</description>
  </context-param>

  
  <!--
     If context-root is set here, then ServletContextWebAppRegistry will use
     this setting as the context-root for this WebApp. This must match
     the context-root setting in application.xml.
  -->
  <context-param>
    <param-name>context-root</param-name>
    <param-value>iPhoneStore</param-value>
  </context-param>
  

  <!--
    Used to remove unnecessary whitespace from the JSON response. Tomcat's trimSpaces 
    init-param in $CATALINA_HOME/conf/web.xml can be used to do the same thing but 
    that only works for the entire instance.
  -->
  <filter>
    <filter-name>trimFilter</filter-name>
    <filter-class>com.cj.trim.trimFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>trimFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping> 

  <!-- FOR APPSERVERS OTHER THAN DAS -->
  <!-- 
       Called when a request is for a .jsp file, the PageFilter servlet is 
       the entry point into the DAF pipeline.  PageFilter calls 
       atg/dynamo/servlet/dafpipeline/DynamoHandler to start the DAF servlet 
       pipeline for JSP requests. The DAF servlet pipeline relies on JBoss 
       to handle the complete page compilation process.
   -->

  <filter>
    <filter-name>PageFilter</filter-name>
    <filter-class>atg.filter.dspjsp.PageFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>PageFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>

  
  <!-- FOR APPSERVERS OTHER THAN DAS -->
  <!-- 
      This servlet must be defined in each web application which is designated
      as a "main" web application (i.e. its context name is the value of
      another web application's atg.session.parentContextName parameter).  
      
      If you are seeing this here then this web application is being designated as 
      a parent web app.  Which means it will not share session with another 
      web application; other web applications may look to it as a parent when 
      sharing sessions.  Ensure the atg.session.parentContextName is also set 
      to the context root of this web application.
      
      Only uncomment this if this web application is a parent web application.
    
  <servlet>
    <servlet-name>SessionNameContextServlet</servlet-name>
    <servlet-class>atg.nucleus.servlet.SessionNameContextServlet</servlet-class>
  </servlet>
  -->
   
  <!-- FOR APPSERVERS OTHER THAN DAS -->
  <!--
      To use ATG platform functionality, a Web application on a 3rd party application 
      server needs to start Nucleus by invoking NucleusSerlvet. This servlet does not 
      need to have any paths mapped to it, but must have the load-on-startup flag set 
      to 1 so that it runs before any other ATG component. The NucleusServlet creates 
      an instance of Nucleus and sets it as an attribute of the web application.
   -->

  <servlet>
    <servlet-name>NucleusServlet</servlet-name>
    <servlet-class>atg.nucleus.servlet.NucleusServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!--
      This servlet exposes the dynamo servlet pipeline.  It is necessary if
      you want to support serving JHTML pages on your site.  The context path
      and servlet path used by this servlet are prepended onto all URLs
      for JHTML pages on your site.
  -->

  <servlet>
    <servlet-name>DynamoProxyServlet</servlet-name>
    <servlet-class>atg.nucleus.servlet.NucleusProxyServlet</servlet-class>
    <load-on-startup>2</load-on-startup>
  </servlet>


  <servlet-mapping>
    <servlet-name>DynamoProxyServlet</servlet-name>
    <url-pattern>/dyn/*</url-pattern>
  </servlet-mapping>
  

  <!-- FOR APPSERVERS OTHER THAN DAS -->
  <!-- For diagnostic purposes only  -->
  <servlet-mapping>
    <servlet-name>NucleusServlet</servlet-name>
    <url-pattern>/nucleus/*</url-pattern>
  </servlet-mapping>
  
  
  <taglib>
    <taglib-uri>dsp</taglib-uri>
    <taglib-location>/WEB-INF/taglib/dspjspTaglib1_0.tld</taglib-location>
  </taglib>
  
  <taglib>
    <taglib-uri>dspel</taglib-uri>
    <taglib-location>/WEB-INF/taglib/dspjspELTaglib1_0.tld</taglib-location>
  </taglib>
  
  <taglib>
    <taglib-uri>c</taglib-uri>
    <taglib-location>/WEB-INF/taglib/c.tld</taglib-location>
  </taglib>

  <taglib>
    <taglib-uri>fmt</taglib-uri>
    <taglib-location>/WEB-INF/taglib/fmt.tld</taglib-location>
  </taglib>

  
</web-app>
