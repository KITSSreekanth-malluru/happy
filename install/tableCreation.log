Buildfile: D:\ATG\branches\install\build.xml

all:
    [input] WARNING: All data is going to be deleted from DB. ALL tables will be dropped, recreated and initial xml data will be imported. Continue? (y, n)

droptables:

dropcoretables:

-performcoresql:

-performsql:
     [echo] about to execute sql/drop_all_tables.sql using CAST_CORE/CAST_CORE@XE
     [exec] 
     [exec] SQL*Plus: Release 11.2.0.2.0 Production on Mon May 2 18:47:21 2016
     [exec] 
     [exec] Copyright (c) 1982, 2014, Oracle.  All rights reserved.
     [exec] 
     [exec] 
     [exec] Connected to:
     [exec] Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production
     [exec] 
     [exec] drop table CASTO_COMMERCE_ITEM_BACKUP	  cascade constraints ;
     [exec] drop table DAS_ID_GENERATOR		  cascade constraints ;
     [exec] drop table DAS_SECURE_ID_GEN		  cascade constraints ;
     [exec] drop table DAS_CLUSTER_NAME		  cascade constraints ;
     [exec] drop table DMS_LIMBO			  cascade constraints ;
     [exec] drop table DMS_LIMBO_MSG		  cascade constraints ;
     [exec] drop table DMS_LIMBO_REPLYTO		  cascade constraints ;
     [exec] drop table DMS_LIMBO_BODY		  cascade constraints ;
     [exec] drop table DMS_LIMBO_PROPS		  cascade constraints ;
     [exec] drop table DMS_LIMBO_PTYPES		  cascade constraints ;
     [exec] drop table DMS_LIMBO_DELAY		  cascade constraints ;
     [exec] drop table DMS_CLIENT			  cascade constraints ;
     [exec] drop table DMS_QUEUE			  cascade constraints ;
     [exec] drop table DMS_QUEUE_RECV		  cascade constraints ;
     [exec] drop table DMS_QUEUE_ENTRY		  cascade constraints ;
     [exec] drop table DMS_TOPIC			  cascade constraints ;
     [exec] drop table DMS_TOPIC_SUB		  cascade constraints ;
     [exec] drop table DMS_TOPIC_ENTRY		  cascade constraints ;
     [exec] drop table DMS_MSG			  cascade constraints ;
     [exec] drop table DMS_MSG_PROPERTIES		  cascade constraints ;
     [exec] drop table DAS_ACCOUNT			  cascade constraints ;
     [exec] drop table DAS_GROUP_ASSOC		  cascade constraints ;
     [exec] drop table DAS_ACCT_PREVPWD		  cascade constraints ;
     [exec] drop table DAS_GSA_SUBSCRIBER		  cascade constraints ;
     [exec] drop table DAS_SDS			  cascade constraints ;
     [exec] drop table IF_INTEG_DATA		  cascade constraints ;
     [exec] drop table DAS_NUCL_SEC 		  cascade constraints ;
     [exec] drop table DAS_NS_ACLS			  cascade constraints ;
     [exec] drop table MEDIA_FOLDER 		  cascade constraints ;
     [exec] drop table MEDIA_BASE			  cascade constraints ;
     [exec] drop table MEDIA_EXT			  cascade constraints ;
     [exec] drop table MEDIA_BIN			  cascade constraints ;
     [exec] drop table MEDIA_TXT			  cascade constraints ;
     [exec] drop table DAS_DEPLOYMENT		  cascade constraints ;
     [exec] drop table DAS_DEPL_PROGRESS		  cascade constraints ;
     [exec] drop table DAS_THREAD_BATCH		  cascade constraints ;
     [exec] drop table DAS_DEPLOY_DATA		  cascade constraints ;
     [exec] drop table DAS_DEPLOY_MARK		  cascade constraints ;
     [exec] drop table DAS_REP_MARK 		  cascade constraints ;
     [exec] drop table DAS_FILE_MARK		  cascade constraints ;
     [exec] drop table DAS_DEPL_DEPLDAT		  cascade constraints ;
     [exec] drop table DAS_DEPL_OPTIONS		  cascade constraints ;
     [exec] drop table DAS_DEPL_REPMAPS		  cascade constraints ;
     [exec] drop table DAS_DEPL_ITEM_REF		  cascade constraints ;
     [exec] drop table DAS_DD_MARKERS		  cascade constraints ;
     [exec] drop table DAS_DEP_FAIL_INFO		  cascade constraints ;
     [exec] drop table DAS_SITEINDEX		  cascade constraints ;
     [exec] drop table DAS_SITEMAP			  cascade constraints ;
     [exec] drop table DAS_SEO_TAG			  cascade constraints ;
     [exec] drop table DPS_ORGANIZATION		  cascade constraints ;
     [exec] drop table DPS_USER			  cascade constraints ;
     [exec] drop table DPS_CONTACT_INFO		  cascade constraints ;
     [exec] drop table DPS_USER_ADDRESS		  cascade constraints ;
     [exec] drop table DPS_OTHER_ADDR		  cascade constraints ;
     [exec] drop table DPS_MAILING			  cascade constraints ;
     [exec] drop table DPS_MAIL_TRACKDATA		  cascade constraints ;
     [exec] drop table DPS_MAIL_BATCH		  cascade constraints ;
     [exec] drop table DPS_MAIL_SERVER		  cascade constraints ;
     [exec] drop table DPS_USER_MAILING		  cascade constraints ;
     [exec] drop table DPS_EMAIL_ADDRESS		  cascade constraints ;
     [exec] drop table DPS_ROLE			  cascade constraints ;
     [exec] drop table DPS_USER_ROLES		  cascade constraints ;
     [exec] drop table DPS_ORG_ROLE 		  cascade constraints ;
     [exec] drop table DPS_ROLE_REL_ORG		  cascade constraints ;
     [exec] drop table DPS_RELATIVEROLE		  cascade constraints ;
     [exec] drop table DPS_USER_ORG 		  cascade constraints ;
     [exec] drop table DPS_USER_ORG_ANC		  cascade constraints ;
     [exec] drop table DPS_ORG_CHLDORG		  cascade constraints ;
     [exec] drop table DPS_ORG_ANCESTORS		  cascade constraints ;
     [exec] drop table DPS_FOLDER			  cascade constraints ;
     [exec] drop table DPS_CHILD_FOLDER		  cascade constraints ;
     [exec] drop table DPS_ROLEFOLD_CHLD		  cascade constraints ;
     [exec] drop table DPS_USER_PREVPWD		  cascade constraints ;
     [exec] drop table DPS_EVENT_TYPE		  cascade constraints ;
     [exec] drop table DPS_USER_EVENT		  cascade constraints ;
     [exec] drop table DPS_USER_EVENT_SUM		  cascade constraints ;
     [exec] drop table DPS_REQUEST			  cascade constraints ;
     [exec] drop table DPS_REQNAME_SUM		  cascade constraints ;
     [exec] drop table DPS_SESSION_SUM		  cascade constraints ;
     [exec] drop table DPS_CON_REQ			  cascade constraints ;
     [exec] drop table DPS_CON_REQ_SUM		  cascade constraints ;
     [exec] drop table DPS_PGRP_REQ_SUM		  cascade constraints ;
     [exec] drop table DPS_PGRP_CON_SUM		  cascade constraints ;
     [exec] drop table DPS_LOG_ID			  cascade constraints ;
     [exec] drop table DPS_SEG_LIST 		  cascade constraints ;
     [exec] drop table DPS_SEG_LIST_NAME		  cascade constraints ;
     [exec] drop table DPS_SEG_LIST_FOLDER		  cascade constraints ;
     [exec] drop table DSS_DAS_EVENT		  cascade constraints ;
     [exec] drop table DSS_DAS_FORM 		  cascade constraints ;
     [exec] drop table DSS_DPS_EVENT		  cascade constraints ;
     [exec] drop table DSS_DPS_PAGE_VISIT		  cascade constraints ;
     [exec] drop table DSS_DPS_VIEW_ITEM		  cascade constraints ;
     [exec] drop table DSS_DPS_CLICK		  cascade constraints ;
     [exec] drop table DSS_DPS_REFERRER		  cascade constraints ;
     [exec] drop table DSS_DPS_INBOUND		  cascade constraints ;
     [exec] drop table DSS_DPS_ADMIN_REG		  cascade constraints ;
     [exec] drop table DSS_DPS_PROPERTY		  cascade constraints ;
     [exec] drop table DSS_DPS_ADMIN_PROP		  cascade constraints ;
     [exec] drop table DSS_DPS_UPDATE		  cascade constraints ;
     [exec] drop table DSS_DPS_ADMIN_UP		  cascade constraints ;
     [exec] drop table DPS_SCENARIO_VALUE		  cascade constraints ;
     [exec] drop table DSS_AUDIT_TRAIL		  cascade constraints ;
     [exec] drop table DSS_COLL_SCENARIO		  cascade constraints ;
     [exec] drop table DSS_IND_SCENARIO		  cascade constraints ;
     [exec] drop table DSS_SCENARIO_STRS		  cascade constraints ;
     [exec] drop table DSS_SCENARIO_BOOLS		  cascade constraints ;
     [exec] drop table DSS_SCENARIO_LONGS		  cascade constraints ;
     [exec] drop table DSS_SCENARIO_DBLS		  cascade constraints ;
     [exec] drop table DSS_SCENARIO_DATES		  cascade constraints ;
     [exec] drop table DPS_USER_SCENARIO		  cascade constraints ;
     [exec] drop table DSS_SCENARIO_INFO		  cascade constraints ;
     [exec] drop table DSS_SCEN_MIG_INFO		  cascade constraints ;
     [exec] drop table DSS_MIG_INFO_SEG		  cascade constraints ;
     [exec] drop table DSS_TEMPLATE_INFO		  cascade constraints ;
     [exec] drop table DSS_COLL_TRANS		  cascade constraints ;
     [exec] drop table DSS_IND_TRANS		  cascade constraints ;
     [exec] drop table DSS_DELETION 		  cascade constraints ;
     [exec] drop table DSS_SERVER_ID		  cascade constraints ;
     [exec] drop table DCSPP_PRICE_ADJUST		  cascade constraints ;
     [exec] drop table DCSPP_SHIPITEM_SUB		  cascade constraints ;
     [exec] drop table DCSPP_TAXSHIPITEM		  cascade constraints ;
     [exec] drop table DCSPP_NTAXSHIPITEM		  cascade constraints ;
     [exec] drop table DCSPP_SHIPITEM_TAX		  cascade constraints ;
     [exec] drop table DCSPP_ITMPRICE_DET		  cascade constraints ;
     [exec] drop table DCSPP_DET_PRICE		  cascade constraints ;
     [exec] drop table DCSPP_DET_RANGE		  cascade constraints ;
     [exec] drop table DCSPP_ORDER_ADJ		  cascade constraints ;
     [exec] drop table DCSPP_MANUAL_ADJ		  cascade constraints ;
     [exec] drop table DBCPP_SCHED_ORDER		  cascade constraints ;
     [exec] drop table DBCPP_SCHED_CLONE		  cascade constraints ;
     [exec] drop table DCSPP_SCHERR_AUX		  cascade constraints ;
     [exec] drop table DCSPP_SCHED_ERROR		  cascade constraints ;
     [exec] drop table DCSPP_SCHD_ERRMSG		  cascade constraints ;
     [exec] drop table DCS_CART_EVENT		  cascade constraints ;
     [exec] drop table DCS_SUBMT_ORD_EVT		  cascade constraints ;
     [exec] drop table DCS_PROM_USED_EVT		  cascade constraints ;
     [exec] drop table DCS_ORD_MERGE_EVT		  cascade constraints ;
     [exec] drop table DCS_PROMO_RVKD		  cascade constraints ;
     [exec] drop table DCS_PROMO_GRNTD		  cascade constraints ;
     [exec] drop table DCSPP_CLAIMABLE		  cascade constraints ;
     [exec] drop table DCSPP_GIFTCERT		  cascade constraints ;
     [exec] drop table DCS_STORECRED_CLM		  cascade constraints ;
     [exec] drop table DCSPP_COUPON 		  cascade constraints ;
     [exec] drop table DCS_PRICE_LIST		  cascade constraints ;
     [exec] drop table DCS_COMPLEX_PRICE		  cascade constraints ;
     [exec] drop table DCS_PRICE			  cascade constraints ;
     [exec] drop table DCS_PRICE_LEVELS		  cascade constraints ;
     [exec] drop table DCS_PRICE_LEVEL		  cascade constraints ;
     [exec] drop table DCS_GEN_FOL_PL		  cascade constraints ;
     [exec] drop table DCS_CHILD_FOL_PL		  cascade constraints ;
     [exec] drop table DCS_PLFOL_CHLD		  cascade constraints ;
     [exec] drop table DCS_ORDER_MARKERS		  cascade constraints ;
     [exec] drop table DCSPP_COMMERCE_ITEM_MARKERS	  cascade constraints ;
     [exec] drop table DCSPP_ORD_ABANDON		  cascade constraints ;
     [exec] drop table DCS_USER_ABANDONED		  cascade constraints ;
     [exec] drop table DRPT_CONV_ORDER		  cascade constraints ;
     [exec] drop table DRPT_SESSION_ORD		  cascade constraints ;
     [exec] drop table DCS_USER_CATALOG		  cascade constraints ;
     [exec] drop table SRCH_REFINE_ELEMS		  cascade constraints ;
     [exec] drop table SRCH_REFINE_SUBELS		  cascade constraints ;
     [exec] drop table SRCH_REFEL_ORDER		  cascade constraints ;
     [exec] drop table SRCH_REFEL_RANGE		  cascade constraints ;
     [exec] drop table SRCH_REFEL_SELECT		  cascade constraints ;
     [exec] drop table SRCH_REFEL_EXCLUDE		  cascade constraints ;
     [exec] drop table SRCH_SORT_OPTIONS		  cascade constraints ;
     [exec] drop table SRCH_REFINE_CONFIG		  cascade constraints ;
     [exec] drop table SRCH_REFCFG_ELEMS		  cascade constraints ;
     [exec] drop table SRCH_REFINE_SORT		  cascade constraints ;
     [exec] drop table SRCH_CFG_DIMNODE		  cascade constraints ;
     [exec] drop table SRCH_CFG_DTINFO		  cascade constraints ;
     [exec] drop table SRCH_CFG_FOL 		  cascade constraints ;
     [exec] drop table SRCH_CFG_RULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_SYNSET		  cascade constraints ;
     [exec] drop table SRCH_CFG_APROP		  cascade constraints ;
     [exec] drop table SRCH_CFG_RPROP		  cascade constraints ;
     [exec] drop table SRCH_CFG_CFG 		  cascade constraints ;
     [exec] drop table SRCH_CFG_BASE		  cascade constraints ;
     [exec] drop table SRCH_CFG_FOL_CHLDCFGS	  cascade constraints ;
     [exec] drop table SRCH_CFG_FOL_CHLDFOL 	  cascade constraints ;
     [exec] drop table SRCH_CFG_RPSET		  cascade constraints ;
     [exec] drop table SRCH_CFG_VRPSET		  cascade constraints ;
     [exec] drop table SRCH_CFG_SYNLNK		  cascade constraints ;
     [exec] drop table SRCH_CFG_DRULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_DSYN		  cascade constraints ;
     [exec] drop table SRCH_CFG_ERULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_RRULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_PRULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_TERM		  cascade constraints ;
     [exec] drop table SRCH_CFG_RANK		  cascade constraints ;
     [exec] drop table SRCH_CONFIG			  cascade constraints ;
     [exec] drop table SRCH_CONFIG_REPO		  cascade constraints ;
     [exec] drop table SRCH_UPDATE_QUEUE		  cascade constraints ;
     [exec] drop table SRCH_UPDATE_VQUEUE		  cascade constraints ;
     [exec] drop table DCS_REFINE_CONFIG		  cascade constraints ;
     [exec] drop table DCS_REFCFG_GENELS		  cascade constraints ;
     [exec] drop table DCS_CAT_REFCFG		  cascade constraints ;
     [exec] drop table DCS_REFCFG_CUSTOM		  cascade constraints ;
     [exec] drop table DCS_CATINFO_REFCFG		  cascade constraints ;
     [exec] drop table DCS_CATALOG_REFCFG		  cascade constraints ;
     [exec] drop table ROUT_INDEX			  cascade constraints ;
     [exec] drop table ROUT_LP_SUMMARY		  cascade constraints ;
     [exec] drop table ROUT_LP_CMD_COUNT		  cascade constraints ;
     [exec] drop table ROUT_LP_SMRY_CMDS		  cascade constraints ;
     [exec] drop table ROUT_ENV			  cascade constraints ;
     [exec] drop table ROUT_HOST_INF		  cascade constraints ;
     [exec] drop table ROUT_HOST			  cascade constraints ;
     [exec] drop table ROUT_PART			  cascade constraints ;
     [exec] drop table ROUT_ENGINE			  cascade constraints ;
     [exec] drop table ROUT_LOG_PART		  cascade constraints ;
     [exec] drop table ROUT_PHYS_PART_M		  cascade constraints ;
     [exec] drop table ROUT_IDX_LOG_PARTS		  cascade constraints ;
     [exec] drop table ROUT_DEP_HIST		  cascade constraints ;
     [exec] drop table ROUT_SWPCHK			  cascade constraints ;
     [exec] drop table SRC_TOPIC_SET		  cascade constraints ;
     [exec] drop table SRC_TOPIC			  cascade constraints ;
     [exec] drop table SRC_TOPICCHILD_SEQ		  cascade constraints ;
     [exec] drop table SRC_ROOTTOPICS_SEQ		  cascade constraints ;
     [exec] drop table SRC_TOPIC_MACRO		  cascade constraints ;
     [exec] drop table SRC_TOPICMACRO_SEQ		  cascade constraints ;
     [exec] drop table SRC_GLOBAL_MACRO		  cascade constraints ;
     [exec] drop table SRC_TOPIC_PATTERN		  cascade constraints ;
     [exec] drop table SRC_TOPIC_PAT_SEQ		  cascade constraints ;
     [exec] drop table SRC_TOPIC_LABEL		  cascade constraints ;
     [exec] drop table TST_FOLDERS			  cascade constraints ;
     [exec] drop table TST_SEARCH_TESTS		  cascade constraints ;
     [exec] drop table TST_TRACK_ITEMS		  cascade constraints ;
     [exec] drop table TST_TEST_TYPES		  cascade constraints ;
     [exec] drop table TST_DIMENSION_VALUES 	  cascade constraints ;
     [exec] drop table TST_ADVANCED_PARAMETERS	  cascade constraints ;
     [exec] drop table SRCH_ADV_CONF		  cascade constraints ;
     [exec] drop table SRCH_PROJECT 		  cascade constraints ;
     [exec] drop table SRCH_REG_IMPL		  cascade constraints ;
     [exec] drop table SRCH_CSS_ID_TO_TARG_IDS	  cascade constraints ;
     [exec] drop table SRCH_CONTENT 		  cascade constraints ;
     [exec] drop table SRCH_CONTENT_SS		  cascade constraints ;
     [exec] drop table SRCH_CONTENT_SS_MM		  cascade constraints ;
     [exec] drop table SRCH_PLATFORM		  cascade constraints ;
     [exec] drop table SRCH_ACT_IDX_V		  cascade constraints ;
     [exec] drop table SRCH_SYNC_TASK_TYPE		  cascade constraints ;
     [exec] drop table SRCH_SYNC_STEP_TYPE		  cascade constraints ;
     [exec] drop table SRCH_BASE_SYNC_TASK		  cascade constraints ;
     [exec] drop table SRCH_SYNC_TASK		  cascade constraints ;
     [exec] drop table SRCH_SYNC_STEP_OPTION	  cascade constraints ;
     [exec] drop table SRCH_BASE_SYNC_STEP		  cascade constraints ;
     [exec] drop table SRCH_SYNC_TASK_STEP_M	  cascade constraints ;
     [exec] drop table SRCH_SYNC_TASK_TYPE_STEP_M	  cascade constraints ;
     [exec] drop table SRCH_SYNC_STEP_TYPE_OPTION_M   cascade constraints ;
     [exec] drop table SRCH_SYNC_TASK_DEF		  cascade constraints ;
     [exec] drop table SRCH_SYNC_STEP_DEF		  cascade constraints ;
     [exec] drop table SRCH_HIST_STEP		  cascade constraints ;
     [exec] drop table SRCH_STEP_ERROR		  cascade constraints ;
     [exec] drop table SRCH_HISTORY 		  cascade constraints ;
     [exec] drop table SRCH_HIST_STEPM		  cascade constraints ;
     [exec] drop table SRCH_ENV_P_M 		  cascade constraints ;
     [exec] drop table SRCH_SORG			  cascade constraints ;
     [exec] drop table SRCH_ENV_SORG_M		  cascade constraints ;
     [exec] drop table SRCH_SYNC_CONTENT_SS_M	  cascade constraints ;
     [exec] drop table SRCH_SYNC_ENV_M		  cascade constraints ;
     [exec] drop table SRCH_CUSTOM_DS		  cascade constraints ;
     [exec] drop table SRCH_PROJECT_CUSTOM_DS	  cascade constraints ;
     [exec] drop table SRCH_SYNC_TASK_CUSTOM_DS	  cascade constraints ;
     [exec] drop table DSS_DEL_SEG_NAME		  cascade constraints ;
     [exec] drop table DSS_MIGRATION		  cascade constraints ;
     [exec] drop table DSS_MIG_SEG_NAME		  cascade constraints ;
     [exec] drop table DSS_XREF			  cascade constraints ;
     [exec] drop table DSS_PROFILE_SLOT		  cascade constraints ;
     [exec] drop table DPS_USER_SLOT		  cascade constraints ;
     [exec] drop table DSS_SLOT_ITEMS		  cascade constraints ;
     [exec] drop table DSS_SLOT_PRIORITY		  cascade constraints ;
     [exec] drop table DPS_MARKERS			  cascade constraints ;
     [exec] drop table DPS_USR_MARKERS		  cascade constraints ;
     [exec] drop table DRPT_STAGE_REACHED		  cascade constraints ;
     [exec] drop table DSS_USER_BPMARKERS		  cascade constraints ;
     [exec] drop table DPS_CREDIT_CARD		  cascade constraints ;
     [exec] drop table DCS_USER			  cascade constraints ;
     [exec] drop table DPS_USR_CREDITCARD		  cascade constraints ;
     [exec] drop table DCS_FOLDER			  cascade constraints ;
     [exec] drop table DCS_MEDIA			  cascade constraints ;
     [exec] drop table DCS_MEDIA_EXT		  cascade constraints ;
     [exec] drop table DCS_MEDIA_BIN		  cascade constraints ;
     [exec] drop table DCS_MEDIA_TXT		  cascade constraints ;
     [exec] drop table DCS_CATEGORY 		  cascade constraints ;
     [exec] drop table DCS_CATEGORY_ACL		  cascade constraints ;
     [exec] drop table DCS_PRODUCT			  cascade constraints ;
     [exec] drop table DCS_PRODUCT_ACL		  cascade constraints ;
     [exec] drop table DCS_SKU			  cascade constraints ;
     [exec] drop table DCS_CAT_GROUPS		  cascade constraints ;
     [exec] drop table DCS_CAT_CHLDPRD		  cascade constraints ;
     [exec] drop table DCS_CAT_CHLDCAT		  cascade constraints ;
     [exec] drop table DCS_CAT_ANCESTORS		  cascade constraints ;
     [exec] drop table DCS_CAT_RLTDCAT		  cascade constraints ;
     [exec] drop table DCS_CAT_KEYWRDS		  cascade constraints ;
     [exec] drop table DCS_CAT_MEDIA		  cascade constraints ;
     [exec] drop table DCS_CAT_AUX_MEDIA		  cascade constraints ;
     [exec] drop table DCS_PRD_KEYWRDS		  cascade constraints ;
     [exec] drop table DCS_PRD_MEDIA		  cascade constraints ;
     [exec] drop table DCS_PRD_AUX_MEDIA		  cascade constraints ;
     [exec] drop table DCS_PRD_CHLDSKU		  cascade constraints ;
     [exec] drop table DCS_PRD_SKUATTR		  cascade constraints ;
     [exec] drop table DCS_PRD_GROUPS		  cascade constraints ;
     [exec] drop table DCS_PRD_RLTDPRD		  cascade constraints ;
     [exec] drop table DCS_PRD_UPSLPRD		  cascade constraints ;
     [exec] drop table DCS_PRD_ANCESTORS		  cascade constraints ;
     [exec] drop table DCS_SKU_ATTR 		  cascade constraints ;
     [exec] drop table DCS_SKU_LINK 		  cascade constraints ;
     [exec] drop table DCS_SKU_BNDLLNK		  cascade constraints ;
     [exec] drop table DCS_SKU_MEDIA		  cascade constraints ;
     [exec] drop table DCS_SKU_AUX_MEDIA		  cascade constraints ;
     [exec] drop table DCS_SKU_REPLACE		  cascade constraints ;
     [exec] drop table DCS_SKU_CONF 		  cascade constraints ;
     [exec] drop table DCS_CONFIG_PROP		  cascade constraints ;
     [exec] drop table DCS_CONF_OPTIONS		  cascade constraints ;
     [exec] drop table DCS_CONFIG_OPT		  cascade constraints ;
     [exec] drop table DCS_FOREIGN_CAT		  cascade constraints ;
     [exec] drop table DCS_INVENTORY		  cascade constraints ;
     [exec] drop table DCS_PROMOTION		  cascade constraints ;
     [exec] drop table DCS_PROMO_MEDIA		  cascade constraints ;
     [exec] drop table DCS_DISCOUNT_PROMO		  cascade constraints ;
     [exec] drop table DCS_PROMO_UPSELL		  cascade constraints ;
     [exec] drop table DCS_UPSELL_ACTION		  cascade constraints ;
     [exec] drop table DCS_CLOSE_QUALIF		  cascade constraints ;
     [exec] drop table DCS_PRM_CLS_QLF		  cascade constraints ;
     [exec] drop table DCS_UPSELL_PRODS		  cascade constraints ;
     [exec] drop table DCS_USR_PROMOSTAT		  cascade constraints ;
     [exec] drop table DCS_USR_ACTVPROMO		  cascade constraints ;
     [exec] drop table DCS_USR_USEDPROMO		  cascade constraints ;
     [exec] drop table DCS_GIFTLIST 		  cascade constraints ;
     [exec] drop table DCS_GIFTINST 		  cascade constraints ;
     [exec] drop table DCS_GIFTITEM 		  cascade constraints ;
     [exec] drop table DCS_GIFTLIST_ITEM		  cascade constraints ;
     [exec] drop table DCS_USER_WISHLIST		  cascade constraints ;
     [exec] drop table DCS_USER_GIFTLIST		  cascade constraints ;
     [exec] drop table DCS_USER_OTHERLIST		  cascade constraints ;
     [exec] drop table DCSPP_ORDER			  cascade constraints ;
     [exec] drop table DCSPP_SHIP_GROUP		  cascade constraints ;
     [exec] drop table DCSPP_PAY_GROUP		  cascade constraints ;
     [exec] drop table DCSPP_ITEM			  cascade constraints ;
     [exec] drop table DCSPP_RELATIONSHIP		  cascade constraints ;
     [exec] drop table DCSPP_REL_ORDERS		  cascade constraints ;
     [exec] drop table DCSPP_ORDER_INST		  cascade constraints ;
     [exec] drop table DCSPP_ORDER_SG		  cascade constraints ;
     [exec] drop table DCSPP_ORDER_PG		  cascade constraints ;
     [exec] drop table DCSPP_ORDER_ITEM		  cascade constraints ;
     [exec] drop table DCSPP_ORDER_REL		  cascade constraints ;
     [exec] drop table DCSPP_SHIP_INST		  cascade constraints ;
     [exec] drop table DCSPP_HRD_SHIP_GRP		  cascade constraints ;
     [exec] drop table DCSPP_ELE_SHIP_GRP		  cascade constraints ;
     [exec] drop table DCSPP_SHIP_ADDR		  cascade constraints ;
     [exec] drop table DCSPP_HAND_INST		  cascade constraints ;
     [exec] drop table DCSPP_GIFT_INST		  cascade constraints ;
     [exec] drop table DCSPP_SG_HAND_INST		  cascade constraints ;
     [exec] drop table DCSPP_PAY_INST		  cascade constraints ;
     [exec] drop table DCSPP_CONFIG_ITEM		  cascade constraints ;
     [exec] drop table DCSPP_SUBSKU_ITEM		  cascade constraints ;
     [exec] drop table DCSPP_ITEM_CI		  cascade constraints ;
     [exec] drop table DCSPP_GIFT_CERT		  cascade constraints ;
     [exec] drop table DCSPP_STORE_CRED		  cascade constraints ;
     [exec] drop table DCSPP_CREDIT_CARD		  cascade constraints ;
     [exec] drop table DCSPP_BILL_ADDR		  cascade constraints ;
     [exec] drop table DCSPP_PAY_STATUS		  cascade constraints ;
     [exec] drop table DCSPP_CC_STATUS		  cascade constraints ;
     [exec] drop table DCSPP_GC_STATUS		  cascade constraints ;
     [exec] drop table DCSPP_SC_STATUS		  cascade constraints ;
     [exec] drop table DCSPP_AUTH_STATUS		  cascade constraints ;
     [exec] drop table DCSPP_DEBIT_STATUS		  cascade constraints ;
     [exec] drop table DCSPP_CRED_STATUS		  cascade constraints ;
     [exec] drop table DCSPP_SHIPITEM_REL		  cascade constraints ;
     [exec] drop table DCSPP_REL_RANGE		  cascade constraints ;
     [exec] drop table DCSPP_PAYITEM_REL		  cascade constraints ;
     [exec] drop table DCSPP_PAYSHIP_REL		  cascade constraints ;
     [exec] drop table DCSPP_PAYORDER_REL		  cascade constraints ;
     [exec] drop table DCSPP_AMOUNT_INFO		  cascade constraints ;
     [exec] drop table DCSPP_ORDER_PRICE		  cascade constraints ;
     [exec] drop table DCSPP_ITEM_PRICE		  cascade constraints ;
     [exec] drop table DCSPP_TAX_PRICE		  cascade constraints ;
     [exec] drop table DCSPP_SHIP_PRICE		  cascade constraints ;
     [exec] drop table DCSPP_AMTINFO_ADJ		  cascade constraints ;
     [exec] drop table SRCH_CSS_CUSTOM_DS		  cascade constraints ;
     [exec] drop table SRCH_PROJECT_CUSTOM_DSM	  cascade constraints ;
     [exec] drop table SRCH_CSS_CUSTOM_DSM		  cascade constraints ;
     [exec] drop table SRCH_CUSTOM_DS_MM		  cascade constraints ;
     [exec] drop table SRCH_FILE			  cascade constraints ;
     [exec] drop table SRCH_QUEUE			  cascade constraints ;
     [exec] drop table SRCH_AUDIT			  cascade constraints ;
     [exec] drop table SRCH_DIC_TR_PT		  cascade constraints ;
     [exec] drop table SRCH_DIC_DICT		  cascade constraints ;
     [exec] drop table SRCH_DIC_TRM 		  cascade constraints ;
     [exec] drop table SRCH_DIC_SYN 		  cascade constraints ;
     [exec] drop table SRCH_TW_SET			  cascade constraints ;
     [exec] drop table SRCH_TW_TERM 		  cascade constraints ;
     [exec] drop table SRCH_QR_PT_NODE		  cascade constraints ;
     [exec] drop table SRCH_QR_SETS 		  cascade constraints ;
     [exec] drop table SRCH_QR_GROUPS		  cascade constraints ;
     [exec] drop table SRCH_QR			  cascade constraints ;
     [exec] drop table SRCH_QR_PATTERNS		  cascade constraints ;
     [exec] drop table SRCH_QR_ACTIONS		  cascade constraints ;
     [exec] drop table SRCH_QR_GL_MS		  cascade constraints ;
     [exec] drop table SRCH_TPO_SETS		  cascade constraints ;
     [exec] drop table SRCH_TPO_OPTS		  cascade constraints ;
     [exec] drop table SRCH_TPO_VALUES		  cascade constraints ;
     [exec] drop table SRCH_FACET_BASE		  cascade constraints ;
     [exec] drop table SRCH_FACET_SET		  cascade constraints ;
     [exec] drop table SRCH_FACET_SET_MAPPING	  cascade constraints ;
     [exec] drop table SRCH_FACET_ITEM		  cascade constraints ;
     [exec] drop table SRCH_FACET_SPEC		  cascade constraints ;
     [exec] drop table SRCH_FACET_EXC		  cascade constraints ;
     [exec] drop table SRCH_FACET_RNGS		  cascade constraints ;
     [exec] drop table CASTO_ORDER			  cascade constraints ;
     [exec] drop table CASTO_ORDER_EMAILS		  cascade constraints ;
     [exec] drop table CASTO_ORDER_COMMENTAIRE	  cascade constraints ;
     [exec] drop table CASTO_TRADEDOUBLER		  cascade constraints ;
     [exec] drop table CASTO_CARTE_ATOUT		  cascade constraints ;
     [exec] drop table CASTO_CARTE_CHEQUE		  cascade constraints ;
     [exec] drop table CASTO_BILL_ADDR		  cascade constraints ;
     [exec] drop table CASTO_COMMERCE_ITEM		  cascade constraints ;
     [exec] drop table CASTO_HARDGOOD_SHIPPING_GROUP  cascade constraints ;
     [exec] drop table CASTO_SHIP_ADDR		  cascade constraints ;
     [exec] drop table CASTO_PFE_POIDS		  cascade constraints ;
     [exec] drop table CASTO_PREPARATION_POIDS	  cascade constraints ;
     [exec] drop table CASTO_CODESPOSTAUX_PFE	  cascade constraints ;
     [exec] drop table CASTO_PREPARATION_PRICE_INFO   cascade constraints ;
     [exec] drop table CASTO_ORDER_PRICE_INFO	  cascade constraints ;
     [exec] drop table CAST_COMMERCE_ITEM		  cascade constraints ;
     [exec] drop table CAST_ITEM_PRICE_INFO 	  cascade constraints ;
     [exec] drop table CASTO_QUESTIONS		  cascade constraints ;
     [exec] drop table CASTO_PROFESSION		  cascade constraints ;
     [exec] drop table CASTO_NIVEAUX_BRICOLAGE	  cascade constraints ;
     [exec] drop table CASTO_SAUVEGARDE_PAGE	  cascade constraints ;
     [exec] drop table CASTO_E_DECORATEUR_OBJET	  cascade constraints ;
     [exec] drop table CASTO_SAUVEGARDE_CREATION	  cascade constraints ;
     [exec] drop table CASTO_LISTE_OBJETS_DECO	  cascade constraints ;
     [exec] drop table CASTO_CONTACT_INFO		  cascade constraints ;
     [exec] drop table CASTO_OTHER_BILLING_ADDR	  cascade constraints ;
     [exec] drop table CASTO_OTHER_BILLSHIP_ADDR	  cascade constraints ;
     [exec] drop table CASTO_LISTE_DE_COURSES	  cascade constraints ;
     [exec] drop table CASTO_LISTE_DE_COURSES_CONTENU cascade constraints ;
     [exec] drop table CASTO_USER			  cascade constraints ;
     [exec] drop table CASTO_USER_LISTE_DE_COURSES	  cascade constraints ;
     [exec] drop table CASTO_USER_FOGROUPS		  cascade constraints ;
     [exec] drop table CASTO_IDENTIFICATION_HELPER	  cascade constraints ;
     [exec] drop table CASTO_CLUB_CASTO		  cascade constraints ;
     [exec] drop table CASTO_STAT_LAST_VISIT	  cascade constraints ;
     [exec] drop table CASTO_SCORES 		  cascade constraints ;
     [exec] drop table CASTO_MON_NIVEAU_BRICOLAGE	  cascade constraints ;
     [exec] drop table CASTO_STAT_COMMERCE		  cascade constraints ;
     [exec] drop table CASTO_RAYONS_UTILISE 	  cascade constraints ;
     [exec] drop table CASTO_LOGEMENT		  cascade constraints ;
     [exec] drop table CASTO_TELEPHONIE		  cascade constraints ;
     [exec] drop table CASTO_USER_MAILING		  cascade constraints ;
     [exec] drop table CASTO_SITUATION_FAMILIALE	  cascade constraints ;
     [exec] drop table CASTO_USER_NEWSLETTER	  cascade constraints ;
     [exec] drop table CASTO_MES_PAGES_SAUVEGARDEES   cascade constraints ;
     [exec] drop table CASTO_MES_CREA_SAUVEGARDEES	  cascade constraints ;
     [exec] drop table CASTO_WISHLIST		  cascade constraints ;
     [exec] drop table CASTO_SESSION_TRACKING	  cascade constraints ;
     [exec] drop table CASTO_USER_SESSION_TRACKING	  cascade constraints ;
     [exec] drop table CASTO_FOGROUPS		  cascade constraints ;
     [exec] drop table CASTO_FOPRIV 		  cascade constraints ;
     [exec] drop table CASTO_FOGROUPS_FOPRIV	  cascade constraints ;
     [exec] drop table CASTO_ALERTE_DISPONIBILITE	  cascade constraints ;
     [exec] drop table CASTO_REFEREE		  cascade constraints ;
     [exec] drop table CASTO_REFERRER_REFEREE	  cascade constraints ;
     [exec] drop table CASTO_CODES_POSTAUX		  cascade constraints ;
     [exec] drop table MOTIF			  cascade constraints ;
     [exec] drop table CONTACT_US_MOTIF		  cascade constraints ;
     [exec] drop table CAST_FAQ_STATISTICS		  cascade constraints ;
     [exec] drop table MESSAGE_MOTIF		  cascade constraints ;
     [exec] drop table MESSAGE_QUESTION		  cascade constraints ;
     [exec] drop table CASTO_RESERVATION_CATALOGUE	  cascade constraints ;
     [exec] drop table HINT_SEARCH			  cascade constraints ;
     [exec] drop table CASTO_SHOPPINGLIST		  cascade constraints ;
     [exec] drop table CASTO_ABONNEMENT_NEWSLETTER	  cascade constraints ;
     [exec] drop table CASTO_THEME_NEWSLETTER	  cascade constraints ;
     [exec] drop table CASTO_THEME_FAVORIS_NEWSLETTER cascade constraints ;
     [exec] drop table CASTO_PARAGRAPHE_NEWSLETTER	  cascade constraints ;
     [exec] drop table CASTO_ARCHIVE_NEWSLETTER	  cascade constraints ;
     [exec] drop table CASTO_ARCHIVE_CONT_PARAGRAPHE  cascade constraints ;
     [exec] drop table CASTO_NEWSLETTER_MAILING	  cascade constraints ;
     [exec] drop table CASTO_NEWSLETTER_USER_MAILING  cascade constraints ;
     [exec] drop table CAST_CLOUD			  cascade constraints ;
     [exec] drop table CAST_CLOUD_TERM		  cascade constraints ;
     [exec] drop table SCD_CONTACT			  cascade constraints ;
     [exec] drop table SCD_FACTURE_AVOIR		  cascade constraints ;
     [exec] drop table SCD_FACTURE_AVOIR_LIGNE	  cascade constraints ;
     [exec] drop table SCD_RECLAMATION		  cascade constraints ;
     [exec] drop table SCD_REMBOURSEMENT		  cascade constraints ;
     [exec] drop table SCD_REMBOURSEMENT_LIGNE	  cascade constraints ;
     [exec] drop table SCD_RETOUR			  cascade constraints ;
     [exec] drop table SCD_RETOUR_LIGNE		  cascade constraints ;
     [exec] drop table SCD_VENTE_LIGNE		  cascade constraints ;
     [exec] drop table SCD_VENTE_WEB		  cascade constraints ;
     [exec] drop table VTE_ENLEVEMENT		  cascade constraints ;
     [exec] drop table VTE_VENTE			  cascade constraints ;
     [exec] drop table VTE_VENTE_LIGNE		  cascade constraints ;
     [exec] drop table TYPE_LISTE_LANGUE		  cascade constraints ;
     [exec] drop table RESERVATION_ARTICLE		  cascade constraints ;
     [exec] drop table THEME			  cascade constraints ;
     [exec] drop table SOUS_THEME			  cascade constraints ;
     [exec] drop table CASTO_CONTACT		  cascade constraints ;
     [exec] drop table QUESTION_REPONSE		  cascade constraints ;
     [exec] drop table CASTO_CONTACT_STATUS 	  cascade constraints ;
     [exec] drop table CASTO_EXPORT_JOURNALISATION	  cascade constraints ;
     [exec] drop table CASTO_BORNES_EXPORT_JOURNAL	  cascade constraints ;
     [exec] drop table CASTO_PLANNER_EXPORT_JOURNAL   cascade constraints ;
     [exec] drop table CASTO_SIPS_LOG		  cascade constraints ;
     [exec] drop table CASTO_LOG_CALL_CENTER	  cascade constraints ;
     [exec] drop table CASTO_COUPONS		  cascade constraints ;
     [exec] drop table CASTO_ORDER_TRANSACTION	  cascade constraints ;
     [exec] drop table CASTO_ORDER_BACKUP		  cascade constraints ;
     [exec] drop table CASTO_CCE_ITEM_LISTE_BACKUP	  cascade constraints ;
     [exec] drop table CASTO_LOGS_ADMIN		  cascade constraints ;
     [exec] drop table CASTO_MAILSUIVICOMMANDE	  cascade constraints ;
     [exec] drop table CAST_APPLLIED_COUPONS	  cascade constraints ;
     [exec] drop table CASTO_FAILED_NEWSLETTER	  cascade constraints ;
     [exec] drop table CASTO_TICKET_MAPPING 	  cascade constraints ;
     [exec] drop table CASTO_TICKET_HEADER		  cascade constraints ;
     [exec] drop table CASTO_TICKET_METHOD		  cascade constraints ;
     [exec] drop table CASTO_TICKET_LINE		  cascade constraints ;
     [exec] drop table CASTO_TICKET_STATISTIC	  cascade constraints ;
     [exec] drop table CASTO_EXPERIAN_REQUESTS	  cascade constraints ;
     [exec] drop table CASTO_EXPERIAN_HISTORY	  cascade constraints ;
     [exec] drop table CASTO_BDDCC_EXECUTION	  cascade constraints ;
     [exec] drop table CASTO_PAYBOX_NUMQUESTION	  cascade constraints ;
     [exec] SQL> Disconnected from Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production

dropcatalogtables:

-performcatalogsql:

-performsql:
     [echo] about to execute sql/drop_all_tables.sql using CAST_CATA/CAST_CATA@XE
     [exec] 
     [exec] SQL*Plus: Release 11.2.0.2.0 Production on Mon May 2 18:47:41 2016
     [exec] 
     [exec] Copyright (c) 1982, 2014, Oracle.  All rights reserved.
     [exec] 
     [exec] 
     [exec] Connected to:
     [exec] Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production
     [exec] 
     [exec] drop table DCS_PRICE_LIST		  cascade constraints ;
     [exec] drop table DCS_COMPLEX_PRICE		  cascade constraints ;
     [exec] drop table DCS_PRICE			  cascade constraints ;
     [exec] drop table DCS_PRICE_LEVELS		  cascade constraints ;
     [exec] drop table DCS_PRICE_LEVEL		  cascade constraints ;
     [exec] drop table DCS_GEN_FOL_PL		  cascade constraints ;
     [exec] drop table DCS_CHILD_FOL_PL		  cascade constraints ;
     [exec] drop table DCS_PLFOL_CHLD		  cascade constraints ;
     [exec] drop table DCS_FOLDER			  cascade constraints ;
     [exec] drop table DCS_MEDIA			  cascade constraints ;
     [exec] drop table DCS_MEDIA_EXT		  cascade constraints ;
     [exec] drop table DCS_MEDIA_BIN		  cascade constraints ;
     [exec] drop table DCS_MEDIA_TXT		  cascade constraints ;
     [exec] drop table DCS_CATEGORY 		  cascade constraints ;
     [exec] drop table DCS_CATEGORY_ACL		  cascade constraints ;
     [exec] drop table DCS_PRODUCT			  cascade constraints ;
     [exec] drop table DCS_PRODUCT_ACL		  cascade constraints ;
     [exec] drop table DCS_SKU			  cascade constraints ;
     [exec] drop table DCS_CAT_GROUPS		  cascade constraints ;
     [exec] drop table DCS_CAT_CHLDPRD		  cascade constraints ;
     [exec] drop table DCS_CAT_CHLDCAT		  cascade constraints ;
     [exec] drop table DCS_CAT_ANCESTORS		  cascade constraints ;
     [exec] drop table DCS_CAT_RLTDCAT		  cascade constraints ;
     [exec] drop table DCS_CAT_KEYWRDS		  cascade constraints ;
     [exec] drop table DCS_CAT_MEDIA		  cascade constraints ;
     [exec] drop table DCS_CAT_AUX_MEDIA		  cascade constraints ;
     [exec] drop table DCS_PRD_KEYWRDS		  cascade constraints ;
     [exec] drop table DCS_PRD_MEDIA		  cascade constraints ;
     [exec] drop table DCS_PRD_AUX_MEDIA		  cascade constraints ;
     [exec] drop table DCS_PRD_CHLDSKU		  cascade constraints ;
     [exec] drop table DCS_PRD_SKUATTR		  cascade constraints ;
     [exec] drop table DCS_PRD_GROUPS		  cascade constraints ;
     [exec] drop table DCS_PRD_RLTDPRD		  cascade constraints ;
     [exec] drop table DCS_PRD_UPSLPRD		  cascade constraints ;
     [exec] drop table DCS_PRD_ANCESTORS		  cascade constraints ;
     [exec] drop table DCS_SKU_ATTR 		  cascade constraints ;
     [exec] drop table DCS_SKU_LINK 		  cascade constraints ;
     [exec] drop table DCS_SKU_BNDLLNK		  cascade constraints ;
     [exec] drop table DCS_SKU_MEDIA		  cascade constraints ;
     [exec] drop table DCS_SKU_AUX_MEDIA		  cascade constraints ;
     [exec] drop table DCS_SKU_REPLACE		  cascade constraints ;
     [exec] drop table DCS_SKU_CONF 		  cascade constraints ;
     [exec] drop table DCS_CONFIG_PROP		  cascade constraints ;
     [exec] drop table DCS_CONF_OPTIONS		  cascade constraints ;
     [exec] drop table DCS_CONFIG_OPT		  cascade constraints ;
     [exec] drop table DCS_FOREIGN_CAT		  cascade constraints ;
     [exec] drop table DCS_PROMOTION		  cascade constraints ;
     [exec] drop table DCS_PROMO_MEDIA		  cascade constraints ;
     [exec] drop table DCS_DISCOUNT_PROMO		  cascade constraints ;
     [exec] drop table DCS_PROMO_UPSELL		  cascade constraints ;
     [exec] drop table DCS_UPSELL_ACTION		  cascade constraints ;
     [exec] drop table DCS_CLOSE_QUALIF		  cascade constraints ;
     [exec] drop table DCS_PRM_CLS_QLF		  cascade constraints ;
     [exec] drop table DCS_UPSELL_PRODS		  cascade constraints ;
     [exec] drop table DCS_CATALOG			  cascade constraints ;
     [exec] drop table DCS_ROOT_CATS		  cascade constraints ;
     [exec] drop table DCS_ALLROOT_CATS		  cascade constraints ;
     [exec] drop table DCS_ROOT_SUBCATS		  cascade constraints ;
     [exec] drop table DCS_SUB_CATALOGS		  cascade constraints ;
     [exec] drop table DCS_CATEGORY_INFO		  cascade constraints ;
     [exec] drop table DCS_PRODUCT_INFO		  cascade constraints ;
     [exec] drop table DCS_SKU_INFO 		  cascade constraints ;
     [exec] drop table DCS_CAT_SUBCATS		  cascade constraints ;
     [exec] drop table DCS_CAT_SUBROOTS		  cascade constraints ;
     [exec] drop table DCS_CAT_CATINFO		  cascade constraints ;
     [exec] drop table DCS_CATINFO_ANC		  cascade constraints ;
     [exec] drop table DCS_PRD_PRDINFO		  cascade constraints ;
     [exec] drop table DCS_PRDINFO_RDPRD		  cascade constraints ;
     [exec] drop table DCS_PRDINFO_ANC		  cascade constraints ;
     [exec] drop table DCS_SKU_SKUINFO		  cascade constraints ;
     [exec] drop table DCS_SKUINFO_RPLC		  cascade constraints ;
     [exec] drop table DCS_GEN_FOL_CAT		  cascade constraints ;
     [exec] drop table DCS_CHILD_FOL_CAT		  cascade constraints ;
     [exec] drop table DCS_CATFOL_CHLD		  cascade constraints ;
     [exec] drop table DCS_DIR_ANC_CTLGS		  cascade constraints ;
     [exec] drop table DCS_IND_ANC_CTLGS		  cascade constraints ;
     [exec] drop table DCS_CTLG_ANC_CATS		  cascade constraints ;
     [exec] drop table DCS_CAT_PRNT_CTLG		  cascade constraints ;
     [exec] drop table DCS_CAT_ANC_CATS		  cascade constraints ;
     [exec] drop table DCS_PRD_PRNT_CATS		  cascade constraints ;
     [exec] drop table DCS_PRD_ANC_CATS		  cascade constraints ;
     [exec] drop table DCS_CAT_CATALOGS		  cascade constraints ;
     [exec] drop table DCS_PRD_CATALOGS		  cascade constraints ;
     [exec] drop table DCS_SKU_CATALOGS		  cascade constraints ;
     [exec] drop table SRCH_REFINE_ELEMS		  cascade constraints ;
     [exec] drop table SRCH_REFINE_SUBELS		  cascade constraints ;
     [exec] drop table SRCH_REFEL_ORDER		  cascade constraints ;
     [exec] drop table SRCH_REFEL_RANGE		  cascade constraints ;
     [exec] drop table SRCH_REFEL_SELECT		  cascade constraints ;
     [exec] drop table SRCH_REFEL_EXCLUDE		  cascade constraints ;
     [exec] drop table SRCH_SORT_OPTIONS		  cascade constraints ;
     [exec] drop table SRCH_REFINE_CONFIG		  cascade constraints ;
     [exec] drop table SRCH_REFCFG_ELEMS		  cascade constraints ;
     [exec] drop table SRCH_REFINE_SORT		  cascade constraints ;
     [exec] drop table SRCH_CFG_DIMNODE		  cascade constraints ;
     [exec] drop table SRCH_CFG_DTINFO		  cascade constraints ;
     [exec] drop table SRCH_CFG_FOL 		  cascade constraints ;
     [exec] drop table SRCH_CFG_RULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_SYNSET		  cascade constraints ;
     [exec] drop table SRCH_CFG_APROP		  cascade constraints ;
     [exec] drop table SRCH_CFG_RPROP		  cascade constraints ;
     [exec] drop table SRCH_CFG_CFG 		  cascade constraints ;
     [exec] drop table SRCH_CFG_BASE		  cascade constraints ;
     [exec] drop table SRCH_CFG_FOL_CHLDCFGS	  cascade constraints ;
     [exec] drop table SRCH_CFG_FOL_CHLDFOL 	  cascade constraints ;
     [exec] drop table SRCH_CFG_RPSET		  cascade constraints ;
     [exec] drop table SRCH_CFG_VRPSET		  cascade constraints ;
     [exec] drop table SRCH_CFG_SYNLNK		  cascade constraints ;
     [exec] drop table SRCH_CFG_DRULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_DSYN		  cascade constraints ;
     [exec] drop table SRCH_CFG_ERULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_RRULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_PRULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_TERM		  cascade constraints ;
     [exec] drop table SRCH_CFG_RANK		  cascade constraints ;
     [exec] drop table SRCH_CONFIG			  cascade constraints ;
     [exec] drop table SRCH_CONFIG_REPO		  cascade constraints ;
     [exec] drop table SRCH_UPDATE_QUEUE		  cascade constraints ;
     [exec] drop table SRCH_UPDATE_VQUEUE		  cascade constraints ;
     [exec] drop table DCS_REFINE_CONFIG		  cascade constraints ;
     [exec] drop table DCS_REFCFG_GENELS		  cascade constraints ;
     [exec] drop table DCS_CAT_REFCFG		  cascade constraints ;
     [exec] drop table DCS_REFCFG_CUSTOM		  cascade constraints ;
     [exec] drop table DCS_CATINFO_REFCFG		  cascade constraints ;
     [exec] drop table DCS_CATALOG_REFCFG		  cascade constraints ;
     [exec] drop table CASTO_REGION_MESSAGES	  cascade constraints ;
     [exec] drop table CASTO_MESSAGES		  cascade constraints ;
     [exec] drop table CASTO_DEPARTEMENT_OLD	  cascade constraints ;
     [exec] drop table CASTO_DEPARTEMENT		  cascade constraints ;
     [exec] drop table CASTO_ADRESSE		  cascade constraints ;
     [exec] drop table CASTO_ENTITE 		  cascade constraints ;
     [exec] drop table CASTO_COMMANDE_SERVICE	  cascade constraints ;
     [exec] drop table CASTO_MAGASIN		  cascade constraints ;
     [exec] drop table CASTO_MAGAS_COUPLE_SERVICE	  cascade constraints ;
     [exec] drop table CASTO_REGION 		  cascade constraints ;
     [exec] drop table CASTO_SERVICE		  cascade constraints ;
     [exec] drop table CASTO_MAGASIN_COMM_SERVICE	  cascade constraints ;
     [exec] drop table CASTO_MAGASIN_SERVICE	  cascade constraints ;
     [exec] drop table CASTO_OFFRE			  cascade constraints ;
     [exec] drop table CASTO_ACTUALITE		  cascade constraints ;
     [exec] drop table CASTO_OPERATION_SPECIALE	  cascade constraints ;
     [exec] drop table CASTO_OPERATION_MAGASIN	  cascade constraints ;
     [exec] drop table CASTO_IMAGE_AUX		  cascade constraints ;
     [exec] drop table CASTO_OUVERTURE_EXCEP	  cascade constraints ;
     [exec] drop table CASTO_OFFRE_MAGASIN		  cascade constraints ;
     [exec] drop table CASTO_MAGASINS_ACTU		  cascade constraints ;
     [exec] drop table CASTO_MAGASIN_IMAGE_AUX	  cascade constraints ;
     [exec] drop table CASTO_MAGASIN_OUVERTURE_EXCEP  cascade constraints ;
     [exec] drop table CASTO_MAGASIN_PROCHE 	  cascade constraints ;
     [exec] drop table CAST_DOCUMENT		  cascade constraints ;
     [exec] drop table CAST_CAT_DOCUMENT		  cascade constraints ;
     [exec] drop table CAST_DOC_KEYWRDS		  cascade constraints ;
     [exec] drop table CAST_STYLE			  cascade constraints ;
     [exec] drop table CAST_CATEGORY_STYLE		  cascade constraints ;
     [exec] drop table CAST_PROMO_TEMPLATE		  cascade constraints ;
     [exec] drop table CAST_PROMO_INFORMATION	  cascade constraints ;
     [exec] drop table CAST_TEMPLATE_INFORMATION	  cascade constraints ;
     [exec] drop table CASTO_COULEUR		  cascade constraints ;
     [exec] drop table CASTO_SKU			  cascade constraints ;
     [exec] drop table CASTO_SKU_PICTO		  cascade constraints ;
     [exec] drop table CASTO_SKU_RELATED		  cascade constraints ;
     [exec] drop table CASTO_SKU_CROSS_SELLING	  cascade constraints ;
     [exec] drop table CASTO_SKU_CROSS_SELLING_ASSOC  cascade constraints ;
     [exec] drop table CASTO_SKU_IK_CS_ASSOC	  cascade constraints ;
     [exec] drop table CASTO_SKU_ATTR_VALUE 	  cascade constraints ;
     [exec] drop table CASTO_SKU_ATTR		  cascade constraints ;
     [exec] drop table CASTO_NORMES 		  cascade constraints ;
     [exec] drop table CASTO_SKU_NORMES		  cascade constraints ;
     [exec] drop table CASTO_SKU_SERVICE_MAGASIN	  cascade constraints ;
     [exec] drop table CASTO_SKU_MEDIA		  cascade constraints ;
     [exec] drop table CASTO_AFFINAGE_QUESTION	  cascade constraints ;
     [exec] drop table CASTO_AFFINAGE_REPONSE	  cascade constraints ;
     [exec] drop table CASTO_AFFINAGE_QUEST_REP	  cascade constraints ;
     [exec] drop table CASTO_DATA_MAGASIN		  cascade constraints ;
     [exec] drop table CASTO_SKU_MAGASIN		  cascade constraints ;
     [exec] drop table CASTO_PRODUCT		  cascade constraints ;
     [exec] drop table CASTO_PRODUCT_QUESTION	  cascade constraints ;
     [exec] drop table CASTO_PRODUCT_AFFINAGE	  cascade constraints ;
     [exec] drop table CASTO_PRODUCT_LISTE_MULTISKU   cascade constraints ;
     [exec] drop table CASTO_IK_CATEGORY_TYPE	  cascade constraints ;
     [exec] drop table CASTO_CATEGORY		  cascade constraints ;
     [exec] drop table CASTO_INSPI			  cascade constraints ;
     [exec] drop table CASTO_CATEGORY_ESPRIT	  cascade constraints ;
     [exec] drop table CASTO_INSPI_NUANCIER 	  cascade constraints ;
     [exec] drop table CASTO_NUANCIER		  cascade constraints ;
     [exec] drop table CASTO_CATEGORY_INSPI 	  cascade constraints ;
     [exec] drop table CASTO_CATEGORY_SEQUENCE	  cascade constraints ;
     [exec] drop table CASTO_CATEGORY_BOUTIQUE_MAG	  cascade constraints ;
     [exec] drop table CASTO_THEMES_NORMES		  cascade constraints ;
     [exec] drop table CASTO_THEMES_NORMES_ASSOC	  cascade constraints ;
     [exec] drop table CASTO_MARQUE 		  cascade constraints ;
     [exec] drop table CASTO_CODES_UNITE		  cascade constraints ;
     [exec] drop table CAST_SKU			  cascade constraints ;
     [exec] drop table CAST_CATEGORY		  cascade constraints ;
     [exec] drop table CAST_CATALOG_CATEGORY	  cascade constraints ;
     [exec] drop table CAST_GROUPED_PRODUCT 	  cascade constraints ;
     [exec] drop table CAST_SKU_LINK		  cascade constraints ;
     [exec] drop table CAST_SKU_PACKS		  cascade constraints ;
     [exec] drop table CAST_PRODUCT 		  cascade constraints ;
     [exec] drop table CAST_SKU_IMAGES		  cascade constraints ;
     [exec] drop table CASTO_GESTPROMO_ACTIONCO	  cascade constraints ;
     [exec] drop table CASTO_GESTPROMO_OPECO	  cascade constraints ;
     [exec] drop table CASTO_GESTPROMO_ELEMENT	  cascade constraints ;
     [exec] drop table CASTO_GESTPROMO_OPECO_NC	  cascade constraints ;
     [exec] drop table CASTO_PROMOTION		  cascade constraints ;
     [exec] drop table CAST_PRODUCT_CHARACTERISTICS   cascade constraints ;
     [exec] drop table CASTO_LEGACY_URL		  cascade constraints ;
     [exec] drop table CASTO_STAGE			  cascade constraints ;
     [exec] drop table CAST_CATALOGUE		  cascade constraints ;
     [exec] drop table CASTO_SKU_INTEGRATION	  cascade constraints ;
     [exec] drop table CAST_SKU_INSTRUCTIONS	  cascade constraints ;
     [exec] drop table CAST_GROUPED_ASSEMBLY_OPTIONS  cascade constraints ;
     [exec] drop table CAST_IPHONE_CATALOG		  cascade constraints ;
     [exec] drop table CAST_IPHONE_SKU_IMAGES	  cascade constraints ;
     [exec] drop table CAST_STORE_GEOLOCATION	  cascade constraints ;
     [exec] drop table IPH_CAT_DISPLAY_IMAGE	  cascade constraints ;
     [exec] drop table IPHONE_AUG_AUX_IMAGE 	  cascade constraints ;
     [exec] drop table IPHONE_VIDEO 		  cascade constraints ;
     [exec] drop table IPHONE_SKU_AUG_IMAGES	  cascade constraints ;
     [exec] drop table CAST_CATALOG_ADDITION_PROP	  cascade constraints ;
     [exec] drop table CAST_THEMATIQUE		  cascade constraints ;
     [exec] drop table CAST_THEMATIQUE_DOCS_TOP	  cascade constraints ;
     [exec] drop table CAST_THEMATIQUE_DOCS_BOTTOM	  cascade constraints ;
     [exec] drop table CAST_CHAPTERTHEM		  cascade constraints ;
     [exec] drop table CAST_CONTTHEM		  cascade constraints ;
     [exec] drop table CAST_CONT_THEM		  cascade constraints ;
     [exec] drop table CAST_CONT_CHAPT		  cascade constraints ;
     [exec] drop table CAST_GUIMENU 		  cascade constraints ;
     [exec] drop table CAST_MENUITEM		  cascade constraints ;
     [exec] drop table CAST_GUIMENU_ITEMS		  cascade constraints ;
     [exec] drop table CAST_THEMATIQUE_CHAPT	  cascade constraints ;
     [exec] drop table CASTO_DOC_FILTER_TAG_CATS	  cascade constraints ;
     [exec] drop table CASTO_DOC_FILTER_TAGS	  cascade constraints ;
     [exec] drop table CAST_TAG_DOCS		  cascade constraints ;
     [exec] drop table CASTO_DOC_TYPES		  cascade constraints ;
     [exec] drop table CASTO_DOC_SUBCATS		  cascade constraints ;
     [exec] drop table CASTO_FAST_LAB_CONFIGS	  cascade constraints ;
     [exec] SQL> Disconnected from Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production

-performsql:
     [echo] about to execute sql/drop_all_tables.sql using CAST_CATB/CAST_CATB@XE
     [exec] 
     [exec] SQL*Plus: Release 11.2.0.2.0 Production on Mon May 2 18:47:50 2016
     [exec] 
     [exec] Copyright (c) 1982, 2014, Oracle.  All rights reserved.
     [exec] 
     [exec] 
     [exec] Connected to:
     [exec] Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production
     [exec] 
     [exec] drop table DCS_PRICE_LIST		  cascade constraints ;
     [exec] drop table DCS_COMPLEX_PRICE		  cascade constraints ;
     [exec] drop table DCS_PRICE			  cascade constraints ;
     [exec] drop table DCS_PRICE_LEVELS		  cascade constraints ;
     [exec] drop table DCS_PRICE_LEVEL		  cascade constraints ;
     [exec] drop table DCS_GEN_FOL_PL		  cascade constraints ;
     [exec] drop table DCS_CHILD_FOL_PL		  cascade constraints ;
     [exec] drop table DCS_PLFOL_CHLD		  cascade constraints ;
     [exec] drop table DCS_FOLDER			  cascade constraints ;
     [exec] drop table DCS_MEDIA			  cascade constraints ;
     [exec] drop table DCS_MEDIA_EXT		  cascade constraints ;
     [exec] drop table DCS_MEDIA_BIN		  cascade constraints ;
     [exec] drop table DCS_MEDIA_TXT		  cascade constraints ;
     [exec] drop table DCS_CATEGORY 		  cascade constraints ;
     [exec] drop table DCS_CATEGORY_ACL		  cascade constraints ;
     [exec] drop table DCS_PRODUCT			  cascade constraints ;
     [exec] drop table DCS_PRODUCT_ACL		  cascade constraints ;
     [exec] drop table DCS_SKU			  cascade constraints ;
     [exec] drop table DCS_CAT_GROUPS		  cascade constraints ;
     [exec] drop table DCS_CAT_CHLDPRD		  cascade constraints ;
     [exec] drop table DCS_CAT_CHLDCAT		  cascade constraints ;
     [exec] drop table DCS_CAT_ANCESTORS		  cascade constraints ;
     [exec] drop table DCS_CAT_RLTDCAT		  cascade constraints ;
     [exec] drop table DCS_CAT_KEYWRDS		  cascade constraints ;
     [exec] drop table DCS_CAT_MEDIA		  cascade constraints ;
     [exec] drop table DCS_CAT_AUX_MEDIA		  cascade constraints ;
     [exec] drop table DCS_PRD_KEYWRDS		  cascade constraints ;
     [exec] drop table DCS_PRD_MEDIA		  cascade constraints ;
     [exec] drop table DCS_PRD_AUX_MEDIA		  cascade constraints ;
     [exec] drop table DCS_PRD_CHLDSKU		  cascade constraints ;
     [exec] drop table DCS_PRD_SKUATTR		  cascade constraints ;
     [exec] drop table DCS_PRD_GROUPS		  cascade constraints ;
     [exec] drop table DCS_PRD_RLTDPRD		  cascade constraints ;
     [exec] drop table DCS_PRD_UPSLPRD		  cascade constraints ;
     [exec] drop table DCS_PRD_ANCESTORS		  cascade constraints ;
     [exec] drop table DCS_SKU_ATTR 		  cascade constraints ;
     [exec] drop table DCS_SKU_LINK 		  cascade constraints ;
     [exec] drop table DCS_SKU_BNDLLNK		  cascade constraints ;
     [exec] drop table DCS_SKU_MEDIA		  cascade constraints ;
     [exec] drop table DCS_SKU_AUX_MEDIA		  cascade constraints ;
     [exec] drop table DCS_SKU_REPLACE		  cascade constraints ;
     [exec] drop table DCS_SKU_CONF 		  cascade constraints ;
     [exec] drop table DCS_CONFIG_PROP		  cascade constraints ;
     [exec] drop table DCS_CONF_OPTIONS		  cascade constraints ;
     [exec] drop table DCS_CONFIG_OPT		  cascade constraints ;
     [exec] drop table DCS_FOREIGN_CAT		  cascade constraints ;
     [exec] drop table DCS_PROMOTION		  cascade constraints ;
     [exec] drop table DCS_PROMO_MEDIA		  cascade constraints ;
     [exec] drop table DCS_DISCOUNT_PROMO		  cascade constraints ;
     [exec] drop table DCS_PROMO_UPSELL		  cascade constraints ;
     [exec] drop table DCS_UPSELL_ACTION		  cascade constraints ;
     [exec] drop table DCS_CLOSE_QUALIF		  cascade constraints ;
     [exec] drop table DCS_PRM_CLS_QLF		  cascade constraints ;
     [exec] drop table DCS_UPSELL_PRODS		  cascade constraints ;
     [exec] drop table DCS_CATALOG			  cascade constraints ;
     [exec] drop table DCS_ROOT_CATS		  cascade constraints ;
     [exec] drop table DCS_ALLROOT_CATS		  cascade constraints ;
     [exec] drop table DCS_ROOT_SUBCATS		  cascade constraints ;
     [exec] drop table DCS_SUB_CATALOGS		  cascade constraints ;
     [exec] drop table DCS_CATEGORY_INFO		  cascade constraints ;
     [exec] drop table DCS_PRODUCT_INFO		  cascade constraints ;
     [exec] drop table DCS_SKU_INFO 		  cascade constraints ;
     [exec] drop table DCS_CAT_SUBCATS		  cascade constraints ;
     [exec] drop table DCS_CAT_SUBROOTS		  cascade constraints ;
     [exec] drop table DCS_CAT_CATINFO		  cascade constraints ;
     [exec] drop table DCS_CATINFO_ANC		  cascade constraints ;
     [exec] drop table DCS_PRD_PRDINFO		  cascade constraints ;
     [exec] drop table DCS_PRDINFO_RDPRD		  cascade constraints ;
     [exec] drop table DCS_PRDINFO_ANC		  cascade constraints ;
     [exec] drop table DCS_SKU_SKUINFO		  cascade constraints ;
     [exec] drop table DCS_SKUINFO_RPLC		  cascade constraints ;
     [exec] drop table DCS_GEN_FOL_CAT		  cascade constraints ;
     [exec] drop table DCS_CHILD_FOL_CAT		  cascade constraints ;
     [exec] drop table DCS_CATFOL_CHLD		  cascade constraints ;
     [exec] drop table DCS_DIR_ANC_CTLGS		  cascade constraints ;
     [exec] drop table DCS_IND_ANC_CTLGS		  cascade constraints ;
     [exec] drop table DCS_CTLG_ANC_CATS		  cascade constraints ;
     [exec] drop table DCS_CAT_PRNT_CTLG		  cascade constraints ;
     [exec] drop table DCS_CAT_ANC_CATS		  cascade constraints ;
     [exec] drop table DCS_PRD_PRNT_CATS		  cascade constraints ;
     [exec] drop table DCS_PRD_ANC_CATS		  cascade constraints ;
     [exec] drop table DCS_CAT_CATALOGS		  cascade constraints ;
     [exec] drop table DCS_PRD_CATALOGS		  cascade constraints ;
     [exec] drop table DCS_SKU_CATALOGS		  cascade constraints ;
     [exec] drop table SRCH_REFINE_ELEMS		  cascade constraints ;
     [exec] drop table SRCH_REFINE_SUBELS		  cascade constraints ;
     [exec] drop table SRCH_REFEL_ORDER		  cascade constraints ;
     [exec] drop table SRCH_REFEL_RANGE		  cascade constraints ;
     [exec] drop table SRCH_REFEL_SELECT		  cascade constraints ;
     [exec] drop table SRCH_REFEL_EXCLUDE		  cascade constraints ;
     [exec] drop table SRCH_SORT_OPTIONS		  cascade constraints ;
     [exec] drop table SRCH_REFINE_CONFIG		  cascade constraints ;
     [exec] drop table SRCH_REFCFG_ELEMS		  cascade constraints ;
     [exec] drop table SRCH_REFINE_SORT		  cascade constraints ;
     [exec] drop table SRCH_CFG_DIMNODE		  cascade constraints ;
     [exec] drop table SRCH_CFG_DTINFO		  cascade constraints ;
     [exec] drop table SRCH_CFG_FOL 		  cascade constraints ;
     [exec] drop table SRCH_CFG_RULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_SYNSET		  cascade constraints ;
     [exec] drop table SRCH_CFG_APROP		  cascade constraints ;
     [exec] drop table SRCH_CFG_RPROP		  cascade constraints ;
     [exec] drop table SRCH_CFG_CFG 		  cascade constraints ;
     [exec] drop table SRCH_CFG_BASE		  cascade constraints ;
     [exec] drop table SRCH_CFG_FOL_CHLDCFGS	  cascade constraints ;
     [exec] drop table SRCH_CFG_FOL_CHLDFOL 	  cascade constraints ;
     [exec] drop table SRCH_CFG_RPSET		  cascade constraints ;
     [exec] drop table SRCH_CFG_VRPSET		  cascade constraints ;
     [exec] drop table SRCH_CFG_SYNLNK		  cascade constraints ;
     [exec] drop table SRCH_CFG_DRULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_DSYN		  cascade constraints ;
     [exec] drop table SRCH_CFG_ERULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_RRULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_PRULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_TERM		  cascade constraints ;
     [exec] drop table SRCH_CFG_RANK		  cascade constraints ;
     [exec] drop table SRCH_CONFIG			  cascade constraints ;
     [exec] drop table SRCH_CONFIG_REPO		  cascade constraints ;
     [exec] drop table SRCH_UPDATE_QUEUE		  cascade constraints ;
     [exec] drop table SRCH_UPDATE_VQUEUE		  cascade constraints ;
     [exec] drop table DCS_REFINE_CONFIG		  cascade constraints ;
     [exec] drop table DCS_REFCFG_GENELS		  cascade constraints ;
     [exec] drop table DCS_CAT_REFCFG		  cascade constraints ;
     [exec] drop table DCS_REFCFG_CUSTOM		  cascade constraints ;
     [exec] drop table DCS_CATINFO_REFCFG		  cascade constraints ;
     [exec] drop table DCS_CATALOG_REFCFG		  cascade constraints ;
     [exec] drop table CASTO_REGION_MESSAGES	  cascade constraints ;
     [exec] drop table CASTO_MESSAGES		  cascade constraints ;
     [exec] drop table CASTO_DEPARTEMENT_OLD	  cascade constraints ;
     [exec] drop table CASTO_DEPARTEMENT		  cascade constraints ;
     [exec] drop table CASTO_ADRESSE		  cascade constraints ;
     [exec] drop table CASTO_ENTITE 		  cascade constraints ;
     [exec] drop table CASTO_COMMANDE_SERVICE	  cascade constraints ;
     [exec] drop table CASTO_MAGASIN		  cascade constraints ;
     [exec] drop table CASTO_MAGAS_COUPLE_SERVICE	  cascade constraints ;
     [exec] drop table CASTO_REGION 		  cascade constraints ;
     [exec] drop table CASTO_SERVICE		  cascade constraints ;
     [exec] drop table CASTO_MAGASIN_COMM_SERVICE	  cascade constraints ;
     [exec] drop table CASTO_MAGASIN_SERVICE	  cascade constraints ;
     [exec] drop table CASTO_OFFRE			  cascade constraints ;
     [exec] drop table CASTO_ACTUALITE		  cascade constraints ;
     [exec] drop table CASTO_OPERATION_SPECIALE	  cascade constraints ;
     [exec] drop table CASTO_OPERATION_MAGASIN	  cascade constraints ;
     [exec] drop table CASTO_IMAGE_AUX		  cascade constraints ;
     [exec] drop table CASTO_OUVERTURE_EXCEP	  cascade constraints ;
     [exec] drop table CASTO_OFFRE_MAGASIN		  cascade constraints ;
     [exec] drop table CASTO_MAGASINS_ACTU		  cascade constraints ;
     [exec] drop table CASTO_MAGASIN_IMAGE_AUX	  cascade constraints ;
     [exec] drop table CASTO_MAGASIN_OUVERTURE_EXCEP  cascade constraints ;
     [exec] drop table CASTO_MAGASIN_PROCHE 	  cascade constraints ;
     [exec] drop table CAST_DOCUMENT		  cascade constraints ;
     [exec] drop table CAST_CAT_DOCUMENT		  cascade constraints ;
     [exec] drop table CAST_DOC_KEYWRDS		  cascade constraints ;
     [exec] drop table CAST_STYLE			  cascade constraints ;
     [exec] drop table CAST_CATEGORY_STYLE		  cascade constraints ;
     [exec] drop table CAST_PROMO_TEMPLATE		  cascade constraints ;
     [exec] drop table CAST_PROMO_INFORMATION	  cascade constraints ;
     [exec] drop table CAST_TEMPLATE_INFORMATION	  cascade constraints ;
     [exec] drop table CASTO_COULEUR		  cascade constraints ;
     [exec] drop table CASTO_SKU			  cascade constraints ;
     [exec] drop table CASTO_SKU_PICTO		  cascade constraints ;
     [exec] drop table CASTO_SKU_RELATED		  cascade constraints ;
     [exec] drop table CASTO_SKU_CROSS_SELLING	  cascade constraints ;
     [exec] drop table CASTO_SKU_CROSS_SELLING_ASSOC  cascade constraints ;
     [exec] drop table CASTO_SKU_IK_CS_ASSOC	  cascade constraints ;
     [exec] drop table CASTO_SKU_ATTR_VALUE 	  cascade constraints ;
     [exec] drop table CASTO_SKU_ATTR		  cascade constraints ;
     [exec] drop table CASTO_NORMES 		  cascade constraints ;
     [exec] drop table CASTO_SKU_NORMES		  cascade constraints ;
     [exec] drop table CASTO_SKU_SERVICE_MAGASIN	  cascade constraints ;
     [exec] drop table CASTO_SKU_MEDIA		  cascade constraints ;
     [exec] drop table CASTO_AFFINAGE_QUESTION	  cascade constraints ;
     [exec] drop table CASTO_AFFINAGE_REPONSE	  cascade constraints ;
     [exec] drop table CASTO_AFFINAGE_QUEST_REP	  cascade constraints ;
     [exec] drop table CASTO_DATA_MAGASIN		  cascade constraints ;
     [exec] drop table CASTO_SKU_MAGASIN		  cascade constraints ;
     [exec] drop table CASTO_PRODUCT		  cascade constraints ;
     [exec] drop table CASTO_PRODUCT_QUESTION	  cascade constraints ;
     [exec] drop table CASTO_PRODUCT_AFFINAGE	  cascade constraints ;
     [exec] drop table CASTO_PRODUCT_LISTE_MULTISKU   cascade constraints ;
     [exec] drop table CASTO_IK_CATEGORY_TYPE	  cascade constraints ;
     [exec] drop table CASTO_CATEGORY		  cascade constraints ;
     [exec] drop table CASTO_INSPI			  cascade constraints ;
     [exec] drop table CASTO_CATEGORY_ESPRIT	  cascade constraints ;
     [exec] drop table CASTO_INSPI_NUANCIER 	  cascade constraints ;
     [exec] drop table CASTO_NUANCIER		  cascade constraints ;
     [exec] drop table CASTO_CATEGORY_INSPI 	  cascade constraints ;
     [exec] drop table CASTO_CATEGORY_SEQUENCE	  cascade constraints ;
     [exec] drop table CASTO_CATEGORY_BOUTIQUE_MAG	  cascade constraints ;
     [exec] drop table CASTO_THEMES_NORMES		  cascade constraints ;
     [exec] drop table CASTO_THEMES_NORMES_ASSOC	  cascade constraints ;
     [exec] drop table CASTO_MARQUE 		  cascade constraints ;
     [exec] drop table CASTO_CODES_UNITE		  cascade constraints ;
     [exec] drop table CAST_SKU			  cascade constraints ;
     [exec] drop table CAST_CATEGORY		  cascade constraints ;
     [exec] drop table CAST_CATALOG_CATEGORY	  cascade constraints ;
     [exec] drop table CAST_GROUPED_PRODUCT 	  cascade constraints ;
     [exec] drop table CAST_SKU_LINK		  cascade constraints ;
     [exec] drop table CAST_SKU_PACKS		  cascade constraints ;
     [exec] drop table CAST_PRODUCT 		  cascade constraints ;
     [exec] drop table CAST_SKU_IMAGES		  cascade constraints ;
     [exec] drop table CASTO_GESTPROMO_ACTIONCO	  cascade constraints ;
     [exec] drop table CASTO_GESTPROMO_OPECO	  cascade constraints ;
     [exec] drop table CASTO_GESTPROMO_ELEMENT	  cascade constraints ;
     [exec] drop table CASTO_GESTPROMO_OPECO_NC	  cascade constraints ;
     [exec] drop table CASTO_PROMOTION		  cascade constraints ;
     [exec] drop table CAST_PRODUCT_CHARACTERISTICS   cascade constraints ;
     [exec] drop table CASTO_LEGACY_URL		  cascade constraints ;
     [exec] drop table CASTO_STAGE			  cascade constraints ;
     [exec] drop table CAST_CATALOGUE		  cascade constraints ;
     [exec] drop table CASTO_SKU_INTEGRATION	  cascade constraints ;
     [exec] drop table CAST_SKU_INSTRUCTIONS	  cascade constraints ;
     [exec] drop table CAST_GROUPED_ASSEMBLY_OPTIONS  cascade constraints ;
     [exec] drop table CAST_IPHONE_CATALOG		  cascade constraints ;
     [exec] drop table CAST_IPHONE_SKU_IMAGES	  cascade constraints ;
     [exec] drop table CAST_STORE_GEOLOCATION	  cascade constraints ;
     [exec] drop table IPH_CAT_DISPLAY_IMAGE	  cascade constraints ;
     [exec] drop table IPHONE_AUG_AUX_IMAGE 	  cascade constraints ;
     [exec] drop table IPHONE_VIDEO 		  cascade constraints ;
     [exec] drop table IPHONE_SKU_AUG_IMAGES	  cascade constraints ;
     [exec] drop table CAST_CATALOG_ADDITION_PROP	  cascade constraints ;
     [exec] drop table CAST_THEMATIQUE		  cascade constraints ;
     [exec] drop table CAST_THEMATIQUE_DOCS_TOP	  cascade constraints ;
     [exec] drop table CAST_THEMATIQUE_DOCS_BOTTOM	  cascade constraints ;
     [exec] drop table CAST_CHAPTERTHEM		  cascade constraints ;
     [exec] drop table CAST_CONTTHEM		  cascade constraints ;
     [exec] drop table CAST_CONT_THEM		  cascade constraints ;
     [exec] drop table CAST_CONT_CHAPT		  cascade constraints ;
     [exec] drop table CAST_GUIMENU 		  cascade constraints ;
     [exec] drop table CAST_MENUITEM		  cascade constraints ;
     [exec] drop table CAST_GUIMENU_ITEMS		  cascade constraints ;
     [exec] drop table CAST_THEMATIQUE_CHAPT	  cascade constraints ;
     [exec] drop table CASTO_DOC_FILTER_TAG_CATS	  cascade constraints ;
     [exec] drop table CASTO_DOC_FILTER_TAGS	  cascade constraints ;
     [exec] drop table CAST_TAG_DOCS		  cascade constraints ;
     [exec] drop table CASTO_DOC_TYPES		  cascade constraints ;
     [exec] drop table CASTO_DOC_SUBCATS		  cascade constraints ;
     [exec] drop table CASTO_FAST_LAB_CONFIGS	  cascade constraints ;
     [exec] SQL> Disconnected from Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production

droppubtables:

-performpubsql:

-performsql:
     [echo] about to execute sql/drop_all_tables.sql using CAST_PUB/CAST_PUB@XE
     [exec] 
     [exec] SQL*Plus: Release 11.2.0.2.0 Production on Mon May 2 18:47:58 2016
     [exec] 
     [exec] Copyright (c) 1982, 2014, Oracle.  All rights reserved.
     [exec] 
     [exec] 
     [exec] Connected to:
     [exec] Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production
     [exec] 
     [exec] drop table CASTO_CODESPOSTAUX_PFE	  cascade constraints ;
     [exec] drop table CASTO_PREPARATION_PRICE_INFO   cascade constraints ;
     [exec] drop table CASTO_ORDER_PRICE_INFO	  cascade constraints ;
     [exec] drop table CAST_COMMERCE_ITEM		  cascade constraints ;
     [exec] drop table CAST_ITEM_PRICE_INFO 	  cascade constraints ;
     [exec] drop table CASTO_QUESTIONS		  cascade constraints ;
     [exec] drop table CASTO_PROFESSION		  cascade constraints ;
     [exec] drop table CASTO_NIVEAUX_BRICOLAGE	  cascade constraints ;
     [exec] drop table CASTO_SAUVEGARDE_PAGE	  cascade constraints ;
     [exec] drop table CASTO_E_DECORATEUR_OBJET	  cascade constraints ;
     [exec] drop table CASTO_SAUVEGARDE_CREATION	  cascade constraints ;
     [exec] drop table CASTO_LISTE_OBJETS_DECO	  cascade constraints ;
     [exec] drop table CASTO_CONTACT_INFO		  cascade constraints ;
     [exec] drop table CASTO_OTHER_BILLING_ADDR	  cascade constraints ;
     [exec] drop table CASTO_OTHER_BILLSHIP_ADDR	  cascade constraints ;
     [exec] drop table CASTO_LISTE_DE_COURSES	  cascade constraints ;
     [exec] drop table CASTO_LISTE_DE_COURSES_CONTENU cascade constraints ;
     [exec] drop table CASTO_USER			  cascade constraints ;
     [exec] drop table CASTO_USER_LISTE_DE_COURSES	  cascade constraints ;
     [exec] drop table CASTO_USER_FOGROUPS		  cascade constraints ;
     [exec] drop table CASTO_IDENTIFICATION_HELPER	  cascade constraints ;
     [exec] drop table CASTO_CLUB_CASTO		  cascade constraints ;
     [exec] drop table CASTO_STAT_LAST_VISIT	  cascade constraints ;
     [exec] drop table CASTO_SCORES 		  cascade constraints ;
     [exec] drop table CASTO_MON_NIVEAU_BRICOLAGE	  cascade constraints ;
     [exec] drop table CASTO_STAT_COMMERCE		  cascade constraints ;
     [exec] drop table CASTO_RAYONS_UTILISE 	  cascade constraints ;
     [exec] drop table CASTO_LOGEMENT		  cascade constraints ;
     [exec] drop table CASTO_TELEPHONIE		  cascade constraints ;
     [exec] drop table CASTO_USER_MAILING		  cascade constraints ;
     [exec] drop table CASTO_SITUATION_FAMILIALE	  cascade constraints ;
     [exec] drop table CASTO_USER_NEWSLETTER	  cascade constraints ;
     [exec] drop table CASTO_MES_PAGES_SAUVEGARDEES   cascade constraints ;
     [exec] drop table CASTO_MES_CREA_SAUVEGARDEES	  cascade constraints ;
     [exec] drop table CASTO_WISHLIST		  cascade constraints ;
     [exec] drop table CASTO_SESSION_TRACKING	  cascade constraints ;
     [exec] drop table CASTO_USER_SESSION_TRACKING	  cascade constraints ;
     [exec] drop table CASTO_FOGROUPS		  cascade constraints ;
     [exec] drop table CASTO_FOPRIV 		  cascade constraints ;
     [exec] drop table CASTO_FOGROUPS_FOPRIV	  cascade constraints ;
     [exec] drop table CASTO_ALERTE_DISPONIBILITE	  cascade constraints ;
     [exec] drop table CASTO_REFEREE		  cascade constraints ;
     [exec] drop table CASTO_REFERRER_REFEREE	  cascade constraints ;
     [exec] drop table CASTO_CODES_POSTAUX		  cascade constraints ;
     [exec] drop table MOTIF			  cascade constraints ;
     [exec] drop table CONTACT_US_MOTIF		  cascade constraints ;
     [exec] drop table CAST_FAQ_STATISTICS		  cascade constraints ;
     [exec] drop table MESSAGE_MOTIF		  cascade constraints ;
     [exec] drop table MESSAGE_QUESTION		  cascade constraints ;
     [exec] drop table CASTO_RESERVATION_CATALOGUE	  cascade constraints ;
     [exec] drop table HINT_SEARCH			  cascade constraints ;
     [exec] drop table CASTO_SHOPPINGLIST		  cascade constraints ;
     [exec] drop table CASTO_ABONNEMENT_NEWSLETTER	  cascade constraints ;
     [exec] drop table CASTO_THEME_NEWSLETTER	  cascade constraints ;
     [exec] drop table CASTO_THEME_FAVORIS_NEWSLETTER cascade constraints ;
     [exec] drop table CASTO_PARAGRAPHE_NEWSLETTER	  cascade constraints ;
     [exec] drop table CASTO_ARCHIVE_NEWSLETTER	  cascade constraints ;
     [exec] drop table CASTO_ARCHIVE_CONT_PARAGRAPHE  cascade constraints ;
     [exec] drop table CASTO_NEWSLETTER_MAILING	  cascade constraints ;
     [exec] drop table CASTO_NEWSLETTER_USER_MAILING  cascade constraints ;
     [exec] drop table CASTO_COULEUR		  cascade constraints ;
     [exec] drop table CASTO_SKU			  cascade constraints ;
     [exec] drop table CASTO_SKU_PICTO		  cascade constraints ;
     [exec] drop table CASTO_SKU_RELATED		  cascade constraints ;
     [exec] drop table CASTO_SKU_CROSS_SELLING	  cascade constraints ;
     [exec] drop table CASTO_SKU_CROSS_SELLING_ASSOC  cascade constraints ;
     [exec] drop table CASTO_SKU_IK_CS_ASSOC	  cascade constraints ;
     [exec] drop table CASTO_SKU_ATTR_VALUE 	  cascade constraints ;
     [exec] drop table CASTO_SKU_ATTR		  cascade constraints ;
     [exec] drop table CASTO_NORMES 		  cascade constraints ;
     [exec] drop table CASTO_SKU_NORMES		  cascade constraints ;
     [exec] drop table CASTO_SKU_SERVICE_MAGASIN	  cascade constraints ;
     [exec] drop table CASTO_SKU_MEDIA		  cascade constraints ;
     [exec] drop table CASTO_AFFINAGE_QUESTION	  cascade constraints ;
     [exec] drop table CASTO_AFFINAGE_REPONSE	  cascade constraints ;
     [exec] drop table CASTO_AFFINAGE_QUEST_REP	  cascade constraints ;
     [exec] drop table CASTO_DATA_MAGASIN		  cascade constraints ;
     [exec] drop table CASTO_SKU_MAGASIN		  cascade constraints ;
     [exec] drop table CASTO_PRODUCT		  cascade constraints ;
     [exec] drop table CASTO_PRODUCT_QUESTION	  cascade constraints ;
     [exec] drop table CASTO_PRODUCT_AFFINAGE	  cascade constraints ;
     [exec] drop table CASTO_PRODUCT_LISTE_MULTISKU   cascade constraints ;
     [exec] drop table CASTO_IK_CATEGORY_TYPE	  cascade constraints ;
     [exec] drop table CASTO_CATEGORY		  cascade constraints ;
     [exec] drop table CASTO_INSPI			  cascade constraints ;
     [exec] drop table CASTO_CATEGORY_ESPRIT	  cascade constraints ;
     [exec] drop table CASTO_INSPI_NUANCIER 	  cascade constraints ;
     [exec] drop table CASTO_NUANCIER		  cascade constraints ;
     [exec] drop table CASTO_CATEGORY_INSPI 	  cascade constraints ;
     [exec] drop table CASTO_CATEGORY_SEQUENCE	  cascade constraints ;
     [exec] drop table CASTO_CATEGORY_BOUTIQUE_MAG	  cascade constraints ;
     [exec] drop table CASTO_THEMES_NORMES		  cascade constraints ;
     [exec] drop table CASTO_THEMES_NORMES_ASSOC	  cascade constraints ;
     [exec] drop table CASTO_MARQUE 		  cascade constraints ;
     [exec] drop table CASTO_CODES_UNITE		  cascade constraints ;
     [exec] drop table CAST_SKU			  cascade constraints ;
     [exec] drop table CAST_CATEGORY		  cascade constraints ;
     [exec] drop table CAST_CATALOG_CATEGORY	  cascade constraints ;
     [exec] drop table CAST_TEMPLATE_INFORMATION	  cascade constraints ;
     [exec] drop table CAST_PROMO_INFORMATION	  cascade constraints ;
     [exec] drop table CAST_PROMO_TEMPLATE		  cascade constraints ;
     [exec] drop table CAST_GROUPED_PRODUCT 	  cascade constraints ;
     [exec] drop table CAST_SKU_LINK		  cascade constraints ;
     [exec] drop table CAST_SKU_PACKS		  cascade constraints ;
     [exec] drop table CAST_DOCUMENT		  cascade constraints ;
     [exec] drop table CAST_CAT_DOCUMENT		  cascade constraints ;
     [exec] drop table CAST_DOC_KEYWRDS		  cascade constraints ;
     [exec] drop table CAST_PRODUCT 		  cascade constraints ;
     [exec] drop table CAST_STYLE			  cascade constraints ;
     [exec] drop table CAST_CATEGORY_STYLE		  cascade constraints ;
     [exec] drop table CAST_SKU_IMAGES		  cascade constraints ;
     [exec] drop table CASTO_GESTPROMO_ACTIONCO	  cascade constraints ;
     [exec] drop table CASTO_GESTPROMO_OPECO	  cascade constraints ;
     [exec] drop table CASTO_GESTPROMO_ELEMENT	  cascade constraints ;
     [exec] drop table CASTO_GESTPROMO_OPECO_NC	  cascade constraints ;
     [exec] drop table CASTO_PROMOTION		  cascade constraints ;
     [exec] drop table CAST_PRODUCT_CHARACTERISTICS   cascade constraints ;
     [exec] drop table CASTO_LEGACY_URL		  cascade constraints ;
     [exec] drop table CASTO_STAGE			  cascade constraints ;
     [exec] drop table CAST_CATALOGUE		  cascade constraints ;
     [exec] drop table CASTO_SKU_INTEGRATION	  cascade constraints ;
     [exec] drop table CAST_SKU_INSTRUCTIONS	  cascade constraints ;
     [exec] drop table CAST_GROUPED_ASSEMBLY_OPTIONS  cascade constraints ;
     [exec] drop table CASTO_REGION_MESSAGES	  cascade constraints ;
     [exec] drop table CASTO_MESSAGES		  cascade constraints ;
     [exec] drop table CASTO_DEPARTEMENT_OLD	  cascade constraints ;
     [exec] drop table CASTO_DEPARTEMENT		  cascade constraints ;
     [exec] drop table CASTO_ADRESSE		  cascade constraints ;
     [exec] drop table CASTO_ENTITE 		  cascade constraints ;
     [exec] drop table CASTO_COMMANDE_SERVICE	  cascade constraints ;
     [exec] drop table CASTO_MAGASIN		  cascade constraints ;
     [exec] drop table CASTO_MAGASIN_COMM_SERVICE	  cascade constraints ;
     [exec] drop table CASTO_MAGAS_COUPLE_SERVICE	  cascade constraints ;
     [exec] drop table CASTO_REGION 		  cascade constraints ;
     [exec] drop table CASTO_SERVICE		  cascade constraints ;
     [exec] drop table CASTO_MAGASIN_SERVICE	  cascade constraints ;
     [exec] drop table CASTO_OFFRE			  cascade constraints ;
     [exec] drop table CASTO_ACTUALITE		  cascade constraints ;
     [exec] drop table CASTO_OPERATION_SPECIALE	  cascade constraints ;
     [exec] drop table CASTO_OPERATION_MAGASIN	  cascade constraints ;
     [exec] drop table CASTO_IMAGE_AUX		  cascade constraints ;
     [exec] drop table CASTO_OUVERTURE_EXCEP	  cascade constraints ;
     [exec] drop table CASTO_OFFRE_MAGASIN		  cascade constraints ;
     [exec] drop table CASTO_MAGASINS_ACTU		  cascade constraints ;
     [exec] drop table CASTO_MAGASIN_IMAGE_AUX	  cascade constraints ;
     [exec] drop table CASTO_MAGASIN_OUVERTURE_EXCEP  cascade constraints ;
     [exec] drop table CASTO_MAGASIN_PROCHE 	  cascade constraints ;
     [exec] drop table SCD_CONTACT			  cascade constraints ;
     [exec] drop table SCD_FACTURE_AVOIR		  cascade constraints ;
     [exec] drop table SCD_FACTURE_AVOIR_LIGNE	  cascade constraints ;
     [exec] drop table SCD_RECLAMATION		  cascade constraints ;
     [exec] drop table SCD_REMBOURSEMENT		  cascade constraints ;
     [exec] drop table SCD_REMBOURSEMENT_LIGNE	  cascade constraints ;
     [exec] drop table SCD_RETOUR			  cascade constraints ;
     [exec] drop table SCD_RETOUR_LIGNE		  cascade constraints ;
     [exec] drop table SCD_VENTE_LIGNE		  cascade constraints ;
     [exec] drop table SCD_VENTE_WEB		  cascade constraints ;
     [exec] drop table VTE_ENLEVEMENT		  cascade constraints ;
     [exec] drop table VTE_VENTE			  cascade constraints ;
     [exec] drop table VTE_VENTE_LIGNE		  cascade constraints ;
     [exec] drop table TYPE_LISTE_LANGUE		  cascade constraints ;
     [exec] drop table RESERVATION_ARTICLE		  cascade constraints ;
     [exec] drop table THEME			  cascade constraints ;
     [exec] drop table SOUS_THEME			  cascade constraints ;
     [exec] drop table CASTO_CONTACT		  cascade constraints ;
     [exec] drop table QUESTION_REPONSE		  cascade constraints ;
     [exec] drop table CASTO_CONTACT_STATUS 	  cascade constraints ;
     [exec] drop table CAST_IPHONE_CATALOG		  cascade constraints ;
     [exec] drop table CAST_IPHONE_SKU_IMAGES	  cascade constraints ;
     [exec] drop table IPH_CAT_DISPLAY_IMAGE	  cascade constraints ;
     [exec] drop table IPHONE_AUG_AUX_IMAGE 	  cascade constraints ;
     [exec] drop table IPHONE_VIDEO 		  cascade constraints ;
     [exec] drop table IPHONE_SKU_AUG_IMAGES	  cascade constraints ;
     [exec] drop table CAST_STORE_GEOLOCATION	  cascade constraints ;
     [exec] drop table CASTO_ORDER_BACKUP		  cascade constraints ;
     [exec] drop table CASTO_CCE_ITEM_LISTE_BACKUP	  cascade constraints ;
     [exec] drop table CASTO_COMMERCE_ITEM_BACKUP	  cascade constraints ;
     [exec] drop table CASTO_LOG_CALL_CENTER	  cascade constraints ;
     [exec] drop table CAST_CATALOG_ADDITION_PROP	  cascade constraints ;
     [exec] drop table CAST_THEMATIQUE		  cascade constraints ;
     [exec] drop table CAST_THEMATIQUE_DOCS_TOP	  cascade constraints ;
     [exec] drop table CAST_THEMATIQUE_DOCS_BOTTOM	  cascade constraints ;
     [exec] drop table CAST_CHAPTERTHEM		  cascade constraints ;
     [exec] drop table CAST_CONTTHEM		  cascade constraints ;
     [exec] drop table CAST_CONT_THEM		  cascade constraints ;
     [exec] drop table CAST_CONT_CHAPT		  cascade constraints ;
     [exec] drop table CAST_GUIMENU 		  cascade constraints ;
     [exec] drop table CAST_MENUITEM		  cascade constraints ;
     [exec] drop table CAST_GUIMENU_ITEMS		  cascade constraints ;
     [exec] drop table CAST_THEMATIQUE_CHAPT	  cascade constraints ;
     [exec] drop table CASTO_DOC_FILTER_TAG_CATS	  cascade constraints ;
     [exec] drop table CASTO_DOC_FILTER_TAGS	  cascade constraints ;
     [exec] drop table CAST_TAG_DOCS		  cascade constraints ;
     [exec] drop table CASTO_DOC_TYPES		  cascade constraints ;
     [exec] drop table CASTO_DOC_SUBCATS		  cascade constraints ;
     [exec] drop table CASTO_FAST_LAB_CONFIGS	  cascade constraints ;
     [exec] drop table DAS_ID_GENERATOR		  cascade constraints ;
     [exec] drop table DAS_SECURE_ID_GEN		  cascade constraints ;
     [exec] drop table DAS_CLUSTER_NAME		  cascade constraints ;
     [exec] drop table DMS_LIMBO			  cascade constraints ;
     [exec] drop table DMS_LIMBO_MSG		  cascade constraints ;
     [exec] drop table DMS_LIMBO_REPLYTO		  cascade constraints ;
     [exec] drop table DMS_LIMBO_BODY		  cascade constraints ;
     [exec] drop table DMS_LIMBO_PROPS		  cascade constraints ;
     [exec] drop table DMS_LIMBO_PTYPES		  cascade constraints ;
     [exec] drop table DMS_LIMBO_DELAY		  cascade constraints ;
     [exec] drop table DMS_CLIENT			  cascade constraints ;
     [exec] drop table DMS_QUEUE			  cascade constraints ;
     [exec] drop table DMS_QUEUE_RECV		  cascade constraints ;
     [exec] drop table DMS_QUEUE_ENTRY		  cascade constraints ;
     [exec] drop table DMS_TOPIC			  cascade constraints ;
     [exec] drop table DMS_TOPIC_SUB		  cascade constraints ;
     [exec] drop table DMS_TOPIC_ENTRY		  cascade constraints ;
     [exec] drop table DMS_MSG			  cascade constraints ;
     [exec] drop table DMS_MSG_PROPERTIES		  cascade constraints ;
     [exec] drop table DAS_ACCOUNT			  cascade constraints ;
     [exec] drop table DAS_GROUP_ASSOC		  cascade constraints ;
     [exec] drop table DAS_ACCT_PREVPWD		  cascade constraints ;
     [exec] drop table DAS_GSA_SUBSCRIBER		  cascade constraints ;
     [exec] drop table DAS_SDS			  cascade constraints ;
     [exec] drop table IF_INTEG_DATA		  cascade constraints ;
     [exec] drop table DAS_NUCL_SEC 		  cascade constraints ;
     [exec] drop table DAS_NS_ACLS			  cascade constraints ;
     [exec] drop table MEDIA_FOLDER 		  cascade constraints ;
     [exec] drop table MEDIA_BASE			  cascade constraints ;
     [exec] drop table MEDIA_EXT			  cascade constraints ;
     [exec] drop table MEDIA_BIN			  cascade constraints ;
     [exec] drop table MEDIA_TXT			  cascade constraints ;
     [exec] drop table DAS_DEPLOYMENT		  cascade constraints ;
     [exec] drop table DAS_DEPL_PROGRESS		  cascade constraints ;
     [exec] drop table DAS_THREAD_BATCH		  cascade constraints ;
     [exec] drop table DAS_DEPLOY_DATA		  cascade constraints ;
     [exec] drop table DAS_DEPLOY_MARK		  cascade constraints ;
     [exec] drop table DAS_REP_MARK 		  cascade constraints ;
     [exec] drop table DAS_FILE_MARK		  cascade constraints ;
     [exec] drop table DAS_DEPL_DEPLDAT		  cascade constraints ;
     [exec] drop table DAS_DEPL_OPTIONS		  cascade constraints ;
     [exec] drop table DAS_DEPL_REPMAPS		  cascade constraints ;
     [exec] drop table DAS_DEPL_ITEM_REF		  cascade constraints ;
     [exec] drop table DAS_DD_MARKERS		  cascade constraints ;
     [exec] drop table DAS_DEP_FAIL_INFO		  cascade constraints ;
     [exec] drop table DAS_SITEINDEX		  cascade constraints ;
     [exec] drop table DAS_SITEMAP			  cascade constraints ;
     [exec] drop table DAS_SEO_TAG			  cascade constraints ;
     [exec] drop table DPS_ORGANIZATION		  cascade constraints ;
     [exec] drop table DPS_USER			  cascade constraints ;
     [exec] drop table DPS_CONTACT_INFO		  cascade constraints ;
     [exec] drop table DPS_USER_ADDRESS		  cascade constraints ;
     [exec] drop table DPS_OTHER_ADDR		  cascade constraints ;
     [exec] drop table DPS_MAILING			  cascade constraints ;
     [exec] drop table DPS_MAIL_TRACKDATA		  cascade constraints ;
     [exec] drop table DPS_MAIL_BATCH		  cascade constraints ;
     [exec] drop table DPS_MAIL_SERVER		  cascade constraints ;
     [exec] drop table DPS_USER_MAILING		  cascade constraints ;
     [exec] drop table DPS_EMAIL_ADDRESS		  cascade constraints ;
     [exec] drop table DPS_ROLE			  cascade constraints ;
     [exec] drop table DPS_USER_ROLES		  cascade constraints ;
     [exec] drop table DPS_ORG_ROLE 		  cascade constraints ;
     [exec] drop table DPS_ROLE_REL_ORG		  cascade constraints ;
     [exec] drop table DPS_RELATIVEROLE		  cascade constraints ;
     [exec] drop table DPS_USER_ORG 		  cascade constraints ;
     [exec] drop table DPS_USER_ORG_ANC		  cascade constraints ;
     [exec] drop table DPS_ORG_CHLDORG		  cascade constraints ;
     [exec] drop table DPS_ORG_ANCESTORS		  cascade constraints ;
     [exec] drop table DPS_FOLDER			  cascade constraints ;
     [exec] drop table DPS_CHILD_FOLDER		  cascade constraints ;
     [exec] drop table DPS_ROLEFOLD_CHLD		  cascade constraints ;
     [exec] drop table DPS_USER_PREVPWD		  cascade constraints ;
     [exec] drop table DPS_EVENT_TYPE		  cascade constraints ;
     [exec] drop table DPS_USER_EVENT		  cascade constraints ;
     [exec] drop table DPS_USER_EVENT_SUM		  cascade constraints ;
     [exec] drop table DPS_REQUEST			  cascade constraints ;
     [exec] drop table DPS_REQNAME_SUM		  cascade constraints ;
     [exec] drop table DPS_SESSION_SUM		  cascade constraints ;
     [exec] drop table DPS_CON_REQ			  cascade constraints ;
     [exec] drop table DPS_CON_REQ_SUM		  cascade constraints ;
     [exec] drop table DPS_PGRP_REQ_SUM		  cascade constraints ;
     [exec] drop table DPS_PGRP_CON_SUM		  cascade constraints ;
     [exec] drop table DPS_LOG_ID			  cascade constraints ;
     [exec] drop table DPS_SEG_LIST 		  cascade constraints ;
     [exec] drop table DPS_SEG_LIST_NAME		  cascade constraints ;
     [exec] drop table DPS_SEG_LIST_FOLDER		  cascade constraints ;
     [exec] drop table DPI_ORGANIZATION		  cascade constraints ;
     [exec] drop table DPI_USER			  cascade constraints ;
     [exec] drop table DPI_CONTACT_INFO		  cascade constraints ;
     [exec] drop table DPI_USER_ADDRESS		  cascade constraints ;
     [exec] drop table DPI_OTHER_ADDR		  cascade constraints ;
     [exec] drop table DPI_MAILING			  cascade constraints ;
     [exec] drop table DPI_MAIL_TRACKDATA		  cascade constraints ;
     [exec] drop table DPI_MAIL_BATCH		  cascade constraints ;
     [exec] drop table DPI_MAIL_SERVER		  cascade constraints ;
     [exec] drop table DPI_USER_MAILING		  cascade constraints ;
     [exec] drop table DPI_EMAIL_ADDRESS		  cascade constraints ;
     [exec] drop table DPI_ROLE			  cascade constraints ;
     [exec] drop table DPI_TEMPLATE_ROLE		  cascade constraints ;
     [exec] drop table DPI_ACCESS_RIGHT		  cascade constraints ;
     [exec] drop table DPI_ROLE_RIGHT		  cascade constraints ;
     [exec] drop table DPI_USER_ROLES		  cascade constraints ;
     [exec] drop table DPI_ORG_ROLE 		  cascade constraints ;
     [exec] drop table DPI_ROLE_REL_ORG		  cascade constraints ;
     [exec] drop table DPI_RELATIVEROLE		  cascade constraints ;
     [exec] drop table DPI_USER_ORG 		  cascade constraints ;
     [exec] drop table DPI_USER_SEC_ORGS		  cascade constraints ;
     [exec] drop table DPI_USER_ORG_ANC		  cascade constraints ;
     [exec] drop table DPI_ORG_CHLDORG		  cascade constraints ;
     [exec] drop table DPI_ORG_ANCESTORS		  cascade constraints ;
     [exec] drop table DPI_FOLDER			  cascade constraints ;
     [exec] drop table DPI_CHILD_FOLDER		  cascade constraints ;
     [exec] drop table DPI_ROLEFOLD_CHLD		  cascade constraints ;
     [exec] drop table DPI_USER_PREVPWD		  cascade constraints ;
     [exec] drop table DSS_DAS_EVENT		  cascade constraints ;
     [exec] drop table DSS_DAS_FORM 		  cascade constraints ;
     [exec] drop table DSS_DPS_EVENT		  cascade constraints ;
     [exec] drop table DSS_DPS_PAGE_VISIT		  cascade constraints ;
     [exec] drop table DSS_DPS_VIEW_ITEM		  cascade constraints ;
     [exec] drop table DSS_DPS_CLICK		  cascade constraints ;
     [exec] drop table DSS_DPS_REFERRER		  cascade constraints ;
     [exec] drop table DSS_DPS_INBOUND		  cascade constraints ;
     [exec] drop table DSS_DPS_ADMIN_REG		  cascade constraints ;
     [exec] drop table DSS_DPS_PROPERTY		  cascade constraints ;
     [exec] drop table DSS_DPS_ADMIN_PROP		  cascade constraints ;
     [exec] drop table DSS_DPS_UPDATE		  cascade constraints ;
     [exec] drop table DSS_DPS_ADMIN_UP		  cascade constraints ;
     [exec] drop table DPS_SCENARIO_VALUE		  cascade constraints ;
     [exec] drop table DSS_AUDIT_TRAIL		  cascade constraints ;
     [exec] drop table DSS_COLL_SCENARIO		  cascade constraints ;
     [exec] drop table DSS_IND_SCENARIO		  cascade constraints ;
     [exec] drop table DSS_SCENARIO_STRS		  cascade constraints ;
     [exec] drop table DSS_SCENARIO_BOOLS		  cascade constraints ;
     [exec] drop table DSS_SCENARIO_LONGS		  cascade constraints ;
     [exec] drop table DSS_SCENARIO_DBLS		  cascade constraints ;
     [exec] drop table DSS_SCENARIO_DATES		  cascade constraints ;
     [exec] drop table DPS_USER_SCENARIO		  cascade constraints ;
     [exec] drop table DSS_SCENARIO_INFO		  cascade constraints ;
     [exec] drop table DSS_SCEN_MIG_INFO		  cascade constraints ;
     [exec] drop table DSS_MIG_INFO_SEG		  cascade constraints ;
     [exec] drop table DSS_TEMPLATE_INFO		  cascade constraints ;
     [exec] drop table DSS_COLL_TRANS		  cascade constraints ;
     [exec] drop table DSS_IND_TRANS		  cascade constraints ;
     [exec] drop table DSS_DELETION 		  cascade constraints ;
     [exec] drop table DSS_SERVER_ID		  cascade constraints ;
     [exec] drop table DSS_DEL_SEG_NAME		  cascade constraints ;
     [exec] drop table DSS_MIGRATION		  cascade constraints ;
     [exec] drop table DSS_MIG_SEG_NAME		  cascade constraints ;
     [exec] drop table DSS_XREF			  cascade constraints ;
     [exec] drop table DSS_PROFILE_SLOT		  cascade constraints ;
     [exec] drop table DPS_USER_SLOT		  cascade constraints ;
     [exec] drop table DSS_SLOT_ITEMS		  cascade constraints ;
     [exec] drop table DSS_SLOT_PRIORITY		  cascade constraints ;
     [exec] drop table DPS_MARKERS			  cascade constraints ;
     [exec] drop table DPS_USR_MARKERS		  cascade constraints ;
     [exec] drop table DRPT_STAGE_REACHED		  cascade constraints ;
     [exec] drop table DSS_USER_BPMARKERS		  cascade constraints ;
     [exec] drop table DSI_COLL_SCENARIO		  cascade constraints ;
     [exec] drop table DSI_IND_SCENARIO		  cascade constraints ;
     [exec] drop table DSI_SCENARIO_STRS		  cascade constraints ;
     [exec] drop table DSI_SCENARIO_BOOLS		  cascade constraints ;
     [exec] drop table DSI_SCENARIO_LONGS		  cascade constraints ;
     [exec] drop table DSI_SCENARIO_DBLS		  cascade constraints ;
     [exec] drop table DSI_SCENARIO_DATES		  cascade constraints ;
     [exec] drop table DPI_USER_SCENARIO		  cascade constraints ;
     [exec] drop table DSI_SCENARIO_INFO		  cascade constraints ;
     [exec] drop table DSI_SCEN_MIG_INFO		  cascade constraints ;
     [exec] drop table DSI_MIG_INFO_SEG		  cascade constraints ;
     [exec] drop table DSI_TEMPLATE_INFO		  cascade constraints ;
     [exec] drop table DSI_COLL_TRANS		  cascade constraints ;
     [exec] drop table DSI_IND_TRANS		  cascade constraints ;
     [exec] drop table DSI_DELETION 		  cascade constraints ;
     [exec] drop table DSI_SERVER_ID		  cascade constraints ;
     [exec] drop table DSI_DEL_SEG_NAME		  cascade constraints ;
     [exec] drop table DSI_MIGRATION		  cascade constraints ;
     [exec] drop table DSI_MIG_SEG_NAME		  cascade constraints ;
     [exec] drop table DSI_XREF			  cascade constraints ;
     [exec] drop table DSI_PROFILE_SLOT		  cascade constraints ;
     [exec] drop table DPI_USER_SLOT		  cascade constraints ;
     [exec] drop table DSI_SLOT_ITEMS		  cascade constraints ;
     [exec] drop table DSI_SLOT_PRIORITY		  cascade constraints ;
     [exec] drop table DPI_SCENARIO_VALUE		  cascade constraints ;
     [exec] drop table ALT_USER			  cascade constraints ;
     [exec] drop table ALT_GROUP			  cascade constraints ;
     [exec] drop table ALT_USER_ALERT_REL		  cascade constraints ;
     [exec] drop table ALT_USER_PREF		  cascade constraints ;
     [exec] drop table ALT_USERPREF_REL		  cascade constraints ;
     [exec] drop table ALT_GEAR			  cascade constraints ;
     [exec] drop table ALT_GEAR_REL 		  cascade constraints ;
     [exec] drop table ALT_GEAR_DEF 		  cascade constraints ;
     [exec] drop table ALT_GEAR_DEF_REL		  cascade constraints ;
     [exec] drop table ALT_CHANNEL			  cascade constraints ;
     [exec] drop table ALT_CHAN_USR_REL		  cascade constraints ;
     [exec] drop table MEM_MEMBERSHIP_REQ		  cascade constraints ;
     [exec] drop table PAF_PAGE_VISIT		  cascade constraints ;
     [exec] drop table COMM_GEAR_ADD		  cascade constraints ;
     [exec] drop table COMM_GEAR_REM		  cascade constraints ;
     [exec] drop table PAGE_GEAR_ADD		  cascade constraints ;
     [exec] drop table PAGE_GEAR_REM		  cascade constraints ;
     [exec] drop table PAF_FOLDER			  cascade constraints ;
     [exec] drop table PAF_FOLDER_ACL		  cascade constraints ;
     [exec] drop table PAF_CHILD_FOLDER		  cascade constraints ;
     [exec] drop table PAF_FLDR_LN_NAMES		  cascade constraints ;
     [exec] drop table PAF_FLDR_LN_DESCS		  cascade constraints ;
     [exec] drop table PAF_GEAR_PARAM		  cascade constraints ;
     [exec] drop table PAF_GEAR_PRMVALS		  cascade constraints ;
     [exec] drop table PAF_DEVICE_OUTPUTS		  cascade constraints ;
     [exec] drop table PAF_DEVICE_OUTPUT		  cascade constraints ;
     [exec] drop table PAF_DISPLAY_MODES		  cascade constraints ;
     [exec] drop table PAF_TITLE_TEMPLATE		  cascade constraints ;
     [exec] drop table PAF_GEAR_MODES		  cascade constraints ;
     [exec] drop table PAF_GEAR_DEF 		  cascade constraints ;
     [exec] drop table PAF_GD_CPROPS		  cascade constraints ;
     [exec] drop table PAF_GD_IPARAMS		  cascade constraints ;
     [exec] drop table PAF_GD_UPARAMS		  cascade constraints ;
     [exec] drop table PAF_GD_L10N_NAMES		  cascade constraints ;
     [exec] drop table PAF_GD_L10N_DESCS		  cascade constraints ;
     [exec] drop table PAF_GEAR			  cascade constraints ;
     [exec] drop table PAF_GEAR_ACL 		  cascade constraints ;
     [exec] drop table PAF_GEAR_IPARAMS		  cascade constraints ;
     [exec] drop table PAF_GEAR_LN_NAMES		  cascade constraints ;
     [exec] drop table PAF_GEAR_LN_DESCS		  cascade constraints ;
     [exec] drop table PAF_REGION_DEF		  cascade constraints ;
     [exec] drop table PAF_REGION			  cascade constraints ;
     [exec] drop table PAF_REGION_GEARS		  cascade constraints ;
     [exec] drop table PAF_STYLE			  cascade constraints ;
     [exec] drop table PAF_STYL_LN_NAMES		  cascade constraints ;
     [exec] drop table PAF_STYL_LN_DESCS		  cascade constraints ;
     [exec] drop table PAF_COL_PALETTE		  cascade constraints ;
     [exec] drop table PAF_CPAL_LN_NAMES		  cascade constraints ;
     [exec] drop table PAF_CPAL_LN_DESCS		  cascade constraints ;
     [exec] drop table PAF_LAYOUT			  cascade constraints ;
     [exec] drop table PAF_LAYOUT_REGDEFS		  cascade constraints ;
     [exec] drop table PAF_PAGE_TEMPLATE		  cascade constraints ;
     [exec] drop table PAF_PTPL_LN_NAMES		  cascade constraints ;
     [exec] drop table PAF_PTPL_LN_DESCS		  cascade constraints ;
     [exec] drop table PAF_TEMPLATE 		  cascade constraints ;
     [exec] drop table PAF_COMMUNITY		  cascade constraints ;
     [exec] drop table PAF_COMM_GEARS		  cascade constraints ;
     [exec] drop table PAF_COMM_GFLDRS		  cascade constraints ;
     [exec] drop table PAF_COMM_ROLES		  cascade constraints ;
     [exec] drop table PAF_BASE_COMM_ROLE		  cascade constraints ;
     [exec] drop table PAF_GEAR_ROLES		  cascade constraints ;
     [exec] drop table PAF_BASE_GEAR_ROLE		  cascade constraints ;
     [exec] drop table PAF_COMMUNITY_ACL		  cascade constraints ;
     [exec] drop table PAF_COMM_LNAMES		  cascade constraints ;
     [exec] drop table PAF_COMM_LDESCS		  cascade constraints ;
     [exec] drop table PAF_PAGE			  cascade constraints ;
     [exec] drop table PAF_PAGE_LN_NAMES		  cascade constraints ;
     [exec] drop table PAF_PAGE_LN_DESCS		  cascade constraints ;
     [exec] drop table PAF_PAGE_ACL 		  cascade constraints ;
     [exec] drop table PAF_PAGE_REGIONS		  cascade constraints ;
     [exec] drop table PAF_CF_CHILD_ITEM		  cascade constraints ;
     [exec] drop table PAF_CF_GFLDRS		  cascade constraints ;
     [exec] drop table PAF_PF_CHILD_ITEM		  cascade constraints ;
     [exec] drop table PAF_GDF_CHILD_ITEM		  cascade constraints ;
     [exec] drop table PAF_COMM_TEMPLATE		  cascade constraints ;
     [exec] drop table PAF_CT_FOLDER		  cascade constraints ;
     [exec] drop table PAF_CT_CHILD_FLDR		  cascade constraints ;
     [exec] drop table PAF_CT_PAGEFOLDER		  cascade constraints ;
     [exec] drop table PAF_CT_PAGE			  cascade constraints ;
     [exec] drop table PAF_CT_REGION		  cascade constraints ;
     [exec] drop table PAF_CT_PG_REGIONS		  cascade constraints ;
     [exec] drop table PAF_CT_REGION_GRS		  cascade constraints ;
     [exec] drop table PAF_CT_GEAR			  cascade constraints ;
     [exec] drop table PAF_CT_GR_IPARAMS		  cascade constraints ;
     [exec] drop table PAF_CT_GR_LN_NAMES		  cascade constraints ;
     [exec] drop table PAF_CT_GR_LN_DESCS		  cascade constraints ;
     [exec] drop table PAF_CT_GR_FLDRS		  cascade constraints ;
     [exec] drop table PAF_CT_GEARS 		  cascade constraints ;
     [exec] drop table PAF_CT_ALT_GEAR		  cascade constraints ;
     [exec] drop table PAF_CT_ALT_GR_REL		  cascade constraints ;
     [exec] drop table PAF_CT_ROLES 		  cascade constraints ;
     [exec] drop table PAF_CT_GR_ACL		  cascade constraints ;
     [exec] drop table PAF_CT_GR_ROLES		  cascade constraints ;
     [exec] drop table EPUB_HISTORY 		  cascade constraints ;
     [exec] drop table EPUB_HIS_ACT_PARM		  cascade constraints ;
     [exec] drop table EPUB_TASKINFO		  cascade constraints ;
     [exec] drop table EPUB_AGENT_TRNPRT		  cascade constraints ;
     [exec] drop table EPUB_AGENT			  cascade constraints ;
     [exec] drop table EPUB_TARGET			  cascade constraints ;
     [exec] drop table EPUB_TR_DEST 		  cascade constraints ;
     [exec] drop table EPUB_TOPOLOGY		  cascade constraints ;
     [exec] drop table EPUB_TL_TARGETS		  cascade constraints ;
     [exec] drop table EPUB_TR_AGENTS		  cascade constraints ;
     [exec] drop table EPUB_PRINC_ASSET		  cascade constraints ;
     [exec] drop table EPUB_INCLUD_ASSET		  cascade constraints ;
     [exec] drop table EPUB_EXCLUD_ASSET		  cascade constraints ;
     [exec] drop table EPUB_DEST_MAP		  cascade constraints ;
     [exec] drop table EPUB_PROJECT 		  cascade constraints ;
     [exec] drop table EPUB_PRJ_TARGT_WS		  cascade constraints ;
     [exec] drop table EPUB_PR_TG_STATUS		  cascade constraints ;
     [exec] drop table EPUB_PRJ_TG_SNSHT		  cascade constraints ;
     [exec] drop table EPUB_PR_TG_DP_TS		  cascade constraints ;
     [exec] drop table EPUB_PR_TG_DP_ID		  cascade constraints ;
     [exec] drop table EPUB_PR_TG_AP_TS		  cascade constraints ;
     [exec] drop table EPUB_PR_HISTORY		  cascade constraints ;
     [exec] drop table EPUB_PROCESS 		  cascade constraints ;
     [exec] drop table EPUB_PROC_PRV_PRJ		  cascade constraints ;
     [exec] drop table EPUB_PROC_HISTORY		  cascade constraints ;
     [exec] drop table EPUB_PROC_TASKINFO		  cascade constraints ;
     [exec] drop table EPUB_DEPLOYMENT		  cascade constraints ;
     [exec] drop table EPUB_DEPLOY_PROJ		  cascade constraints ;
     [exec] drop table EPUB_DEP_ERR_PARM		  cascade constraints ;
     [exec] drop table EPUB_DEP_LOG 		  cascade constraints ;
     [exec] drop table EPUB_PROCESS_DATA		  cascade constraints ;
     [exec] drop table AVM_DEVLINE			  cascade constraints ;
     [exec] drop table AVM_WORKSPACE		  cascade constraints ;
     [exec] drop table AVM_ASSET_LOCK		  cascade constraints ;
     [exec] drop table EPUB_FILE_FOLDER		  cascade constraints ;
     [exec] drop table EPUB_FILE_ASSET		  cascade constraints ;
     [exec] drop table EPUB_TEXT_FILE		  cascade constraints ;
     [exec] drop table EPUB_BINARY_FILE		  cascade constraints ;
     [exec] drop table EPUB_COLL_WORKFLOW		  cascade constraints ;
     [exec] drop table EPUB_IND_WORKFLOW		  cascade constraints ;
     [exec] drop table EPUB_WORKFLOW_STRS		  cascade constraints ;
     [exec] drop table EPUB_WORKFLOW_BLS		  cascade constraints ;
     [exec] drop table EPUB_WORKFLOW_LNGS		  cascade constraints ;
     [exec] drop table EPUB_WORKFLOW_DBLS		  cascade constraints ;
     [exec] drop table EPUB_WORKFLOW_DATS		  cascade constraints ;
     [exec] drop table EPUB_WORKFLOW_RIS		  cascade constraints ;
     [exec] drop table EPUB_WORKFLOW_VFS		  cascade constraints ;
     [exec] drop table EPUB_WORKFLOW_INFO		  cascade constraints ;
     [exec] drop table EPUB_WF_MIG_INFO		  cascade constraints ;
     [exec] drop table EPUB_WF_MG_INF_SEG		  cascade constraints ;
     [exec] drop table EPUB_WF_TEMPL_INFO		  cascade constraints ;
     [exec] drop table EPUB_WF_COLL_TRANS		  cascade constraints ;
     [exec] drop table EPUB_WF_IND_TRANS		  cascade constraints ;
     [exec] drop table EPUB_WF_DELETION		  cascade constraints ;
     [exec] drop table EPUB_WF_DEL_SEGS		  cascade constraints ;
     [exec] drop table EPUB_WF_MIGRATION		  cascade constraints ;
     [exec] drop table EPUB_WF_MIG_SEGS		  cascade constraints ;
     [exec] drop table EPUB_WF_SERVER_ID		  cascade constraints ;
     [exec] drop table EPUB_INT_USER		  cascade constraints ;
     [exec] drop table EPUB_INT_PRJ_HIST		  cascade constraints ;
     [exec] drop table VMAP_IM			  cascade constraints ;
     [exec] drop table VMAP_FH			  cascade constraints ;
     [exec] drop table VMAP_MODE			  cascade constraints ;
     [exec] drop table VMAP_IVM			  cascade constraints ;
     [exec] drop table VMAP_IM2IVM_REL		  cascade constraints ;
     [exec] drop table VMAP_IV			  cascade constraints ;
     [exec] drop table VMAP_PV			  cascade constraints ;
     [exec] drop table VMAP_IVM2PVM_REL		  cascade constraints ;
     [exec] drop table VMAP_PVM			  cascade constraints ;
     [exec] drop table VMAP_ATTRVAL 		  cascade constraints ;
     [exec] drop table VMAP_ATTRVAL_REL		  cascade constraints ;
     [exec] drop table VMAP_CATTRVAL_REL		  cascade constraints ;
     [exec] drop table VMAP_IV2IVAD_REL		  cascade constraints ;
     [exec] drop table VMAP_IVATTRDEF		  cascade constraints ;
     [exec] drop table VMAP_PV2PVAD_REL		  cascade constraints ;
     [exec] drop table VMAP_PVATTRDEF		  cascade constraints ;
     [exec] drop table DPS_CREDIT_CARD		  cascade constraints ;
     [exec] drop table DCS_USER			  cascade constraints ;
     [exec] drop table DPS_USR_CREDITCARD		  cascade constraints ;
     [exec] drop table DCS_FOLDER			  cascade constraints ;
     [exec] drop table DCS_MEDIA			  cascade constraints ;
     [exec] drop table DCS_MEDIA_EXT		  cascade constraints ;
     [exec] drop table DCS_MEDIA_BIN		  cascade constraints ;
     [exec] drop table DCS_MEDIA_TXT		  cascade constraints ;
     [exec] drop table DCS_CATEGORY 		  cascade constraints ;
     [exec] drop table DCS_CATEGORY_ACL		  cascade constraints ;
     [exec] drop table DCS_PRODUCT			  cascade constraints ;
     [exec] drop table DCS_PRODUCT_ACL		  cascade constraints ;
     [exec] drop table DCS_SKU			  cascade constraints ;
     [exec] drop table DCS_CAT_GROUPS		  cascade constraints ;
     [exec] drop table DCS_CAT_CHLDPRD		  cascade constraints ;
     [exec] drop table DCS_CAT_CHLDCAT		  cascade constraints ;
     [exec] drop table DCS_CAT_ANCESTORS		  cascade constraints ;
     [exec] drop table DCS_CAT_RLTDCAT		  cascade constraints ;
     [exec] drop table DCS_CAT_KEYWRDS		  cascade constraints ;
     [exec] drop table DCS_CAT_MEDIA		  cascade constraints ;
     [exec] drop table DCS_CAT_AUX_MEDIA		  cascade constraints ;
     [exec] drop table DCS_PRD_KEYWRDS		  cascade constraints ;
     [exec] drop table DCS_PRD_MEDIA		  cascade constraints ;
     [exec] drop table DCS_PRD_AUX_MEDIA		  cascade constraints ;
     [exec] drop table DCS_PRD_CHLDSKU		  cascade constraints ;
     [exec] drop table DCS_PRD_SKUATTR		  cascade constraints ;
     [exec] drop table DCS_PRD_GROUPS		  cascade constraints ;
     [exec] drop table DCS_PRD_RLTDPRD		  cascade constraints ;
     [exec] drop table DCS_PRD_UPSLPRD		  cascade constraints ;
     [exec] drop table DCS_PRD_ANCESTORS		  cascade constraints ;
     [exec] drop table DCS_SKU_ATTR 		  cascade constraints ;
     [exec] drop table DCS_SKU_LINK 		  cascade constraints ;
     [exec] drop table DCS_SKU_BNDLLNK		  cascade constraints ;
     [exec] drop table DCS_SKU_MEDIA		  cascade constraints ;
     [exec] drop table DCS_SKU_AUX_MEDIA		  cascade constraints ;
     [exec] drop table DCS_SKU_REPLACE		  cascade constraints ;
     [exec] drop table DCS_SKU_CONF 		  cascade constraints ;
     [exec] drop table DCS_CONFIG_PROP		  cascade constraints ;
     [exec] drop table DCS_CONF_OPTIONS		  cascade constraints ;
     [exec] drop table DCS_CONFIG_OPT		  cascade constraints ;
     [exec] drop table DCS_FOREIGN_CAT		  cascade constraints ;
     [exec] drop table DCS_INVENTORY		  cascade constraints ;
     [exec] drop table DCS_PROMOTION		  cascade constraints ;
     [exec] drop table DCS_PROMO_MEDIA		  cascade constraints ;
     [exec] drop table DCS_DISCOUNT_PROMO		  cascade constraints ;
     [exec] drop table DCS_PROMO_UPSELL		  cascade constraints ;
     [exec] drop table DCS_UPSELL_ACTION		  cascade constraints ;
     [exec] drop table DCS_CLOSE_QUALIF		  cascade constraints ;
     [exec] drop table DCS_PRM_CLS_QLF		  cascade constraints ;
     [exec] drop table DCS_UPSELL_PRODS		  cascade constraints ;
     [exec] drop table DCS_USR_PROMOSTAT		  cascade constraints ;
     [exec] drop table DCS_USR_ACTVPROMO		  cascade constraints ;
     [exec] drop table DCS_USR_USEDPROMO		  cascade constraints ;
     [exec] drop table DCS_GIFTLIST 		  cascade constraints ;
     [exec] drop table DCS_GIFTINST 		  cascade constraints ;
     [exec] drop table DCS_GIFTITEM 		  cascade constraints ;
     [exec] drop table DCS_GIFTLIST_ITEM		  cascade constraints ;
     [exec] drop table DCS_USER_WISHLIST		  cascade constraints ;
     [exec] drop table DCS_USER_GIFTLIST		  cascade constraints ;
     [exec] drop table DCS_USER_OTHERLIST		  cascade constraints ;
     [exec] drop table DCSPP_ORDER			  cascade constraints ;
     [exec] drop table DCSPP_SHIP_GROUP		  cascade constraints ;
     [exec] drop table DCSPP_PAY_GROUP		  cascade constraints ;
     [exec] drop table DCSPP_ITEM			  cascade constraints ;
     [exec] drop table DCSPP_RELATIONSHIP		  cascade constraints ;
     [exec] drop table DCSPP_REL_ORDERS		  cascade constraints ;
     [exec] drop table DCSPP_ORDER_INST		  cascade constraints ;
     [exec] drop table DCSPP_ORDER_SG		  cascade constraints ;
     [exec] drop table DCSPP_ORDER_PG		  cascade constraints ;
     [exec] drop table DCSPP_ORDER_ITEM		  cascade constraints ;
     [exec] drop table DCSPP_ORDER_REL		  cascade constraints ;
     [exec] drop table DCSPP_SHIP_INST		  cascade constraints ;
     [exec] drop table DCSPP_HRD_SHIP_GRP		  cascade constraints ;
     [exec] drop table DCSPP_ELE_SHIP_GRP		  cascade constraints ;
     [exec] drop table DCSPP_SHIP_ADDR		  cascade constraints ;
     [exec] drop table DCSPP_HAND_INST		  cascade constraints ;
     [exec] drop table DCSPP_GIFT_INST		  cascade constraints ;
     [exec] drop table DCSPP_SG_HAND_INST		  cascade constraints ;
     [exec] drop table DCSPP_PAY_INST		  cascade constraints ;
     [exec] drop table DCSPP_CONFIG_ITEM		  cascade constraints ;
     [exec] drop table DCSPP_SUBSKU_ITEM		  cascade constraints ;
     [exec] drop table DCSPP_ITEM_CI		  cascade constraints ;
     [exec] drop table DCSPP_GIFT_CERT		  cascade constraints ;
     [exec] drop table DCSPP_STORE_CRED		  cascade constraints ;
     [exec] drop table DCSPP_CREDIT_CARD		  cascade constraints ;
     [exec] drop table DCSPP_BILL_ADDR		  cascade constraints ;
     [exec] drop table DCSPP_PAY_STATUS		  cascade constraints ;
     [exec] drop table DCSPP_CC_STATUS		  cascade constraints ;
     [exec] drop table DCSPP_GC_STATUS		  cascade constraints ;
     [exec] drop table DCSPP_SC_STATUS		  cascade constraints ;
     [exec] drop table DCSPP_AUTH_STATUS		  cascade constraints ;
     [exec] drop table DCSPP_DEBIT_STATUS		  cascade constraints ;
     [exec] drop table DCSPP_CRED_STATUS		  cascade constraints ;
     [exec] drop table DCSPP_SHIPITEM_REL		  cascade constraints ;
     [exec] drop table DCSPP_REL_RANGE		  cascade constraints ;
     [exec] drop table DCSPP_PAYITEM_REL		  cascade constraints ;
     [exec] drop table DCSPP_PAYSHIP_REL		  cascade constraints ;
     [exec] drop table DCSPP_PAYORDER_REL		  cascade constraints ;
     [exec] drop table DCSPP_AMOUNT_INFO		  cascade constraints ;
     [exec] drop table DCSPP_ORDER_PRICE		  cascade constraints ;
     [exec] drop table DCSPP_ITEM_PRICE		  cascade constraints ;
     [exec] drop table DCSPP_TAX_PRICE		  cascade constraints ;
     [exec] drop table DCSPP_SHIP_PRICE		  cascade constraints ;
     [exec] drop table DCSPP_AMTINFO_ADJ		  cascade constraints ;
     [exec] drop table DCSPP_PRICE_ADJUST		  cascade constraints ;
     [exec] drop table DCSPP_SHIPITEM_SUB		  cascade constraints ;
     [exec] drop table DCSPP_TAXSHIPITEM		  cascade constraints ;
     [exec] drop table DCSPP_NTAXSHIPITEM		  cascade constraints ;
     [exec] drop table DCSPP_SHIPITEM_TAX		  cascade constraints ;
     [exec] drop table DCSPP_ITMPRICE_DET		  cascade constraints ;
     [exec] drop table DCSPP_DET_PRICE		  cascade constraints ;
     [exec] drop table DCSPP_DET_RANGE		  cascade constraints ;
     [exec] drop table DCSPP_ORDER_ADJ		  cascade constraints ;
     [exec] drop table DCSPP_MANUAL_ADJ		  cascade constraints ;
     [exec] drop table DBCPP_SCHED_ORDER		  cascade constraints ;
     [exec] drop table DBCPP_SCHED_CLONE		  cascade constraints ;
     [exec] drop table DCSPP_SCHERR_AUX		  cascade constraints ;
     [exec] drop table DCSPP_SCHED_ERROR		  cascade constraints ;
     [exec] drop table DCSPP_SCHD_ERRMSG		  cascade constraints ;
     [exec] drop table DCS_CART_EVENT		  cascade constraints ;
     [exec] drop table DCS_SUBMT_ORD_EVT		  cascade constraints ;
     [exec] drop table DCS_PROM_USED_EVT		  cascade constraints ;
     [exec] drop table DCS_ORD_MERGE_EVT		  cascade constraints ;
     [exec] drop table DCS_PROMO_RVKD		  cascade constraints ;
     [exec] drop table DCS_PROMO_GRNTD		  cascade constraints ;
     [exec] drop table DCSPP_CLAIMABLE		  cascade constraints ;
     [exec] drop table DCSPP_GIFTCERT		  cascade constraints ;
     [exec] drop table DCS_STORECRED_CLM		  cascade constraints ;
     [exec] drop table DCSPP_COUPON 		  cascade constraints ;
     [exec] drop table DCS_PRICE_LIST		  cascade constraints ;
     [exec] drop table DCS_COMPLEX_PRICE		  cascade constraints ;
     [exec] drop table DCS_PRICE			  cascade constraints ;
     [exec] drop table DCS_PRICE_LEVELS		  cascade constraints ;
     [exec] drop table DCS_PRICE_LEVEL		  cascade constraints ;
     [exec] drop table DCS_GEN_FOL_PL		  cascade constraints ;
     [exec] drop table DCS_CHILD_FOL_PL		  cascade constraints ;
     [exec] drop table DCS_PLFOL_CHLD		  cascade constraints ;
     [exec] drop table DCS_ORDER_MARKERS		  cascade constraints ;
     [exec] drop table DCSPP_COMMERCE_ITEM_MARKERS	  cascade constraints ;
     [exec] drop table DCSPP_ORD_ABANDON		  cascade constraints ;
     [exec] drop table DCS_USER_ABANDONED		  cascade constraints ;
     [exec] drop table DRPT_CONV_ORDER		  cascade constraints ;
     [exec] drop table DRPT_SESSION_ORD		  cascade constraints ;
     [exec] drop table DCS_CATALOG			  cascade constraints ;
     [exec] drop table DCS_ROOT_CATS		  cascade constraints ;
     [exec] drop table DCS_ALLROOT_CATS		  cascade constraints ;
     [exec] drop table DCS_ROOT_SUBCATS		  cascade constraints ;
     [exec] drop table DCS_SUB_CATALOGS		  cascade constraints ;
     [exec] drop table DCS_CATEGORY_INFO		  cascade constraints ;
     [exec] drop table DCS_PRODUCT_INFO		  cascade constraints ;
     [exec] drop table DCS_SKU_INFO 		  cascade constraints ;
     [exec] drop table DCS_CAT_SUBCATS		  cascade constraints ;
     [exec] drop table DCS_CAT_SUBROOTS		  cascade constraints ;
     [exec] drop table DCS_CAT_CATINFO		  cascade constraints ;
     [exec] drop table DCS_CATINFO_ANC		  cascade constraints ;
     [exec] drop table DCS_PRD_PRDINFO		  cascade constraints ;
     [exec] drop table DCS_PRDINFO_RDPRD		  cascade constraints ;
     [exec] drop table DCS_PRDINFO_ANC		  cascade constraints ;
     [exec] drop table DCS_SKU_SKUINFO		  cascade constraints ;
     [exec] drop table DCS_SKUINFO_RPLC		  cascade constraints ;
     [exec] drop table DCS_GEN_FOL_CAT		  cascade constraints ;
     [exec] drop table DCS_CHILD_FOL_CAT		  cascade constraints ;
     [exec] drop table DCS_CATFOL_CHLD		  cascade constraints ;
     [exec] drop table DCS_DIR_ANC_CTLGS		  cascade constraints ;
     [exec] drop table DCS_IND_ANC_CTLGS		  cascade constraints ;
     [exec] drop table DCS_CTLG_ANC_CATS		  cascade constraints ;
     [exec] drop table DCS_CAT_PRNT_CTLG		  cascade constraints ;
     [exec] drop table DCS_CAT_ANC_CATS		  cascade constraints ;
     [exec] drop table DCS_PRD_PRNT_CATS		  cascade constraints ;
     [exec] drop table DCS_PRD_ANC_CATS		  cascade constraints ;
     [exec] drop table DCS_CAT_CATALOGS		  cascade constraints ;
     [exec] drop table DCS_PRD_CATALOGS		  cascade constraints ;
     [exec] drop table DCS_SKU_CATALOGS		  cascade constraints ;
     [exec] drop table DCS_USER_CATALOG		  cascade constraints ;
     [exec] drop table SRCH_CONFIG			  cascade constraints ;
     [exec] drop table SRCH_CONFIG_REPO		  cascade constraints ;
     [exec] drop table SRCH_UPDATE_QUEUE		  cascade constraints ;
     [exec] drop table SRCH_UPDATE_VQUEUE		  cascade constraints ;
     [exec] drop table SRCH_REFINE_ELEMS		  cascade constraints ;
     [exec] drop table SRCH_REFINE_SUBELS		  cascade constraints ;
     [exec] drop table SRCH_REFEL_ORDER		  cascade constraints ;
     [exec] drop table SRCH_REFEL_RANGE		  cascade constraints ;
     [exec] drop table SRCH_REFEL_SELECT		  cascade constraints ;
     [exec] drop table SRCH_REFEL_EXCLUDE		  cascade constraints ;
     [exec] drop table SRCH_SORT_OPTIONS		  cascade constraints ;
     [exec] drop table SRCH_REFINE_CONFIG		  cascade constraints ;
     [exec] drop table SRCH_REFCFG_ELEMS		  cascade constraints ;
     [exec] drop table SRCH_REFINE_SORT		  cascade constraints ;
     [exec] drop table SRCH_CFG_DIMNODE		  cascade constraints ;
     [exec] drop table SRCH_CFG_DTINFO		  cascade constraints ;
     [exec] drop table SRCH_CFG_FOL 		  cascade constraints ;
     [exec] drop table SRCH_CFG_RULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_SYNSET		  cascade constraints ;
     [exec] drop table SRCH_CFG_APROP		  cascade constraints ;
     [exec] drop table SRCH_CFG_RPROP		  cascade constraints ;
     [exec] drop table SRCH_CFG_CFG 		  cascade constraints ;
     [exec] drop table SRCH_CFG_BASE		  cascade constraints ;
     [exec] drop table SRCH_CFG_FOL_CHLDCFGS	  cascade constraints ;
     [exec] drop table SRCH_CFG_FOL_CHLDFOL 	  cascade constraints ;
     [exec] drop table SRCH_CFG_RPSET		  cascade constraints ;
     [exec] drop table SRCH_CFG_VRPSET		  cascade constraints ;
     [exec] drop table SRCH_CFG_SYNLNK		  cascade constraints ;
     [exec] drop table SRCH_CFG_DRULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_DSYN		  cascade constraints ;
     [exec] drop table SRCH_CFG_ERULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_RRULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_PRULE		  cascade constraints ;
     [exec] drop table SRCH_CFG_TERM		  cascade constraints ;
     [exec] drop table SRCH_CFG_RANK		  cascade constraints ;
     [exec] drop table SRC_TOPIC_SET		  cascade constraints ;
     [exec] drop table SRC_TOPIC			  cascade constraints ;
     [exec] drop table SRC_TOPICCHILD_SEQ		  cascade constraints ;
     [exec] drop table SRC_ROOTTOPICS_SEQ		  cascade constraints ;
     [exec] drop table SRC_TOPIC_MACRO		  cascade constraints ;
     [exec] drop table SRC_TOPICMACRO_SEQ		  cascade constraints ;
     [exec] drop table SRC_GLOBAL_MACRO		  cascade constraints ;
     [exec] drop table SRC_TOPIC_PATTERN		  cascade constraints ;
     [exec] drop table SRC_TOPIC_PAT_SEQ		  cascade constraints ;
     [exec] drop table SRC_TOPIC_LABEL		  cascade constraints ;
     [exec] drop table ROUT_INDEX			  cascade constraints ;
     [exec] drop table ROUT_LP_SUMMARY		  cascade constraints ;
     [exec] drop table ROUT_LP_CMD_COUNT		  cascade constraints ;
     [exec] drop table ROUT_LP_SMRY_CMDS		  cascade constraints ;
     [exec] drop table ROUT_ENV			  cascade constraints ;
     [exec] drop table ROUT_HOST_INF		  cascade constraints ;
     [exec] drop table ROUT_HOST			  cascade constraints ;
     [exec] drop table ROUT_PART			  cascade constraints ;
     [exec] drop table ROUT_ENGINE			  cascade constraints ;
     [exec] drop table ROUT_LOG_PART		  cascade constraints ;
     [exec] drop table ROUT_PHYS_PART_M		  cascade constraints ;
     [exec] drop table ROUT_IDX_LOG_PARTS		  cascade constraints ;
     [exec] drop table ROUT_DEP_HIST		  cascade constraints ;
     [exec] drop table ROUT_SWPCHK			  cascade constraints ;
     [exec] drop table DCS_REFINE_CONFIG		  cascade constraints ;
     [exec] drop table DCS_REFCFG_GENELS		  cascade constraints ;
     [exec] drop table DCS_CAT_REFCFG		  cascade constraints ;
     [exec] drop table DCS_REFCFG_CUSTOM		  cascade constraints ;
     [exec] drop table DCS_CATINFO_REFCFG		  cascade constraints ;
     [exec] drop table DCS_CATALOG_REFCFG		  cascade constraints ;
     [exec] drop table TST_FOLDERS			  cascade constraints ;
     [exec] drop table TST_SEARCH_TESTS		  cascade constraints ;
     [exec] drop table TST_TRACK_ITEMS		  cascade constraints ;
     [exec] drop table TST_TEST_TYPES		  cascade constraints ;
     [exec] drop table TST_DIMENSION_VALUES 	  cascade constraints ;
     [exec] drop table TST_ADVANCED_PARAMETERS	  cascade constraints ;
     [exec] drop table CASTO_ORDER			  cascade constraints ;
     [exec] drop table CASTO_ORDER_EMAILS		  cascade constraints ;
     [exec] drop table CASTO_ORDER_COMMENTAIRE	  cascade constraints ;
     [exec] drop table CASTO_TRADEDOUBLER		  cascade constraints ;
     [exec] drop table CASTO_CARTE_ATOUT		  cascade constraints ;
     [exec] drop table CASTO_CARTE_CHEQUE		  cascade constraints ;
     [exec] drop table CASTO_BILL_ADDR		  cascade constraints ;
     [exec] drop table CASTO_COMMERCE_ITEM		  cascade constraints ;
     [exec] drop table CASTO_HARDGOOD_SHIPPING_GROUP  cascade constraints ;
     [exec] drop table CASTO_SHIP_ADDR		  cascade constraints ;
     [exec] drop table CASTO_PFE_POIDS		  cascade constraints ;
     [exec] drop table CASTO_PREPARATION_POIDS	  cascade constraints ;
     [exec] SQL> Disconnected from Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production

-copysql:

createtables:

-copysql:

createcoretables:

-performcoresql:

-performsql:
     [echo] about to execute sql/sql_run/create_core_tables.sql using CAST_CORE/CAST_CORE@XE
     [exec] 
     [exec] SQL*Plus: Release 11.2.0.2.0 Production on Mon May 2 18:48:21 2016
     [exec] 
     [exec] Copyright (c) 1982, 2014, Oracle.  All rights reserved.
     [exec] 
     [exec] 
     [exec] Connected to:
     [exec] Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production
     [exec] 
     [exec] SQL> REM !!! create_core_tables.sql
     [exec] SQL> 
     [exec] SQL> -- DAS
     [exec] SQL> @D:\ATG\ATG9.4\home/../DAS/sql/install/oracle/das_ddl.sql
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- id_generator.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_id_generator (
     [exec]   2  	     id_space_name   varchar2(60)    not null,
     [exec]   3  	     seed    number(19,0)    not null,
     [exec]   4  	     batch_size      integer not null,
     [exec]   5  	     prefix  varchar2(10)    null,
     [exec]   6  	     suffix  varchar2(10)    null
     [exec]   7  ,constraint das_id_generator_p primary key (id_space_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_secure_id_gen (
     [exec]   2  	     id_space_name   varchar2(60)    not null,
     [exec]   3  	     seed    number(19,0)    not null,
     [exec]   4  	     batch_size      integer not null,
     [exec]   5  	     ids_per_batch   integer null,
     [exec]   6  	     prefix  varchar2(10)    null,
     [exec]   7  	     suffix  varchar2(10)    null
     [exec]   8  ,constraint das_secure_id_ge_p primary key (id_space_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- cluster_name_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_cluster_name (
     [exec]   2  	     cluster_name    varchar2(255)   not null,
     [exec]   3  	     saved_date      number(19)      not null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- dms_limbo_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- This table is where limbo instance/clients identify themselves. --There should only be one entry in this table for each Dynamo running PatchBay with message delays enabled.
     [exec] SQL> 
     [exec] SQL> create table dms_limbo (
     [exec]   2  	     limbo_name      varchar2(250)   not null,
     [exec]   3  	     limbo_id	     number(19,0)    not null
     [exec]   4  ,constraint limbo_pk primary key (limbo_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- The following four tables comprise the parts of the stored messages.
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_msg (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     limbo_id	     number(19,0)    not null,
     [exec]   4  	     delivery_date   number(19,0)    not null,
     [exec]   5  	     delivery_count  number(2,0)     not null,
     [exec]   6  	     msg_src_name    varchar2(250)   not null,
     [exec]   7  	     port_name	     varchar2(250)   not null,
     [exec]   8  	     msg_class	     varchar2(250)   not null,
     [exec]   9  	     msg_class_type  number(1,0)     not null,
     [exec]  10  	     jms_type	     varchar2(250)   null,
     [exec]  11  	     jms_expiration  number(19,0)    null,
     [exec]  12  	     jms_correlationid	     varchar2(250)   null
     [exec]  13  ,constraint limbo_msg_pk primary key (msg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dms_limbo_read_idx on dms_limbo_msg (limbo_id,delivery_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- If serialized reply-to destinations are known to be small enough, this binary column's size can be reduced for efficiency.  The size here has been chosen to work with local dms and SQL-JMS.
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_replyto (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     jms_replyto     blob    null
     [exec]   4  ,constraint limbo_replyto_pk primary key (msg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- If serialized message bodies are known to be small enough, this binary column's size can be reduced for efficiency.	The size here has been chosen to work with almost all types of messages but may be larger than necessary.	Actual usage analysis is recommended for finding the optimal binary column size.
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_body (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     msg_body	     blob    null
     [exec]   4  ,constraint limbo_body_pk primary key (msg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- This table represents a map of properties for messages stored above, i.e.  there can be multiple rows in this table for a single row in the preceeding tables.
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_props (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     prop_name	     varchar2(250)   not null,
     [exec]   4  	     prop_value      varchar2(250)   not null
     [exec]   5  ,constraint limbo_props_pk primary key (msg_id,prop_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_ptypes (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     prop_name	     varchar2(250)   not null,
     [exec]   4  	     prop_type	     number(1,0)     not null
     [exec]   5  ,constraint dms_limbo_ptypes_p primary key (msg_id,prop_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_delay (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     delay   number(19,0)    not null,
     [exec]   4  	     max_attempts    number(2,0)     not null,
     [exec]   5  	     failure_port    varchar2(250)   not null,
     [exec]   6  	     jms_timestamp   number(19,0)    null,
     [exec]   7  	     jms_deliverymode	     number(10,0)    null,
     [exec]   8  	     jms_priority    number(10,0)    null,
     [exec]   9  	     jms_messageid   varchar2(250)   null,
     [exec]  10  	     jms_redelivered number(1,0)     null,
     [exec]  11  	     jms_destination blob    null
     [exec]  12  ,constraint limbo_delay_pk primary key (msg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- create_sql_jms_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_client (
     [exec]   2  	     client_name     varchar2(250)   not null,
     [exec]   3  	     client_id	     number(19,0)    null
     [exec]   4  ,constraint dms_client_p primary key (client_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_queue (
     [exec]   2  	     queue_name      varchar2(250)   null,
     [exec]   3  	     queue_id	     number(19,0)    not null,
     [exec]   4  	     temp_id number(19,0)    null
     [exec]   5  ,constraint dms_queue_p primary key (queue_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_queue_recv (
     [exec]   2  	     client_id	     number(19,0)    null,
     [exec]   3  	     receiver_id     number(19,0)    not null,
     [exec]   4  	     queue_id	     number(19,0)    null
     [exec]   5  ,constraint dms_queue_recv_p primary key (receiver_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_queue_entry (
     [exec]   2  	     queue_id	     number(19,0)    not null,
     [exec]   3  	     msg_id  number(19,0)    not null,
     [exec]   4  	     delivery_date   number(19,0)    null,
     [exec]   5  	     handling_client_id      number(19,0)    null,
     [exec]   6  	     read_state      number(19,0)    null
     [exec]   7  ,constraint dms_queue_entry_p primary key (queue_id,msg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_topic (
     [exec]   2  	     topic_name      varchar2(250)   null,
     [exec]   3  	     topic_id	     number(19,0)    not null,
     [exec]   4  	     temp_id number(19,0)    null
     [exec]   5  ,constraint dms_topic_p primary key (topic_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_topic_sub (
     [exec]   2  	     client_id	     number(19,0)    null,
     [exec]   3  	     subscriber_name varchar2(250)   null,
     [exec]   4  	     subscriber_id   number(19,0)    not null,
     [exec]   5  	     topic_id	     number(19,0)    null,
     [exec]   6  	     durable number(1,0)     null,
     [exec]   7  	     active  number(1,0)     null
     [exec]   8  ,constraint dms_topic_sub_p primary key (subscriber_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_topic_entry (
     [exec]   2  	     subscriber_id   number(19,0)    not null,
     [exec]   3  	     msg_id  number(19,0)    not null,
     [exec]   4  	     delivery_date   number(19,0)    null,
     [exec]   5  	     read_state      number(19,0)    null
     [exec]   6  ,constraint dms_topic_entry_p primary key (subscriber_id,msg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dms_topic_msg_idx on dms_topic_entry (msg_id,subscriber_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dms_topic_read_idx on dms_topic_entry (read_state,delivery_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dms_msg (
     [exec]   2  	     msg_class	     varchar2(250)   null,
     [exec]   3  	     has_properties  number(1,0)     null,
     [exec]   4  	     reference_count number(10,0)    null,
     [exec]   5  	     msg_id  number(19,0)    not null,
     [exec]   6  	     timestamp	     number(19,0)    null,
     [exec]   7  	     correlation_id  varchar2(250)   null,
     [exec]   8  	     reply_to	     number(19,0)    null,
     [exec]   9  	     destination     number(19,0)    null,
     [exec]  10  	     delivery_mode   number(1,0)     null,
     [exec]  11  	     redelivered     number(1,0)     null,
     [exec]  12  	     type    varchar2(250)   null,
     [exec]  13  	     expiration      number(19,0)    null,
     [exec]  14  	     priority	     number(1,0)     null,
     [exec]  15  	     small_body      blob    null,
     [exec]  16  	     large_body      blob    null
     [exec]  17  ,constraint dms_msg_p primary key (msg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_msg_properties (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     data_type	     number(1,0)     null,
     [exec]   4  	     name    varchar2(250)   not null,
     [exec]   5  	     value   varchar2(250)   null
     [exec]   6  ,constraint dms_msg_properti_p primary key (msg_id,name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create or replace procedure dms_queue_flag
     [exec]   2  (Pbatch_size	IN NUMBER
     [exec]   3  ,Pread_lock	IN NUMBER
     [exec]   4  ,Pdelivery_date IN NUMBER
     [exec]   5  ,Pclient_id	IN NUMBER
     [exec]   6  ,Pqueue_id	IN NUMBER
     [exec]   7  ,Pupdate_count	OUT NUMBER)
     [exec]   8  as
     [exec]   9  		  Begin
     [exec]  10  	 UPDATE dms_queue_entry qe
     [exec]  11  	 SET qe.handling_client_id = Pclient_id,
     [exec]  12  	     qe.read_state = Pread_lock
     [exec]  13  	 WHERE ROWNUM < Pbatch_size
     [exec]  14  	   AND qe.handling_client_id < 0
     [exec]  15  	   AND qe.delivery_date < Pdelivery_date
     [exec]  16  	   AND qe.queue_id = Pqueue_id;
     [exec]  17  	 Pupdate_count := SQL%ROWCOUNT;
     [exec]  18    END;
     [exec]  19  
     [exec]  20  /
     [exec] 
     [exec] Procedure created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create or replace procedure dms_topic_flag
     [exec]   2  (Pbatch_size	IN NUMBER
     [exec]   3  ,Pread_lock	IN NUMBER
     [exec]   4  ,Pdelivery_date IN NUMBER
     [exec]   5  ,Psubscriber_id IN NUMBER
     [exec]   6  ,Pupdate_count	OUT NUMBER)
     [exec]   7  as
     [exec]   8  		  Begin
     [exec]   9  	 UPDATE dms_topic_entry te
     [exec]  10  	 SET te.read_state = Pread_lock
     [exec]  11  	 WHERE ROWNUM < Pbatch_size
     [exec]  12  	   AND te.delivery_date < Pdelivery_date
     [exec]  13  	   AND te.read_state = 0
     [exec]  14  	   AND te.subscriber_id = Psubscriber_id;
     [exec]  15  	 Pupdate_count := SQL%ROWCOUNT;
     [exec]  16    END;
     [exec]  17  
     [exec]  18  /
     [exec] 
     [exec] Procedure created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- create_staff_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- SQL for creating the Dynamo Staff Repository for the GSA
     [exec] SQL> -- Primary account table.
     [exec] SQL> --  Type=1 is a login account.	The first_name, last_name, and password	     fields are valid for this type of account.
     [exec] SQL> -- Type=2 is a group account.  The description field is valid for	      this type of account.
     [exec] SQL> -- Type=4 is a privilege account.	The description field is valid for	  this type of account.
     [exec] SQL> 
     [exec] SQL> create table das_account (
     [exec]   2  	     account_name    varchar2(254)   not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     first_name      varchar2(254)   null,
     [exec]   5  	     last_name	     varchar2(254)   null,
     [exec]   6  	     password	     varchar2(254)   null,
     [exec]   7  	     description     varchar2(254)   null,
     [exec]   8  	     lastpwdupdate   date    null
     [exec]   9  ,constraint das_account_p primary key (account_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_group_assoc (
     [exec]   2  	     account_name    varchar2(254)   not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     group_name      varchar2(254)   not null
     [exec]   5  ,constraint das_grp_asc_p primary key (account_name,sequence_num));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Adding the previous password information
     [exec] SQL> 
     [exec] SQL> create table das_acct_prevpwd (
     [exec]   2  	     account_name    varchar2(254)   not null,
     [exec]   3  	     seq_num number(10)      not null,
     [exec]   4  	     prevpwd varchar2(35)    null
     [exec]   5  ,constraint das_prevpwd_p primary key (account_name,seq_num)
     [exec]   6  ,constraint das_prvpwd_d_f foreign key (account_name) references das_account (account_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- create_gsa_subscribers_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_gsa_subscriber (
     [exec]   2  	     id      integer not null,
     [exec]   3  	     address varchar2(50)    not null,
     [exec]   4  	     port    integer not null,
     [exec]   5  	     repository      varchar2(256)   not null,
     [exec]   6  	     itemdescriptor  varchar2(256)   not null
     [exec]   7  ,constraint das_gsa_subscrib_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- create_sds.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_sds (
     [exec]   2  	     sds_name	     varchar2(50)    not null,
     [exec]   3  	     curr_ds_name    varchar2(50)    null,
     [exec]   4  	     dynamo_server   varchar2(80)    null,
     [exec]   5  	     last_modified   date    null
     [exec]   6  ,constraint das_sds_p primary key (sds_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- integration_data_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table if_integ_data (
     [exec]   2  	     item_id varchar2(40)    not null,
     [exec]   3  	     descriptor      varchar2(64)    not null,
     [exec]   4  	     repository      varchar2(255)   not null,
     [exec]   5  	     state   number(10)      not null,
     [exec]   6  	     last_import     date    null,
     [exec]   7  	     version number(10)      not null
     [exec]   8  ,constraint if_int_data_p primary key (item_id,descriptor,repository));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- nucleus_security_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_nucl_sec (
     [exec]   2  	     func_name	     varchar2(254)   not null,
     [exec]   3  	     policy  varchar2(254)   not null
     [exec]   4  ,constraint func_name_pk primary key (func_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_ns_acls (
     [exec]   2  	     id      varchar2(254)   not null,
     [exec]   3  	     index_num	     number(10)      not null,
     [exec]   4  	     acl     varchar2(254)   not null
     [exec]   5  ,constraint id_index_pk primary key (id,index_num));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- media_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --     media content repository tables.
     [exec] SQL> 
     [exec] SQL> create table media_folder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     name    varchar2(254)   not null,
     [exec]   7  	     path    varchar2(254)   not null,
     [exec]   8  	     parent_folder_id	     varchar2(40)    null
     [exec]   9  ,constraint md_folder_p primary key (folder_id)
     [exec]  10  ,constraint md_foldparnt_fl_f foreign key (parent_folder_id) references media_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index fldr_mfldrid_idx on media_folder (parent_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index md_fldr_path_idx on media_folder (path);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table media_base (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     name    varchar2(254)   not null,
     [exec]   7  	     path    varchar2(254)   not null,
     [exec]   8  	     parent_folder_id	     varchar2(40)    not null,
     [exec]   9  	     media_type      integer null
     [exec]  10  ,constraint media_p primary key (media_id)
     [exec]  11  ,constraint medparnt_fl_f foreign key (parent_folder_id) references media_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index med_mfldrid_idx on media_base (parent_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index media_path_idx on media_base (path);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index media_type_idx on media_base (media_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table media_ext (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     url     varchar2(254)   not null
     [exec]   4  ,constraint media_ext_p primary key (media_id)
     [exec]   5  ,constraint medxtmed_d_f foreign key (media_id) references media_base (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table media_bin (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     length  integer not null,
     [exec]   4  	     last_modified   date    not null,
     [exec]   5  	     data    blob    not null
     [exec]   6  ,constraint media_bin_p primary key (media_id)
     [exec]   7  ,constraint medbnmed_d_f foreign key (media_id) references media_base (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table media_txt (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     length  integer not null,
     [exec]   4  	     last_modified   date    not null,
     [exec]   5  	     data    clob    not null
     [exec]   6  ,constraint media_txt_p primary key (media_id)
     [exec]   7  ,constraint medtxtmed_d_f foreign key (media_id) references media_base (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- deployment_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --     These tables are for the daf deployment system
     [exec] SQL> 
     [exec] SQL> create table das_deployment (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     start_time      date    null,
     [exec]   5  	     end_time	     date    null,
     [exec]   6  	     failure_time    date    null,
     [exec]   7  	     status  number(10)      null,
     [exec]   8  	     prev_status     number(10)      null,
     [exec]   9  	     status_detail   varchar2(255)   null,
     [exec]  10  	     current_phase   number(10)      null,
     [exec]  11  	     rep_high_mark   number(10)      null,
     [exec]  12  	     rep_marks_avail number(10)      null,
     [exec]  13  	     file_high_mark  number(10)      null,
     [exec]  14  	     file_marks_avail	     number(10)      null,
     [exec]  15  	     thread_batch_size	     number(10)      null,
     [exec]  16  	     failure_count   number(10)      null,
     [exec]  17  	     purge_deploy_data	     number(1)	     null
     [exec]  18  ,constraint daf_depl_pk primary key (deployment_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index das_dpl_start_idx on das_deployment (start_time);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_depl_progress (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     work_completed  number(10)      null,
     [exec]   5  	     total_work      number(10)      null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_thread_batch (
     [exec]   2  	     thread_batch_id varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     deployment      varchar2(40)    null,
     [exec]   5  	     type    number(10)      null,
     [exec]   6  	     owner   varchar2(255)   null,
     [exec]   7  	     thread_name     varchar2(255)   null,
     [exec]   8  	     lower_bound     number(10)      null,
     [exec]   9  	     upper_bound     number(10)      null,
     [exec]  10  	     last_update_time	     timestamp	     null,
     [exec]  11  	     running number(1,0)     not null
     [exec]  12  ,constraint das_dpl_tb_pk primary key (thread_batch_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index das_tb_deployment on das_thread_batch (deployment);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index das_tb_owner on das_thread_batch (owner);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index das_tb_thread_nam on das_thread_batch (thread_name);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_deploy_data (
     [exec]   2  	     deploy_data_id  varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     type    number(10)      null,
     [exec]   5  	     source  varchar2(255)   null,
     [exec]   6  	     destination     varchar2(255)   null,
     [exec]   7  	     dest_server     varchar2(255)   null,
     [exec]   8  	     deployment      varchar2(40)    null
     [exec]   9  ,constraint deploy_data_pk primary key (deploy_data_id)
     [exec]  10  ,constraint dd_deployment_fk foreign key (deployment) references das_deployment (deployment_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dd_deployment_idx on das_deploy_data (deployment);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_deploy_mark (
     [exec]   2  	     marker_id	     varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     type    number(10)      null,
     [exec]   5  	     status  number(10)      null,
     [exec]   6  	     index_number    number(10)      null,
     [exec]   7  	     marker_action   number(10)      null,
     [exec]   8  	     f_src_devline_id	     varchar2(40)    null,
     [exec]   9  	     r_src_devline_id	     varchar2(40)    null,
     [exec]  10  	     deployment_id   varchar2(40)    null,
     [exec]  11  	     deployment_data varchar2(40)    null
     [exec]  12  ,constraint marker_pk primary key (marker_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index marker_index_idx on das_deploy_mark (index_number);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_rep_mark (
     [exec]   2  	     rep_marker_id   varchar2(40)    not null,
     [exec]   3  	     item_desc_name  varchar2(255)   null,
     [exec]   4  	     item_id varchar2(255)   null
     [exec]   5  ,constraint rep_marker_pk primary key (rep_marker_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_file_mark (
     [exec]   2  	     file_marker_id  varchar2(40)    not null,
     [exec]   3  	     file_path	     varchar2(1000)  null
     [exec]   4  ,constraint file_marker_pk primary key (file_marker_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_depl_depldat (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     deployment_data varchar2(40)    null
     [exec]   5  ,constraint das_dpl_depdat_pk primary key (deployment_id,sequence_num));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_depl_options (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(255)   not null,
     [exec]   4  	     optionValue     varchar2(255)   null
     [exec]   5  ,constraint das_dpl_depopt_pk primary key (deployment_id,tag));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_depl_repmaps (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     source  varchar2(255)   not null,
     [exec]   4  	     destination     varchar2(255)   null
     [exec]   5  ,constraint das_dpl_repmap_pk primary key (deployment_id,source));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_depl_item_ref (
     [exec]   2  	     item_ref_id     varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     deployment_id   varchar2(40)    null,
     [exec]   5  	     repository      varchar2(255)   null,
     [exec]   6  	     item_desc_name  varchar2(255)   null,
     [exec]   7  	     item_id varchar2(255)   null,
     [exec]   8  	     item_index      number(10)      null
     [exec]   9  ,constraint das_dpl_itmref_pk primary key (item_ref_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index das_dpl_itmx_idx on das_depl_item_ref (item_index);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index das_dpl_dplid_idx on das_depl_item_ref (deployment_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_dd_markers (
     [exec]   2  	     deploy_data_id  varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     marker  varchar2(40)    null
     [exec]   5  ,constraint das_dpl_dd_mrk_pk primary key (deploy_data_id,sequence_num)
     [exec]   6  ,constraint marker_fk foreign key (marker) references das_deploy_mark (marker_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index marker_idx on das_dd_markers (marker);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_dep_fail_info (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     deployment_id   varchar2(40)    not null,
     [exec]   4  	     marker_id	     varchar2(40)    null,
     [exec]   5  	     severity	     varchar2(40)    null,
     [exec]   6  	     failure_message varchar2(255)   null,
     [exec]   7  	     failure_time    timestamp	     null,
     [exec]   8  	     error_code      varchar2(40)    null,
     [exec]   9  	     cause   clob    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- sitemap_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Table for siteindex repository item
     [exec] SQL> 
     [exec] SQL> create table das_siteindex (
     [exec]   2  	     siteindex_id    varchar2(40)    not null,
     [exec]   3  	     lastmod date    null,
     [exec]   4  	     filename	     varchar2(100)   null,
     [exec]   5  	     xml     clob    null
     [exec]   6  ,constraint siteindex_pk primary key (siteindex_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Table for sitemap repository item
     [exec] SQL> 
     [exec] SQL> create table das_sitemap (
     [exec]   2  	     sitemap_id      varchar2(40)    not null,
     [exec]   3  	     lastmod date    null,
     [exec]   4  	     filename	     varchar2(100)   null,
     [exec]   5  	     xml     clob    null
     [exec]   6  ,constraint sitemap_pk primary key (sitemap_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- seo_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Table for seo-tag repository item
     [exec] SQL> 
     [exec] SQL> create table das_seo_tag (
     [exec]   2  	     seo_tag_id      varchar2(40)    not null,
     [exec]   3  	     display_name    varchar2(100)   null,
     [exec]   4  	     title   varchar2(254)   null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     keywords	     varchar2(254)   null,
     [exec]   7  	     content_key     varchar2(100)   null
     [exec]   8  ,constraint das_seo_tag_pk primary key (seo_tag_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- DPS
     [exec] SQL> @D:\ATG\ATG9.4\home/../DPS/sql/install/oracle/dps_ddl.sql
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- user_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new DPS schema.
     [exec] SQL> -- Add the organization definition.  It's out of place, but since dps_user references it, it's got to be defined up here
     [exec] SQL> 
     [exec] SQL> create table dps_organization (
     [exec]   2  	     org_id  varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     description     varchar2(254)   null,
     [exec]   5  	     parent_org      varchar2(40)    null
     [exec]   6  ,constraint dps_organization_p primary key (org_id)
     [exec]   7  ,constraint dps_orgnparnt_rg_f foreign key (parent_org) references dps_organization (org_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_orgparent_org on dps_organization (parent_org);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Default Profile User Template
     [exec] SQL> -- Basic user info.  note: the password field size must be at a minimum 35 characters	 if DPS stores a hash of the password and not the actual value.
     [exec] SQL> 
     [exec] SQL> create table dps_user (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     login   varchar2(40)    not null,
     [exec]   4  	     auto_login      number(1,0)     null,
     [exec]   5  	     password	     varchar2(35)    null,
     [exec]   6  	     member  number(1,0)     null,
     [exec]   7  	     first_name      varchar2(40)    null,
     [exec]   8  	     middle_name     varchar2(40)    null,
     [exec]   9  	     last_name	     varchar2(40)    null,
     [exec]  10  	     user_type	     integer null,
     [exec]  11  	     locale  integer null,
     [exec]  12  	     lastactivity_date	     date    null,
     [exec]  13  	     lastpwdupdate   date    null,
     [exec]  14  	     generatedpwd    number(1)	     null,
     [exec]  15  	     registration_date	     date    null,
     [exec]  16  	     email   varchar2(255)   null,
     [exec]  17  	     email_status    integer null,
     [exec]  18  	     receive_email   integer null,
     [exec]  19  	     last_emailed    date    null,
     [exec]  20  	     gender  integer null,
     [exec]  21  	     date_of_birth   date    null,
     [exec]  22  	     securityStatus  integer null,
     [exec]  23  	     description     varchar2(254)   null
     [exec]  24  ,constraint dps_user_p primary key (id)
     [exec]  25  ,constraint dps_user_u unique (login)
     [exec]  26  ,constraint dps_user1_c check (auto_login in (0,1))
     [exec]  27  ,constraint dps_user2_c check (member in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_contact_info (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     user_id varchar2(40)    null,
     [exec]   4  	     prefix  varchar2(40)    null,
     [exec]   5  	     first_name      varchar2(100)   null,
     [exec]   6  	     middle_name     varchar2(100)   null,
     [exec]   7  	     last_name	     varchar2(100)   null,
     [exec]   8  	     suffix  varchar2(40)    null,
     [exec]   9  	     job_title	     varchar2(100)   null,
     [exec]  10  	     company_name    varchar2(40)    null,
     [exec]  11  	     address1	     varchar2(50)    null,
     [exec]  12  	     address2	     varchar2(50)    null,
     [exec]  13  	     address3	     varchar2(50)    null,
     [exec]  14  	     city    varchar2(30)    null,
     [exec]  15  	     state   varchar2(20)    null,
     [exec]  16  	     postal_code     varchar2(10)    null,
     [exec]  17  	     county  varchar2(40)    null,
     [exec]  18  	     country varchar2(40)    null,
     [exec]  19  	     phone_number    varchar2(15)    null,
     [exec]  20  	     fax_number      varchar2(15)    null
     [exec]  21  ,constraint dps_contact_info_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_user_address (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     home_addr_id    varchar2(40)    null,
     [exec]   4  	     billing_addr_id varchar2(40)    null,
     [exec]   5  	     shipping_addr_id	     varchar2(40)    null
     [exec]   6  ,constraint dps_user_address_p primary key (id)
     [exec]   7  ,constraint dps_usrddrssid_f foreign key (id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_usr_adr_shp_id on dps_user_address (shipping_addr_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dps_usr_blng_ad_id on dps_user_address (billing_addr_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dps_usr_home_ad_id on dps_user_address (home_addr_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_other_addr (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     address_id      varchar2(40)    not null
     [exec]   5  ,constraint dps_other_addr_p primary key (user_id,tag)
     [exec]   6  ,constraint dps_othrddrusr_d_f foreign key (user_id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_mailing (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(255)   null,
     [exec]   4  	     subject varchar2(80)    null,
     [exec]   5  	     uniq_server_id  varchar2(255)   null,
     [exec]   6  	     from_address    varchar2(255)   null,
     [exec]   7  	     replyto varchar2(255)   null,
     [exec]   8  	     template_URL    varchar2(255)   null,
     [exec]   9  	     alt_template_URL	     varchar2(255)   null,
     [exec]  10  	     batch_exec_id   varchar2(40)    null,
     [exec]  11  	     cc      varchar2(4000)  null,
     [exec]  12  	     bcc     varchar2(4000)  null,
     [exec]  13  	     send_as_html    integer null,
     [exec]  14  	     send_as_text    integer null,
     [exec]  15  	     params  blob    null,
     [exec]  16  	     start_time      date    null,
     [exec]  17  	     end_time	     date    null,
     [exec]  18  	     status  integer null,
     [exec]  19  	     num_profiles    integer null,
     [exec]  20  	     num_sent	     integer null,
     [exec]  21  	     num_bounces     integer null,
     [exec]  22  	     num_soft_bounces	     integer null,
     [exec]  23  	     num_errors      integer null,
     [exec]  24  	     num_skipped     number(10)      null,
     [exec]  25  	     fill_from_templ number(1,0)     null,
     [exec]  26  	     is_batched      number(1)	     null,
     [exec]  27  	     ignore_fatigue  number(1)	     null,
     [exec]  28  	     batch_size      number(10)      null
     [exec]  29  ,constraint dps_mailing_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_mail_trackdata (
     [exec]   2  	     mailing_id      varchar2(40)    not null,
     [exec]   3  	     map_key varchar2(254)   not null,
     [exec]   4  	     map_value	     varchar2(254)   null
     [exec]   5  ,constraint dps_mail_trackd_p primary key (mailing_id,map_key)
     [exec]   6  ,constraint dps_mail_trackd_f foreign key (mailing_id) references dps_mailing (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_mail_batch (
     [exec]   2  	     mailing_id      varchar2(40)    not null,
     [exec]   3  	     start_idx	     number(10)      not null,
     [exec]   4  	     uniq_server_id  varchar2(254)   null,
     [exec]   5  	     start_time      date    null,
     [exec]   6  	     end_time	     date    null,
     [exec]   7  	     status  number(10)      null,
     [exec]   8  	     num_profiles    number(10)      null,
     [exec]   9  	     num_sent	     number(10)      null,
     [exec]  10  	     num_bounces     number(10)      null,
     [exec]  11  	     num_errors      number(10)      null,
     [exec]  12  	     num_skipped     number(10)      null,
     [exec]  13  	     is_summarized   number(1)	     null
     [exec]  14  ,constraint dps_mail_batch_p primary key (mailing_id,start_idx)
     [exec]  15  ,constraint dps_mailbatch_d_f foreign key (mailing_id) references dps_mailing (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_mail_server (
     [exec]   2  	     uniq_server_id  varchar2(254)   not null,
     [exec]   3  	     last_updated    date    null
     [exec]   4  ,constraint dps_mail_server_p primary key (uniq_server_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_user_mailing (
     [exec]   2  	     mailing_id      varchar2(40)    not null,
     [exec]   3  	     user_id varchar2(40)    not null,
     [exec]   4  	     idx     integer not null
     [exec]   5  ,constraint dps_user_mailing_p primary key (mailing_id,user_id)
     [exec]   6  ,constraint dps_usrmmalng_d_f foreign key (mailing_id) references dps_mailing (id)
     [exec]   7  ,constraint dps_usrmlngusr_d_f foreign key (user_id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_u_mail_uid on dps_user_mailing (user_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_email_address (
     [exec]   2  	     mailing_id      varchar2(40)    not null,
     [exec]   3  	     email_address   varchar2(255)   not null,
     [exec]   4  	     idx     integer not null
     [exec]   5  ,constraint dps_email_addres_p primary key (mailing_id,idx)
     [exec]   6  ,constraint dps_emldmalng_d_f foreign key (mailing_id) references dps_mailing (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Organizations/roles
     [exec] SQL> 
     [exec] SQL> create table dps_role (
     [exec]   2  	     role_id varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     name    varchar2(254)   not null,
     [exec]   6  	     description     varchar2(254)   null
     [exec]   7  ,constraint dps_role_p primary key (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Extending the user profile to include references to the roles that are assigned to this user
     [exec] SQL> 
     [exec] SQL> create table dps_user_roles (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     atg_role	     varchar2(40)    not null
     [exec]   4  ,constraint dps_user_roles_p primary key (user_id,atg_role)
     [exec]   5  ,constraint dps_usrrlsatg_rl_f foreign key (atg_role) references dps_role (role_id)
     [exec]   6  ,constraint dps_usrrlsusr_d_f foreign key (user_id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_usr_roles_id on dps_user_roles (atg_role);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_org_role (
     [exec]   2  	     org_id  varchar2(40)    not null,
     [exec]   3  	     atg_role	     varchar2(40)    not null
     [exec]   4  ,constraint dps_org_role_p primary key (org_id,atg_role)
     [exec]   5  ,constraint dps_orgrlorg_d_f foreign key (org_id) references dps_organization (org_id)
     [exec]   6  ,constraint dps_orgrlatg_rl_f foreign key (atg_role) references dps_role (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_org_rolerole on dps_org_role (atg_role);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_role_rel_org (
     [exec]   2  	     organization    varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     role_id varchar2(40)    not null
     [exec]   5  ,constraint dps_role_rel_org_p primary key (organization,sequence_num)
     [exec]   6  ,constraint dps_rolrorgnztn_f foreign key (organization) references dps_organization (org_id)
     [exec]   7  ,constraint dps_rolrlrgrol_d_f foreign key (role_id) references dps_role (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_role_rel_org on dps_role_rel_org (role_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_relativerole (
     [exec]   2  	     role_id varchar2(40)    not null,
     [exec]   3  	     dps_function    varchar2(40)    not null,
     [exec]   4  	     relative_to     varchar2(40)    not null
     [exec]   5  ,constraint dps_relativerole_p primary key (role_id)
     [exec]   6  ,constraint dps_reltreltv_t_f foreign key (relative_to) references dps_organization (org_id)
     [exec]   7  ,constraint dps_reltvrlrol_d_f foreign key (role_id) references dps_role (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_relativerole on dps_relativerole (relative_to);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_user_org (
     [exec]   2  	     organization    varchar2(40)    not null,
     [exec]   3  	     user_id varchar2(40)    not null
     [exec]   4  ,constraint dps_user_org_p primary key (organization,user_id)
     [exec]   5  ,constraint dps_usrrgorgnztn_f foreign key (organization) references dps_organization (org_id)
     [exec]   6  ,constraint dps_usrrgusr_d_f foreign key (user_id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_usr_orgusr_id on dps_user_org (user_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_user_org_anc (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     anc_org varchar2(40)    not null
     [exec]   5  ,constraint dps_user_org_anc_p primary key (user_id,sequence_num)
     [exec]   6  ,constraint dps_usrranc_rg_f foreign key (anc_org) references dps_organization (org_id)
     [exec]   7  ,constraint dps_usrrgncusr_d_f foreign key (user_id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_usr_org_ancanc on dps_user_org_anc (anc_org);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_org_chldorg (
     [exec]   2  	     org_id  varchar2(40)    not null,
     [exec]   3  	     child_org_id    varchar2(40)    not null
     [exec]   4  ,constraint dps_org_chldorg_p primary key (org_id,child_org_id)
     [exec]   5  ,constraint dps_orgcchild_rg_f foreign key (child_org_id) references dps_organization (org_id)
     [exec]   6  ,constraint dps_orgcorg_d_f foreign key (org_id) references dps_organization (org_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_org_chldorg_id on dps_org_chldorg (child_org_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_org_ancestors (
     [exec]   2  	     org_id  varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     anc_org varchar2(40)    not null
     [exec]   5  ,constraint dps_org_ancestor_p primary key (org_id,sequence_num)
     [exec]   6  ,constraint dps_orgnanc_rg_f foreign key (anc_org) references dps_organization (org_id)
     [exec]   7  ,constraint dps_orgnorg_d_f foreign key (org_id) references dps_organization (org_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_org_ancanc_org on dps_org_ancestors (anc_org);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Adding the folder information
     [exec] SQL> 
     [exec] SQL> create table dps_folder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     name    varchar2(254)   not null,
     [exec]   5  	     parent  varchar2(40)    null,
     [exec]   6  	     description     varchar2(254)   null
     [exec]   7  ,constraint dps_folder_p primary key (folder_id)
     [exec]   8  ,constraint dps_foldrparnt_f foreign key (parent) references dps_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_folderparent on dps_folder (parent);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_child_folder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     child_folder_id varchar2(40)    not null
     [exec]   4  ,constraint dps_child_folder_p primary key (folder_id,child_folder_id)
     [exec]   5  ,constraint dps_chilchild_fl_f foreign key (child_folder_id) references dps_folder (folder_id)
     [exec]   6  ,constraint dps_chilfoldr_d_f foreign key (folder_id) references dps_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_chld_fldr_fld on dps_child_folder (child_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_rolefold_chld (
     [exec]   2  	     rolefold_id     varchar2(40)    not null,
     [exec]   3  	     role_id varchar2(40)    not null
     [exec]   4  ,constraint dps_rolefold_chl_p primary key (rolefold_id,role_id)
     [exec]   5  ,constraint dps_rolfrolfld_d_f foreign key (rolefold_id) references dps_folder (folder_id)
     [exec]   6  ,constraint dps_rolfrol_d_f foreign key (role_id) references dps_role (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_rolfldchldrole on dps_rolefold_chld (role_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Adding the previous password information
     [exec] SQL> 
     [exec] SQL> create table dps_user_prevpwd (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq_num number(10)      not null,
     [exec]   4  	     prevpwd varchar2(35)    null
     [exec]   5  ,constraint dps_prevpwd_p primary key (id,seq_num)
     [exec]   6  ,constraint dps_prvpwd_d_f foreign key (id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- logging_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- This file contains create table statements needed to configure your database for use with the DPS logging/reporting subsystem.This script will create tables and indexes associated with the newlogging and reporting subsystem. To initialize these tables run thelogging_init.sql script.
     [exec] SQL> -- Tables for storing logging data for reports
     [exec] SQL> 
     [exec] SQL> create table dps_event_type (
     [exec]   2  	     id      integer not null,
     [exec]   3  	     name    varchar2(32)    not null
     [exec]   4  ,constraint dps_event_type_p primary key (id)
     [exec]   5  ,constraint dps_event_type_u unique (name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_user_event (
     [exec]   2  	     id      number(19,0)    not null,
     [exec]   3  	     timestamp	     date    not null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     eventtype	     integer not null,
     [exec]   7  	     profileid	     varchar2(25)    null,
     [exec]   8  	     member  number(1,0)     default 0 not null
     [exec]   9  ,constraint dps_user_event_p primary key (id)
     [exec]  10  ,constraint dps_usrvevnttyp_f foreign key (eventtype) references dps_event_type (id)
     [exec]  11  ,constraint dps_user_event_c check (member in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_user_event_ix on dps_user_event (eventtype);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dps_ue_ts on dps_user_event (timestamp);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_user_event_sum (
     [exec]   2  	     eventtype	     integer not null,
     [exec]   3  	     summarycount    integer not null,
     [exec]   4  	     fromtime	     date    not null,
     [exec]   5  	     totime  date    not null
     [exec]   6  ,constraint dps_usrsuevnttyp_f foreign key (eventtype) references dps_event_type (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_user_ev_sum_ix on dps_user_event_sum (eventtype);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dps_ues_ft on dps_user_event_sum (fromtime,totime,eventtype);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_request (
     [exec]   2  	     id      number(19,0)    not null,
     [exec]   3  	     timestamp	     date    not null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     name    varchar2(255)   not null,
     [exec]   7  	     member  number(1,0)     default 0 not null
     [exec]   8  ,constraint dps_request_p primary key (id)
     [exec]   9  ,constraint dps_request_c check (member in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_r_ts on dps_request (timestamp);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_reqname_sum (
     [exec]   2  	     name    varchar2(255)   not null,
     [exec]   3  	     member  number(1,0)     default 0 not null,
     [exec]   4  	     summarycount    integer not null,
     [exec]   5  	     fromtime	     date    not null,
     [exec]   6  	     totime  date    not null
     [exec]   7  ,constraint dps_reqname_sum_c check (member in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_rns_ft on dps_reqname_sum (fromtime,totime);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_session_sum (
     [exec]   2  	     sessionid	     varchar2(100)   null,
     [exec]   3  	     parentsessionid varchar2(100)   null,
     [exec]   4  	     member  number(1,0)     default 0 not null,
     [exec]   5  	     summarycount    integer not null,
     [exec]   6  	     fromtime	     date    not null,
     [exec]   7  	     totime  date    not null
     [exec]   8  ,constraint dps_session_sum_c check (member in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_rss_ft on dps_session_sum (fromtime,totime,sessionid);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_con_req (
     [exec]   2  	     id      number(19,0)    not null,
     [exec]   3  	     timestamp	     date    not null,
     [exec]   4  	     requestid	     number(19,0)    null,
     [exec]   5  	     contentid	     varchar2(255)   not null
     [exec]   6  ,constraint dps_con_req_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_cr_ts on dps_con_req (timestamp);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_con_req_sum (
     [exec]   2  	     contentid	     varchar2(255)   not null,
     [exec]   3  	     member  number(1,0)     default 0 not null,
     [exec]   4  	     summarycount    integer not null,
     [exec]   5  	     fromtime	     date    not null,
     [exec]   6  	     totime  date    not null
     [exec]   7  ,constraint dps_con_req_sum_c check (member in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_crs_ft on dps_con_req_sum (fromtime,totime);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_pgrp_req_sum (
     [exec]   2  	     groupname	     varchar2(64)    not null,
     [exec]   3  	     contentname     varchar2(255)   not null,
     [exec]   4  	     summarycount    integer not null,
     [exec]   5  	     fromtime	     date    not null,
     [exec]   6  	     totime  date    not null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_prs_ft on dps_pgrp_req_sum (fromtime,totime);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_pgrp_con_sum (
     [exec]   2  	     groupname	     varchar2(64)    not null,
     [exec]   3  	     contentname     varchar2(64)    not null,
     [exec]   4  	     summarycount    integer not null,
     [exec]   5  	     fromtime	     date    not null,
     [exec]   6  	     totime  date    not null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_pcs_ft on dps_pgrp_con_sum (fromtime,totime);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_log_id (
     [exec]   2  	     tablename	     varchar2(30)    not null,
     [exec]   3  	     nextid  number(19,0)    not null
     [exec]   4  ,constraint dps_log_id_p primary key (tablename));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- logging_init.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- This file contains SQL statements which will initialize theDPS logging/reporting tables.
     [exec] SQL> -- Set names of the default user event types, and initialize the log entry id counters
     [exec] SQL> 
     [exec] SQL> 	     INSERT INTO dps_event_type (id, name) VALUES (0, 'newsession');
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 	     INSERT INTO dps_event_type (id, name) VALUES (1, 'sessionexpiration');
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 	     INSERT INTO dps_event_type (id, name) VALUES (2, 'login');
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 	     INSERT INTO dps_event_type (id, name) VALUES (3, 'registration');
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 	     INSERT INTO dps_event_type (id, name) VALUES (4, 'logout');
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 	     INSERT INTO dps_log_id (tablename, nextid)
     [exec]   2  	     VALUES ('dps_user_event', 0);
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 	     INSERT INTO dps_log_id (tablename, nextid)
     [exec]   2  	     VALUES ('dps_request', 0);
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 	     INSERT INTO dps_log_id (tablename, nextid)
     [exec]   2  	     VALUES ('dps_con_req', 0);
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 	     COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- personalization_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- This file contains create table statements needed to configure your database for personzalization assets.This script will create tables and indexes associated with the user segment list manager.
     [exec] SQL> 
     [exec] SQL> create table dps_seg_list (
     [exec]   2  	     segment_list_id varchar2(40)    not null,
     [exec]   3  	     display_name    varchar2(256)   null,
     [exec]   4  	     description     varchar2(1024)  null,
     [exec]   5  	     folder_id	     varchar2(40)    null
     [exec]   6  ,constraint dps_seg_list_p primary key (segment_list_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_seg_list_name (
     [exec]   2  	     segment_list_id varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     group_name      varchar2(256)   not null
     [exec]   5  ,constraint dps_s_l_n_p primary key (segment_list_id,seq)
     [exec]   6  ,constraint dps_s_l_n_f1 foreign key (segment_list_id) references dps_seg_list (segment_list_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_seg_list_folder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     display_name    varchar2(256)   null,
     [exec]   4  	     description     varchar2(1024)  null,
     [exec]   5  	     parent_folder_id	     varchar2(40)    null
     [exec]   6  ,constraint dps_s_l_f_p primary key (folder_id)
     [exec]   7  ,constraint dps_s_l_f_f1 foreign key (parent_folder_id) references dps_seg_list_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_sgmlstfldr1_x on dps_seg_list_folder (parent_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- DSS
     [exec] SQL> @D:\ATG\ATG9.4\home/../DSS/sql/install/oracle/dss_ddl.sql
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- das_mappers.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_das_event (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_das_form (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     formname	     varchar2(254)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- dps_mappers.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_event (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     profileid	     varchar2(25)    null,
     [exec]   7  	     scenarioPathInfo	     varchar2(254)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_page_visit (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     path    varchar2(255)   null,
     [exec]   7  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_view_item (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     repositoryname  varchar2(255)   null,
     [exec]   7  	     folder  varchar2(255)   null,
     [exec]   8  	     itemtype	     varchar2(255)   null,
     [exec]   9  	     repositoryid    varchar2(255)   null,
     [exec]  10  	     itemdescriptor  varchar2(255)   null,
     [exec]  11  	     page    varchar2(255)   null,
     [exec]  12  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_click (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     destinationpath varchar2(255)   null,
     [exec]   7  	     sourcenames     varchar2(255)   null,
     [exec]   8  	     sourcepath      varchar2(255)   null,
     [exec]   9  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_referrer (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     referrerpath    varchar2(255)   null,
     [exec]   7  	     referrersite    varchar2(255)   null,
     [exec]   8  	     referrerpage    varchar2(255)   null,
     [exec]   9  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_inbound (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     messagesubject  varchar2(255)   null,
     [exec]   5  	     originalsubject varchar2(255)   null,
     [exec]   6  	     messagefrom     varchar2(64)    null,
     [exec]   7  	     messageto	     varchar2(255)   null,
     [exec]   8  	     messagecc	     varchar2(255)   null,
     [exec]   9  	     messagereplyto  varchar2(64)    null,
     [exec]  10  	     receiveddate    number(19,0)    null,
     [exec]  11  	     bounced varchar2(6)     null,
     [exec]  12  	     bounceemailaddr varchar2(255)   null,
     [exec]  13  	     bouncereplycode varchar2(10)    null,
     [exec]  14  	     bounceerrormess varchar2(255)   null,
     [exec]  15  	     bouncestatuscode	     varchar2(10)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_admin_reg (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     adminprofileid  varchar2(25)    null,
     [exec]   7  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_property (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     propertypath    varchar2(254)   null,
     [exec]   7  	     oldvalue	     varchar2(254)   null,
     [exec]   8  	     newvalue	     varchar2(254)   null,
     [exec]   9  	     changesign      varchar2(16)    null,
     [exec]  10  	     changeamount    number(19,7)    null,
     [exec]  11  	     changepercentage	     number(19,7)    null,
     [exec]  12  	     elementsadded   varchar2(254)   null,
     [exec]  13  	     elementsremoved varchar2(254)   null,
     [exec]  14  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_admin_prop (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     propertypath    varchar2(254)   null,
     [exec]   7  	     oldvalue	     varchar2(254)   null,
     [exec]   8  	     newvalue	     varchar2(254)   null,
     [exec]   9  	     changesign      varchar2(16)    null,
     [exec]  10  	     changeamount    number(19,7)    null,
     [exec]  11  	     changepercentage	     number(19,7)    null,
     [exec]  12  	     elementsadded   varchar2(254)   null,
     [exec]  13  	     elementsremoved varchar2(254)   null,
     [exec]  14  	     adminprofileid  varchar2(25)    null,
     [exec]  15  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_update (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     changedproperties	     varchar2(4000)  null,
     [exec]   7  	     oldvalues	     varchar2(4000)  null,
     [exec]   8  	     newvalues	     varchar2(4000)  null,
     [exec]   9  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_admin_up (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     changedproperties	     varchar2(4000)  null,
     [exec]   7  	     oldvalues	     varchar2(4000)  null,
     [exec]   8  	     newvalues	     varchar2(4000)  null,
     [exec]   9  	     adminprofileid  varchar2(25)    null,
     [exec]  10  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_scenario_value (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     scenario_value  varchar2(100)   null
     [exec]   5  ,constraint dps_scenario_val_p primary key (id,tag)
     [exec]   6  ,constraint dps_scenrvlid_f foreign key (id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_scenval_id on dps_scenario_value (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- dss_mappers.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_audit_trail (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     label   varchar2(255)   null,
     [exec]   5  	     profileid	     varchar2(25)    null,
     [exec]   6  	     segmentName     varchar2(254)   null,
     [exec]   7  	     processName     varchar2(254)   null,
     [exec]   8  	     sessionid	     varchar2(100)   null,
     [exec]   9  	     parentsessionid varchar2(100)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- scenario_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_coll_scenario (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null,
     [exec]   5  	     segment_name    varchar2(255)   null,
     [exec]   6  	     creator_id      varchar2(25)    null,
     [exec]   7  	     state   varchar2(16)    null
     [exec]   8  ,constraint dss_coll_scenari_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- user_id references the user table but because it is a backwards referencewe cannot have a REFERENCES(dps_user) here.
     [exec] SQL> 
     [exec] SQL> create table dss_ind_scenario (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null,
     [exec]   5  	     segment_name    varchar2(255)   null,
     [exec]   6  	     creator_id      varchar2(25)    null,
     [exec]   7  	     state   varchar2(16)    null,
     [exec]   8  	     user_id varchar2(25)    not null
     [exec]   9  ,constraint dss_ind_scenario_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dss_indscenario1_x on dss_ind_scenario (modification_time);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_scenario_strs (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_str     varchar2(255)   null
     [exec]   5  ,constraint dss_scenario_str_p primary key (id,tag)
     [exec]   6  ,constraint dss_scenrstrsid_f foreign key (id) references dss_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dss_scn_st_idx on dss_scenario_strs (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_scenario_bools (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_bool    number(1,0)     null
     [exec]   5  ,constraint dss_scenario_boo_p primary key (id,tag)
     [exec]   6  ,constraint dss_scenrblsid_f foreign key (id) references dss_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dss_scn_bo_idx on dss_scenario_bools (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_scenario_longs (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_long    number(19,0)    null
     [exec]   5  ,constraint dss_scenario_lon_p primary key (id,tag)
     [exec]   6  ,constraint dss_scenrlngsid_f foreign key (id) references dss_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dss_scn_lg_idx on dss_scenario_longs (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_scenario_dbls (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_dbl     number(15,4)    null
     [exec]   5  ,constraint dss_scenario_dbl_p primary key (id,tag)
     [exec]   6  ,constraint dss_scenrdblsid_f foreign key (id) references dss_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dss_scn_db_idx on dss_scenario_dbls (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_scenario_dates (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_date    date    null
     [exec]   5  ,constraint dss_scenario_dat_p primary key (id,tag)
     [exec]   6  ,constraint dss_scenrdtsid_f foreign key (id) references dss_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dss_scn_dt_idx on dss_scenario_dates (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_user_scenario (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     ind_scenario_id varchar2(25)    not null
     [exec]   4  ,constraint dps_user_scenari_p primary key (ind_scenario_id)
     [exec]   5  ,constraint dps_usrscnrid_f foreign key (id) references dps_user (id)
     [exec]   6  ,constraint dps_usrsind_scnr_f foreign key (ind_scenario_id) references dss_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_uscn_u_idx on dps_user_scenario (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_scenario_info (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     scenario_status integer null,
     [exec]   5  	     modification_time	     number(19,0)    null,
     [exec]   6  	     creation_time   number(19,0)    null,
     [exec]   7  	     author  varchar2(25)    null,
     [exec]   8  	     last_modified_by	     varchar2(25)    null,
     [exec]   9  	     sdl     blob    null,
     [exec]  10  	     psm_version     number(10)      null
     [exec]  11  ,constraint dss_scenario_inf_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_scen_mig_info (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_info_id	     varchar2(25)    not null,
     [exec]   4  	     scenario_name   varchar2(255)   null,
     [exec]   5  	     modification_time	     number(19,0)    null,
     [exec]   6  	     psm_version     number(10)      null,
     [exec]   7  	     sdl     blob    null,
     [exec]   8  	     migration_status	     number(10)      null
     [exec]   9  ,constraint dss_scenmiginfo_pk primary key (id)
     [exec]  10  ,constraint dss_scenmiginfo_fk foreign key (scenario_info_id) references dss_scenario_info (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dss_scenmiginfo_id on dss_scen_mig_info (scenario_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_mig_info_seg (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     idx     integer not null,
     [exec]   4  	     segment_name    varchar2(255)   null
     [exec]   5  ,constraint dss_mig_infoseg_pk primary key (id,idx)
     [exec]   6  ,constraint dss_mig_infoseg_fk foreign key (id) references dss_scen_mig_info (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_template_info (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     template_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null,
     [exec]   5  	     creation_time   number(19,0)    null,
     [exec]   6  	     author  varchar2(25)    null,
     [exec]   7  	     last_modified_by	     varchar2(25)    null,
     [exec]   8  	     sdl     blob    null
     [exec]   9  ,constraint dss_template_inf_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_coll_trans (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null,
     [exec]   5  	     server_id	     varchar2(40)    null,
     [exec]   6  	     message_bean    blob    null,
     [exec]   7  	     event_type      varchar2(255)   null,
     [exec]   8  	     segment_name    varchar2(255)   null,
     [exec]   9  	     state   varchar2(16)    null,
     [exec]  10  	     coll_scenario_id	     varchar2(25)    null,
     [exec]  11  	     step    integer null,
     [exec]  12  	     current_count   integer null,
     [exec]  13  	     last_query_id   varchar2(25)    null
     [exec]  14  ,constraint dss_coll_trans_p primary key (id)
     [exec]  15  ,constraint dss_collcoll_scn_f foreign key (coll_scenario_id) references dss_coll_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dss_ctrcid_idx on dss_coll_trans (coll_scenario_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_ind_trans (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null,
     [exec]   5  	     server_id	     varchar2(40)    null,
     [exec]   6  	     message_bean    blob    null,
     [exec]   7  	     event_type      varchar2(255)   null,
     [exec]   8  	     segment_name    varchar2(255)   null,
     [exec]   9  	     state   varchar2(16)    null,
     [exec]  10  	     last_query_id   varchar2(25)    null
     [exec]  11  ,constraint dss_ind_trans_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_deletion (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null
     [exec]   5  ,constraint dss_deletion_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_server_id (
     [exec]   2  	     server_id	     varchar2(40)    not null,
     [exec]   3  	     server_type     integer not null
     [exec]   4  ,constraint dss_server_id_p primary key (server_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_del_seg_name (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     idx     integer not null,
     [exec]   4  	     segment_name    varchar2(255)   null
     [exec]   5  ,constraint dss_del_seg_name_p primary key (id,idx));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- migration_info_id references the migration info table, but we don't have aREFERENCES dss_scen_mig_info(id) here, because we want to be ableto delete the migration info without deleting this row
     [exec] SQL> 
     [exec] SQL> create table dss_migration (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     old_mod_time    number(19,0)    null,
     [exec]   5  	     new_mod_time    number(19,0)    null,
     [exec]   6  	     migration_info_id	     varchar2(25)    null
     [exec]   7  ,constraint dss_migration_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_mig_seg_name (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     idx     number(10)      not null,
     [exec]   4  	     segment_name    varchar2(255)   null
     [exec]   5  ,constraint dss_mig_segname_pk primary key (id,idx)
     [exec]   6  ,constraint dss_mig_segname_fk foreign key (id) references dss_migration (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_xref (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     reference_type  varchar2(30)    null,
     [exec]   5  	     reference_target	     varchar2(255)   null
     [exec]   6  ,constraint dss_xref_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- user_id references the user table but because it is a backwards referencewe cannot have a REFERENCES(dps_user) here.
     [exec] SQL> 
     [exec] SQL> create table dss_profile_slot (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     slot_name	     varchar2(255)   null,
     [exec]   4  	     item_offset     number(19,0)    null,
     [exec]   5  	     user_id varchar2(25)    not null
     [exec]   6  ,constraint dss_profile_slot_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_user_slot (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     profile_slot_id varchar2(25)    not null
     [exec]   4  ,constraint dps_user_slot_p primary key (id,profile_slot_id)
     [exec]   5  ,constraint dps_usrsltid_f foreign key (id) references dps_user (id)
     [exec]   6  ,constraint dps_usrsprofl_sl_f foreign key (profile_slot_id) references dss_profile_slot (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_usr_sltprfl_id on dps_user_slot (profile_slot_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_slot_items (
     [exec]   2  	     slot_id varchar2(25)    not null,
     [exec]   3  	     item_id varchar2(255)   null,
     [exec]   4  	     idx     integer not null
     [exec]   5  ,constraint dss_slot_items_p primary key (slot_id,idx)
     [exec]   6  ,constraint dss_slotslot_d_f foreign key (slot_id) references dss_profile_slot (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_slot_priority (
     [exec]   2  	     slot_id varchar2(25)    not null,
     [exec]   3  	     idx     integer not null,
     [exec]   4  	     priority	     number(19,0)    not null
     [exec]   5  ,constraint dss_slot_priorit_p primary key (slot_id,idx)
     [exec]   6  ,constraint dss_slotpslot_d_f foreign key (slot_id) references dss_profile_slot (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- markers_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_markers (
     [exec]   2  	     marker_id	     varchar2(40)    not null,
     [exec]   3  	     marker_key      varchar2(100)   not null,
     [exec]   4  	     marker_value    varchar2(100)   null,
     [exec]   5  	     marker_data     varchar2(100)   null,
     [exec]   6  	     creation_date   timestamp	     null,
     [exec]   7  	     version number(10)      not null,
     [exec]   8  	     marker_type     number(10)      null
     [exec]   9  ,constraint dps_markers_p primary key (marker_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_usr_markers (
     [exec]   2  	     profile_id      varchar2(40)    not null,
     [exec]   3  	     marker_id	     varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null
     [exec]   5  ,constraint dps_usr_markers_p primary key (profile_id,sequence_num)
     [exec]   6  ,constraint dpsusrmarkers_u_f foreign key (profile_id) references dps_user (id)
     [exec]   7  ,constraint dpsusrmarkers_m_f foreign key (marker_id) references dps_markers (marker_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpsusrmarkers1_ix on dps_usr_markers (marker_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- business_process_rpt_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table drpt_stage_reached (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     owner_id	     varchar2(40)    not null,
     [exec]   4  	     process_start_time      date    not null,
     [exec]   5  	     event_time      date    not null,
     [exec]   6  	     bp_name varchar2(255)   not null,
     [exec]   7  	     bp_stage	     varchar2(255)   null,
     [exec]   8  	     is_transient    number(1,0)     not null,
     [exec]   9  	     bp_stage_sequence	     number(10)      not null
     [exec]  10  ,constraint drpt_bpstage_c check (is_transient in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- profile_bp_markers_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_user_bpmarkers (
     [exec]   2  	     marker_id	     varchar2(40)    not null,
     [exec]   3  	     profile_id      varchar2(40)    not null,
     [exec]   4  	     marker_key      varchar2(100)   not null,
     [exec]   5  	     marker_value    varchar2(100)   null,
     [exec]   6  	     marker_data     varchar2(100)   null,
     [exec]   7  	     creation_date   timestamp	     null,
     [exec]   8  	     version number(10)      not null,
     [exec]   9  	     marker_type     number(10)      null
     [exec]  10  ,constraint dssprofilebp_p primary key (marker_id,profile_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- DCS
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/sql/install/oracle/dcs_ddl.sql
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- commerce_user.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_credit_card (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     credit_card_number      varchar2(40)    null,
     [exec]   4  	     credit_card_type	     varchar2(40)    null,
     [exec]   5  	     expiration_month	     varchar2(20)    null,
     [exec]   6  	     exp_day_of_month	     varchar2(20)    null,
     [exec]   7  	     expiration_year varchar2(20)    null,
     [exec]   8  	     billing_addr    varchar2(40)    null
     [exec]   9  ,constraint dps_credit_card_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_crcdba_idx on dps_credit_card (billing_addr);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_user (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     allow_partial_ship      number(1,0)     null,
     [exec]   4  	     default_creditcard      varchar2(40)    null,
     [exec]   5  	     daytime_phone_num	     varchar2(20)    null,
     [exec]   6  	     express_checkout	     number(1,0)     null,
     [exec]   7  	     default_carrier varchar2(256)   null
     [exec]   8  ,constraint dcs_user_p primary key (user_id)
     [exec]   9  ,constraint dcs_usrdeflt_cr_f foreign key (default_creditcard) references dps_credit_card (id)
     [exec]  10  ,constraint dcs_user1_c check (allow_partial_ship in (0,1))
     [exec]  11  ,constraint dcs_user2_c check (express_checkout in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_usrdcc_idx on dcs_user (default_creditcard);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_usr_creditcard (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     credit_card_id  varchar2(40)    not null
     [exec]   5  ,constraint dps_usr_creditca_p primary key (user_id,tag)
     [exec]   6  ,constraint dps_usrccredt_cr_f foreign key (credit_card_id) references dps_credit_card (id)
     [exec]   7  ,constraint dps_usrcusr_d_f foreign key (user_id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_ucccid_idx on dps_usr_creditcard (credit_card_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dps_uccuid_idx on dps_usr_creditcard (user_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- product_catalog_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_folder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     description     varchar2(254)   null,
     [exec]   8  	     name    varchar2(254)   not null,
     [exec]   9  	     path    varchar2(254)   not null,
     [exec]  10  	     parent_folder_id	     varchar2(40)    null
     [exec]  11  ,constraint dcs_folder_p primary key (folder_id)
     [exec]  12  ,constraint dcs_foldparnt_fl_f foreign key (parent_folder_id) references dcs_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index fldr_pfldrid_idx on dcs_folder (parent_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index fldr_end_dte_idx on dcs_folder (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index fldr_path_idx on dcs_folder (path);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index fldr_strt_dte_idx on dcs_folder (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_media (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     description     varchar2(254)   null,
     [exec]   8  	     name    varchar2(254)   not null,
     [exec]   9  	     path    varchar2(254)   not null,
     [exec]  10  	     parent_folder_id	     varchar2(40)    not null,
     [exec]  11  	     media_type      integer null
     [exec]  12  ,constraint dcs_media_p primary key (media_id)
     [exec]  13  ,constraint dcs_medparnt_fl_f foreign key (parent_folder_id) references dcs_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index med_pfldrid_idx on dcs_media (parent_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index med_end_dte_idx on dcs_media (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index med_path_idx on dcs_media (path);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index med_strt_dte_idx on dcs_media (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index med_type_idx on dcs_media (media_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_media_ext (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     url     varchar2(254)   not null
     [exec]   4  ,constraint dcs_media_ext_p primary key (media_id)
     [exec]   5  ,constraint dcs_medxtmed_d_f foreign key (media_id) references dcs_media (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_media_bin (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     length  integer not null,
     [exec]   4  	     last_modified   date    not null,
     [exec]   5  	     data    blob    not null
     [exec]   6  ,constraint dcs_media_bin_p primary key (media_id)
     [exec]   7  ,constraint dcs_medbnmed_d_f foreign key (media_id) references dcs_media (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_media_txt (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     length  integer not null,
     [exec]   4  	     last_modified   date    not null,
     [exec]   5  	     data    clob    not null
     [exec]   6  ,constraint dcs_media_txt_p primary key (media_id)
     [exec]   7  ,constraint dcs_medtxtmed_d_f foreign key (media_id) references dcs_media (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_category (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     catalog_id      varchar2(40)    null,
     [exec]   5  	     creation_date   date    null,
     [exec]   6  	     start_date      date    null,
     [exec]   7  	     end_date	     date    null,
     [exec]   8  	     display_name    varchar2(254)   null,
     [exec]   9  	     description     varchar2(254)   null,
     [exec]  10  	     long_description	     clob    null,
     [exec]  11  	     parent_cat_id   varchar2(40)    null,
     [exec]  12  	     category_type   integer null,
     [exec]  13  	     root_category   number(1,0)     null
     [exec]  14  ,constraint dcs_category_p primary key (category_id)
     [exec]  15  ,constraint dcs_category_c check (root_category in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index cat_end_dte_idx on dcs_category (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index cat_pcatid_idx on dcs_category (parent_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index cat_strt_dte_idx on dcs_category (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index cat_type_idx on dcs_category (category_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_category_acl (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     item_acl	     varchar2(1024)  null
     [exec]   4  ,constraint dcs_category_acl_p primary key (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_product (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     display_name    varchar2(254)   null,
     [exec]   8  	     description     varchar2(254)   null,
     [exec]   9  	     long_description	     clob    null,
     [exec]  10  	     parent_cat_id   varchar2(40)    null,
     [exec]  11  	     product_type    integer null,
     [exec]  12  	     admin_display   varchar2(254)   null,
     [exec]  13  	     nonreturnable   number(1,0)     null,
     [exec]  14  	     brand   varchar2(254)   null,
     [exec]  15  	     disallow_recommend      number(1,0)     null
     [exec]  16  ,constraint dcs_product_p primary key (product_id)
     [exec]  17  ,constraint dcs_product_c check (nonreturnable in (0,1))
     [exec]  18  ,constraint dcs_product1_c check (disallow_recommend in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index prd_end_dte_idx on dcs_product (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prd_pcatid_idx on dcs_product (parent_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prd_strt_dte_idx on dcs_product (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prd_type_idx on dcs_product (product_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_product_acl (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     item_acl	     varchar2(1024)  null
     [exec]   4  ,constraint dcs_product_acl_p primary key (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     display_name    varchar2(254)   null,
     [exec]   8  	     description     varchar2(254)   null,
     [exec]   9  	     sku_type	     integer null,
     [exec]  10  	     wholesale_price number(19,7)    null,
     [exec]  11  	     list_price      number(19,7)    null,
     [exec]  12  	     sale_price      number(19,7)    null,
     [exec]  13  	     on_sale number(1,0)     null,
     [exec]  14  	     tax_status      integer null,
     [exec]  15  	     fulfiller	     integer null,
     [exec]  16  	     item_acl	     varchar2(1024)  null,
     [exec]  17  	     nonreturnable   number(1,0)     null
     [exec]  18  ,constraint dcs_sku_p primary key (sku_id)
     [exec]  19  ,constraint dcs_sku_c check (on_sale in (0,1))
     [exec]  20  ,constraint dcs_sku1_c check (nonreturnable in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sku_end_dte_idx on dcs_sku (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sku_lstprice_idx on dcs_sku (list_price);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sku_sleprice_idx on dcs_sku (sale_price);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sku_strt_dte_idx on dcs_sku (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sku_type_idx on dcs_sku (sku_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_groups (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     child_prd_group varchar2(254)   null,
     [exec]   4  	     child_cat_group varchar2(254)   null,
     [exec]   5  	     related_cat_group	     varchar2(254)   null
     [exec]   6  ,constraint dcs_cat_groups_p primary key (category_id)
     [exec]   7  ,constraint dcs_catgcatgry_d_f foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_chldprd (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     child_prd_id    varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_chldprd_p primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_catccatgry_d_f foreign key (category_id) references dcs_category (category_id)
     [exec]   7  ,constraint dcs_catcchild_pr_f foreign key (child_prd_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_chldprd_cpi_idx on dcs_cat_chldprd (child_prd_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_chldprd_cid_idx on dcs_cat_chldprd (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_chldcat (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     child_cat_id    varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_chldcat_p primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_catcchild_ct_f foreign key (child_cat_id) references dcs_category (category_id)
     [exec]   7  ,constraint dcs_chlccatgry_d_f foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_chldcat_cci_idx on dcs_cat_chldcat (child_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_chldcat_cid_idx on dcs_cat_chldcat (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_ancestors (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     anc_cat_id      varchar2(40)    not null
     [exec]   4  ,constraint dcs_cat_ancestor_p primary key (category_id,anc_cat_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_ct_anc_cat_id on dcs_cat_ancestors (anc_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_ct_cat_id on dcs_cat_ancestors (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_rltdcat (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     related_cat_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_rltdcat_p primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_catrcatgry_d_f foreign key (category_id) references dcs_category (category_id)
     [exec]   7  ,constraint dcs_catrreltd_ct_f foreign key (related_cat_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_rltdcat_rci_idx on dcs_cat_rltdcat (related_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_rltdcat_cid_idx on dcs_cat_rltdcat (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_keywrds (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     keyword varchar2(254)   not null
     [exec]   5  ,constraint dcs_cat_keywrds_p primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_catkcatgry_d_f foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index cat_keywrds_idx on dcs_cat_keywrds (keyword);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_keywrds_cid_idx on dcs_cat_keywrds (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_media (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     template_id     varchar2(40)    null,
     [exec]   4  	     thumbnail_image_id      varchar2(40)    null,
     [exec]   5  	     small_image_id  varchar2(40)    null,
     [exec]   6  	     large_image_id  varchar2(40)    null
     [exec]   7  ,constraint dcs_cat_media_p primary key (category_id)
     [exec]   8  ,constraint dcs_catmcatgry_d_f foreign key (category_id) references dcs_category (category_id)
     [exec]   9  ,constraint dcs_catmlarg_mgd_f foreign key (large_image_id) references dcs_media (media_id)
     [exec]  10  ,constraint dcs_catmsmall_mg_f foreign key (small_image_id) references dcs_media (media_id)
     [exec]  11  ,constraint dcs_catmtemplt_d_f foreign key (template_id) references dcs_media (media_id)
     [exec]  12  ,constraint dcs_catmthumbnl__f foreign key (thumbnail_image_id) references dcs_media (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_mdia_lrimid_idx on dcs_cat_media (large_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_mdia_smimid_idx on dcs_cat_media (small_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_mdia_tmplid_idx on dcs_cat_media (template_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_mdia_thimid_idx on dcs_cat_media (thumbnail_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_aux_media (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     media_id	     varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_aux_medi_p primary key (category_id,tag)
     [exec]   6  ,constraint dcs_catxcatgry_d_f foreign key (category_id) references dcs_category (category_id)
     [exec]   7  ,constraint dcs_catxmdmed_d_f foreign key (media_id) references dcs_media (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_aux_mdia_mi_idx on dcs_cat_aux_media (media_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_aux_mdia_ci_idx on dcs_cat_aux_media (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_keywrds (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     keyword varchar2(254)   not null
     [exec]   5  ,constraint dcs_prd_keywrds_p primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prdkprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index prd_keywrds_idx on dcs_prd_keywrds (keyword);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_keywrds_pid_idx on dcs_prd_keywrds (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_media (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     template_id     varchar2(40)    null,
     [exec]   4  	     thumbnail_image_id      varchar2(40)    null,
     [exec]   5  	     small_image_id  varchar2(40)    null,
     [exec]   6  	     large_image_id  varchar2(40)    null
     [exec]   7  ,constraint dcs_prd_media_p primary key (product_id)
     [exec]   8  ,constraint dcs_prdmlarg_mgd_f foreign key (large_image_id) references dcs_media (media_id)
     [exec]   9  ,constraint dcs_prdmsmall_mg_f foreign key (small_image_id) references dcs_media (media_id)
     [exec]  10  ,constraint dcs_prdmtemplt_d_f foreign key (template_id) references dcs_media (media_id)
     [exec]  11  ,constraint dcs_prdmthumbnl__f foreign key (thumbnail_image_id) references dcs_media (media_id)
     [exec]  12  ,constraint dcs_prdmprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_mdia_lrimid_idx on dcs_prd_media (large_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_mdia_smimid_idx on dcs_prd_media (small_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_mdia_tmplid_idx on dcs_prd_media (template_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_mdia_thimid_idx on dcs_prd_media (thumbnail_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_aux_media (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     media_id	     varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_aux_medi_p primary key (product_id,tag)
     [exec]   6  ,constraint dcs_prdaxmdmed_d_f foreign key (media_id) references dcs_media (media_id)
     [exec]   7  ,constraint dcs_prdaprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_aux_mdia_mi_idx on dcs_prd_aux_media (media_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_aux_mdia_pi_idx on dcs_prd_aux_media (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_chldsku (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     sku_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_chldsku_p primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prdcprodct_d_f foreign key (product_id) references dcs_product (product_id)
     [exec]   7  ,constraint dcs_prdcsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_chldsku_sid_idx on dcs_prd_chldsku (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_chldsku_pid_idx on dcs_prd_chldsku (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_skuattr (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     attribute_name  varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_skuattr_p primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prdsprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_skuattr_pid_idx on dcs_prd_skuattr (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_groups (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     related_prd_group	     varchar2(254)   null,
     [exec]   4  	     upsl_prd_group  varchar2(254)   null
     [exec]   5  ,constraint dcs_prd_groups_p primary key (product_id)
     [exec]   6  ,constraint dcs_prdgprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_rltdprd (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     related_prd_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_rltdprd_p primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prdrprodct_d_f foreign key (product_id) references dcs_product (product_id)
     [exec]   7  ,constraint dcs_prdrreltd_pr_f foreign key (related_prd_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_rltdprd_rpi_idx on dcs_prd_rltdprd (related_prd_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_rltdprd_pid_idx on dcs_prd_rltdprd (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_upslprd (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     upsell_prd_id   varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_upslprd_p primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prduprodct_d_f foreign key (product_id) references dcs_product (product_id)
     [exec]   7  ,constraint dcs_prdureltd_pr_f foreign key (upsell_prd_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_upslprd_upi_idx on dcs_prd_upslprd (upsell_prd_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_ancestors (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     anc_cat_id      varchar2(40)    not null
     [exec]   4  ,constraint dcs_prd_ancestor_p primary key (product_id,anc_cat_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_prd_anc_cat_id on dcs_prd_ancestors (anc_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_prd_prd_id on dcs_prd_ancestors (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_attr (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     attribute_name  varchar2(42)    not null,
     [exec]   4  	     attribute_value varchar2(254)   not null
     [exec]   5  ,constraint dcs_sku_attr_p primary key (sku_id,attribute_name)
     [exec]   6  ,constraint dcs_skuttrsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sku_attr_skuid_idx on dcs_sku_attr (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_link (
     [exec]   2  	     sku_link_id     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     display_name    varchar2(254)   null,
     [exec]   8  	     description     varchar2(254)   null,
     [exec]   9  	     quantity	     integer not null,
     [exec]  10  	     bundle_item     varchar2(40)    not null,
     [exec]  11  	     item_acl	     varchar2(1024)  null
     [exec]  12  ,constraint dcs_sku_link_p primary key (sku_link_id)
     [exec]  13  ,constraint dcs_skulbundl_tm_f foreign key (bundle_item) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_link_bndlid_idx on dcs_sku_link (bundle_item);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index skl_end_dte_idx on dcs_sku_link (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index skl_strt_dte_idx on dcs_sku_link (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_bndllnk (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     sku_link_id     varchar2(40)    not null
     [exec]   5  ,constraint dcs_sku_bndllnk_p primary key (sku_id,sequence_num)
     [exec]   6  ,constraint dcs_skubsku_d_f foreign key (sku_id) references dcs_sku (sku_id)
     [exec]   7  ,constraint dcs_skubsku_lnkd_f foreign key (sku_link_id) references dcs_sku_link (sku_link_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_bndllnk_sli_idx on dcs_sku_bndllnk (sku_link_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sk_bndllnk_sid_idx on dcs_sku_bndllnk (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_media (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     template_id     varchar2(40)    null,
     [exec]   4  	     thumbnail_image_id      varchar2(40)    null,
     [exec]   5  	     small_image_id  varchar2(40)    null,
     [exec]   6  	     large_image_id  varchar2(40)    null
     [exec]   7  ,constraint dcs_sku_media_p primary key (sku_id)
     [exec]   8  ,constraint dcs_skumlarg_mgd_f foreign key (large_image_id) references dcs_media (media_id)
     [exec]   9  ,constraint dcs_skumsmall_mg_f foreign key (small_image_id) references dcs_media (media_id)
     [exec]  10  ,constraint dcs_skumtemplt_d_f foreign key (template_id) references dcs_media (media_id)
     [exec]  11  ,constraint dcs_skumthumbnl__f foreign key (thumbnail_image_id) references dcs_media (media_id)
     [exec]  12  ,constraint dcs_skumdsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_mdia_lrimid_idx on dcs_sku_media (large_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sk_mdia_smimid_idx on dcs_sku_media (small_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sk_mdia_tmplid_idx on dcs_sku_media (template_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sk_mdia_thimid_idx on dcs_sku_media (thumbnail_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_aux_media (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     media_id	     varchar2(40)    not null
     [exec]   5  ,constraint dcs_sku_aux_medi_p primary key (sku_id,tag)
     [exec]   6  ,constraint dcs_skuxmdmed_d_f foreign key (media_id) references dcs_media (media_id)
     [exec]   7  ,constraint dcs_skuxmdsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_aux_mdia_mi_idx on dcs_sku_aux_media (media_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sk_aux_mdia_si_idx on dcs_sku_aux_media (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_replace (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     replacement     varchar2(40)    not null
     [exec]   5  ,constraint dcs_sku_replace_p primary key (sku_id,sequence_num)
     [exec]   6  ,constraint dcs_skurplcsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_replace_sid_idx on dcs_sku_replace (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_conf (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     config_props    varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcs_sku_conf_p primary key (sku_id,sequence_num)
     [exec]   6  ,constraint dcs_skucnfsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_config_prop (
     [exec]   2  	     config_prop_id  varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     display_name    varchar2(40)    null,
     [exec]   5  	     description     varchar2(255)   null,
     [exec]   6  	     item_acl	     varchar2(1024)  null
     [exec]   7  ,constraint dcs_config_prop_p primary key (config_prop_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_conf_options (
     [exec]   2  	     config_prop_id  varchar2(40)    not null,
     [exec]   3  	     config_options  varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcs_conf_options_p primary key (config_prop_id,sequence_num)
     [exec]   6  ,constraint dcs_confconfg_pr_f foreign key (config_prop_id) references dcs_config_prop (config_prop_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_config_opt (
     [exec]   2  	     config_opt_id   varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     display_name    varchar2(40)    null,
     [exec]   5  	     description     varchar2(255)   null,
     [exec]   6  	     sku     varchar2(40)    null,
     [exec]   7  	     product varchar2(40)    null,
     [exec]   8  	     price   number(19,7)    null,
     [exec]   9  	     item_acl	     varchar2(1024)  null
     [exec]  10  ,constraint dcs_config_opt_p primary key (config_opt_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_conf_prod_idx on dcs_config_opt (product);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_conf_sku_idx on dcs_config_opt (sku);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_foreign_cat (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     name    varchar2(100)   null,
     [exec]   6  	     description     varchar2(255)   null,
     [exec]   7  	     host    varchar2(100)   null,
     [exec]   8  	     port    integer null,
     [exec]   9  	     base_url	     varchar2(255)   null,
     [exec]  10  	     return_url      varchar2(255)   null,
     [exec]  11  	     item_acl	     varchar2(1024)  null
     [exec]  12  ,constraint dcs_foreign_cat_p primary key (catalog_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- inventory_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_inventory (
     [exec]   2  	     inventory_id    varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     inventory_lock  varchar2(20)    null,
     [exec]   5  	     creation_date   date    null,
     [exec]   6  	     start_date      date    null,
     [exec]   7  	     end_date	     date    null,
     [exec]   8  	     display_name    varchar2(254)   null,
     [exec]   9  	     description     varchar2(254)   null,
     [exec]  10  	     catalog_ref_id  varchar2(40)    not null,
     [exec]  11  	     avail_status    integer not null,
     [exec]  12  	     availability_date	     date    null,
     [exec]  13  	     stock_level     integer null,
     [exec]  14  	     backorder_level integer null,
     [exec]  15  	     preorder_level  integer null,
     [exec]  16  	     stock_thresh    integer null,
     [exec]  17  	     backorder_thresh	     integer null,
     [exec]  18  	     preorder_thresh integer null
     [exec]  19  ,constraint dcs_inventory_p primary key (inventory_id)
     [exec]  20  ,constraint inv_catrefid_idx unique (catalog_ref_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index inv_end_dte_idx on dcs_inventory (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index inv_strt_dte_idx on dcs_inventory (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- promotion_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_promotion (
     [exec]   2  	     promotion_id    varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     display_name    varchar2(254)   null,
     [exec]   8  	     description     varchar2(254)   null,
     [exec]   9  	     promotion_type  integer null,
     [exec]  10  	     enabled number(1,0)     null,
     [exec]  11  	     begin_usable    date    null,
     [exec]  12  	     end_usable      date    null,
     [exec]  13  	     priority	     integer null,
     [exec]  14  	     global  number(1,0)     null,
     [exec]  15  	     anon_profile    number(1,0)     null,
     [exec]  16  	     allow_multiple  number(1,0)     null,
     [exec]  17  	     uses    integer null,
     [exec]  18  	     rel_expiration  number(1,0)     null,
     [exec]  19  	     time_until_expire	     integer null
     [exec]  20  ,constraint dcs_promotion_p primary key (promotion_id)
     [exec]  21  ,constraint dcs_promotion1_c check (enabled in (0,1))
     [exec]  22  ,constraint dcs_promotion2_c check (global in (0,1))
     [exec]  23  ,constraint dcs_promotion3_c check (anon_profile in (0,1))
     [exec]  24  ,constraint dcs_promotion4_c check (allow_multiple in (0,1))
     [exec]  25  ,constraint dcs_promotion5_c check (rel_expiration in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index prmo_bgin_use_idx on dcs_promotion (begin_usable);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prmo_end_dte_idx on dcs_promotion (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prmo_end_use_idx on dcs_promotion (end_usable);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prmo_strt_dte_idx on dcs_promotion (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_promo_media (
     [exec]   2  	     promotion_id    varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     media_id	     varchar2(40)    not null
     [exec]   5  ,constraint dcs_promo_media_p primary key (promotion_id,tag)
     [exec]   6  ,constraint dcs_prommdmed_d_f foreign key (media_id) references dcs_media (media_id)
     [exec]   7  ,constraint dcs_prompromtn_d_f foreign key (promotion_id) references dcs_promotion (promotion_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index promo_mdia_mid_idx on dcs_promo_media (media_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index promo_mdia_pid_idx on dcs_promo_media (promotion_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_discount_promo (
     [exec]   2  	     promotion_id    varchar2(40)    not null,
     [exec]   3  	     calculator      varchar2(254)   not null,
     [exec]   4  	     adjuster	     number(19,7)    not null,
     [exec]   5  	     pmdl_rule	     clob    not null,
     [exec]   6  	     one_use number(1,0)     null
     [exec]   7  ,constraint dcs_discount_pro_p primary key (promotion_id)
     [exec]   8  ,constraint dcs_discpromtn_d_f foreign key (promotion_id) references dcs_promotion (promotion_id)
     [exec]   9  ,constraint dcs_discount_pro_c check (one_use in (0, 1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_promo_upsell (
     [exec]   2  	     promotion_id    varchar2(40)    not null,
     [exec]   3  	     upsell  number(1,0)     null
     [exec]   4  ,constraint dcs_promo_upsell_p primary key (promotion_id)
     [exec]   5  ,constraint dcs_proupsell_d_f foreign key (promotion_id) references dcs_promotion (promotion_id)
     [exec]   6  ,constraint dcs_promo_upsell_c check (upsell in (0, 1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_upsell_action (
     [exec]   2  	     action_id	     varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     name    varchar2(40)    not null,
     [exec]   5  	     upsell_prd_grp  clob    null
     [exec]   6  ,constraint dcs_upsell_actn_p primary key (action_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_close_qualif (
     [exec]   2  	     close_qualif_id varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     name    varchar2(40)    not null,
     [exec]   5  	     priority	     number(10)      null,
     [exec]   6  	     qualifier	     clob    null,
     [exec]   7  	     upsell_media    varchar2(40)    null,
     [exec]   8  	     upsell_action   varchar2(40)    null
     [exec]   9  ,constraint dcs_close_qualif_p primary key (close_qualif_id)
     [exec]  10  ,constraint dcs_cq_media_d_f foreign key (upsell_media) references dcs_media (media_id)
     [exec]  11  ,constraint dcs_cq_action_d_f foreign key (upsell_action) references dcs_upsell_action (action_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_closequalif2_x on dcs_close_qualif (upsell_media);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_closequalif1_x on dcs_close_qualif (upsell_action);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prm_cls_qlf (
     [exec]   2  	     promotion_id    varchar2(40)    not null,
     [exec]   3  	     closeness_qualif	     varchar2(40)    not null
     [exec]   4  ,constraint dcs_promo_cq_d_f foreign key (promotion_id) references dcs_promotion (promotion_id)
     [exec]   5  ,constraint dcs_prmclsqlf_d_f foreign key (closeness_qualif) references dcs_close_qualif (close_qualif_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_prm_cls_qlf2_x on dcs_prm_cls_qlf (promotion_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_prm_cls_qlf1_x on dcs_prm_cls_qlf (closeness_qualif);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_upsell_prods (
     [exec]   2  	     action_id	     varchar2(40)    not null,
     [exec]   3  	     product_id      varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null
     [exec]   5  ,constraint dcs_upsell_prods_p primary key (action_id,product_id)
     [exec]   6  ,constraint dcs_ups_prod_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_upsellprods1_x on dcs_upsell_prods (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- user_promotion_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- The promotion line was commented out to allow the profile and promotion tables to be delinked. The promotion tables are intended to be used as a "read-only" table on the production servers. The promotion (and product catalog) tables are promoted and made active on the production system through copy-switch. In doing so, the profile tables and the promotion tables cannot be in the same database, and therefore we must remove this referece. However if you are not going to use copy-switch for the promotions, then you can add this reference back in.	  promotion		     VARCHAR(40)	     NOT NULL	     REFERENCES dcs_promotion(promotion_id),
     [exec] SQL> 
     [exec] SQL> create table dcs_usr_promostat (
     [exec]   2  	     status_id	     varchar2(40)    not null,
     [exec]   3  	     profile_id      varchar2(40)    not null,
     [exec]   4  	     promotion	     varchar2(40)    not null,
     [exec]   5  	     num_uses	     integer null,
     [exec]   6  	     expirationDate  date    null
     [exec]   7  ,constraint dcs_usr_promosta_p primary key (status_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index promostat_prof_idx on dcs_usr_promostat (profile_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index usr_prmstat_pr_idx on dcs_usr_promostat (promotion);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_usr_actvpromo (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     promo_status_id varchar2(40)    not null
     [exec]   5  ,constraint dcs_usr_actvprom_p primary key (id,sequence_num));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index usr_actvprm_id_idx on dcs_usr_actvpromo (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- The promotion_id column was commented out to allow the profile and promotion tables to be delinked. The promotion tables are intended to be used as a "read-only" table on the production servers. The promotion (and product catalog) tables are promoted and made active on the production system through copy-switch. In doing so, the profile tables and the promotion tables cannot be in the same database, and therefore we must remove this referece. However if you are not going to use copy-switch for the promotions, then you can add this reference back in.	  promotion_id			  VARCHAR(40)		  NOT NULL	  REFERENCES dcs_promotion(promotion_id),
     [exec] SQL> 
     [exec] SQL> create table dcs_usr_usedpromo (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     promotion_id    varchar2(40)    not null
     [exec]   4  ,constraint dcs_usr_usedprom_p primary key (id,promotion_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index usr_usedprm_id_idx on dcs_usr_usedpromo (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index usr_usedprm_pi_idx on dcs_usr_usedpromo (promotion_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- user_giftlist_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_giftlist (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     owner_id	     varchar2(40)    null,
     [exec]   4  	     is_public	     number(1,0)     not null,
     [exec]   5  	     is_published    number(1,0)     not null,
     [exec]   6  	     event_name      varchar2(64)    null,
     [exec]   7  	     event_type      integer null,
     [exec]   8  	     event_date      date    null,
     [exec]   9  	     comments	     varchar2(254)   null,
     [exec]  10  	     description     varchar2(254)   null,
     [exec]  11  	     instructions    varchar2(254)   null,
     [exec]  12  	     creation_date   date    null,
     [exec]  13  	     last_modified_date      date    null,
     [exec]  14  	     shipping_addr_id	     varchar2(40)    null
     [exec]  15  ,constraint dcs_giftlist_p primary key (id)
     [exec]  16  ,constraint dcs_giftlist1_c check (is_public in (0,1))
     [exec]  17  ,constraint dcs_giftlist2_c check (is_published in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index gftlst_shpadid_idx on dcs_giftlist (shipping_addr_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index gft_evnt_name_idx on dcs_giftlist (event_name);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index gft_evnt_type_idx on dcs_giftlist (event_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index gft_owner_id_idx on dcs_giftlist (owner_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_giftinst (
     [exec]   2  	     giftlist_id     varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     special_inst    varchar2(254)   null
     [exec]   5  ,constraint dcs_giftinst_p primary key (giftlist_id,tag)
     [exec]   6  ,constraint dcs_giftgiftlst__f foreign key (giftlist_id) references dcs_giftlist (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index giftinst_gflid_idx on dcs_giftinst (giftlist_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_giftitem (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     catalog_ref_id  varchar2(40)    null,
     [exec]   4  	     product_id      varchar2(40)    null,
     [exec]   5  	     display_name    varchar2(254)   null,
     [exec]   6  	     description     varchar2(254)   null,
     [exec]   7  	     quantity_desired	     integer null,
     [exec]   8  	     quantity_purchased      integer null
     [exec]   9  ,constraint dcs_giftitem_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index giftitem_cat_idx on dcs_giftitem (catalog_ref_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index giftitem_prod_idx on dcs_giftitem (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_giftlist_item (
     [exec]   2  	     giftlist_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     giftitem_id     varchar2(40)    null
     [exec]   5  ,constraint dcs_giftlist_ite_p primary key (giftlist_id,sequence_num)
     [exec]   6  ,constraint dcs_giftgifttm_d_f foreign key (giftitem_id) references dcs_giftitem (id)
     [exec]   7  ,constraint dcs_gftlstgftlst_f foreign key (giftlist_id) references dcs_giftlist (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index gftlst_itm_gii_idx on dcs_giftlist_item (giftitem_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index gftlst_itm_gli_idx on dcs_giftlist_item (giftlist_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_user_wishlist (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     giftlist_id     varchar2(40)    null
     [exec]   4  ,constraint dcs_user_wishlis_p primary key (user_id)
     [exec]   5  ,constraint dcs_usrwgiftlst__f foreign key (giftlist_id) references dcs_giftlist (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index usr_wshlst_gli_idx on dcs_user_wishlist (giftlist_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_user_giftlist (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     giftlist_id     varchar2(40)    null
     [exec]   5  ,constraint dcs_user_giftlis_p primary key (user_id,sequence_num));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index usr_gftlst_uid_idx on dcs_user_giftlist (user_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_user_otherlist (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     giftlist_id     varchar2(40)    null
     [exec]   5  ,constraint dcs_user_otherli_p primary key (user_id,sequence_num)
     [exec]   6  ,constraint dcs_usrtgiftlst__f foreign key (giftlist_id) references dcs_giftlist (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index usr_otrlst_gli_idx on dcs_user_otherlist (giftlist_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- order_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_order (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     order_class_type	     varchar2(40)    null,
     [exec]   6  	     profile_id      varchar2(40)    null,
     [exec]   7  	     description     varchar2(64)    null,
     [exec]   8  	     state   varchar2(40)    null,
     [exec]   9  	     state_detail    varchar2(254)   null,
     [exec]  10  	     created_by_order	     varchar2(40)    null,
     [exec]  11  	     origin_of_order number(10)      null,
     [exec]  12  	     creation_date   date    null,
     [exec]  13  	     submitted_date  date    null,
     [exec]  14  	     last_modified_date      date    null,
     [exec]  15  	     completed_date  date    null,
     [exec]  16  	     price_info      varchar2(40)    null,
     [exec]  17  	     tax_price_info  varchar2(40)    null,
     [exec]  18  	     explicitly_saved	     number(1,0)     null,
     [exec]  19  	     agent_id	     varchar2(40)    null,
     [exec]  20  	     sales_channel   number(10)      null
     [exec]  21  ,constraint dcspp_order_p primary key (order_id)
     [exec]  22  ,constraint dcspp_order_c check (explicitly_saved IN (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index order_lastmod_idx on dcspp_order (last_modified_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index order_profile_idx on dcspp_order (profile_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index order_submit_idx on dcspp_order (submitted_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_ship_group (
     [exec]   2  	     shipping_group_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     shipgrp_class_type      varchar2(40)    null,
     [exec]   6  	     shipping_method varchar2(40)    null,
     [exec]   7  	     description     varchar2(64)    null,
     [exec]   8  	     ship_on_date    date    null,
     [exec]   9  	     actual_ship_date	     date    null,
     [exec]  10  	     state   varchar2(40)    null,
     [exec]  11  	     state_detail    varchar2(254)   null,
     [exec]  12  	     submitted_date  date    null,
     [exec]  13  	     price_info      varchar2(40)    null,
     [exec]  14  	     order_ref	     varchar2(40)    null
     [exec]  15  ,constraint dcspp_ship_group_p primary key (shipping_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_pay_group (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     paygrp_class_type	     varchar2(40)    null,
     [exec]   6  	     payment_method  varchar2(40)    null,
     [exec]   7  	     amount  number(19,7)    null,
     [exec]   8  	     amount_authorized	     number(19,7)    null,
     [exec]   9  	     amount_debited  number(19,7)    null,
     [exec]  10  	     amount_credited number(19,7)    null,
     [exec]  11  	     currency_code   varchar2(10)    null,
     [exec]  12  	     state   varchar2(40)    null,
     [exec]  13  	     state_detail    varchar2(254)   null,
     [exec]  14  	     submitted_date  date    null,
     [exec]  15  	     order_ref	     varchar2(40)    null
     [exec]  16  ,constraint dcspp_pay_group_p primary key (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_item (
     [exec]   2  	     commerce_item_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     item_class_type varchar2(40)    null,
     [exec]   6  	     catalog_id      varchar2(40)    null,
     [exec]   7  	     catalog_ref_id  varchar2(40)    null,
     [exec]   8  	     catalog_key     varchar2(40)    null,
     [exec]   9  	     product_id      varchar2(40)    null,
     [exec]  10  	     quantity	     number(19,0)    null,
     [exec]  11  	     state   varchar2(40)    null,
     [exec]  12  	     state_detail    varchar2(254)   null,
     [exec]  13  	     price_info      varchar2(40)    null,
     [exec]  14  	     order_ref	     varchar2(40)    null
     [exec]  15  ,constraint dcspp_item_p primary key (commerce_item_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index item_catref_idx on dcspp_item (catalog_ref_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index item_prodref_idx on dcspp_item (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_relationship (
     [exec]   2  	     relationship_id varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     rel_class_type  varchar2(40)    null,
     [exec]   6  	     relationship_type	     varchar2(40)    null,
     [exec]   7  	     order_ref	     varchar2(40)    null
     [exec]   8  ,constraint dcspp_relationsh_p primary key (relationship_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_rel_orders (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     related_orders  varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_rel_orders_p primary key (order_id,sequence_num)
     [exec]   6  ,constraint dcspp_reordr_d_f foreign key (order_id) references dcspp_order (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_order_inst (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     special_inst    varchar2(254)   null
     [exec]   5  ,constraint dcspp_order_inst_p primary key (order_id,tag)
     [exec]   6  ,constraint dcspp_orordr_d_f foreign key (order_id) references dcspp_order (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index order_inst_oid_idx on dcspp_order_inst (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_order_sg (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     shipping_groups varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_order_sg_p primary key (order_id,sequence_num)
     [exec]   6  ,constraint dcspp_sgordr_d_f foreign key (order_id) references dcspp_order (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index order_sg_ordid_idx on dcspp_order_sg (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_order_pg (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     payment_groups  varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_order_pg_p primary key (order_id,sequence_num)
     [exec]   6  ,constraint dcspp_orpgordr_f foreign key (order_id) references dcspp_order (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index order_pg_ordid_idx on dcspp_order_pg (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_order_item (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     commerce_items  varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_order_item_p primary key (order_id,sequence_num)
     [exec]   6  ,constraint dcspp_oritordr_d_f foreign key (order_id) references dcspp_order (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index order_item_oid_idx on dcspp_order_item (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_order_rel (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     relationships   varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_order_rel_p primary key (order_id,sequence_num)
     [exec]   6  ,constraint dcspp_orlordr_d_f foreign key (order_id) references dcspp_order (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index order_rel_orid_idx on dcspp_order_rel (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_ship_inst (
     [exec]   2  	     shipping_group_id	     varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     special_inst    varchar2(254)   null
     [exec]   5  ,constraint dcspp_ship_inst_p primary key (shipping_group_id,tag)
     [exec]   6  ,constraint dcspp_shshippng__f foreign key (shipping_group_id) references dcspp_ship_group (shipping_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ship_inst_sgid_idx on dcspp_ship_inst (shipping_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_hrd_ship_grp (
     [exec]   2  	     shipping_group_id	     varchar2(40)    not null,
     [exec]   3  	     tracking_number varchar2(40)    null
     [exec]   4  ,constraint dcspp_hrd_ship_g_p primary key (shipping_group_id)
     [exec]   5  ,constraint dcspp_hrshippng__f foreign key (shipping_group_id) references dcspp_ship_group (shipping_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_ele_ship_grp (
     [exec]   2  	     shipping_group_id	     varchar2(40)    not null,
     [exec]   3  	     email_address   varchar2(255)   null
     [exec]   4  ,constraint dcspp_ele_ship_g_p primary key (shipping_group_id)
     [exec]   5  ,constraint dcspp_elshippng__f foreign key (shipping_group_id) references dcspp_ship_group (shipping_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_ship_addr (
     [exec]   2  	     shipping_group_id	     varchar2(40)    not null,
     [exec]   3  	     prefix  varchar2(40)    null,
     [exec]   4  	     first_name      varchar2(40)    null,
     [exec]   5  	     middle_name     varchar2(40)    null,
     [exec]   6  	     last_name	     varchar2(40)    null,
     [exec]   7  	     suffix  varchar2(40)    null,
     [exec]   8  	     job_title	     varchar2(40)    null,
     [exec]   9  	     company_name    varchar2(40)    null,
     [exec]  10  	     address_1	     varchar2(50)    null,
     [exec]  11  	     address_2	     varchar2(50)    null,
     [exec]  12  	     address_3	     varchar2(50)    null,
     [exec]  13  	     city    varchar2(40)    null,
     [exec]  14  	     county  varchar2(40)    null,
     [exec]  15  	     state   varchar2(40)    null,
     [exec]  16  	     postal_code     varchar2(10)    null,
     [exec]  17  	     country varchar2(40)    null,
     [exec]  18  	     phone_number    varchar2(40)    null,
     [exec]  19  	     fax_number      varchar2(40)    null,
     [exec]  20  	     email   varchar2(255)   null
     [exec]  21  ,constraint dcspp_ship_addr_p primary key (shipping_group_id)
     [exec]  22  ,constraint dcspp_shdshippng_f foreign key (shipping_group_id) references dcspp_ship_group (shipping_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_hand_inst (
     [exec]   2  	     handling_inst_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     hndinst_class_type      varchar2(40)    null,
     [exec]   6  	     handling_method varchar2(40)    null,
     [exec]   7  	     shipping_group_id	     varchar2(40)    null,
     [exec]   8  	     commerce_item_id	     varchar2(40)    null,
     [exec]   9  	     quantity	     integer null
     [exec]  10  ,constraint dcspp_hand_inst_p primary key (handling_inst_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index hi_item_idx on dcspp_hand_inst (commerce_item_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index hi_ship_group_idx on dcspp_hand_inst (shipping_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_gift_inst (
     [exec]   2  	     handling_inst_id	     varchar2(40)    not null,
     [exec]   3  	     giftlist_id     varchar2(40)    null,
     [exec]   4  	     giftlist_item_id	     varchar2(40)    null
     [exec]   5  ,constraint dcspp_gift_inst_p primary key (handling_inst_id)
     [exec]   6  ,constraint dcspp_gihandlng__f foreign key (handling_inst_id) references dcspp_hand_inst (handling_inst_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_sg_hand_inst (
     [exec]   2  	     shipping_group_id	     varchar2(40)    not null,
     [exec]   3  	     handling_instrs varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_sg_hand_in_p primary key (shipping_group_id,sequence_num)
     [exec]   6  ,constraint dcspp_sgshippng__f foreign key (shipping_group_id) references dcspp_ship_group (shipping_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sg_hnd_ins_sgi_idx on dcspp_sg_hand_inst (shipping_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_pay_inst (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     special_inst    varchar2(254)   null
     [exec]   5  ,constraint dcspp_pay_inst_p primary key (payment_group_id,tag)
     [exec]   6  ,constraint dcspp_papaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pay_inst_pgrid_idx on dcspp_pay_inst (payment_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_config_item (
     [exec]   2  	     config_item_id  varchar2(40)    not null,
     [exec]   3  	     reconfig_data   varchar2(255)   null,
     [exec]   4  	     notes   varchar2(255)   null
     [exec]   5  ,constraint dcspp_config_ite_p primary key (config_item_id)
     [exec]   6  ,constraint dcspp_coconfg_tm_f foreign key (config_item_id) references dcspp_item (commerce_item_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_subsku_item (
     [exec]   2  	     subsku_item_id  varchar2(40)    not null,
     [exec]   3  	     ind_quantity    integer null
     [exec]   4  ,constraint dcspp_subsku_ite_p primary key (subsku_item_id)
     [exec]   5  ,constraint dcspp_susubsk_tm_f foreign key (subsku_item_id) references dcspp_item (commerce_item_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_item_ci (
     [exec]   2  	     commerce_item_id	     varchar2(40)    not null,
     [exec]   3  	     commerce_items  varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_item_ci_p primary key (commerce_item_id,sequence_num)
     [exec]   6  ,constraint dcspp_itcommrc_t_f foreign key (commerce_item_id) references dcspp_item (commerce_item_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_gift_cert (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     profile_id      varchar2(40)    null,
     [exec]   4  	     gift_cert_number	     varchar2(50)    null
     [exec]   5  ,constraint dcspp_gift_cert_p primary key (payment_group_id)
     [exec]   6  ,constraint dcspp_gipaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index gc_number_idx on dcspp_gift_cert (gift_cert_number);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index gc_profile_idx on dcspp_gift_cert (profile_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_store_cred (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     profile_id      varchar2(40)    null,
     [exec]   4  	     store_cred_number	     varchar2(50)    null
     [exec]   5  ,constraint dcspp_store_cred_p primary key (payment_group_id)
     [exec]   6  ,constraint dcspp_stpaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sc_number_idx on dcspp_store_cred (store_cred_number);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sc_profile_idx on dcspp_store_cred (profile_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_credit_card (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     credit_card_number      varchar2(40)    null,
     [exec]   4  	     credit_card_type	     varchar2(40)    null,
     [exec]   5  	     expiration_month	     varchar2(20)    null,
     [exec]   6  	     exp_day_of_month	     varchar2(20)    null,
     [exec]   7  	     expiration_year varchar2(20)    null
     [exec]   8  ,constraint dcspp_credit_car_p primary key (payment_group_id)
     [exec]   9  ,constraint dcspp_crpaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_bill_addr (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     prefix  varchar2(40)    null,
     [exec]   4  	     first_name      varchar2(40)    null,
     [exec]   5  	     middle_name     varchar2(40)    null,
     [exec]   6  	     last_name	     varchar2(40)    null,
     [exec]   7  	     suffix  varchar2(40)    null,
     [exec]   8  	     job_title	     varchar2(40)    null,
     [exec]   9  	     company_name    varchar2(40)    null,
     [exec]  10  	     address_1	     varchar2(50)    null,
     [exec]  11  	     address_2	     varchar2(50)    null,
     [exec]  12  	     address_3	     varchar2(50)    null,
     [exec]  13  	     city    varchar2(40)    null,
     [exec]  14  	     county  varchar2(40)    null,
     [exec]  15  	     state   varchar2(40)    null,
     [exec]  16  	     postal_code     varchar2(10)    null,
     [exec]  17  	     country varchar2(40)    null,
     [exec]  18  	     phone_number    varchar2(40)    null,
     [exec]  19  	     fax_number      varchar2(40)    null,
     [exec]  20  	     email   varchar2(255)   null
     [exec]  21  ,constraint dcspp_bill_addr_p primary key (payment_group_id)
     [exec]  22  ,constraint dcspp_bipaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_pay_status (
     [exec]   2  	     status_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     trans_id	     varchar2(50)    null,
     [exec]   6  	     amount  number(19,7)    null,
     [exec]   7  	     trans_success   number(1,0)     null,
     [exec]   8  	     error_message   varchar2(254)   null,
     [exec]   9  	     trans_timestamp date    null
     [exec]  10  ,constraint dcspp_pay_status_p primary key (status_id)
     [exec]  11  ,constraint dcspp_pay_status_c check (trans_success IN (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_cc_status (
     [exec]   2  	     status_id	     varchar2(40)    not null,
     [exec]   3  	     auth_expiration date    null,
     [exec]   4  	     avs_code	     varchar2(40)    null,
     [exec]   5  	     avs_desc_result varchar2(254)   null,
     [exec]   6  	     integration_data	     varchar2(256)   null
     [exec]   7  ,constraint dcspp_cc_status_p primary key (status_id)
     [exec]   8  ,constraint dcspp_ccstats_d_f foreign key (status_id) references dcspp_pay_status (status_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_gc_status (
     [exec]   2  	     status_id	     varchar2(40)    not null,
     [exec]   3  	     auth_expiration date    null
     [exec]   4  ,constraint dcspp_gc_status_p primary key (status_id)
     [exec]   5  ,constraint dcspp_gcstats_d_f foreign key (status_id) references dcspp_pay_status (status_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_sc_status (
     [exec]   2  	     status_id	     varchar2(40)    not null,
     [exec]   3  	     auth_expiration date    null
     [exec]   4  ,constraint dcspp_sc_status_p primary key (status_id)
     [exec]   5  ,constraint dcspp_scstats_d_f foreign key (status_id) references dcspp_pay_status (status_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_auth_status (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     auth_status     varchar2(254)   not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_auth_statu_p primary key (payment_group_id,sequence_num)
     [exec]   6  ,constraint dcspp_atpaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index auth_stat_pgid_idx on dcspp_auth_status (payment_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_debit_status (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     debit_status    varchar2(254)   not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_debit_stat_p primary key (payment_group_id,sequence_num)
     [exec]   6  ,constraint dcspp_depaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index debit_stat_pgi_idx on dcspp_debit_status (payment_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_cred_status (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     credit_status   varchar2(254)   not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_cred_statu_p primary key (payment_group_id,sequence_num)
     [exec]   6  ,constraint dcspp_crpaymntgr_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index cred_stat_pgid_idx on dcspp_cred_status (payment_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_shipitem_rel (
     [exec]   2  	     relationship_id varchar2(40)    not null,
     [exec]   3  	     shipping_group_id	     varchar2(40)    null,
     [exec]   4  	     commerce_item_id	     varchar2(40)    null,
     [exec]   5  	     quantity	     number(19,0)    null,
     [exec]   6  	     returned_qty    number(19,0)    null,
     [exec]   7  	     amount  number(19,7)    null,
     [exec]   8  	     state   varchar2(40)    null,
     [exec]   9  	     state_detail    varchar2(254)   null
     [exec]  10  ,constraint dcspp_shipitem_r_p primary key (relationship_id)
     [exec]  11  ,constraint dcspp_shreltnshp_f foreign key (relationship_id) references dcspp_relationship (relationship_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sirel_item_idx on dcspp_shipitem_rel (commerce_item_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sirel_shipgrp_idx on dcspp_shipitem_rel (shipping_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_rel_range (
     [exec]   2  	     relationship_id varchar2(40)    not null,
     [exec]   3  	     low_bound	     integer null,
     [exec]   4  	     high_bound      integer null
     [exec]   5  ,constraint dcspp_rel_range_p primary key (relationship_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_payitem_rel (
     [exec]   2  	     relationship_id varchar2(40)    not null,
     [exec]   3  	     payment_group_id	     varchar2(40)    null,
     [exec]   4  	     commerce_item_id	     varchar2(40)    null,
     [exec]   5  	     quantity	     number(19,0)    null,
     [exec]   6  	     amount  number(19,7)    null
     [exec]   7  ,constraint dcspp_payitem_re_p primary key (relationship_id)
     [exec]   8  ,constraint dcspp_pareltnshp_f foreign key (relationship_id) references dcspp_relationship (relationship_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pirel_item_idx on dcspp_payitem_rel (commerce_item_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pirel_paygrp_idx on dcspp_payitem_rel (payment_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_payship_rel (
     [exec]   2  	     relationship_id varchar2(40)    not null,
     [exec]   3  	     payment_group_id	     varchar2(40)    null,
     [exec]   4  	     shipping_group_id	     varchar2(40)    null,
     [exec]   5  	     amount  number(19,7)    null
     [exec]   6  ,constraint dcspp_payship_re_p primary key (relationship_id)
     [exec]   7  ,constraint dcspp_pshrltnshp_f foreign key (relationship_id) references dcspp_relationship (relationship_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index psrel_paygrp_idx on dcspp_payship_rel (payment_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index psrel_shipgrp_idx on dcspp_payship_rel (shipping_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_payorder_rel (
     [exec]   2  	     relationship_id varchar2(40)    not null,
     [exec]   3  	     payment_group_id	     varchar2(40)    null,
     [exec]   4  	     order_id	     varchar2(40)    null,
     [exec]   5  	     amount  number(19,7)    null
     [exec]   6  ,constraint dcspp_payorder_r_p primary key (relationship_id)
     [exec]   7  ,constraint dcspp_odreltnshp_f foreign key (relationship_id) references dcspp_relationship (relationship_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index porel_order_idx on dcspp_payorder_rel (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index porel_paygrp_idx on dcspp_payorder_rel (payment_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_amount_info (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     currency_code   varchar2(10)    null,
     [exec]   6  	     amount  number(19,7)    null,
     [exec]   7  	     discounted      number(1,0)     null,
     [exec]   8  	     amount_is_final number(1,0)     null
     [exec]   9  ,constraint dcspp_amount_inf_p primary key (amount_info_id)
     [exec]  10  ,constraint dcspp_amount_in1_c check (discounted IN (0,1))
     [exec]  11  ,constraint dcspp_amount_in2_c check (amount_is_final IN (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_order_price (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     raw_subtotal    number(19,7)    null,
     [exec]   4  	     tax     number(19,7)    null,
     [exec]   5  	     shipping	     number(19,7)    null,
     [exec]   6  	     manual_adj_total	     number(19,7)    null
     [exec]   7  ,constraint dcspp_order_pric_p primary key (amount_info_id)
     [exec]   8  ,constraint dcspp_oramnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_item_price (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     list_price      number(19,7)    null,
     [exec]   4  	     raw_total_price number(19,7)    null,
     [exec]   5  	     sale_price      number(19,7)    null,
     [exec]   6  	     on_sale number(1,0)     null,
     [exec]   7  	     order_discount  number(19,7)    null,
     [exec]   8  	     qty_discounted  number(19,0)    null,
     [exec]   9  	     qty_as_qualifier	     number(19,0)    null,
     [exec]  10  	     price_list      varchar2(40)    null
     [exec]  11  ,constraint dcspp_item_price_p primary key (amount_info_id)
     [exec]  12  ,constraint dcspp_itamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id)
     [exec]  13  ,constraint dcspp_item_price_c check (on_sale IN (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_tax_price (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     city_tax	     number(19,7)    null,
     [exec]   4  	     county_tax      number(19,7)    null,
     [exec]   5  	     state_tax	     number(19,7)    null,
     [exec]   6  	     country_tax     number(19,7)    null
     [exec]   7  ,constraint dcspp_tax_price_p primary key (amount_info_id)
     [exec]   8  ,constraint dcspp_taamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_ship_price (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     raw_shipping    number(19,7)    null
     [exec]   4  ,constraint dcspp_ship_price_p primary key (amount_info_id)
     [exec]   5  ,constraint dcspp_shamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_amtinfo_adj (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     adjustments     varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_amtinfo_ad_p primary key (amount_info_id,sequence_num)
     [exec]   6  ,constraint dcspp_amamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index amtinf_adj_aid_idx on dcspp_amtinfo_adj (amount_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_price_adjust (
     [exec]   2  	     adjustment_id   varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     adj_description varchar2(254)   null,
     [exec]   5  	     pricing_model   varchar2(40)    null,
     [exec]   6  	     manual_adjustment	     varchar2(40)    null,
     [exec]   7  	     adjustment      number(19,7)    null,
     [exec]   8  	     qty_adjusted    integer null
     [exec]   9  ,constraint dcspp_price_adju_p primary key (adjustment_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_shipitem_sub (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     shipping_group_id	     varchar2(42)    not null,
     [exec]   4  	     ship_item_subtotal      varchar2(40)    not null
     [exec]   5  ,constraint dcspp_shipitem_s_p primary key (amount_info_id,shipping_group_id)
     [exec]   6  ,constraint dcspp_sbamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ship_item_sub_idx on dcspp_shipitem_sub (amount_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_taxshipitem (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     shipping_group_id	     varchar2(42)    not null,
     [exec]   4  	     tax_ship_item_sub	     varchar2(40)    not null
     [exec]   5  ,constraint dcspp_taxshipite_p primary key (amount_info_id,shipping_group_id)
     [exec]   6  ,constraint dcspp_shamntxnfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index tax_ship_item_idx on dcspp_taxshipitem (amount_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_ntaxshipitem (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     shipping_group_id	     varchar2(42)    not null,
     [exec]   4  	     non_tax_item_sub	     varchar2(40)    not null
     [exec]   5  ,constraint dcspp_ntaxshipit_p primary key (amount_info_id,shipping_group_id)
     [exec]   6  ,constraint dcspp_ntamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ntax_ship_item_idx on dcspp_ntaxshipitem (amount_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_shipitem_tax (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     shipping_group_id	     varchar2(42)    not null,
     [exec]   4  	     ship_item_tax   varchar2(40)    not null
     [exec]   5  ,constraint dcspp_shipitem_t_p primary key (amount_info_id,shipping_group_id)
     [exec]   6  ,constraint dcspp_txamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ship_item_tax_idx on dcspp_shipitem_tax (amount_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_itmprice_det (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     cur_price_details	     varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_itmprice_d_p primary key (amount_info_id,sequence_num)
     [exec]   6  ,constraint dcspp_sbamntnfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index itmprc_det_aii_idx on dcspp_itmprice_det (amount_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_det_price (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     tax     number(19,7)    null,
     [exec]   4  	     order_discount  number(19,7)    null,
     [exec]   5  	     order_manual_adj	     number(19,7)    null,
     [exec]   6  	     quantity	     number(19,0)    null,
     [exec]   7  	     qty_as_qualifier	     number(19,0)    null
     [exec]   8  ,constraint dcspp_det_price_p primary key (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_det_range (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     low_bound	     integer null,
     [exec]   4  	     high_bound      integer null
     [exec]   5  ,constraint dcspp_det_range_p primary key (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_order_adj (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     adjustment_id   varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_order_adj_p primary key (order_id,sequence_num)
     [exec]   6  ,constraint dcspp_oradj_d_f foreign key (order_id) references dcspp_order (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index order_adj_orid_idx on dcspp_order_adj (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_manual_adj (
     [exec]   2  	     manual_adjust_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     adjustment_type integer not null,
     [exec]   5  	     reason  integer not null,
     [exec]   6  	     amount  number(19,7)    null,
     [exec]   7  	     notes   varchar2(255)   null,
     [exec]   8  	     version integer not null
     [exec]   9  ,constraint dcspp_manual_adj_p primary key (manual_adjust_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dbcpp_sched_order (
     [exec]   2  	     scheduled_order_id      varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     name    varchar2(32)    null,
     [exec]   6  	     profile_id      varchar2(40)    null,
     [exec]   7  	     create_date     date    null,
     [exec]   8  	     start_date      date    null,
     [exec]   9  	     end_date	     date    null,
     [exec]  10  	     template_order  varchar2(32)    null,
     [exec]  11  	     state   integer null,
     [exec]  12  	     next_scheduled  date    null,
     [exec]  13  	     schedule	     varchar2(255)   null
     [exec]  14  ,constraint dbcpp_sched_orde_p primary key (scheduled_order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dbcpp_sched_clone (
     [exec]   2  	     scheduled_order_id      varchar2(40)    not null,
     [exec]   3  	     cloned_order    varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dbcpp_sched_clon_p primary key (scheduled_order_id,sequence_num)
     [exec]   6  ,constraint dbcpp_scschedld__f foreign key (scheduled_order_id) references dbcpp_sched_order (scheduled_order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_scherr_aux (
     [exec]   2  	     scheduled_order_id      varchar2(40)    not null,
     [exec]   3  	     sched_error_id  varchar2(40)    not null
     [exec]   4  ,constraint dcspp_scherr_aux_p primary key (scheduled_order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sched_error_idx on dcspp_scherr_aux (sched_error_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_sched_error (
     [exec]   2  	     sched_error_id  varchar2(40)    not null,
     [exec]   3  	     error_date      date    not null
     [exec]   4  ,constraint dcspp_sched_err_p primary key (sched_error_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_schd_errmsg (
     [exec]   2  	     sched_error_id  varchar2(40)    not null,
     [exec]   3  	     error_txt	     varchar2(254)   not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_schd_errs_p primary key (sched_error_id,sequence_num)
     [exec]   6  ,constraint dcspp_sch_errs_f foreign key (sched_error_id) references dcspp_sched_error (sched_error_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- dcs_mappers.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cart_event (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     orderid varchar2(40)    null,
     [exec]   5  	     itemid  varchar2(40)    null,
     [exec]   6  	     sessionid	     varchar2(100)   null,
     [exec]   7  	     parentsessionid varchar2(100)   null,
     [exec]   8  	     quantity	     integer null,
     [exec]   9  	     amount  number(19,7)    null,
     [exec]  10  	     profileid	     varchar2(40)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_submt_ord_evt (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     orderid varchar2(40)    null,
     [exec]   5  	     profileid	     varchar2(40)    null,
     [exec]   6  	     sessionid	     varchar2(100)   null,
     [exec]   7  	     parentsessionid varchar2(100)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prom_used_evt (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     orderid varchar2(40)    null,
     [exec]   5  	     profileid	     varchar2(40)    null,
     [exec]   6  	     sessionid	     varchar2(100)   null,
     [exec]   7  	     parentsessionid varchar2(100)   null,
     [exec]   8  	     promotionid     varchar2(40)    null,
     [exec]   9  	     order_amount    number(26,7)    null,
     [exec]  10  	     discount	     number(26,7)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_ord_merge_evt (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     sourceorderid   varchar2(40)    null,
     [exec]   5  	     destorderid     varchar2(40)    null,
     [exec]   6  	     profileid	     varchar2(40)    null,
     [exec]   7  	     sessionid	     varchar2(100)   null,
     [exec]   8  	     parentsessionid varchar2(100)   null,
     [exec]   9  	     sourceremoved   number(1,0)     null
     [exec]  10  ,constraint dcs_ordmergeevt_ck check (sourceremoved in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_promo_rvkd (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     time_stamp      date    null,
     [exec]   4  	     promotionid     varchar2(254)   not null,
     [exec]   5  	     profileid	     varchar2(254)   not null,
     [exec]   6  	     sessionid	     varchar2(100)   null,
     [exec]   7  	     parentsessionid varchar2(100)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_promo_grntd (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     time_stamp      date    null,
     [exec]   4  	     promotionid     varchar2(254)   not null,
     [exec]   5  	     profileid	     varchar2(254)   not null,
     [exec]   6  	     sessionid	     varchar2(100)   null,
     [exec]   7  	     parentsessionid varchar2(100)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- claimable_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_claimable (
     [exec]   2  	     claimable_id    varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     type    integer not null,
     [exec]   5  	     status  integer null,
     [exec]   6  	     expiration_date date    null
     [exec]   7  ,constraint dcspp_claimable_p primary key (claimable_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_giftcert (
     [exec]   2  	     giftcertificate_id      varchar2(40)    not null,
     [exec]   3  	     amount  double precision	     not null,
     [exec]   4  	     amount_authorized	     double precision	     not null,
     [exec]   5  	     amount_remaining	     double precision	     not null,
     [exec]   6  	     purchaser_id    varchar2(40)    null,
     [exec]   7  	     purchase_date   date    null,
     [exec]   8  	     last_used	     date    null
     [exec]   9  ,constraint dcspp_giftcert_p primary key (giftcertificate_id)
     [exec]  10  ,constraint dcspp_gigiftcrtf_f foreign key (giftcertificate_id) references dcspp_claimable (claimable_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index claimable_user_idx on dcspp_giftcert (purchaser_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_storecred_clm (
     [exec]   2  	     store_credit_id varchar2(40)    not null,
     [exec]   3  	     amount  number(19,7)    not null,
     [exec]   4  	     amount_authorized	     number(19,7)    not null,
     [exec]   5  	     amount_remaining	     number(19,7)    not null,
     [exec]   6  	     owner_id	     varchar2(40)    null,
     [exec]   7  	     issue_date      date    null,
     [exec]   8  	     expiration_date date    null,
     [exec]   9  	     last_used	     date    null
     [exec]  10  ,constraint dcs_storecred_cl_p primary key (store_credit_id)
     [exec]  11  ,constraint dcs_storstor_crd_f foreign key (store_credit_id) references dcspp_claimable (claimable_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index storecr_issue_idx on dcs_storecred_clm (issue_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index storecr_owner_idx on dcs_storecred_clm (owner_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_coupon (
     [exec]   2  	     coupon_id	     varchar2(40)    not null,
     [exec]   3  	     promotion_id    varchar2(40)    not null
     [exec]   4  ,constraint dcspp_coupon_p primary key (coupon_id)
     [exec]   5  ,constraint dcspp_copncopn_d_f foreign key (coupon_id) references dcspp_claimable (claimable_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- reporting_views.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  In the comments, the time periods indicated are calendar time, meaning that
     [exec] SQL> --	  the current period should be calculated from the start of the calendar time period,
     [exec] SQL> --	  rather than in real time.  For example, if it is Thursday, July 12,
     [exec] SQL> --	  the most current row in a view calculating totals for a week
     [exec] SQL> --	  would run from Sunday, July 8 - July 12, rather than July 5 - July 12.
     [exec] SQL> --	  drpt_order gathers basic information about each order
     [exec] SQL> create or replace view drpt_order
     [exec]   2  as
     [exec]   3  select o.order_id as order_id,
     [exec]   4  	     o.submitted_date as submitted_date,
     [exec]   5  	     ai.amount as amount,
     [exec]   6  	     count(i.quantity) as distinct_items,
     [exec]   7  	     sum(i.quantity) as total_items,
     [exec]   8  	     ba.state as state,
     [exec]   9  	     ba.country as country,
     [exec]  10  	     o.price_info as price_info
     [exec]  11  from dcspp_order o,
     [exec]  12  	     dcspp_amount_info ai,
     [exec]  13  	     dcspp_item i,
     [exec]  14  	     dcspp_pay_group pg,
     [exec]  15  	     dcspp_bill_addr ba
     [exec]  16  where o.order_id = i.order_ref
     [exec]  17  	     and o.price_info = ai.amount_info_id
     [exec]  18  	     and o.order_id = pg.order_ref
     [exec]  19  	     and pg.payment_group_id = ba.payment_group_id
     [exec]  20  group by o.order_id,
     [exec]  21  	     o.submitted_date,
     [exec]  22  	     ai.amount,
     [exec]  23  	     ba.state,
     [exec]  24  	     ba.country,
     [exec]  25  	      o.price_info
     [exec]  26  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpt_cost_of_goods calculates the total wholesale cost
     [exec] SQL> --	  of the items purchased in each order
     [exec] SQL> create or replace view drpt_cost_of_goods
     [exec]   2  as
     [exec]   3  select i.order_ref as order_id,
     [exec]   4  	     sum(i.quantity * s.wholesale_price) as cost_of_goods
     [exec]   5  from dcspp_item i,
     [exec]   6  	     dcs_sku s
     [exec]   7  where i.catalog_ref_id = s.sku_id
     [exec]   8  group by i.order_ref
     [exec]   9  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpt_discount calculates the total amount discounted
     [exec] SQL> --	  from each order via promotions
     [exec] SQL> create or replace view drpt_discount
     [exec]   2  as
     [exec]   3  select o.order_id as order_id,
     [exec]   4  	     o.submitted_date as submitted_date,
     [exec]   5  	     (0 - sum(pa.adjustment)) as discount
     [exec]   6  from dcspp_order o,
     [exec]   7  	     dcspp_item i,
     [exec]   8  	     dcspp_amtinfo_adj aa,
     [exec]   9  	     dcspp_price_adjust pa
     [exec]  10  where o.order_id = i.order_ref
     [exec]  11  	     and i.price_info = aa.amount_info_id
     [exec]  12  	     and i.price_info = aa.amount_info_id
     [exec]  13  	     and aa.adjustments = pa.adjustment_id
     [exec]  14  	     and pa.pricing_model is not null
     [exec]  15  group by o.order_id,
     [exec]  16  	     o.submitted_date
     [exec]  17  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptw_discounts calculates the number of orders that
     [exec] SQL> --	  were discounted by promotions over each week
     [exec] SQL> --	  The "UNION" operation allows weeks in which there
     [exec] SQL> --	  were no discounts to have a row in the view
     [exec] SQL> create or replace view drptw_discounts
     [exec]   2  as
     [exec]   3  select trunc(submitted_date, 'DAY') as week,
     [exec]   4  	     count(order_id) as num_of_discounts
     [exec]   5  from drpt_discount
     [exec]   6  group by trunc(submitted_date, 'DAY')
     [exec]   7  UNION
     [exec]   8  select trunc(submitted_date, 'DAY') as week,
     [exec]   9  	     0 as num_of_discounts
     [exec]  10  from dcspp_order
     [exec]  11  where trunc(submitted_date, 'DAY') not in (select trunc(submitted_date, 'DAY') from drpt_discount)
     [exec]  12  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptm_discounts calculates the number of orders that
     [exec] SQL> --	  were discounted by promotions over each month
     [exec] SQL> --	  The "UNION" operation allows months in which there
     [exec] SQL> --	  were no discounts to have a row in the view
     [exec] SQL> create or replace view drptm_discounts
     [exec]   2  as
     [exec]   3  select trunc(submitted_date, 'MON') as month,
     [exec]   4  	     count(order_id) as num_of_discounts
     [exec]   5  from drpt_discount
     [exec]   6  group by trunc(submitted_date, 'MON')
     [exec]   7  UNION
     [exec]   8  select trunc(submitted_date, 'MON') as month,
     [exec]   9  	     0 as num_of_discounts
     [exec]  10  from dcspp_order
     [exec]  11  where trunc(submitted_date, 'MON') not in (select trunc(submitted_date, 'MON') from drpt_discount)
     [exec]  12  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptq_discounts calculates the number of orders that
     [exec] SQL> --	  were discounted by promotions over each quarter
     [exec] SQL> --	  The "UNION" operation allows quarters in which there
     [exec] SQL> --	  were no discounts to have a row in the view
     [exec] SQL> create or replace view drptq_discounts
     [exec]   2  as
     [exec]   3  select trunc(submitted_date, 'Q') as quarter,
     [exec]   4  	     count(order_id) as num_of_discounts
     [exec]   5  from drpt_discount
     [exec]   6  group by trunc(submitted_date, 'Q')
     [exec]   7  UNION
     [exec]   8  select trunc(submitted_date, 'Q') as quarter,
     [exec]   9  	     0 as num_of_discounts
     [exec]  10  from dcspp_order
     [exec]  11  where trunc(submitted_date, 'Q') not in (select trunc(submitted_date, 'Q') from drpt_discount)
     [exec]  12  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpta_discounts calculates the number of orders that
     [exec] SQL> --	  were discounted by promotions over each year
     [exec] SQL> --	  The "UNION" operation allows years in which there
     [exec] SQL> --	  were no discounts to have a row in the view
     [exec] SQL> create or replace view drpta_discounts
     [exec]   2  as
     [exec]   3  select trunc(submitted_date, 'YEAR') as year,
     [exec]   4  	     count(order_id) as num_of_discounts
     [exec]   5  from drpt_discount
     [exec]   6  group by trunc(submitted_date, 'YEAR')
     [exec]   7  UNION
     [exec]   8  select trunc(submitted_date, 'YEAR') as year,
     [exec]   9  	     0 as num_of_discounts
     [exec]  10  from dcspp_order
     [exec]  11  where trunc(submitted_date, 'YEAR') not in (select trunc(submitted_date, 'YEAR') from drpt_discount)
     [exec]  12  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpt_ordered_items comprises a list of each item purchased
     [exec] SQL> create or replace view drpt_ordered_items
     [exec]   2  as
     [exec]   3  select o.order_id as order_id,
     [exec]   4  	     o.submitted_date as submitted_date,
     [exec]   5  	     i.catalog_ref_id as catalog_ref_id,
     [exec]   6  	     i.product_id as product_id,
     [exec]   7  	     i.quantity as quantity,
     [exec]   8  	     ai.amount as price
     [exec]   9  from dcspp_order o,
     [exec]  10  	     dcspp_item i,
     [exec]  11  	     dcspp_amount_info ai
     [exec]  12  where o.order_id = i.order_ref
     [exec]  13  	     and i.price_info = ai.amount_info_id
     [exec]  14  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpt_sku_stock calculates the number of unique skus in stock per product
     [exec] SQL> --	  in the catalog.	The "UNION" operation exists so that a row will
     [exec] SQL> --	  appear for products that have no skus in stock
     [exec] SQL> create or replace view drpt_sku_stock
     [exec]   2  as
     [exec]   3  select pc.product_id as product_id,
     [exec]   4  	     count(i.catalog_ref_id) as skus_in_stock
     [exec]   5  from dcs_prd_chldsku pc,
     [exec]   6  	     dcs_inventory i
     [exec]   7  where pc.sku_id = i.catalog_ref_id
     [exec]   8  	     and i.stock_level > 0
     [exec]   9  group by pc.product_id
     [exec]  10  UNION
     [exec]  11  select product_id,
     [exec]  12  	     0 as skus_in_stock
     [exec]  13  from dcs_prd_chldsku
     [exec]  14  where product_id not in
     [exec]  15  (select product_id
     [exec]  16  from dcs_prd_chldsku pc,
     [exec]  17  	     dcs_inventory i
     [exec]  18  where pc.sku_id = i.catalog_ref_id
     [exec]  19  	     and i.stock_level > 0)
     [exec]  20  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptw_browses calculatess the number of times each product's page
     [exec] SQL> --	  has been viewed online each week
     [exec] SQL> create or replace view drptw_browses
     [exec]   2  as
     [exec]   3  select repositoryid as product_id,
     [exec]   4  	     trunc(timestamp, 'DAY') as week,
     [exec]   5  	     count(timestamp) as browses
     [exec]   6  from dss_dps_view_item
     [exec]   7  group by repositoryid,
     [exec]   8  	     trunc(timestamp, 'DAY')
     [exec]   9  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptm_browses calculates the number of times each product's page
     [exec] SQL> --	  has been viewed online each month
     [exec] SQL> create or replace view drptm_browses
     [exec]   2  as
     [exec]   3  select repositoryid as product_id,
     [exec]   4  	     trunc(timestamp, 'MON') as month,
     [exec]   5  	     count(timestamp) as browses
     [exec]   6  from dss_dps_view_item
     [exec]   7  group by repositoryid,
     [exec]   8  	     trunc(timestamp, 'MON')
     [exec]   9  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptq_browses calculates the number of times each product's page
     [exec] SQL> --	  has been viewed online each quarter
     [exec] SQL> create or replace view drptq_browses
     [exec]   2  as
     [exec]   3  select repositoryid as product_id,
     [exec]   4  	     trunc(timestamp, 'Q') as quarter,
     [exec]   5  	     count(timestamp) as browses
     [exec]   6  from dss_dps_view_item
     [exec]   7  group by repositoryid,
     [exec]   8  	     trunc(timestamp, 'Q')
     [exec]   9  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpta_browses calculates the number of times each product's page
     [exec] SQL> --	  has been viewed online each year
     [exec] SQL> create or replace view drpta_browses
     [exec]   2  as
     [exec]   3  select repositoryid as product_id,
     [exec]   4  	     trunc(timestamp, 'YEAR') as year,
     [exec]   5  	     count(timestamp) as browses
     [exec]   6  from dss_dps_view_item
     [exec]   7  group by repositoryid,
     [exec]   8  	     trunc(timestamp, 'YEAR')
     [exec]   9  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptw_carts calculates the number of times each product has
     [exec] SQL> --	  been added to a user's shopping cart each week
     [exec] SQL> --	  Note:  A single user adding a quantity greater than one
     [exec] SQL> --	  to their cart at one time is considered a single "add to cart"
     [exec] SQL> create or replace view drptw_carts
     [exec]   2  as
     [exec]   3  select pc.product_id as product_id,
     [exec]   4  	     trunc(ce.timestamp, 'DAY') as week,
     [exec]   5  	     count(ce.id) as adds_to_cart
     [exec]   6  from dcs_cart_event ce,
     [exec]   7  	     dcs_prd_chldsku pc
     [exec]   8  where ce.itemid = pc.sku_id
     [exec]   9  group by pc.product_id,
     [exec]  10  	     trunc(ce.timestamp, 'DAY')
     [exec]  11  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptm_carts calculates the number of times each product has
     [exec] SQL> --	  been added to a user's shopping cart each month
     [exec] SQL> --	  Note:  A single user adding a quantity greater than one
     [exec] SQL> --	  to their cart at one time is considered a single "add to cart"
     [exec] SQL> create or replace view drptm_carts
     [exec]   2  as
     [exec]   3  select pc.product_id as product_id,
     [exec]   4  	     trunc(ce.timestamp, 'MON') as month,
     [exec]   5  	     count(ce.id) as adds_to_cart
     [exec]   6  from dcs_cart_event ce,
     [exec]   7  	     dcs_prd_chldsku pc
     [exec]   8  where ce.itemid = pc.sku_id
     [exec]   9  group by pc.product_id,
     [exec]  10  	     trunc(ce.timestamp, 'MON')
     [exec]  11  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptq_carts calculates the number of times each product has
     [exec] SQL> --	  been added to a user's shopping cart each quarter
     [exec] SQL> --	  Note:  A single user adding a quantity greater than one
     [exec] SQL> --	  to their cart at one time is considered a single "add to cart"
     [exec] SQL> create or replace view drptq_carts
     [exec]   2  as
     [exec]   3  select pc.product_id as product_id,
     [exec]   4  	     trunc(ce.timestamp, 'Q') as quarter,
     [exec]   5  	     count(ce.id) as adds_to_cart
     [exec]   6  from dcs_cart_event ce,
     [exec]   7  	     dcs_prd_chldsku pc
     [exec]   8  where ce.itemid = pc.sku_id
     [exec]   9  group by pc.product_id,
     [exec]  10  	     trunc(ce.timestamp, 'Q')
     [exec]  11  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpta_carts calculates the number of times each product has
     [exec] SQL> --	  been added to a user's shopping cart each year
     [exec] SQL> --	  Note:  A single user adding a quantity greater than one
     [exec] SQL> --	  to their cart at one time is considered a single "add to cart"
     [exec] SQL> create or replace view drpta_carts
     [exec]   2  as
     [exec]   3  select pc.product_id as product_id,
     [exec]   4  	     trunc(ce.timestamp, 'YEAR') as year,
     [exec]   5  	     count(ce.id) as adds_to_cart
     [exec]   6  from dcs_cart_event ce,
     [exec]   7  	     dcs_prd_chldsku pc
     [exec]   8  where ce.itemid = pc.sku_id
     [exec]   9  group by pc.product_id,
     [exec]  10  	     trunc(ce.timestamp, 'YEAR')
     [exec]  11  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpt_shipping compiles the total shipping cost for each shipping group
     [exec] SQL> create or replace view drpt_shipping
     [exec]   2  as
     [exec]   3  select o.order_id as order_id,
     [exec]   4  	     ai.amount as shipping_cost
     [exec]   5  from dcspp_order o,
     [exec]   6  	     dcspp_ship_group sg,
     [exec]   7  	     dcspp_amount_info ai
     [exec]   8  where o.order_id = sg.order_ref
     [exec]   9  	     and sg.price_info = ai.amount_info_id
     [exec]  10  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpt_taxes compiles the total tax cost for each order
     [exec] SQL> create or replace view drpt_taxes
     [exec]   2  as
     [exec]   3  select o.order_id as order_id,
     [exec]   4  	     ai.amount as tax
     [exec]   5  from dcspp_order o,
     [exec]   6  	     dcspp_amount_info ai
     [exec]   7  where o.tax_price_info = ai.amount_info_id
     [exec]   8  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpt_cancels compiles information about orders that failed or
     [exec] SQL> --	  were cancelled
     [exec] SQL> create or replace view drpt_cancels
     [exec]   2  as
     [exec]   3  select o.order_id as order_id,
     [exec]   4  	     o.submitted_date as submitted_date,
     [exec]   5  	     ai.amount as amount,
     [exec]   6  	     si.shipping_cost as shipping_cost,
     [exec]   7  	     ti.tax as tax
     [exec]   8  from dcspp_order o,
     [exec]   9  	     dcspp_amount_info ai,
     [exec]  10  	     drpt_shipping si,
     [exec]  11  	     drpt_taxes ti
     [exec]  12  where (o.state = 'FAILED' or o.state = 'REMOVED')
     [exec]  13  	     and o.price_info = ai.amount_info_id
     [exec]  14  	     and o.order_id = si.order_id
     [exec]  15  	     and o.order_id = ti.order_id
     [exec]  16  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptw_cancels calculates the number of orders that failed or
     [exec] SQL> --	  were cancelled each week.  It also calculates the total
     [exec] SQL> --	  amount, shipping costs, and tax costs from those orders.
     [exec] SQL> create or replace view drptw_cancels
     [exec]   2  as
     [exec]   3  select trunc(submitted_date, 'DAY') as week,
     [exec]   4  	     count(order_id) as number_of_cancels,
     [exec]   5  	     sum(amount) as amount,
     [exec]   6  	     sum(shipping_cost) as shipping_cost,
     [exec]   7  	     sum(tax) as tax
     [exec]   8  from drpt_cancels
     [exec]   9  group by trunc(submitted_date, 'DAY')
     [exec]  10  UNION
     [exec]  11  select trunc(submitted_date, 'DAY') as week,
     [exec]  12  	     0 as number_of_cancels,
     [exec]  13  	     0 as amount,
     [exec]  14  	     0 as shipping_cost,
     [exec]  15  	     0 as tax
     [exec]  16  from dcspp_order
     [exec]  17  where trunc(submitted_date, 'DAY') not in (select trunc(submitted_date, 'DAY') from drpt_cancels)
     [exec]  18  group by trunc(submitted_date, 'DAY')
     [exec]  19  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptm_cancels calculates the number of orders that failed or
     [exec] SQL> --	  were cancelled each month.  It also calculates the total
     [exec] SQL> --	  amount, shipping costs, and tax costs from those orders.
     [exec] SQL> create or replace view drptm_cancels
     [exec]   2  as
     [exec]   3  select trunc(submitted_date, 'MON') as month,
     [exec]   4  	     count(order_id) as number_of_cancels,
     [exec]   5  	     sum(amount) as amount,
     [exec]   6  	     sum(shipping_cost) as shipping_cost,
     [exec]   7  	     sum(tax) as tax
     [exec]   8  from drpt_cancels
     [exec]   9  group by trunc(submitted_date, 'MON')
     [exec]  10  UNION
     [exec]  11  select trunc(submitted_date, 'MON') as month,
     [exec]  12  	     0 as number_of_cancels,
     [exec]  13  	     0 as amount,
     [exec]  14  	     0 as shipping_cost,
     [exec]  15  	     0 as tax
     [exec]  16  from dcspp_order
     [exec]  17  where trunc(submitted_date, 'MON') not in (select trunc(submitted_date, 'MON') from drpt_cancels)
     [exec]  18  group by trunc(submitted_date, 'MON')
     [exec]  19  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptq_cancels calculates the number of orders that failed or
     [exec] SQL> --	  were cancelled each quarter.	It also calculates the total
     [exec] SQL> --	  amount, shipping costs, and tax costs from those orders.
     [exec] SQL> create or replace view drptq_cancels
     [exec]   2  as
     [exec]   3  select trunc(submitted_date, 'Q') as quarter,
     [exec]   4  	     count(order_id) as number_of_cancels,
     [exec]   5  	     sum(amount) as amount,
     [exec]   6  	     sum(shipping_cost) as shipping_cost,
     [exec]   7  	     sum(tax) as tax
     [exec]   8  from drpt_cancels
     [exec]   9  group by trunc(submitted_date, 'Q')
     [exec]  10  UNION
     [exec]  11  select trunc(submitted_date, 'Q') as quarter,
     [exec]  12  	     0 as number_of_cancels,
     [exec]  13  	     0 as amount,
     [exec]  14  	     0 as shipping_cost,
     [exec]  15  	     0 as tax
     [exec]  16  from dcspp_order
     [exec]  17  where trunc(submitted_date, 'Q') not in (select trunc(submitted_date, 'Q') from drpt_cancels)
     [exec]  18  group by trunc(submitted_date, 'Q')
     [exec]  19  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpta_cancels calculates the number of orders that failed or
     [exec] SQL> --	  were cancelled in the past year.  It also calculates the total
     [exec] SQL> --	  amount, shipping costs, and tax costs from those orders.
     [exec] SQL> create or replace view drpta_cancels
     [exec]   2  as
     [exec]   3  select trunc(submitted_date, 'YEAR') as year,
     [exec]   4  	     count(order_id) as number_of_cancels,
     [exec]   5  	     sum(amount) as amount,
     [exec]   6  	     sum(shipping_cost) as shipping_cost,
     [exec]   7  	     sum(tax) as tax
     [exec]   8  from drpt_cancels
     [exec]   9  group by trunc(submitted_date, 'YEAR')
     [exec]  10  UNION
     [exec]  11  select trunc(submitted_date, 'YEAR') as year,
     [exec]  12  	     0 as number_of_cancels,
     [exec]  13  	     0 as amount,
     [exec]  14  	     0 as shipping_cost,
     [exec]  15  	     0 as tax
     [exec]  16  from dcspp_order
     [exec]  17  where trunc(submitted_date, 'YEAR') not in (select trunc(submitted_date, 'YEAR') from drpt_cancels)
     [exec]  18  group by trunc(submitted_date, 'YEAR')
     [exec]  19  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptw_gift_certs calculates the number of gift certificates
     [exec] SQL> --	  that were redeemed each week
     [exec] SQL> create or replace view drptw_gift_certs
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'DAY') as week,
     [exec]   4  	     count(gc.payment_group_id) as num_of_gift_certs
     [exec]   5  from dcspp_order o,
     [exec]   6  	     dcspp_pay_group pg,
     [exec]   7  	     dcspp_gift_cert gc
     [exec]   8  where o.order_id = pg.order_ref
     [exec]   9  	     and pg.payment_group_id = gc.payment_group_id
     [exec]  10  group by trunc(o.submitted_date, 'DAY')
     [exec]  11  UNION
     [exec]  12  select trunc(submitted_date, 'DAY') as week,
     [exec]  13  	     0 as num_of_gift_certs
     [exec]  14  from dcspp_order
     [exec]  15  where order_id not in
     [exec]  16  (select pg.order_ref
     [exec]  17  from dcspp_pay_group pg,
     [exec]  18  	     dcspp_gift_cert gc
     [exec]  19  where pg.payment_group_id = gc.payment_group_id)
     [exec]  20  group by trunc(submitted_date, 'DAY')
     [exec]  21  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptm_gift_certs calculates the number of gift certificates
     [exec] SQL> --	  that were redeemed each month
     [exec] SQL> create or replace view drptm_gift_certs
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'MON') as month,
     [exec]   4  	     count(gc.payment_group_id) as num_of_gift_certs
     [exec]   5  from dcspp_order o,
     [exec]   6  	     dcspp_pay_group pg,
     [exec]   7  	     dcspp_gift_cert gc
     [exec]   8  where o.order_id = pg.order_ref
     [exec]   9  	     and pg.payment_group_id = gc.payment_group_id
     [exec]  10  group by trunc(o.submitted_date, 'MON')
     [exec]  11  UNION
     [exec]  12  select trunc(submitted_date, 'MON') as month,
     [exec]  13  	     0 as num_of_gift_certs
     [exec]  14  from dcspp_order
     [exec]  15  where order_id not in
     [exec]  16  (select pg.order_ref
     [exec]  17  from dcspp_pay_group pg,
     [exec]  18  	     dcspp_gift_cert gc
     [exec]  19  where pg.payment_group_id = gc.payment_group_id)
     [exec]  20  group by trunc(submitted_date, 'MON')
     [exec]  21  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptq_gift_certs calculates the number of gift certificates
     [exec] SQL> --	  that were redeemed each quarter
     [exec] SQL> create or replace view drptq_gift_certs
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'Q') as quarter,
     [exec]   4  	     count(gc.payment_group_id) as num_of_gift_certs
     [exec]   5  from dcspp_order o,
     [exec]   6  	     dcspp_pay_group pg,
     [exec]   7  	     dcspp_gift_cert gc
     [exec]   8  where o.order_id = pg.order_ref
     [exec]   9  	     and pg.payment_group_id = gc.payment_group_id
     [exec]  10  group by trunc(o.submitted_date, 'Q')
     [exec]  11  UNION
     [exec]  12  select trunc(submitted_date, 'Q') as quarter,
     [exec]  13  	     0 as num_of_gift_certs
     [exec]  14  from dcspp_order
     [exec]  15  where order_id not in
     [exec]  16  (select pg.order_ref
     [exec]  17  from dcspp_pay_group pg,
     [exec]  18  	     dcspp_gift_cert gc
     [exec]  19  where pg.payment_group_id = gc.payment_group_id)
     [exec]  20  group by trunc(submitted_date, 'Q')
     [exec]  21  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpta_gift_certs calculates the number of gift certificates
     [exec] SQL> --	  that were redeemed each year
     [exec] SQL> create or replace view drpta_gift_certs
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'YEAR') as year,
     [exec]   4  	     count(gc.payment_group_id) as num_of_gift_certs
     [exec]   5  from dcspp_order o,
     [exec]   6  	     dcspp_pay_group pg,
     [exec]   7  	     dcspp_gift_cert gc
     [exec]   8  where o.order_id = pg.order_ref
     [exec]   9  	     and pg.payment_group_id = gc.payment_group_id
     [exec]  10  group by trunc(o.submitted_date, 'YEAR')
     [exec]  11  UNION
     [exec]  12  select trunc(submitted_date, 'YEAR') as year,
     [exec]  13  	     0 as num_of_gift_certs
     [exec]  14  from dcspp_order
     [exec]  15  where order_id not in
     [exec]  16  (select pg.order_ref
     [exec]  17  from dcspp_pay_group pg,
     [exec]  18  	     dcspp_gift_cert gc
     [exec]  19  where pg.payment_group_id = gc.payment_group_id)
     [exec]  20  group by trunc(submitted_date, 'YEAR')
     [exec]  21  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptw_orders calculates various totals from orders over each week
     [exec] SQL> create or replace view drptw_orders
     [exec]   2  as
     [exec]   3  select trunc(dri.submitted_date, 'DAY') as week,
     [exec]   4  	     (sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
     [exec]   5  	     (wct.amount + wct.shipping_cost + wct.tax) as dollar_cancels,
     [exec]   6  	     (sum(ai.amount) - wct.amount) as merch_rev,
     [exec]   7  	     (sum(si.shipping_cost) + sum(ti.tax) - wct.shipping_cost - wct.tax) as shipping_tax_rev,
     [exec]   8  	     sum(cog.cost_of_goods) as cost_of_goods_sold,
     [exec]   9  	     (count(dri.order_id)) as number_of_orders,
     [exec]  10  	     (wct.number_of_cancels) as cancelled_orders,
     [exec]  11  	     (count(dri.order_id) - wct.number_of_cancels) as net_num_of_orders,
     [exec]  12  	     sum(dri.total_items) as total_units_sold,
     [exec]  13  	     wdt.num_of_discounts as num_of_discounts,
     [exec]  14  	     wgct.num_of_gift_certs as num_of_gift_certs
     [exec]  15  from dcspp_amount_info ai,
     [exec]  16  	     drpt_shipping si,
     [exec]  17  	     drpt_taxes ti,
     [exec]  18  	     drptw_cancels wct,
     [exec]  19  	     drptw_discounts wdt,
     [exec]  20  	     drptw_gift_certs wgct,
     [exec]  21  	     drpt_order dri,
     [exec]  22  	     drpt_cost_of_goods cog
     [exec]  23  where dri.price_info = ai.amount_info_id
     [exec]  24  	     and dri.order_id = si.order_id
     [exec]  25  	     and dri.order_id = ti.order_id
     [exec]  26  	     and trunc(dri.submitted_date, 'DAY') = wct.week
     [exec]  27  	     and trunc(dri.submitted_date, 'DAY') = wdt.week
     [exec]  28  	     and trunc(dri.submitted_date, 'DAY') = wgct.week
     [exec]  29  	     and dri.order_id = cog.order_id
     [exec]  30  group by trunc(dri.submitted_date, 'DAY'),
     [exec]  31  	     wct.number_of_cancels,
     [exec]  32  	     wct.amount,
     [exec]  33  	     wct.shipping_cost,
     [exec]  34  	     wct.tax,
     [exec]  35  	     wdt.num_of_discounts,
     [exec]  36  	     wgct.num_of_gift_certs
     [exec]  37  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptm_orders calculates various totals from orders over each month
     [exec] SQL> create or replace view drptm_orders
     [exec]   2  as
     [exec]   3  select trunc(dri.submitted_date, 'MON') as month,
     [exec]   4  	     (sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
     [exec]   5  	     (mct.amount + mct.shipping_cost + mct.tax) as dollar_cancels,
     [exec]   6  	     (sum(ai.amount) - mct.amount) as merch_rev,
     [exec]   7  	     (sum(si.shipping_cost) + sum(ti.tax) - mct.shipping_cost - mct.tax) as shipping_tax_rev,
     [exec]   8  	     sum(cog.cost_of_goods) as cost_of_goods_sold,
     [exec]   9  	     (count(dri.order_id)) as number_of_orders,
     [exec]  10  	     (mct.number_of_cancels) as cancelled_orders,
     [exec]  11  	     (count(dri.order_id) - mct.number_of_cancels) as net_num_of_orders,
     [exec]  12  	     sum(dri.total_items) as total_units_sold,
     [exec]  13  	     mdt.num_of_discounts as num_of_discounts,
     [exec]  14  	     mgct.num_of_gift_certs as num_of_gift_certs
     [exec]  15  from dcspp_amount_info ai,
     [exec]  16  	     drpt_shipping si,
     [exec]  17  	     drpt_taxes ti,
     [exec]  18  	     drptm_cancels mct,
     [exec]  19  	     drptm_discounts mdt,
     [exec]  20  	     drptm_gift_certs mgct,
     [exec]  21  	     drpt_order dri,
     [exec]  22  	     drpt_cost_of_goods cog
     [exec]  23  where dri.price_info = ai.amount_info_id
     [exec]  24  	     and dri.order_id = si.order_id
     [exec]  25  	     and dri.order_id = ti.order_id
     [exec]  26  	     and trunc(dri.submitted_date, 'MON') = mct.month
     [exec]  27  	     and trunc(dri.submitted_date, 'MON') = mdt.month
     [exec]  28  	     and trunc(dri.submitted_date, 'MON') = mgct.month
     [exec]  29  	     and dri.order_id = cog.order_id
     [exec]  30  group by trunc(dri.submitted_date, 'MON'),
     [exec]  31  	     mct.number_of_cancels, mct.amount,
     [exec]  32  	     mct.shipping_cost,
     [exec]  33  	     mct.tax,
     [exec]  34  	     mdt.num_of_discounts,
     [exec]  35  	     mgct.num_of_gift_certs
     [exec]  36  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptq_orders calculates various totals from orders over each quarter
     [exec] SQL> create or replace view drptq_orders
     [exec]   2  as
     [exec]   3  select trunc(dri.submitted_date, 'Q') as quarter,
     [exec]   4  	     (sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
     [exec]   5  	     (qct.amount + qct.shipping_cost + qct.tax) as dollar_cancels,
     [exec]   6  	     (sum(ai.amount) - qct.amount) as merch_rev,
     [exec]   7  	     (sum(si.shipping_cost) + sum(ti.tax) - qct.shipping_cost - qct.tax) as shipping_tax_rev,
     [exec]   8  	     sum(cog.cost_of_goods) as cost_of_goods_sold,
     [exec]   9  	     (count(dri.order_id)) as number_of_orders,
     [exec]  10  	     (qct.number_of_cancels) as cancelled_orders,
     [exec]  11  	     (count(dri.order_id) - qct.number_of_cancels) as net_num_of_orders,
     [exec]  12  	     sum(dri.total_items) as total_units_sold,
     [exec]  13  	     qdt.num_of_discounts as num_of_discounts,
     [exec]  14  	     qgct.num_of_gift_certs as num_of_gift_certs
     [exec]  15  from dcspp_amount_info ai,
     [exec]  16  	     drpt_shipping si,
     [exec]  17  	     drpt_taxes ti,
     [exec]  18  	     drptq_cancels qct,
     [exec]  19  	     drptq_discounts qdt,
     [exec]  20  	     drptq_gift_certs qgct,
     [exec]  21  	     drpt_order dri,
     [exec]  22  	     drpt_cost_of_goods cog
     [exec]  23  where dri.price_info = ai.amount_info_id
     [exec]  24  	     and dri.order_id = si.order_id
     [exec]  25  	     and dri.order_id = ti.order_id
     [exec]  26  	     and trunc(dri.submitted_date, 'Q') = qct.quarter
     [exec]  27  	     and trunc(dri.submitted_date, 'Q') = qdt.quarter
     [exec]  28  	     and trunc(dri.submitted_date, 'Q') = qgct.quarter
     [exec]  29  	     and dri.order_id = cog.order_id
     [exec]  30  group by trunc(dri.submitted_date, 'Q'),
     [exec]  31  	     qct.number_of_cancels,
     [exec]  32  	     qct.amount,
     [exec]  33  	     qct.shipping_cost,
     [exec]  34  	     qct.tax,
     [exec]  35  	     qdt.num_of_discounts,
     [exec]  36  	     qgct.num_of_gift_certs
     [exec]  37  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpta_orders calculates various totals from orders over each year
     [exec] SQL> create or replace view drpta_orders
     [exec]   2  as
     [exec]   3  select trunc(dri.submitted_date, 'YEAR') as year,
     [exec]   4  	     (sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
     [exec]   5  	     (act.amount + act.shipping_cost + act.tax) as dollar_cancels,
     [exec]   6  	     (sum(ai.amount) - act.amount) as merch_rev,
     [exec]   7  	     (sum(si.shipping_cost) + sum(ti.tax) - act.shipping_cost - act.tax) as shipping_tax_rev,
     [exec]   8  	     sum(cog.cost_of_goods) as cost_of_goods_sold,
     [exec]   9  	     (count(dri.order_id)) as number_of_orders,
     [exec]  10  	     (act.number_of_cancels) as cancelled_orders,
     [exec]  11  	     (count(dri.order_id) - act.number_of_cancels) as net_num_of_orders,
     [exec]  12  	     sum(dri.total_items) as total_units_sold,
     [exec]  13  	     adt.num_of_discounts as num_of_discounts,
     [exec]  14  	     agct.num_of_gift_certs as num_of_gift_certs
     [exec]  15  from dcspp_amount_info ai,
     [exec]  16  	     drpt_shipping si,
     [exec]  17  	     drpt_taxes ti,
     [exec]  18  	     drpta_cancels act,
     [exec]  19  	     drpta_discounts adt,
     [exec]  20  	     drpta_gift_certs agct,
     [exec]  21  	     drpt_order dri,
     [exec]  22  	     drpt_cost_of_goods cog
     [exec]  23  where dri.price_info = ai.amount_info_id
     [exec]  24  	     and dri.order_id = si.order_id
     [exec]  25  	     and dri.order_id = ti.order_id
     [exec]  26  	     and trunc(dri.submitted_date, 'YEAR') = act.year
     [exec]  27  	     and trunc(dri.submitted_date, 'YEAR') = adt.year
     [exec]  28  	     and trunc(dri.submitted_date, 'YEAR') = agct.year
     [exec]  29  	     and dri.order_id = cog.order_id
     [exec]  30  group by trunc(dri.submitted_date, 'YEAR'),
     [exec]  31  	     act.number_of_cancels,
     [exec]  32  	     act.amount,
     [exec]  33  	     act.shipping_cost,
     [exec]  34  	     act.tax,
     [exec]  35  	     adt.num_of_discounts,
     [exec]  36  	     agct.num_of_gift_certs
     [exec]  37  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create or replace view drpt_visitor
     [exec]   2  (profileid,day,state,country)
     [exec]   3  as
     [exec]   4   select distinct
     [exec]   5  	     vi.profileid,
     [exec]   6  	     TRUNC(vi.timestamp, 'DATE') as day,
     [exec]   7  	     ci.state,
     [exec]   8  	     ci.country
     [exec]   9  from
     [exec]  10  	     dss_dps_view_item vi,
     [exec]  11  	     dps_user_address ua,
     [exec]  12  	     dps_contact_info ci
     [exec]  13  where
     [exec]  14  	     vi.profileid = ua.id
     [exec]  15  	     and ua.billing_addr_id = ci.id
     [exec]  16  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpt_cart calculates the total quantity and amount of
     [exec] SQL> --	  items that have been added to shopping carts over each day
     [exec] SQL> create or replace view drpt_cart
     [exec]   2  (orderid,day,quantity,amount)
     [exec]   3  as
     [exec]   4  select
     [exec]   5  	     orderid as orderid,
     [exec]   6  	     trunc(timestamp) as day,
     [exec]   7  	     sum(quantity) as quantity,
     [exec]   8  	     sum(amount) as amount
     [exec]   9  from dcs_cart_event
     [exec]  10  group by orderid,
     [exec]  11  	     trunc(timestamp)
     [exec]  12  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptw_fiscal_info caclulates several revenue-related totals over each week
     [exec] SQL> create or replace view drptw_fiscal_info
     [exec]   2  as
     [exec]   3  select wot.week as week,
     [exec]   4  	     wot.total_dollar_sales as total_dollar_sales,
     [exec]   5  	     wot.dollar_cancels as dollar_cancels,
     [exec]   6  	     (wot.total_dollar_sales - wot.dollar_cancels) as net_dollar_sales,
     [exec]   7  	     wot.merch_rev as merch_rev,
     [exec]   8  	     wot.shipping_tax_rev as shipping_tax_rev,
     [exec]   9  	     wot.number_of_orders as number_of_orders,
     [exec]  10  	     wot.cancelled_orders as cancelled_orders,
     [exec]  11  	     wot.net_num_of_orders as net_num_of_orders,
     [exec]  12  	     count(distinct ce.orderid) as num_of_carts,
     [exec]  13  	     ((wot.total_dollar_sales - wot.dollar_cancels) / wot.net_num_of_orders) as avg_order_rev,
     [exec]  14  	     (wot.merch_rev / wot.net_num_of_orders) as avg_order_merc_rev,
     [exec]  15  	     count(distinct vi.sessionid) as number_of_shoppers,
     [exec]  16  	     (wot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
     [exec]  17  	     (count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
     [exec]  18  	     (wot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
     [exec]  19  	     wot.num_of_discounts as num_of_discounts,
     [exec]  20  	     wot.num_of_gift_certs as num_of_gift_certs
     [exec]  21  from drptw_orders wot,
     [exec]  22  	     dcs_cart_event ce,
     [exec]  23  	     dss_dps_view_item vi
     [exec]  24  where trunc(ce.timestamp, 'DAY') = wot.week
     [exec]  25  	     and trunc(vi.timestamp, 'DAY') = wot.week
     [exec]  26  group by wot.week,
     [exec]  27  	     wot.total_dollar_sales,
     [exec]  28  	     wot.dollar_cancels,
     [exec]  29  	     wot.merch_rev,
     [exec]  30  	     wot.shipping_tax_rev,
     [exec]  31  	     wot.number_of_orders,
     [exec]  32  	     wot.cancelled_orders,
     [exec]  33  	     wot.net_num_of_orders,
     [exec]  34  	     wot.num_of_discounts,
     [exec]  35  	     wot.num_of_gift_certs
     [exec]  36  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptm_fiscal_info caclulates several revenue-related totals over each month
     [exec] SQL> create or replace view drptm_fiscal_info
     [exec]   2  as
     [exec]   3  select mot.month as month,
     [exec]   4  	     mot.total_dollar_sales as total_dollar_sales,
     [exec]   5  	     mot.dollar_cancels as dollar_cancels,
     [exec]   6  	     (mot.total_dollar_sales - mot.dollar_cancels) as net_dollar_sales,
     [exec]   7  	     mot.merch_rev as merch_rev,
     [exec]   8  	     mot.shipping_tax_rev as shipping_tax_rev,
     [exec]   9  	     mot.number_of_orders as number_of_orders,
     [exec]  10  	     mot.cancelled_orders as cancelled_orders,
     [exec]  11  	     mot.net_num_of_orders as net_num_of_orders,
     [exec]  12  	     count(distinct ce.orderid) as num_of_carts,
     [exec]  13  	     ((mot.total_dollar_sales - mot.dollar_cancels) / mot.net_num_of_orders) as avg_order_rev,
     [exec]  14  	     (mot.merch_rev / mot.net_num_of_orders) as avg_order_merc_rev,
     [exec]  15  	     count(distinct vi.sessionid) as number_of_shoppers,
     [exec]  16  	     (mot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
     [exec]  17  	     (count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
     [exec]  18  	     (mot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
     [exec]  19  	     mot.num_of_discounts as num_of_discounts,
     [exec]  20  	     mot.num_of_gift_certs as num_of_gift_certs
     [exec]  21  from drptm_orders mot,
     [exec]  22  	     dcs_cart_event ce,
     [exec]  23  	     dss_dps_view_item vi
     [exec]  24  where trunc(ce.timestamp, 'MON') = mot.month
     [exec]  25  	     and trunc(vi.timestamp, 'MON') = mot.month
     [exec]  26  group by mot.month,
     [exec]  27  	     mot.total_dollar_sales,
     [exec]  28  	     mot.dollar_cancels,
     [exec]  29  	     mot.merch_rev,
     [exec]  30  	     mot.shipping_tax_rev,
     [exec]  31  	     mot.number_of_orders,
     [exec]  32  	     mot.cancelled_orders,
     [exec]  33  	     mot.net_num_of_orders,
     [exec]  34  	     mot.num_of_discounts,
     [exec]  35  	     mot.num_of_gift_certs
     [exec]  36  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptq_fiscal_info caclulates several revenue-related totals over each quarter
     [exec] SQL> create or replace view drptq_fiscal_info
     [exec]   2  as
     [exec]   3  select qot.quarter as quarter,
     [exec]   4  	     qot.total_dollar_sales as total_dollar_sales,
     [exec]   5  	     qot.dollar_cancels as dollar_cancels,
     [exec]   6  	     (qot.total_dollar_sales - qot.dollar_cancels) as net_dollar_sales,
     [exec]   7  	     qot.merch_rev as merch_rev,
     [exec]   8  	     qot.shipping_tax_rev as shipping_tax_rev,
     [exec]   9  	     qot.number_of_orders as number_of_orders,
     [exec]  10  	     qot.cancelled_orders as cancelled_orders,
     [exec]  11  	     qot.net_num_of_orders as net_num_of_orders,
     [exec]  12  	     count(distinct ce.orderid) as num_of_carts,
     [exec]  13  	     ((qot.total_dollar_sales - qot.dollar_cancels) / qot.net_num_of_orders) as avg_order_rev,
     [exec]  14  	     (qot.merch_rev / qot.net_num_of_orders) as avg_order_merc_rev,
     [exec]  15  	     count(distinct vi.sessionid) as number_of_shoppers,
     [exec]  16  	     (qot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
     [exec]  17  	     (count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
     [exec]  18  	     (qot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
     [exec]  19  	     qot.num_of_discounts as num_of_discounts,
     [exec]  20  	     qot.num_of_gift_certs as num_of_gift_certs
     [exec]  21  from drptq_orders qot,
     [exec]  22  	     dcs_cart_event ce,
     [exec]  23  	     dss_dps_view_item vi
     [exec]  24  where trunc(ce.timestamp, 'Q') = qot.quarter
     [exec]  25  	     and trunc(vi.timestamp, 'Q') = qot.quarter
     [exec]  26  group by qot.quarter,
     [exec]  27  	     qot.total_dollar_sales,
     [exec]  28  	     qot.dollar_cancels,
     [exec]  29  	     qot.merch_rev,
     [exec]  30  	     qot.shipping_tax_rev,
     [exec]  31  	     qot.number_of_orders,
     [exec]  32  	     qot.cancelled_orders,
     [exec]  33  	     qot.net_num_of_orders,
     [exec]  34  	     qot.num_of_discounts,
     [exec]  35  	     qot.num_of_gift_certs
     [exec]  36  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpta_fiscal_info caclulates several revenue-related totals over each year
     [exec] SQL> create or replace view drpta_fiscal_info
     [exec]   2  as
     [exec]   3  select aot.year as year,
     [exec]   4  	     aot.total_dollar_sales as total_dollar_sales,
     [exec]   5  	     aot.dollar_cancels as dollar_cancels,
     [exec]   6  	     (aot.total_dollar_sales - aot.dollar_cancels) as net_dollar_sales,
     [exec]   7  	     aot.merch_rev as merch_rev,
     [exec]   8  	     aot.shipping_tax_rev as shipping_tax_rev,
     [exec]   9  	     aot.number_of_orders as number_of_orders,
     [exec]  10  	     aot.cancelled_orders as cancelled_orders,
     [exec]  11  	     aot.net_num_of_orders as net_num_of_orders,
     [exec]  12  	     count(distinct ce.orderid) as num_of_carts,
     [exec]  13  	     ((aot.total_dollar_sales - aot.dollar_cancels) / aot.net_num_of_orders) as avg_order_rev,
     [exec]  14  	     (aot.merch_rev / aot.net_num_of_orders) as avg_order_merc_rev,
     [exec]  15  	     count(distinct vi.sessionid) as number_of_shoppers,
     [exec]  16  	     (aot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
     [exec]  17  	     (count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
     [exec]  18  	     (aot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
     [exec]  19  	     aot.num_of_discounts as num_of_discounts,
     [exec]  20  	     aot.num_of_gift_certs as num_of_gift_certs
     [exec]  21  from drpta_orders aot,
     [exec]  22  	     dcs_cart_event ce,
     [exec]  23  	     dss_dps_view_item vi
     [exec]  24  where trunc(ce.timestamp, 'YEAR') = aot.year
     [exec]  25  	     and trunc(vi.timestamp, 'YEAR') = aot.year
     [exec]  26  group by aot.year,
     [exec]  27  	     aot.total_dollar_sales,
     [exec]  28  	     aot.dollar_cancels,
     [exec]  29  	     aot.merch_rev,
     [exec]  30  	     aot.shipping_tax_rev,
     [exec]  31  	     aot.number_of_orders,
     [exec]  32  	     aot.cancelled_orders,
     [exec]  33  	     aot.net_num_of_orders,
     [exec]  34  	     aot.num_of_discounts,
     [exec]  35  	     aot.num_of_gift_certs
     [exec]  36  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptw_promotion calculates totals about orders that were discounted
     [exec] SQL> --	  by the sample 'promo60003' promotion over each week
     [exec] SQL> create or replace view drptw_promotion
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'DAY') as week,
     [exec]   4  	     sum(ai.amount) as total_dollar_sales,
     [exec]   5  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]   6  	     count(o.order_id) as number_of_orders,
     [exec]   7  	     sum(i.quantity) as total_units_sold
     [exec]   8  from dcspp_order o,
     [exec]   9  	     dcspp_amount_info ai,
     [exec]  10  	     dcspp_item i,
     [exec]  11  	     dcs_sku s,
     [exec]  12  	     dcspp_amtinfo_adj aa,
     [exec]  13  	     dcspp_price_adjust pa
     [exec]  14  where o.price_info = ai.amount_info_id
     [exec]  15  	     and o.state != 'FAILED'
     [exec]  16  	     and o.state != 'REMOVED'
     [exec]  17  	     and o.order_id = i.order_ref
     [exec]  18  	     and i.catalog_ref_id = s.sku_id
     [exec]  19  	     and i.price_info = aa.amount_info_id
     [exec]  20  	     and aa.adjustments = pa.adjustment_id
     [exec]  21  	     and pa.pricing_model = 'promo60003'
     [exec]  22  group by trunc(o.submitted_date, 'DAY')
     [exec]  23  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptm_promotion calculates totals about orders that were discounted
     [exec] SQL> --	  by the sample 'promo60003' promotion over each month
     [exec] SQL> create or replace view drptm_promotion
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'MON') as month,
     [exec]   4  	     sum(ai.amount) as total_dollar_sales,
     [exec]   5  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]   6  	     count(o.order_id) as number_of_orders,
     [exec]   7  	     sum(i.quantity) as total_units_sold
     [exec]   8  from dcspp_order o,
     [exec]   9  	     dcspp_amount_info ai,
     [exec]  10  	     dcspp_item i,
     [exec]  11  	     dcs_sku s,
     [exec]  12  	     dcspp_amtinfo_adj aa,
     [exec]  13  	     dcspp_price_adjust pa
     [exec]  14  where o.price_info = ai.amount_info_id
     [exec]  15  	     and o.state != 'FAILED'
     [exec]  16  	     and o.state != 'REMOVED'
     [exec]  17  	     and o.order_id = i.order_ref
     [exec]  18  	     and i.catalog_ref_id = s.sku_id
     [exec]  19  	     and i.price_info = aa.amount_info_id
     [exec]  20  	     and aa.adjustments = pa.adjustment_id
     [exec]  21  	     and pa.pricing_model = 'promo60003'
     [exec]  22  group by trunc(o.submitted_date, 'MON')
     [exec]  23  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptq_promotion calculates totals about orders that were discounted
     [exec] SQL> --	  by the sample 'promo60003' promotion over each quarter
     [exec] SQL> create or replace view drptq_promotion
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'Q') as quarter,
     [exec]   4  	     sum(ai.amount) as total_dollar_sales,
     [exec]   5  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]   6  	     count(o.order_id) as number_of_orders,
     [exec]   7  	     sum(i.quantity) as total_units_sold
     [exec]   8  from dcspp_order o,
     [exec]   9  	     dcspp_amount_info ai,
     [exec]  10  	     dcspp_item i,
     [exec]  11  	     dcs_sku s,
     [exec]  12  	     dcspp_amtinfo_adj aa,
     [exec]  13  	     dcspp_price_adjust pa
     [exec]  14  where o.price_info = ai.amount_info_id
     [exec]  15  	     and o.state != 'FAILED'
     [exec]  16  	     and o.state != 'REMOVED'
     [exec]  17  	     and o.order_id = i.order_ref
     [exec]  18  	     and i.catalog_ref_id = s.sku_id
     [exec]  19  	     and i.price_info = aa.amount_info_id
     [exec]  20  	     and aa.adjustments = pa.adjustment_id
     [exec]  21  	     and pa.pricing_model = 'promo60003'
     [exec]  22  group by trunc(o.submitted_date, 'Q')
     [exec]  23  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpta_promotion calculates totals about orders that were discounted
     [exec] SQL> --	  by the sample 'promo60003' promotion over each year
     [exec] SQL> create or replace view drpta_promotion
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'YEAR') as year,
     [exec]   4  	     sum(ai.amount) as total_dollar_sales,
     [exec]   5  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]   6  	     count(o.order_id) as number_of_orders,
     [exec]   7  	     sum(i.quantity) as total_units_sold
     [exec]   8  from dcspp_order o,
     [exec]   9  	     dcspp_amount_info ai,
     [exec]  10  	     dcspp_item i,
     [exec]  11  	     dcs_sku s,
     [exec]  12  	     dcspp_amtinfo_adj aa,
     [exec]  13  	     dcspp_price_adjust pa
     [exec]  14  where o.price_info = ai.amount_info_id
     [exec]  15  	     and o.state != 'FAILED'
     [exec]  16  	     and o.state != 'REMOVED'
     [exec]  17  	     and o.order_id = i.order_ref
     [exec]  18  	     and i.catalog_ref_id = s.sku_id
     [exec]  19  	     and i.price_info = aa.amount_info_id
     [exec]  20  	     and aa.adjustments = pa.adjustment_id
     [exec]  21  	     and pa.pricing_model = 'promo60003'
     [exec]  22  group by trunc(o.submitted_date, 'YEAR')
     [exec]  23  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptw_male_18_25 calculates totals about orders that were placed
     [exec] SQL> --	  each week by males aged 18-25
     [exec] SQL> create or replace view drptw_male_18_25
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'DAY') as week,
     [exec]   4  	     sum(ai.amount) as total_dollar_sales,
     [exec]   5  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]   6  	     count(o.order_id) as number_of_orders,
     [exec]   7  	     sum(i.quantity) as total_units_sold
     [exec]   8  from dcspp_order o,
     [exec]   9  	     dcspp_amount_info ai,
     [exec]  10  	     dcspp_item i,
     [exec]  11  	     dcs_sku s,
     [exec]  12  	     dps_user u
     [exec]  13  where o.price_info = ai.amount_info_id
     [exec]  14  	     and o.state != 'FAILED'
     [exec]  15  	     and o.state != 'REMOVED'
     [exec]  16  	     and o.order_id = i.order_ref
     [exec]  17  	     and i.catalog_ref_id = s.sku_id
     [exec]  18  	     and o.profile_id = u.id
     [exec]  19  	     and u.gender = 2
     [exec]  20  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 18)
     [exec]  21  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 25)
     [exec]  22  group by trunc(o.submitted_date, 'DAY')
     [exec]  23  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptm_male_18_25 calculates totals about orders that were placed
     [exec] SQL> --	  each month by males aged 18-25
     [exec] SQL> create or replace view drptm_male_18_25
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'MON') as month,
     [exec]   4  	     sum(ai.amount) as total_dollar_sales,
     [exec]   5  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]   6  	     count(o.order_id) as number_of_orders,
     [exec]   7  	     sum(i.quantity) as total_units_sold
     [exec]   8  from dcspp_order o,
     [exec]   9  	     dcspp_amount_info ai,
     [exec]  10  	     dcspp_item i,
     [exec]  11  	     dcs_sku s,
     [exec]  12  	     dps_user u
     [exec]  13  where o.price_info = ai.amount_info_id
     [exec]  14  	     and o.state != 'FAILED'
     [exec]  15  	     and o.state != 'REMOVED'
     [exec]  16  	     and o.order_id = i.order_ref
     [exec]  17  	     and i.catalog_ref_id = s.sku_id
     [exec]  18  	     and o.profile_id = u.id
     [exec]  19  	     and u.gender = 2
     [exec]  20  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 18)
     [exec]  21  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 25)
     [exec]  22  group by trunc(o.submitted_date, 'MON')
     [exec]  23  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptq_male_18_25 calculates totals about orders that were placed
     [exec] SQL> --	  each quarter by males aged 18-25
     [exec] SQL> create or replace view drptq_male_18_25
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'Q') as quarter,
     [exec]   4  	     sum(ai.amount) as total_dollar_sales,
     [exec]   5  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]   6  	     count(o.order_id) as number_of_orders,
     [exec]   7  	     sum(i.quantity) as total_units_sold
     [exec]   8  from dcspp_order o,
     [exec]   9  	     dcspp_amount_info ai,
     [exec]  10  	     dcspp_item i,
     [exec]  11  	     dcs_sku s,
     [exec]  12  	     dps_user u
     [exec]  13  where o.price_info = ai.amount_info_id
     [exec]  14  	     and o.state != 'FAILED'
     [exec]  15  	     and o.state != 'REMOVED'
     [exec]  16  	     and o.order_id = i.order_ref
     [exec]  17  	     and i.catalog_ref_id = s.sku_id
     [exec]  18  	     and o.profile_id = u.id
     [exec]  19  	     and u.gender = 2
     [exec]  20  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 18)
     [exec]  21  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 25)
     [exec]  22  group by trunc(o.submitted_date, 'Q')
     [exec]  23  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpta_male_18_25 calculates totals about orders that were placed
     [exec] SQL> --	  each year by males aged 18-25
     [exec] SQL> create or replace view drpta_male_18_25
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'YEAR') as year,
     [exec]   4  	     sum(ai.amount) as total_dollar_sales,
     [exec]   5  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]   6  	     count(o.order_id) as number_of_orders,
     [exec]   7  	     sum(i.quantity) as total_units_sold
     [exec]   8  from dcspp_order o,
     [exec]   9  	     dcspp_amount_info ai,
     [exec]  10  	     dcspp_item i,
     [exec]  11  	     dcs_sku s,
     [exec]  12  	     dps_user u
     [exec]  13  where o.price_info = ai.amount_info_id
     [exec]  14  	     and o.state != 'FAILED'
     [exec]  15  	     and o.state != 'REMOVED'
     [exec]  16  	     and o.order_id = i.order_ref
     [exec]  17  	     and i.catalog_ref_id = s.sku_id
     [exec]  18  	     and o.profile_id = u.id
     [exec]  19  	     and u.gender = 2
     [exec]  20  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 18)
     [exec]  21  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 25)
     [exec]  22  group by trunc(o.submitted_date, 'YEAR')
     [exec]  23  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptw_male_25_39 calculates totals about orders that were placed
     [exec] SQL> --	  each week by males aged 25-39
     [exec] SQL> create or replace view drptw_male_25_39
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'DAY') as week,
     [exec]   4  	     sum(ai.amount) as total_dollar_sales,
     [exec]   5  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]   6  	     count(o.order_id) as number_of_orders,
     [exec]   7  	     sum(i.quantity) as total_units_sold
     [exec]   8  from dcspp_order o,
     [exec]   9  	     dcspp_amount_info ai,
     [exec]  10  	     dcspp_item i,
     [exec]  11  	     dcs_sku s,
     [exec]  12  	     dps_user u
     [exec]  13  where o.price_info = ai.amount_info_id
     [exec]  14  	     and o.state != 'FAILED'
     [exec]  15  	     and o.state != 'REMOVED'
     [exec]  16  	     and o.order_id = i.order_ref
     [exec]  17  	     and i.catalog_ref_id = s.sku_id
     [exec]  18  	     and o.profile_id = u.id
     [exec]  19  	     and u.gender = 2
     [exec]  20  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 25)
     [exec]  21  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 39)
     [exec]  22  group by trunc(o.submitted_date, 'DAY')
     [exec]  23  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptm_male_25_39 calculates totals about orders that were placed
     [exec] SQL> --	  each month by males aged 25-39
     [exec] SQL> create or replace view drptm_male_25_39
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'MON') as month,
     [exec]   4  	     sum(ai.amount) as total_dollar_sales,
     [exec]   5  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]   6  	     count(o.order_id) as number_of_orders,
     [exec]   7  	     sum(i.quantity) as total_units_sold
     [exec]   8  from dcspp_order o,
     [exec]   9  	     dcspp_amount_info ai,
     [exec]  10  	     dcspp_item i,
     [exec]  11  	     dcs_sku s,
     [exec]  12  	     dps_user u
     [exec]  13  where o.price_info = ai.amount_info_id
     [exec]  14  	     and o.state != 'FAILED'
     [exec]  15  	     and o.state != 'REMOVED'
     [exec]  16  	     and o.order_id = i.order_ref
     [exec]  17  	     and i.catalog_ref_id = s.sku_id
     [exec]  18  	     and o.profile_id = u.id
     [exec]  19  	     and u.gender = 2
     [exec]  20  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 25)
     [exec]  21  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 39)
     [exec]  22  group by trunc(o.submitted_date, 'MON')
     [exec]  23  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptq_male_25_39 calculates totals about orders that were placed
     [exec] SQL> --	  each quarter by males aged 25-39
     [exec] SQL> create or replace view drptq_male_25_39
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'Q') as quarter,
     [exec]   4  	     sum(ai.amount) as total_dollar_sales,
     [exec]   5  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]   6  	     count(o.order_id) as number_of_orders,
     [exec]   7  	     sum(i.quantity) as total_units_sold
     [exec]   8  from dcspp_order o,
     [exec]   9  	     dcspp_amount_info ai,
     [exec]  10  	     dcspp_item i,
     [exec]  11  	     dcs_sku s,
     [exec]  12  	     dps_user u
     [exec]  13  where o.price_info = ai.amount_info_id
     [exec]  14  	     and o.state != 'FAILED'
     [exec]  15  	     and o.state != 'REMOVED'
     [exec]  16  	     and o.order_id = i.order_ref
     [exec]  17  	     and i.catalog_ref_id = s.sku_id
     [exec]  18  	     and o.profile_id = u.id
     [exec]  19  	     and u.gender = 2
     [exec]  20  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 25)
     [exec]  21  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 39)
     [exec]  22  group by trunc(o.submitted_date, 'Q')
     [exec]  23  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpta_male_25_39 calculates totals about orders that were placed
     [exec] SQL> --	  each year by males aged 25-39
     [exec] SQL> create or replace view drpta_male_25_39
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'YEAR') as year,
     [exec]   4  	     sum(ai.amount) as total_dollar_sales,
     [exec]   5  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]   6  	     count(o.order_id) as number_of_orders,
     [exec]   7  	     sum(i.quantity) as total_units_sold
     [exec]   8  from dcspp_order o,
     [exec]   9  	     dcspp_amount_info ai,
     [exec]  10  	     dcspp_item i,
     [exec]  11  	     dcs_sku s,
     [exec]  12  	     dps_user u
     [exec]  13  where o.price_info = ai.amount_info_id
     [exec]  14  	     and o.state != 'FAILED'
     [exec]  15  	     and o.state != 'REMOVED'
     [exec]  16  	     and o.order_id = i.order_ref
     [exec]  17  	     and i.catalog_ref_id = s.sku_id
     [exec]  18  	     and o.profile_id = u.id
     [exec]  19  	     and u.gender = 2
     [exec]  20  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 25)
     [exec]  21  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 39)
     [exec]  22  group by trunc(o.submitted_date, 'YEAR')
     [exec]  23  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- reporting_views1.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpt_products compiles information about each product in the catalog
     [exec] SQL> create or replace view drpt_products
     [exec]   2  as
     [exec]   3  select p.product_id as product_id,
     [exec]   4  	     c.display_name as category_name,
     [exec]   5  	     avg(s.wholesale_price) as avg_cost,
     [exec]   6  	     avg(s.list_price) as avg_list_price,
     [exec]   7  	     avg(s.sale_price) as avg_sale_price,
     [exec]   8  	     ((avg(s.list_price) - avg(s.wholesale_price)) / avg(s.wholesale_price)) as avg_initial_markup,
     [exec]   9  	     sum(inv.stock_level) as units_on_hand,
     [exec]  10  	     count(s.sku_id) as number_of_skus
     [exec]  11  from dcs_product p,
     [exec]  12  	     dcs_category c,
     [exec]  13  	     dcs_sku s,
     [exec]  14  	     dcs_prd_chldsku pc,
     [exec]  15  	     dcs_inventory inv
     [exec]  16  where p.parent_cat_id = c.category_id
     [exec]  17  	     and p.product_id = pc.product_id
     [exec]  18  	     and pc.sku_id = s.sku_id
     [exec]  19  and pc.sku_id = inv.catalog_ref_id
     [exec]  20  group by p.product_id, c.display_name
     [exec]  21  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpt_category calculates statistics about prices and costs on a per-category basis
     [exec] SQL> create or replace view drpt_category
     [exec]   2  as
     [exec]   3  select c.display_name as category_name,
     [exec]   4  	     avg(s.wholesale_price)as avg_cost,
     [exec]   5  	     avg(s.list_price) as avg_list_price,
     [exec]   6  	     avg(s.sale_price) as avg_sale_price,
     [exec]   7  	     ((avg(s.list_price) - avg(s.wholesale_price)) / avg(s.wholesale_price)) as avg_initial_markup
     [exec]   8  from dcs_category c,
     [exec]   9  	     dcs_sku s,
     [exec]  10  	     dcs_prd_chldsku pc,
     [exec]  11  	     dcs_product p
     [exec]  12  where c.category_id = p.parent_cat_id
     [exec]  13  	     and pc.product_id = p.product_id
     [exec]  14  	     and pc.sku_id = s.sku_id
     [exec]  15  group by c.display_name
     [exec]  16  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- reporting_views2.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptw_prod_sales calculates several statistics over each week on a per-product basis
     [exec] SQL> -- drptw_prod_sales calculates several statistics over each week on a per-product basis
     [exec] SQL> create or replace view drptw_prod_sales
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'DAY') as week,
     [exec]   4  	     i.product_id as product_id,
     [exec]   5  	     pri.category_name as category_name,
     [exec]   6  	     pri.avg_cost as avg_cost,
     [exec]   7  	     pri.avg_list_price as avg_list_price,
     [exec]   8  	     pri.avg_sale_price as avg_sale_price,
     [exec]   9  	     pri.avg_initial_markup as avg_initial_markup,
     [exec]  10  	     pri.units_on_hand as units_on_hand,
     [exec]  11  	     sum(i.quantity) as units_sold,
     [exec]  12  	     (sum(i.quantity) / wot.total_units_sold) as total_units_sold_p,
     [exec]  13  	     (pri.units_on_hand / sum(i.quantity)) as weeks_on_hand,
     [exec]  14  	     sum(ai.amount) as total_rev,
     [exec]  15  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]  16  	     ((sum(ai.amount) - sum(s.wholesale_price * i.quantity)) / sum(ai.amount)) as maintained_markup,
     [exec]  17  	     (sum(ai.amount) / wot.merch_rev) as total_rev_p,
     [exec]  18  	     pri.number_of_skus as number_of_skus,
     [exec]  19  	     si.skus_in_stock as skus_in_stock,
     [exec]  20  	     (si.skus_in_stock / pri.number_of_skus) as skus_in_stock_p,
     [exec]  21  	     wb.browses as browses,
     [exec]  22  	     count(distinct i.order_ref) as browse_conversions,
     [exec]  23  	     (count(distinct i.order_ref) / wb.browses) as shop_to_purc_conv,
     [exec]  24  	     wc.adds_to_cart as adds_to_cart,
     [exec]  25  	     count(i.order_ref) as cart_conversions,
     [exec]  26  	     (count(i.order_ref) / wc.adds_to_cart) as cart_to_purc_conv
     [exec]  27  from dcspp_order o,
     [exec]  28  	     dcspp_item i,
     [exec]  29  	     drpt_products pri,
     [exec]  30  	     dcspp_amount_info ai,
     [exec]  31  	     drptw_browses wb,
     [exec]  32  	     drptw_carts wc,
     [exec]  33  	     drpt_sku_stock si,
     [exec]  34  	     drptw_orders wot,
     [exec]  35  	     dcs_sku s
     [exec]  36  where o.order_id = i.order_ref
     [exec]  37  	     and i.product_id = pri.product_id
     [exec]  38  	     and i.price_info = ai.amount_info_id
     [exec]  39  	     and i.product_id = wc.product_id
     [exec]  40  	     and i.product_id = wb.product_id
     [exec]  41  	     and trunc(o.submitted_date, 'DAY') = wb.week
     [exec]  42  	     and trunc(o.submitted_date, 'DAY') = wc.week
     [exec]  43  	     and si.product_id = i.product_id
     [exec]  44  	     and wot.week = trunc(o.submitted_date, 'DAY')
     [exec]  45  	     and i.catalog_ref_id = s.sku_id
     [exec]  46  group by trunc(o.submitted_date, 'DAY'),
     [exec]  47  	     i.product_id,
     [exec]  48  	     pri.category_name,
     [exec]  49  	     pri.avg_cost,
     [exec]  50  	     pri.avg_list_price,
     [exec]  51  	     pri.avg_sale_price,
     [exec]  52  	     pri.avg_initial_markup,
     [exec]  53  	     pri.units_on_hand,
     [exec]  54  	     wb.browses,
     [exec]  55  	     wc.adds_to_cart,
     [exec]  56  	     wot.total_units_sold,
     [exec]  57  	     wot.merch_rev,
     [exec]  58  	     pri.number_of_skus,
     [exec]  59  	     si.skus_in_stock
     [exec]  60  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptm_prod_sales calculates several statistics over each month on a per-product basis
     [exec] SQL> create or replace view drptm_prod_sales
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'MON') as month,
     [exec]   4  	     i.product_id as product_id,
     [exec]   5  	     pri.category_name as category_name,
     [exec]   6  	     pri.avg_cost as avg_cost,
     [exec]   7  	     pri.avg_list_price as avg_list_price,
     [exec]   8  	     pri.avg_sale_price as avg_sale_price,
     [exec]   9  	     pri.avg_initial_markup as avg_initial_markup,
     [exec]  10  	     pri.units_on_hand as units_on_hand,
     [exec]  11  	     sum(i.quantity) as units_sold,
     [exec]  12  	     (sum(i.quantity) / mot.total_units_sold) as total_units_sold_p,
     [exec]  13  	     (pri.units_on_hand / sum(i.quantity)) as months_on_hand,
     [exec]  14  	     sum(ai.amount) as total_rev,
     [exec]  15  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]  16  	     ((sum(ai.amount) - sum(s.wholesale_price * i.quantity)) / sum(ai.amount)) as maintained_markup,
     [exec]  17  	     (sum(ai.amount) / mot.merch_rev) as total_rev_p,
     [exec]  18  	     pri.number_of_skus as number_of_skus,
     [exec]  19  	     si.skus_in_stock as skus_in_stock,
     [exec]  20  	     (si.skus_in_stock / pri.number_of_skus) as skus_in_stock_p,
     [exec]  21  	     mb.browses as browses,
     [exec]  22  	     count(distinct i.order_ref) as browse_conversions,
     [exec]  23  	     (count(distinct i.order_ref) / mb.browses) as shop_to_purc_conv,
     [exec]  24  	     mc.adds_to_cart as adds_to_cart,
     [exec]  25  	     count(i.order_ref) as cart_conversions,
     [exec]  26  	     (count(i.order_ref) / mc.adds_to_cart) as cart_to_purc_conv
     [exec]  27  from dcspp_order o,
     [exec]  28  	     dcspp_item i,
     [exec]  29  	     drpt_products pri,
     [exec]  30  	     dcspp_amount_info ai,
     [exec]  31  	     drptm_browses mb,
     [exec]  32  	     drptm_carts mc,
     [exec]  33  	     drpt_sku_stock si,
     [exec]  34  	     drptm_orders mot,
     [exec]  35  	     dcs_sku s
     [exec]  36  where o.order_id = i.order_ref
     [exec]  37  	     and i.product_id = pri.product_id
     [exec]  38  	     and i.price_info = ai.amount_info_id
     [exec]  39  	     and i.product_id = mc.product_id
     [exec]  40  	     and i.product_id = mb.product_id
     [exec]  41  	     and trunc(o.submitted_date, 'MON') = mb.month
     [exec]  42  	     and trunc(o.submitted_date, 'MON') = mc.month
     [exec]  43  	     and si.product_id = i.product_id
     [exec]  44  	     and mot.month = trunc(o.submitted_date, 'MON')
     [exec]  45  	     and i.catalog_ref_id = s.sku_id
     [exec]  46  group by trunc(o.submitted_date, 'MON'),
     [exec]  47  	     i.product_id,
     [exec]  48  	     pri.category_name,
     [exec]  49  	     pri.avg_cost,
     [exec]  50  	     pri.avg_list_price,
     [exec]  51  	     pri.avg_sale_price,
     [exec]  52  	     pri.avg_initial_markup,
     [exec]  53  	     pri.units_on_hand,
     [exec]  54  	     mb.browses,
     [exec]  55  	     mc.adds_to_cart,
     [exec]  56  	     mot.total_units_sold,
     [exec]  57  	     mot.merch_rev,
     [exec]  58  	     pri.number_of_skus,
     [exec]  59  	     si.skus_in_stock
     [exec]  60  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptq_prod_sales calculates several statistics over each quarter on a per-product basis
     [exec] SQL> create or replace view drptq_prod_sales
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'Q') as quarter,
     [exec]   4  	     i.product_id as product_id,
     [exec]   5  	     pri.category_name as category_name,
     [exec]   6  	     pri.avg_cost as avg_cost,
     [exec]   7  	     pri.avg_list_price as avg_list_price,
     [exec]   8  	     pri.avg_sale_price as avg_sale_price,
     [exec]   9  	     pri.avg_initial_markup as avg_initial_markup,
     [exec]  10  	     pri.units_on_hand as units_on_hand,
     [exec]  11  	     sum(i.quantity) as units_sold,
     [exec]  12  	     (sum(i.quantity) / qot.total_units_sold) as total_units_sold_p,
     [exec]  13  	     (pri.units_on_hand / sum(i.quantity)) as quarters_on_hand,
     [exec]  14  	     sum(ai.amount) as total_rev,
     [exec]  15  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]  16  	     ((sum(ai.amount) - sum(s.wholesale_price * i.quantity)) / sum(ai.amount)) as maintained_markup,
     [exec]  17  	     (sum(ai.amount) / qot.merch_rev) as total_rev_p,
     [exec]  18  	     pri.number_of_skus as number_of_skus,
     [exec]  19  	     si.skus_in_stock as skus_in_stock,
     [exec]  20  	     (si.skus_in_stock / pri.number_of_skus) as skus_in_stock_p,
     [exec]  21  	     qb.browses as browses,
     [exec]  22  	     count(distinct i.order_ref) as browse_conversions,
     [exec]  23  	     (count(distinct i.order_ref) / qb.browses) as shop_to_purc_conv,
     [exec]  24  	     qc.adds_to_cart as adds_to_cart,
     [exec]  25  	     count(i.order_ref) as cart_conversions,
     [exec]  26  	     (count(i.order_ref) / qc.adds_to_cart) as cart_to_purc_conv
     [exec]  27  from dcspp_order o,
     [exec]  28  	     dcspp_item i,
     [exec]  29  	     drpt_products pri,
     [exec]  30  	     dcspp_amount_info ai,
     [exec]  31  	     drptq_browses qb,
     [exec]  32  	     drptq_carts qc,
     [exec]  33  	     drpt_sku_stock si,
     [exec]  34  	     drptq_orders qot,
     [exec]  35  	     dcs_sku s
     [exec]  36  where o.order_id = i.order_ref
     [exec]  37  	     and i.product_id = pri.product_id
     [exec]  38  	     and i.price_info = ai.amount_info_id
     [exec]  39  	     and i.product_id = qc.product_id
     [exec]  40  	     and i.product_id = qb.product_id
     [exec]  41  	     and trunc(o.submitted_date, 'Q') = qb.quarter
     [exec]  42  	     and trunc(o.submitted_date, 'Q') = qc.quarter
     [exec]  43  	     and si.product_id = i.product_id
     [exec]  44  	     and qot.quarter = trunc(o.submitted_date, 'Q')
     [exec]  45  	     and i.catalog_ref_id = s.sku_id
     [exec]  46  group by trunc(o.submitted_date, 'Q'),
     [exec]  47  	     i.product_id,
     [exec]  48  	     pri.category_name,
     [exec]  49  	     pri.avg_cost,
     [exec]  50  	     pri.avg_list_price,
     [exec]  51  	     pri.avg_sale_price,
     [exec]  52  	     pri.avg_initial_markup,
     [exec]  53  	     pri.units_on_hand,
     [exec]  54  	     qb.browses,
     [exec]  55  	     qc.adds_to_cart,
     [exec]  56  	     qot.total_units_sold,
     [exec]  57  	     qot.merch_rev,
     [exec]  58  	     pri.number_of_skus,
     [exec]  59  	     si.skus_in_stock
     [exec]  60  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpta_prod_sales calculates several statistics over each year on a per-product basis
     [exec] SQL> create or replace view drpta_prod_sales
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'YEAR') as year,
     [exec]   4  	     i.product_id as product_id,
     [exec]   5  	     pri.category_name as category_name,
     [exec]   6  	     pri.avg_cost as avg_cost,
     [exec]   7  	     pri.avg_list_price as avg_list_price,
     [exec]   8  	     pri.avg_sale_price as avg_sale_price,
     [exec]   9  	     pri.avg_initial_markup as avg_initial_markup,
     [exec]  10  	     pri.units_on_hand as units_on_hand,
     [exec]  11  	     sum(i.quantity) as units_sold,
     [exec]  12  	     (sum(i.quantity) / aot.total_units_sold) as total_units_sold_p,
     [exec]  13  	     (pri.units_on_hand / sum(i.quantity)) as years_on_hand,
     [exec]  14  	     sum(ai.amount) as total_rev,
     [exec]  15  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]  16  	     ((sum(ai.amount) - sum(s.wholesale_price * i.quantity)) / sum(ai.amount)) as maintained_markup,
     [exec]  17  	     (sum(ai.amount) / aot.merch_rev) as total_rev_p,
     [exec]  18  	     pri.number_of_skus as number_of_skus,
     [exec]  19  	     si.skus_in_stock as skus_in_stock,
     [exec]  20  	     (si.skus_in_stock / pri.number_of_skus) as skus_in_stock_p,
     [exec]  21  	     ab.browses as browses, count(distinct i.order_ref) as browse_conversions,
     [exec]  22  	     (count(distinct i.order_ref) / ab.browses) as shop_to_purc_conv,
     [exec]  23  	     ac.adds_to_cart as adds_to_cart,
     [exec]  24  	     count(i.order_ref) as cart_conversions,
     [exec]  25  	     (count(i.order_ref) / ac.adds_to_cart) as cart_to_purc_conv
     [exec]  26  from dcspp_order o,
     [exec]  27  	     dcspp_item i,
     [exec]  28  	     drpt_products pri,
     [exec]  29  	     dcspp_amount_info ai,
     [exec]  30  	     drpta_browses ab,
     [exec]  31  	     drpta_carts ac,
     [exec]  32  	     drpt_sku_stock si,
     [exec]  33  	     drpta_orders aot,
     [exec]  34  	     dcs_sku s
     [exec]  35  where o.order_id = i.order_ref
     [exec]  36  	     and i.product_id = pri.product_id
     [exec]  37  	     and i.price_info = ai.amount_info_id
     [exec]  38  	     and i.product_id = ac.product_id
     [exec]  39  	     and i.product_id = ab.product_id
     [exec]  40  	     and trunc(o.submitted_date, 'YEAR') = ab.year
     [exec]  41  	     and trunc(o.submitted_date, 'YEAR') = ac.year
     [exec]  42  	     and si.product_id = i.product_id
     [exec]  43  	     and aot.year = trunc(o.submitted_date, 'YEAR')
     [exec]  44  	     and i.catalog_ref_id = s.sku_id
     [exec]  45  group by trunc(o.submitted_date, 'YEAR'),
     [exec]  46  	     i.product_id,
     [exec]  47  	     pri.category_name,
     [exec]  48  	     pri.avg_cost,
     [exec]  49  	     pri.avg_list_price,
     [exec]  50  	     pri.avg_sale_price,
     [exec]  51  	     pri.avg_initial_markup,
     [exec]  52  	     pri.units_on_hand,
     [exec]  53  	     ab.browses,
     [exec]  54  	     ac.adds_to_cart,
     [exec]  55  	     aot.total_units_sold,
     [exec]  56  	     aot.merch_rev,
     [exec]  57  	     pri.number_of_skus,
     [exec]  58  	     si.skus_in_stock
     [exec]  59  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptw_promo_sales calculates totals about products that were discounted
     [exec] SQL> --	  by the sample 'promo60003' promotion over each week
     [exec] SQL> create or replace view drptw_promo_sales
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'DAY') as week,
     [exec]   4  	     i.product_id as product_id,
     [exec]   5  	     pri.category_name as category_name,
     [exec]   6  	     pri.avg_cost as avg_cost,
     [exec]   7  	     pri.avg_list_price as avg_list_price,
     [exec]   8  	     pri.avg_sale_price as avg_sale_price,
     [exec]   9  	     pri.avg_initial_markup as avg_initial_markup,
     [exec]  10  	     pri.units_on_hand as units_on_hand,
     [exec]  11  	     sum(i.quantity) as units_sold,
     [exec]  12  	     (sum(i.quantity) / wpt.total_units_sold) as promo_units_sold_p,
     [exec]  13  	     (sum(i.quantity) / wot.total_units_sold) as total_units_sold_p,
     [exec]  14  	     (pri.units_on_hand / sum(i.quantity)) as weeks_on_hand,
     [exec]  15  	     sum(ai.amount) as total_rev,
     [exec]  16  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]  17  	     ((sum(ai.amount) - sum(s.wholesale_price)) / sum(ai.amount)) as maintained_markup,
     [exec]  18  	     (sum(ai.amount) / wpt.total_dollar_sales) as promo_rev_p,
     [exec]  19  	     (sum(ai.amount) / wot.merch_rev) as total_rev_p,
     [exec]  20  	     pri.number_of_skus as number_of_skus,
     [exec]  21  	     si.skus_in_stock as skus_in_stock,
     [exec]  22  	     (si.skus_in_stock / pri.number_of_skus) as skus_in_stock_p,
     [exec]  23  	     wb.browses as browses,
     [exec]  24  	     count(distinct i.order_ref) as browse_conversions,
     [exec]  25  	     (count(distinct i.order_ref) / wb.browses) as shop_to_purc_conv,
     [exec]  26  	     wc.adds_to_cart as adds_to_cart,
     [exec]  27  	     count(i.order_ref) as cart_conversions,
     [exec]  28  	     (count(i.order_ref) / wc.adds_to_cart) as cart_to_purc_conv
     [exec]  29  from dcspp_order o,
     [exec]  30  	     dcspp_item i,
     [exec]  31  	     drpt_products pri,
     [exec]  32  	     dcspp_amount_info ai,
     [exec]  33  	     drptw_browses wb,
     [exec]  34  	     drptw_carts wc,
     [exec]  35  	     drpt_sku_stock si,
     [exec]  36  	     drptw_orders wot,
     [exec]  37  	     dcs_sku s,
     [exec]  38  	     drptw_promotion wpt,
     [exec]  39  	     dcspp_amtinfo_adj aa,
     [exec]  40  	     dcspp_price_adjust pa
     [exec]  41  where o.order_id = i.order_ref
     [exec]  42  	     and o.state != 'FAILED'
     [exec]  43  	     and o.state != 'REMOVED'
     [exec]  44  	     and i.product_id = pri.product_id
     [exec]  45  	     and i.price_info = ai.amount_info_id
     [exec]  46  	     and i.product_id = wc.product_id
     [exec]  47  	     and i.product_id = wb.product_id
     [exec]  48  	     and trunc(o.submitted_date, 'DAY') = wb.week
     [exec]  49  	     and trunc(o.submitted_date, 'DAY') = wc.week
     [exec]  50  	     and si.product_id = i.product_id
     [exec]  51  	     and wot.week = trunc(o.submitted_date, 'DAY')
     [exec]  52  	     and wpt.week = trunc(o.submitted_date, 'DAY')
     [exec]  53  	     and i.catalog_ref_id = s.sku_id
     [exec]  54  	     and i.price_info = aa.amount_info_id
     [exec]  55  	     and aa.adjustments = pa.adjustment_id
     [exec]  56  	     and pa.pricing_model = 'promo60003'
     [exec]  57  group by trunc(o.submitted_date, 'DAY'),
     [exec]  58  	     i.product_id,
     [exec]  59  	     pri.category_name,
     [exec]  60  	     pri.avg_cost,
     [exec]  61  	     pri.avg_list_price,
     [exec]  62  	     pri.avg_sale_price,
     [exec]  63  	     pri.avg_initial_markup,
     [exec]  64  	     pri.units_on_hand,
     [exec]  65  	     wb.browses,
     [exec]  66  	     wc.adds_to_cart,
     [exec]  67  	     wot.total_units_sold,
     [exec]  68  	     wot.merch_rev,
     [exec]  69  	     pri.number_of_skus,
     [exec]  70  	     si.skus_in_stock,
     [exec]  71  	     wpt.total_units_sold,
     [exec]  72  	     wpt.total_dollar_sales
     [exec]  73  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptm_promo_sales calculates totals about products that were discounted
     [exec] SQL> --	  by the sample 'promo60003' promotion over each month
     [exec] SQL> create or replace view drptm_promo_sales
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'MON') as month,
     [exec]   4  	     i.product_id as product_id,
     [exec]   5  	     pri.category_name as category_name,
     [exec]   6  	     pri.avg_cost as avg_cost,
     [exec]   7  	     pri.avg_list_price as avg_list_price,
     [exec]   8  	     pri.avg_sale_price as avg_sale_price,
     [exec]   9  	     pri.avg_initial_markup as avg_initial_markup,
     [exec]  10  	     pri.units_on_hand as units_on_hand,
     [exec]  11  	     sum(i.quantity) as units_sold,
     [exec]  12  	     (sum(i.quantity) / mpt.total_units_sold) as promo_units_sold_p,
     [exec]  13  	     (sum(i.quantity) / mot.total_units_sold) as total_units_sold_p,
     [exec]  14  	     (pri.units_on_hand / sum(i.quantity)) as months_on_hand,
     [exec]  15  	     sum(ai.amount) as total_rev,
     [exec]  16  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]  17  	     ((sum(ai.amount) - sum(s.wholesale_price)) / sum(ai.amount)) as maintained_markup,
     [exec]  18  	     (sum(ai.amount) / mpt.total_dollar_sales) as promo_rev_p,
     [exec]  19  	     (sum(ai.amount) / mot.merch_rev) as total_rev_p,
     [exec]  20  	     pri.number_of_skus as number_of_skus,
     [exec]  21  	     si.skus_in_stock as skus_in_stock,
     [exec]  22  	     (si.skus_in_stock / pri.number_of_skus) as skus_in_stock_p,
     [exec]  23  	     mb.browses as browses,
     [exec]  24  	     count(distinct i.order_ref) as browse_conversions,
     [exec]  25  	     (count(distinct i.order_ref) / mb.browses) as shop_to_purc_conv,
     [exec]  26  	     mc.adds_to_cart as adds_to_cart,
     [exec]  27  	     count(i.order_ref) as cart_conversions,
     [exec]  28  	     (count(i.order_ref) / mc.adds_to_cart) as cart_to_purc_conv
     [exec]  29  from dcspp_order o,
     [exec]  30  	     dcspp_item i,
     [exec]  31  	     drpt_products pri,
     [exec]  32  	     dcspp_amount_info ai,
     [exec]  33  	     drptm_browses mb,
     [exec]  34  	     drptm_carts mc,
     [exec]  35  	     drpt_sku_stock si,
     [exec]  36  	     drptm_orders mot,
     [exec]  37  	     dcs_sku s,
     [exec]  38  	     drptm_promotion mpt,
     [exec]  39  	     dcspp_amtinfo_adj aa,
     [exec]  40  	     dcspp_price_adjust pa
     [exec]  41  where o.order_id = i.order_ref
     [exec]  42  	     and o.state != 'FAILED'
     [exec]  43  	     and o.state != 'REMOVED'
     [exec]  44  	     and i.product_id = pri.product_id
     [exec]  45  	     and i.price_info = ai.amount_info_id
     [exec]  46  	     and i.product_id = mc.product_id
     [exec]  47  	     and i.product_id = mb.product_id
     [exec]  48  	     and trunc(o.submitted_date, 'MON') = mb.month
     [exec]  49  	     and trunc(o.submitted_date, 'MON') = mc.month
     [exec]  50  	     and si.product_id = i.product_id
     [exec]  51  	     and mot.month = trunc(o.submitted_date, 'MON')
     [exec]  52  	     and mpt.month = trunc(o.submitted_date, 'MON')
     [exec]  53  	     and i.catalog_ref_id = s.sku_id
     [exec]  54  	     and i.price_info = aa.amount_info_id
     [exec]  55  	     and aa.adjustments = pa.adjustment_id
     [exec]  56  	     and pa.pricing_model = 'promo60003'
     [exec]  57  group by trunc(o.submitted_date, 'MON'),
     [exec]  58  	     i.product_id,
     [exec]  59  	     pri.category_name,
     [exec]  60  	     pri.avg_cost,
     [exec]  61  	     pri.avg_list_price,
     [exec]  62  	     pri.avg_sale_price,
     [exec]  63  	     pri.avg_initial_markup,
     [exec]  64  	     pri.units_on_hand,
     [exec]  65  	     mb.browses,
     [exec]  66  	     mc.adds_to_cart,
     [exec]  67  	     mot.total_units_sold,
     [exec]  68  	     mot.merch_rev,
     [exec]  69  	     pri.number_of_skus,
     [exec]  70  	     si.skus_in_stock,
     [exec]  71  	     mpt.total_units_sold,
     [exec]  72  	     mpt.total_dollar_sales
     [exec]  73  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptq_promo_sales calculates totals about products that were discounted
     [exec] SQL> --	  by the sample 'promo60003' promotion over each quarter
     [exec] SQL> create or replace view drptq_promo_sales
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'Q') as quarter,
     [exec]   4  	     i.product_id as product_id,
     [exec]   5  	     pri.category_name as category_name,
     [exec]   6  	     pri.avg_cost as avg_cost,
     [exec]   7  	     pri.avg_list_price as avg_list_price,
     [exec]   8  	     pri.avg_sale_price as avg_sale_price,
     [exec]   9  	     pri.avg_initial_markup as avg_initial_markup,
     [exec]  10  	     pri.units_on_hand as units_on_hand,
     [exec]  11  	     sum(i.quantity) as units_sold,
     [exec]  12  	     (sum(i.quantity) / qpt.total_units_sold) as promo_units_sold_p,
     [exec]  13  	     (sum(i.quantity) / qot.total_units_sold) as total_units_sold_p,
     [exec]  14  	     (pri.units_on_hand / sum(i.quantity)) as quarters_on_hand,
     [exec]  15  	     sum(ai.amount) as total_rev,
     [exec]  16  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]  17  	     ((sum(ai.amount) - sum(s.wholesale_price)) / sum(ai.amount)) as maintained_markup,
     [exec]  18  	     (sum(ai.amount) / qpt.total_dollar_sales) as promo_rev_p,
     [exec]  19  	     (sum(ai.amount) / qot.merch_rev) as total_rev_p,
     [exec]  20  	     pri.number_of_skus as number_of_skus,
     [exec]  21  	     si.skus_in_stock as skus_in_stock,
     [exec]  22  	     (si.skus_in_stock / pri.number_of_skus) as skus_in_stock_p,
     [exec]  23  	     qb.browses as browses,
     [exec]  24  	     count(distinct i.order_ref) as browse_conversions,
     [exec]  25  	     (count(distinct i.order_ref) / qb.browses) as shop_to_purc_conv,
     [exec]  26  	     qc.adds_to_cart as adds_to_cart,
     [exec]  27  	     count(i.order_ref) as cart_conversions,
     [exec]  28  	     (count(i.order_ref) / qc.adds_to_cart) as cart_to_purc_conv
     [exec]  29  from dcspp_order o,
     [exec]  30  	     dcspp_item i,
     [exec]  31  	     drpt_products pri,
     [exec]  32  	     dcspp_amount_info ai,
     [exec]  33  	     drptq_browses qb,
     [exec]  34  	     drptq_carts qc,
     [exec]  35  	     drpt_sku_stock si,
     [exec]  36  	     drptq_orders qot,
     [exec]  37  	     dcs_sku s,
     [exec]  38  	     drptq_promotion qpt,
     [exec]  39  	     dcspp_amtinfo_adj aa,
     [exec]  40  	     dcspp_price_adjust pa
     [exec]  41  where o.order_id = i.order_ref
     [exec]  42  	     and o.state != 'FAILED'
     [exec]  43  	     and o.state != 'REMOVED'
     [exec]  44  	     and i.product_id = pri.product_id
     [exec]  45  	     and i.price_info = ai.amount_info_id
     [exec]  46  	     and i.product_id = qc.product_id
     [exec]  47  	     and i.product_id = qb.product_id
     [exec]  48  	     and trunc(o.submitted_date, 'Q') = qb.quarter
     [exec]  49  	     and trunc(o.submitted_date, 'Q') = qc.quarter
     [exec]  50  	     and si.product_id = i.product_id
     [exec]  51  	     and qot.quarter = trunc(o.submitted_date, 'Q')
     [exec]  52  	     and qpt.quarter = trunc(o.submitted_date, 'Q')
     [exec]  53  	     and i.catalog_ref_id = s.sku_id
     [exec]  54  	     and i.price_info = aa.amount_info_id
     [exec]  55  	     and aa.adjustments = pa.adjustment_id
     [exec]  56  	     and pa.pricing_model = 'promo60003'
     [exec]  57  group by trunc(o.submitted_date, 'Q'),
     [exec]  58  	     i.product_id,
     [exec]  59  	     pri.category_name,
     [exec]  60  	     pri.avg_cost,
     [exec]  61  	     pri.avg_list_price,
     [exec]  62  	     pri.avg_sale_price,
     [exec]  63  	     pri.avg_initial_markup,
     [exec]  64  	     pri.units_on_hand,
     [exec]  65  	     qb.browses,
     [exec]  66  	     qc.adds_to_cart,
     [exec]  67  	     qot.total_units_sold,
     [exec]  68  	     qot.merch_rev,
     [exec]  69  	     pri.number_of_skus,
     [exec]  70  	     si.skus_in_stock,
     [exec]  71  	     qpt.total_units_sold,
     [exec]  72  	     qpt.total_dollar_sales
     [exec]  73  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpta_promo_sales calculates totals about products that were discounted
     [exec] SQL> --	  by the sample 'promo60003' promotion over each year
     [exec] SQL> create or replace view drpta_promo_sales
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'YEAR') as year,
     [exec]   4  	     i.product_id as product_id,
     [exec]   5  	     pri.category_name as category_name,
     [exec]   6  	     pri.avg_cost as avg_cost,
     [exec]   7  	     pri.avg_list_price as avg_list_price,
     [exec]   8  	     pri.avg_sale_price as avg_sale_price,
     [exec]   9  	     pri.avg_initial_markup as avg_initial_markup,
     [exec]  10  	     pri.units_on_hand as units_on_hand,
     [exec]  11  	     sum(i.quantity) as units_sold,
     [exec]  12  	     (sum(i.quantity) / apt.total_units_sold) as promo_units_sold_p,
     [exec]  13  	     (sum(i.quantity) / aot.total_units_sold) as total_units_sold_p,
     [exec]  14  	     (pri.units_on_hand / sum(i.quantity)) as years_on_hand,
     [exec]  15  	     sum(ai.amount) as total_rev,
     [exec]  16  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]  17  	     ((sum(ai.amount) - sum(s.wholesale_price)) / sum(ai.amount)) as maintained_markup,
     [exec]  18  	     (sum(ai.amount) / apt.total_dollar_sales) as promo_rev_p,
     [exec]  19  	     (sum(ai.amount) / aot.merch_rev) as total_rev_p,
     [exec]  20  	     pri.number_of_skus as number_of_skus,
     [exec]  21  	     si.skus_in_stock as skus_in_stock,
     [exec]  22  	     (si.skus_in_stock / pri.number_of_skus) as skus_in_stock_p,
     [exec]  23  	     ab.browses as browses,
     [exec]  24  	     count(distinct i.order_ref) as browse_conversions,
     [exec]  25  	     (count(distinct i.order_ref) / ab.browses) as shop_to_purc_conv,
     [exec]  26  	     ac.adds_to_cart as adds_to_cart,
     [exec]  27  	     count(i.order_ref) as cart_conversions,
     [exec]  28  	     (count(i.order_ref) / ac.adds_to_cart) as cart_to_purc_conv
     [exec]  29  from dcspp_order o,
     [exec]  30  	     dcspp_item i,
     [exec]  31  	     drpt_products pri,
     [exec]  32  	     dcspp_amount_info ai,
     [exec]  33  	     drpta_browses ab,
     [exec]  34  	     drpta_carts ac,
     [exec]  35  	     drpt_sku_stock si,
     [exec]  36  	     drpta_orders aot,
     [exec]  37  	     dcs_sku s,
     [exec]  38  	     drpta_promotion apt,
     [exec]  39  	     dcspp_amtinfo_adj aa,
     [exec]  40  	     dcspp_price_adjust pa
     [exec]  41  where o.order_id = i.order_ref
     [exec]  42  	     and o.state != 'FAILED'
     [exec]  43  	     and o.state != 'REMOVED'
     [exec]  44  	     and i.product_id = pri.product_id
     [exec]  45  	     and i.price_info = ai.amount_info_id
     [exec]  46  	     and i.product_id = ac.product_id
     [exec]  47  	     and i.product_id = ab.product_id
     [exec]  48  	     and trunc(o.submitted_date, 'YEAR') = ab.year
     [exec]  49  	     and trunc(o.submitted_date, 'YEAR') = ac.year
     [exec]  50  	     and si.product_id = i.product_id
     [exec]  51  	     and aot.year = trunc(o.submitted_date, 'YEAR')
     [exec]  52  	     and apt.year = trunc(o.submitted_date, 'YEAR')
     [exec]  53  	     and i.catalog_ref_id = s.sku_id
     [exec]  54  	     and i.price_info = aa.amount_info_id
     [exec]  55  	     and aa.adjustments = pa.adjustment_id
     [exec]  56  	     and pa.pricing_model = 'promo60003'
     [exec]  57  group by trunc(o.submitted_date, 'YEAR'),
     [exec]  58  	     i.product_id,
     [exec]  59  	     pri.category_name,
     [exec]  60  	     pri.avg_cost,
     [exec]  61  	     pri.avg_list_price,
     [exec]  62  	     pri.avg_sale_price,
     [exec]  63  	     pri.avg_initial_markup,
     [exec]  64  	     pri.units_on_hand,
     [exec]  65  	     ab.browses,
     [exec]  66  	     ac.adds_to_cart,
     [exec]  67  	     aot.total_units_sold,
     [exec]  68  	     aot.merch_rev,
     [exec]  69  	     pri.number_of_skus,
     [exec]  70  	     si.skus_in_stock,
     [exec]  71  	     apt.total_units_sold,
     [exec]  72  	     apt.total_dollar_sales
     [exec]  73  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptw_m_18_25_sales calculates totals about products that were purchased
     [exec] SQL> --	  by males aged 18-25 each week
     [exec] SQL> create or replace view drptw_m18_25_sales
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'DAY') as week,
     [exec]   4  	     i.product_id as product_id,
     [exec]   5  	     pri.category_name as category_name,
     [exec]   6  	     pri.avg_cost as avg_cost,
     [exec]   7  	     pri.avg_list_price as avg_list_price,
     [exec]   8  	     pri.avg_sale_price as avg_sale_price,
     [exec]   9  	     pri.avg_initial_markup as avg_initial_markup,
     [exec]  10  	     pri.units_on_hand as units_on_hand,
     [exec]  11  	     sum(i.quantity) as units_sold,
     [exec]  12  	     (sum(i.quantity) / wpt.total_units_sold) as demo_units_sold_p,
     [exec]  13  	     (sum(i.quantity) / wot.total_units_sold) as total_units_sold_p,
     [exec]  14  	     (pri.units_on_hand / sum(i.quantity)) as weeks_on_hand,
     [exec]  15  	     sum(ai.amount) as total_rev,
     [exec]  16  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]  17  	     ((sum(ai.amount) - sum(s.wholesale_price)) / sum(ai.amount)) as maintained_markup,
     [exec]  18  	     (sum(ai.amount) / wpt.total_dollar_sales) as demo_rev_p,
     [exec]  19  	     (sum(ai.amount) / wot.merch_rev) as total_rev_p,
     [exec]  20  	     pri.number_of_skus as number_of_skus,
     [exec]  21  	     si.skus_in_stock as skus_in_stock,
     [exec]  22  	     (si.skus_in_stock / pri.number_of_skus) as skus_in_stock_p,
     [exec]  23  	     wb.browses as browses,
     [exec]  24  	     count(distinct i.order_ref) as browse_conversions,
     [exec]  25  	     (count(distinct i.order_ref) / wb.browses) as shop_to_purc_conv,
     [exec]  26  	     wc.adds_to_cart as adds_to_cart,
     [exec]  27  	     count(i.order_ref) as cart_conversions,
     [exec]  28  	     (count(i.order_ref) / wc.adds_to_cart) as cart_to_purc_conv
     [exec]  29  from dcspp_order o,
     [exec]  30  	     dcspp_item i,
     [exec]  31  	     drpt_products pri,
     [exec]  32  	     dcspp_amount_info ai,
     [exec]  33  	     drptw_browses wb,
     [exec]  34  	     drptw_carts wc,
     [exec]  35  	     drpt_sku_stock si,
     [exec]  36  	     drptw_orders wot,
     [exec]  37  	     dcs_sku s,
     [exec]  38  	     drptw_male_18_25 wpt,
     [exec]  39  	     dps_user u
     [exec]  40  where o.order_id = i.order_ref
     [exec]  41  	     and o.state != 'FAILED'
     [exec]  42  	     and o.state != 'REMOVED'
     [exec]  43  	     and i.product_id = pri.product_id
     [exec]  44  	     and i.price_info = ai.amount_info_id
     [exec]  45  	     and i.product_id = wc.product_id
     [exec]  46  	     and i.product_id = wb.product_id
     [exec]  47  	     and trunc(o.submitted_date, 'DAY') = wb.week
     [exec]  48  	     and trunc(o.submitted_date, 'DAY') = wc.week
     [exec]  49  	     and si.product_id = i.product_id
     [exec]  50  	     and wot.week = trunc(o.submitted_date, 'DAY')
     [exec]  51  	     and wpt.week = trunc(o.submitted_date, 'DAY')
     [exec]  52  	     and i.catalog_ref_id = s.sku_id
     [exec]  53  	     and o.profile_id = u.id
     [exec]  54  	     and u.gender = 2
     [exec]  55  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 18)
     [exec]  56  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 25)
     [exec]  57  group by trunc(o.submitted_date, 'DAY'),
     [exec]  58  	     i.product_id,
     [exec]  59  	     pri.category_name,
     [exec]  60  	     pri.avg_cost,
     [exec]  61  	     pri.avg_list_price,
     [exec]  62  	     pri.avg_sale_price,
     [exec]  63  	     pri.avg_initial_markup,
     [exec]  64  	     pri.units_on_hand,
     [exec]  65  	     wb.browses,
     [exec]  66  	     wc.adds_to_cart,
     [exec]  67  	     wot.total_units_sold,
     [exec]  68  	     wot.merch_rev,
     [exec]  69  	     pri.number_of_skus,
     [exec]  70  	     si.skus_in_stock,
     [exec]  71  	     wpt.total_units_sold,
     [exec]  72  	     wpt.total_dollar_sales
     [exec]  73  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptm_m_18_25_sales calculates totals about products that were purchased
     [exec] SQL> --	  by males aged 18-25 each month
     [exec] SQL> create or replace view drptm_m18_25_sales
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'MON') as month,
     [exec]   4  	     i.product_id as product_id,
     [exec]   5  	     pri.category_name as category_name,
     [exec]   6  	     pri.avg_cost as avg_cost,
     [exec]   7  	     pri.avg_list_price as avg_list_price,
     [exec]   8  	     pri.avg_sale_price as avg_sale_price,
     [exec]   9  	     pri.avg_initial_markup as avg_initial_markup,
     [exec]  10  	     pri.units_on_hand as units_on_hand,
     [exec]  11  	     sum(i.quantity) as units_sold,
     [exec]  12  	     (sum(i.quantity) / mpt.total_units_sold) as demo_units_sold_p,
     [exec]  13  	     (sum(i.quantity) / mot.total_units_sold) as total_units_sold_p,
     [exec]  14  	     (pri.units_on_hand / sum(i.quantity)) as months_on_hand,
     [exec]  15  	     sum(ai.amount) as total_rev,
     [exec]  16  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]  17  	     ((sum(ai.amount) - sum(s.wholesale_price)) / sum(ai.amount)) as maintained_markup,
     [exec]  18  	     (sum(ai.amount) / mpt.total_dollar_sales) as demo_rev_p,
     [exec]  19  	     (sum(ai.amount) / mot.merch_rev) as total_rev_p,
     [exec]  20  	     pri.number_of_skus as number_of_skus,
     [exec]  21  	     si.skus_in_stock as skus_in_stock,
     [exec]  22  	     (si.skus_in_stock / pri.number_of_skus) as skus_in_stock_p,
     [exec]  23  	     mb.browses as browses,
     [exec]  24  	     count(distinct i.order_ref) as browse_conversions,
     [exec]  25  	     (count(distinct i.order_ref) / mb.browses) as shop_to_purc_conv,
     [exec]  26  	     mc.adds_to_cart as adds_to_cart,
     [exec]  27  	     count(i.order_ref) as cart_conversions,
     [exec]  28  	     (count(i.order_ref) / mc.adds_to_cart) as cart_to_purc_conv
     [exec]  29  from dcspp_order o,
     [exec]  30  	     dcspp_item i,
     [exec]  31  	     drpt_products pri,
     [exec]  32  	     dcspp_amount_info ai,
     [exec]  33  	     drptm_browses mb,
     [exec]  34  	     drptm_carts mc,
     [exec]  35  	     drpt_sku_stock si,
     [exec]  36  	     drptm_orders mot,
     [exec]  37  	     dcs_sku s,
     [exec]  38  	     drptm_male_18_25 mpt,
     [exec]  39  	     dps_user u
     [exec]  40  where o.order_id = i.order_ref
     [exec]  41  	     and o.state != 'FAILED'
     [exec]  42  	     and o.state != 'REMOVED'
     [exec]  43  	     and i.product_id = pri.product_id
     [exec]  44  	     and i.price_info = ai.amount_info_id
     [exec]  45  	     and i.product_id = mc.product_id
     [exec]  46  	     and i.product_id = mb.product_id
     [exec]  47  	     and trunc(o.submitted_date, 'MON') = mb.month
     [exec]  48  	     and trunc(o.submitted_date, 'MON') = mc.month
     [exec]  49  	     and si.product_id = i.product_id
     [exec]  50  	     and mot.month = trunc(o.submitted_date, 'MON')
     [exec]  51  	     and mpt.month = trunc(o.submitted_date, 'MON')
     [exec]  52  	     and i.catalog_ref_id = s.sku_id
     [exec]  53  	     and o.profile_id = u.id
     [exec]  54  	     and u.gender = 2
     [exec]  55  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 18)
     [exec]  56  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 25)
     [exec]  57  group by trunc(o.submitted_date, 'MON'),
     [exec]  58  	     i.product_id,
     [exec]  59  	     pri.category_name,
     [exec]  60  	     pri.avg_cost,
     [exec]  61  	     pri.avg_list_price,
     [exec]  62  	     pri.avg_sale_price,
     [exec]  63  	     pri.avg_initial_markup,
     [exec]  64  	     pri.units_on_hand,
     [exec]  65  	     mb.browses,
     [exec]  66  	     mc.adds_to_cart,
     [exec]  67  	     mot.total_units_sold,
     [exec]  68  	     mot.merch_rev,
     [exec]  69  	     pri.number_of_skus,
     [exec]  70  	     si.skus_in_stock,
     [exec]  71  	     mpt.total_units_sold,
     [exec]  72  	     mpt.total_dollar_sales
     [exec]  73  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptq_m_18_25_sales calculates totals about products that were purchased
     [exec] SQL> --	  by males aged 18-25 each quarter
     [exec] SQL> create or replace view drptq_m18_25_sales
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'Q') as quarter,
     [exec]   4  	     i.product_id as product_id,
     [exec]   5  	     pri.category_name as category_name,
     [exec]   6  	     pri.avg_cost as avg_cost,
     [exec]   7  	     pri.avg_list_price as avg_list_price,
     [exec]   8  	     pri.avg_sale_price as avg_sale_price,
     [exec]   9  	     pri.avg_initial_markup as avg_initial_markup,
     [exec]  10  	     pri.units_on_hand as units_on_hand,
     [exec]  11  	     sum(i.quantity) as units_sold,
     [exec]  12  	     (sum(i.quantity) / qpt.total_units_sold) as demo_units_sold_p,
     [exec]  13  	     (sum(i.quantity) / qot.total_units_sold) as total_units_sold_p,
     [exec]  14  	     (pri.units_on_hand / sum(i.quantity)) as quarters_on_hand,
     [exec]  15  	     sum(ai.amount) as total_rev,
     [exec]  16  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]  17  	     ((sum(ai.amount) - sum(s.wholesale_price)) / sum(ai.amount)) as maintained_markup,
     [exec]  18  	     (sum(ai.amount) / qpt.total_dollar_sales) as demo_rev_p,
     [exec]  19  	     (sum(ai.amount) / qot.merch_rev) as total_rev_p,
     [exec]  20  	     pri.number_of_skus as number_of_skus,
     [exec]  21  	     si.skus_in_stock as skus_in_stock,
     [exec]  22  	     (si.skus_in_stock / pri.number_of_skus) as skus_in_stock_p,
     [exec]  23  	     qb.browses as browses,
     [exec]  24  	     count(distinct i.order_ref) as browse_conversions,
     [exec]  25  	     (count(distinct i.order_ref) / qb.browses) as shop_to_purc_conv,
     [exec]  26  	     qc.adds_to_cart as adds_to_cart,
     [exec]  27  	     count(i.order_ref) as cart_conversions,
     [exec]  28  	     (count(i.order_ref) / qc.adds_to_cart) as cart_to_purc_conv
     [exec]  29  from dcspp_order o,
     [exec]  30  	     dcspp_item i,
     [exec]  31  	     drpt_products pri,
     [exec]  32  	     dcspp_amount_info ai,
     [exec]  33  	     drptq_browses qb,
     [exec]  34  	     drptq_carts qc,
     [exec]  35  	     drpt_sku_stock si,
     [exec]  36  	     drptq_orders qot,
     [exec]  37  	     dcs_sku s,
     [exec]  38  	     drptq_male_18_25 qpt,
     [exec]  39  	     dps_user u
     [exec]  40  where o.order_id = i.order_ref
     [exec]  41  	     and o.state != 'FAILED'
     [exec]  42  	     and o.state != 'REMOVED'
     [exec]  43  	     and i.product_id = pri.product_id
     [exec]  44  	     and i.price_info = ai.amount_info_id
     [exec]  45  	     and i.product_id = qc.product_id
     [exec]  46  	     and i.product_id = qb.product_id
     [exec]  47  	     and trunc(o.submitted_date, 'Q') = qb.quarter
     [exec]  48  	     and trunc(o.submitted_date, 'Q') = qc.quarter
     [exec]  49  	     and si.product_id = i.product_id
     [exec]  50  	     and qot.quarter = trunc(o.submitted_date, 'Q')
     [exec]  51  	     and qpt.quarter = trunc(o.submitted_date, 'Q')
     [exec]  52  	     and i.catalog_ref_id = s.sku_id
     [exec]  53  	     and o.profile_id = u.id
     [exec]  54  	     and u.gender = 2
     [exec]  55  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 18)
     [exec]  56  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 25)
     [exec]  57  group by trunc(o.submitted_date, 'Q'),
     [exec]  58  	     i.product_id,
     [exec]  59  	     pri.category_name,
     [exec]  60  	     pri.avg_cost,
     [exec]  61  	     pri.avg_list_price,
     [exec]  62  	     pri.avg_sale_price,
     [exec]  63  	     pri.avg_initial_markup,
     [exec]  64  	     pri.units_on_hand,
     [exec]  65  	     qb.browses,
     [exec]  66  	     qc.adds_to_cart,
     [exec]  67  	     qot.total_units_sold,
     [exec]  68  	     qot.merch_rev,
     [exec]  69  	     pri.number_of_skus,
     [exec]  70  	     si.skus_in_stock,
     [exec]  71  	     qpt.total_units_sold,
     [exec]  72  	     qpt.total_dollar_sales
     [exec]  73  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpta_m_18_25_sales calculates totals about products that were purchased
     [exec] SQL> --	  by males aged 18-25 each year
     [exec] SQL> create or replace view drpta_m18_25_sales
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'YEAR') as year,
     [exec]   4  	     i.product_id as product_id,
     [exec]   5  	     pri.category_name as category_name,
     [exec]   6  	     pri.avg_cost as avg_cost,
     [exec]   7  	     pri.avg_list_price as avg_list_price,
     [exec]   8  	     pri.avg_sale_price as avg_sale_price,
     [exec]   9  	     pri.avg_initial_markup as avg_initial_markup,
     [exec]  10  	     pri.units_on_hand as units_on_hand,
     [exec]  11  	     sum(i.quantity) as units_sold,
     [exec]  12  	     (sum(i.quantity) / apt.total_units_sold) as demo_units_sold_p,
     [exec]  13  	     (sum(i.quantity) / aot.total_units_sold) as total_units_sold_p,
     [exec]  14  	     (pri.units_on_hand / sum(i.quantity)) as years_on_hand,
     [exec]  15  	     sum(ai.amount) as total_rev,
     [exec]  16  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]  17  	     ((sum(ai.amount) - sum(s.wholesale_price)) / sum(ai.amount)) as maintained_markup,
     [exec]  18  	     (sum(ai.amount) / apt.total_dollar_sales) as demo_rev_p,
     [exec]  19  	     (sum(ai.amount) / aot.merch_rev) as total_rev_p,
     [exec]  20  	     pri.number_of_skus as number_of_skus,
     [exec]  21  	     si.skus_in_stock as skus_in_stock,
     [exec]  22  	     (si.skus_in_stock / pri.number_of_skus) as skus_in_stock_p,
     [exec]  23  	     ab.browses as browses,
     [exec]  24  	     count(distinct i.order_ref) as browse_conversions,
     [exec]  25  	     (count(distinct i.order_ref) / ab.browses) as shop_to_purc_conv,
     [exec]  26  	     ac.adds_to_cart as adds_to_cart,
     [exec]  27  	     count(i.order_ref) as cart_conversions,
     [exec]  28  	     (count(i.order_ref) / ac.adds_to_cart) as cart_to_purc_conv
     [exec]  29  from dcspp_order o,
     [exec]  30  	     dcspp_item i,
     [exec]  31  	     drpt_products pri,
     [exec]  32  	     dcspp_amount_info ai,
     [exec]  33  	     drpta_browses ab,
     [exec]  34  	     drpta_carts ac,
     [exec]  35  	     drpt_sku_stock si,
     [exec]  36  	     drpta_orders aot,
     [exec]  37  	     dcs_sku s,
     [exec]  38  	     drpta_male_18_25 apt,
     [exec]  39  	     dps_user u
     [exec]  40  where o.order_id = i.order_ref
     [exec]  41  	     and o.state != 'FAILED'
     [exec]  42  	     and o.state != 'REMOVED'
     [exec]  43  	     and i.product_id = pri.product_id
     [exec]  44  	     and i.price_info = ai.amount_info_id
     [exec]  45  	     and i.product_id = ac.product_id
     [exec]  46  	     and i.product_id = ab.product_id
     [exec]  47  	     and trunc(o.submitted_date, 'YEAR') = ab.year
     [exec]  48  	     and trunc(o.submitted_date, 'YEAR') = ac.year
     [exec]  49  	     and si.product_id = i.product_id
     [exec]  50  	     and aot.year = trunc(o.submitted_date, 'YEAR')
     [exec]  51  	     and apt.year = trunc(o.submitted_date, 'YEAR')
     [exec]  52  	     and i.catalog_ref_id = s.sku_id
     [exec]  53  	     and o.profile_id = u.id
     [exec]  54  	     and u.gender = 2
     [exec]  55  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 18)
     [exec]  56  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 25)
     [exec]  57  group by trunc(o.submitted_date, 'YEAR'),
     [exec]  58  	     i.product_id,
     [exec]  59  	     pri.category_name,
     [exec]  60  	     pri.avg_cost,
     [exec]  61  	     pri.avg_list_price,
     [exec]  62  	     pri.avg_sale_price,
     [exec]  63  	     pri.avg_initial_markup,
     [exec]  64  	     pri.units_on_hand,
     [exec]  65  	     ab.browses,
     [exec]  66  	     ac.adds_to_cart,
     [exec]  67  	     aot.total_units_sold,
     [exec]  68  	     aot.merch_rev,
     [exec]  69  	     pri.number_of_skus,
     [exec]  70  	     si.skus_in_stock,
     [exec]  71  	     apt.total_units_sold,
     [exec]  72  	     apt.total_dollar_sales
     [exec]  73  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptw_m_25_39_sales calculates totals about products that were purchased
     [exec] SQL> --	  by males aged 25-39 each week
     [exec] SQL> create or replace view drptw_m25_39_sales
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'DAY') as week,
     [exec]   4  	     i.product_id as product_id,
     [exec]   5  	     pri.category_name as category_name,
     [exec]   6  	     pri.avg_cost as avg_cost,
     [exec]   7  	     pri.avg_list_price as avg_list_price,
     [exec]   8  	     pri.avg_sale_price as avg_sale_price,
     [exec]   9  	     pri.avg_initial_markup as avg_initial_markup,
     [exec]  10  	     pri.units_on_hand as units_on_hand,
     [exec]  11  	     sum(i.quantity) as units_sold,
     [exec]  12  	     (sum(i.quantity) / wpt.total_units_sold) as demo_units_sold_p,
     [exec]  13  	     (sum(i.quantity) / wot.total_units_sold) as total_units_sold_p,
     [exec]  14  	     (pri.units_on_hand / sum(i.quantity)) as weeks_on_hand,
     [exec]  15  	     sum(ai.amount) as total_rev,
     [exec]  16  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]  17  	     ((sum(ai.amount) - sum(s.wholesale_price)) / sum(ai.amount)) as maintained_markup,
     [exec]  18  	     (sum(ai.amount) / wpt.total_dollar_sales) as demo_rev_p,
     [exec]  19  	     (sum(ai.amount) / wot.merch_rev) as total_rev_p,
     [exec]  20  	     pri.number_of_skus as number_of_skus,
     [exec]  21  	     si.skus_in_stock as skus_in_stock,
     [exec]  22  	     (si.skus_in_stock / pri.number_of_skus) as skus_in_stock_p,
     [exec]  23  	     wb.browses as browses,
     [exec]  24  	     count(distinct i.order_ref) as browse_conversions,
     [exec]  25  	     (count(distinct i.order_ref) / wb.browses) as shop_to_purc_conv,
     [exec]  26  	     wc.adds_to_cart as adds_to_cart,
     [exec]  27  	     count(i.order_ref) as cart_conversions,
     [exec]  28  	     (count(i.order_ref) / wc.adds_to_cart) as cart_to_purc_conv
     [exec]  29  from dcspp_order o,
     [exec]  30  	     dcspp_item i,
     [exec]  31  	     drpt_products pri,
     [exec]  32  	     dcspp_amount_info ai,
     [exec]  33  	     drptw_browses wb,
     [exec]  34  	     drptw_carts wc,
     [exec]  35  	     drpt_sku_stock si,
     [exec]  36  	     drptw_orders wot,
     [exec]  37  	     dcs_sku s,
     [exec]  38  	     drptw_male_25_39 wpt,
     [exec]  39  	     dps_user u
     [exec]  40  where o.order_id = i.order_ref
     [exec]  41  	     and o.state != 'FAILED'
     [exec]  42  	     and o.state != 'REMOVED'
     [exec]  43  	     and i.product_id = pri.product_id
     [exec]  44  	     and i.price_info = ai.amount_info_id
     [exec]  45  	     and i.product_id = wc.product_id
     [exec]  46  	     and i.product_id = wb.product_id
     [exec]  47  	     and trunc(o.submitted_date, 'DAY') = wb.week
     [exec]  48  	     and trunc(o.submitted_date, 'DAY') = wc.week
     [exec]  49  	     and si.product_id = i.product_id
     [exec]  50  	     and wot.week = trunc(o.submitted_date, 'DAY')
     [exec]  51  	     and wpt.week = trunc(o.submitted_date, 'DAY')
     [exec]  52  	     and i.catalog_ref_id = s.sku_id
     [exec]  53  	     and o.profile_id = u.id
     [exec]  54  	     and u.gender = 2
     [exec]  55  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 25)
     [exec]  56  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 39)
     [exec]  57  group by trunc(o.submitted_date, 'DAY'),
     [exec]  58  	     i.product_id,
     [exec]  59  	     pri.category_name,
     [exec]  60  	     pri.avg_cost,
     [exec]  61  	     pri.avg_list_price,
     [exec]  62  	     pri.avg_sale_price,
     [exec]  63  	     pri.avg_initial_markup,
     [exec]  64  	     pri.units_on_hand,
     [exec]  65  	     wb.browses,
     [exec]  66  	     wc.adds_to_cart,
     [exec]  67  	     wot.total_units_sold,
     [exec]  68  	     wot.merch_rev,
     [exec]  69  	     pri.number_of_skus,
     [exec]  70  	     si.skus_in_stock,
     [exec]  71  	     wpt.total_units_sold,
     [exec]  72  	     wpt.total_dollar_sales
     [exec]  73  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptm_m_25_39_sales calculates totals about products that were purchased
     [exec] SQL> --	  by males aged 25-39 each month
     [exec] SQL> create or replace view drptm_m25_39_sales
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'MON') as month,
     [exec]   4  	     i.product_id as product_id,
     [exec]   5  	     pri.category_name as category_name,
     [exec]   6  	     pri.avg_cost as avg_cost,
     [exec]   7  	     pri.avg_list_price as avg_list_price,
     [exec]   8  	     pri.avg_sale_price as avg_sale_price,
     [exec]   9  	     pri.avg_initial_markup as avg_initial_markup,
     [exec]  10  	     pri.units_on_hand as units_on_hand,
     [exec]  11  	     sum(i.quantity) as units_sold,
     [exec]  12  	     (sum(i.quantity) / mpt.total_units_sold) as demo_units_sold_p,
     [exec]  13  	     (sum(i.quantity) / mot.total_units_sold) as total_units_sold_p,
     [exec]  14  	     (pri.units_on_hand / sum(i.quantity)) as months_on_hand,
     [exec]  15  	     sum(ai.amount) as total_rev,
     [exec]  16  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]  17  	     ((sum(ai.amount) - sum(s.wholesale_price)) / sum(ai.amount)) as maintained_markup,
     [exec]  18  	     (sum(ai.amount) / mpt.total_dollar_sales) as demo_rev_p,
     [exec]  19  	     (sum(ai.amount) / mot.merch_rev) as total_rev_p,
     [exec]  20  	     pri.number_of_skus as number_of_skus,
     [exec]  21  	     si.skus_in_stock as skus_in_stock,
     [exec]  22  	     (si.skus_in_stock / pri.number_of_skus) as skus_in_stock_p,
     [exec]  23  	     mb.browses as browses,
     [exec]  24  	     count(distinct i.order_ref) as browse_conversions,
     [exec]  25  	     (count(distinct i.order_ref) / mb.browses) as shop_to_purc_conv,
     [exec]  26  	     mc.adds_to_cart as adds_to_cart,
     [exec]  27  	     count(i.order_ref) as cart_conversions,
     [exec]  28  	     (count(i.order_ref) / mc.adds_to_cart) as cart_to_purc_conv
     [exec]  29  from dcspp_order o,
     [exec]  30  	     dcspp_item i,
     [exec]  31  	     drpt_products pri,
     [exec]  32  	     dcspp_amount_info ai,
     [exec]  33  	     drptm_browses mb,
     [exec]  34  	     drptm_carts mc,
     [exec]  35  	     drpt_sku_stock si,
     [exec]  36  	     drptm_orders mot,
     [exec]  37  	     dcs_sku s,
     [exec]  38  	     drptm_male_25_39 mpt,
     [exec]  39  	     dps_user u
     [exec]  40  where o.order_id = i.order_ref
     [exec]  41  	     and o.state != 'FAILED'
     [exec]  42  	     and o.state != 'REMOVED'
     [exec]  43  	     and i.product_id = pri.product_id
     [exec]  44  	     and i.price_info = ai.amount_info_id
     [exec]  45  	     and i.product_id = mc.product_id
     [exec]  46  	     and i.product_id = mb.product_id
     [exec]  47  	     and trunc(o.submitted_date, 'MON') = mb.month
     [exec]  48  	     and trunc(o.submitted_date, 'MON') = mc.month
     [exec]  49  	     and si.product_id = i.product_id
     [exec]  50  	     and mot.month = trunc(o.submitted_date, 'MON')
     [exec]  51  	     and mpt.month = trunc(o.submitted_date, 'MON')
     [exec]  52  	     and i.catalog_ref_id = s.sku_id
     [exec]  53  	     and o.profile_id = u.id
     [exec]  54  	     and u.gender = 2
     [exec]  55  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 25)
     [exec]  56  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 39)
     [exec]  57  group by trunc(o.submitted_date, 'MON'),
     [exec]  58  	     i.product_id,
     [exec]  59  	     pri.category_name,
     [exec]  60  	     pri.avg_cost,
     [exec]  61  	     pri.avg_list_price,
     [exec]  62  	     pri.avg_sale_price,
     [exec]  63  	     pri.avg_initial_markup,
     [exec]  64  	     pri.units_on_hand,
     [exec]  65  	     mb.browses,
     [exec]  66  	     mc.adds_to_cart,
     [exec]  67  	     mot.total_units_sold,
     [exec]  68  	     mot.merch_rev,
     [exec]  69  	     pri.number_of_skus,
     [exec]  70  	     si.skus_in_stock,
     [exec]  71  	     mpt.total_units_sold,
     [exec]  72  	     mpt.total_dollar_sales
     [exec]  73  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptq_m_25_39_sales calculates totals about products that were purchased
     [exec] SQL> --	  by males aged 25-39 each quarter
     [exec] SQL> create or replace view drptq_m25_39_sales
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'Q') as quarter,
     [exec]   4  	     i.product_id as product_id,
     [exec]   5  	     pri.category_name as category_name,
     [exec]   6  	     pri.avg_cost as avg_cost,
     [exec]   7  	     pri.avg_list_price as avg_list_price,
     [exec]   8  	     pri.avg_sale_price as avg_sale_price,
     [exec]   9  	     pri.avg_initial_markup as avg_initial_markup,
     [exec]  10  	     pri.units_on_hand as units_on_hand,
     [exec]  11  	     sum(i.quantity) as units_sold,
     [exec]  12  	     (sum(i.quantity) / qpt.total_units_sold) as demo_units_sold_p,
     [exec]  13  	     (sum(i.quantity) / qot.total_units_sold) as total_units_sold_p,
     [exec]  14  	     (pri.units_on_hand / sum(i.quantity)) as quarters_on_hand,
     [exec]  15  	     sum(ai.amount) as total_rev,
     [exec]  16  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]  17  	     ((sum(ai.amount) - sum(s.wholesale_price)) / sum(ai.amount)) as maintained_markup,
     [exec]  18  	     (sum(ai.amount) / qpt.total_dollar_sales) as demo_rev_p,
     [exec]  19  	     (sum(ai.amount) / qot.merch_rev) as total_rev_p,
     [exec]  20  	     pri.number_of_skus as number_of_skus,
     [exec]  21  	     si.skus_in_stock as skus_in_stock,
     [exec]  22  	     (si.skus_in_stock / pri.number_of_skus) as skus_in_stock_p,
     [exec]  23  	     qb.browses as browses,
     [exec]  24  	     count(distinct i.order_ref) as browse_conversions,
     [exec]  25  	     (count(distinct i.order_ref) / qb.browses) as shop_to_purc_conv,
     [exec]  26  	     qc.adds_to_cart as adds_to_cart,
     [exec]  27  	     count(i.order_ref) as cart_conversions,
     [exec]  28  	     (count(i.order_ref) / qc.adds_to_cart) as cart_to_purc_conv
     [exec]  29  from dcspp_order o,
     [exec]  30  	     dcspp_item i,
     [exec]  31  	     drpt_products pri,
     [exec]  32  	     dcspp_amount_info ai,
     [exec]  33  	     drptq_browses qb,
     [exec]  34  	     drptq_carts qc,
     [exec]  35  	     drpt_sku_stock si,
     [exec]  36  	     drptq_orders qot,
     [exec]  37  	     dcs_sku s,
     [exec]  38  	     drptq_male_25_39 qpt,
     [exec]  39  	     dps_user u
     [exec]  40  where o.order_id = i.order_ref
     [exec]  41  	     and o.state != 'FAILED'
     [exec]  42  	     and o.state != 'REMOVED'
     [exec]  43  	     and i.product_id = pri.product_id
     [exec]  44  	     and i.price_info = ai.amount_info_id
     [exec]  45  	     and i.product_id = qc.product_id
     [exec]  46  	     and i.product_id = qb.product_id
     [exec]  47  	     and trunc(o.submitted_date, 'Q') = qb.quarter
     [exec]  48  	     and trunc(o.submitted_date, 'Q') = qc.quarter
     [exec]  49  	     and si.product_id = i.product_id
     [exec]  50  	     and qot.quarter = trunc(o.submitted_date, 'Q')
     [exec]  51  	     and qpt.quarter = trunc(o.submitted_date, 'Q')
     [exec]  52  	     and i.catalog_ref_id = s.sku_id
     [exec]  53  	     and o.profile_id = u.id
     [exec]  54  	     and u.gender = 2
     [exec]  55  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 25)
     [exec]  56  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 39)
     [exec]  57  group by trunc(o.submitted_date, 'Q'),
     [exec]  58  	     i.product_id,
     [exec]  59  	     pri.category_name,
     [exec]  60  	     pri.avg_cost,
     [exec]  61  	     pri.avg_list_price,
     [exec]  62  	     pri.avg_sale_price,
     [exec]  63  	     pri.avg_initial_markup,
     [exec]  64  	     pri.units_on_hand,
     [exec]  65  	     qb.browses,
     [exec]  66  	     qc.adds_to_cart,
     [exec]  67  	     qot.total_units_sold,
     [exec]  68  	     qot.merch_rev,
     [exec]  69  	     pri.number_of_skus,
     [exec]  70  	     si.skus_in_stock,
     [exec]  71  	     qpt.total_units_sold,
     [exec]  72  	     qpt.total_dollar_sales
     [exec]  73  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpta_m_25_39_sales calculates totals about products that were purchased
     [exec] SQL> --	  by males aged 25-39 each year
     [exec] SQL> create or replace view drpta_m25_39_sales
     [exec]   2  as
     [exec]   3  select trunc(o.submitted_date, 'YEAR') as year,
     [exec]   4  	     i.product_id as product_id,
     [exec]   5  	     pri.category_name as category_name,
     [exec]   6  	     pri.avg_cost as avg_cost,
     [exec]   7  	     pri.avg_list_price as avg_list_price,
     [exec]   8  	     pri.avg_sale_price as avg_sale_price,
     [exec]   9  	     pri.avg_initial_markup as avg_initial_markup,
     [exec]  10  	     pri.units_on_hand as units_on_hand,
     [exec]  11  	     sum(i.quantity) as units_sold,
     [exec]  12  	     (sum(i.quantity) / apt.total_units_sold) as demo_units_sold_p,
     [exec]  13  	     (sum(i.quantity) / aot.total_units_sold) as total_units_sold_p,
     [exec]  14  	     (pri.units_on_hand / sum(i.quantity)) as years_on_hand,
     [exec]  15  	     sum(ai.amount) as total_rev,
     [exec]  16  	     sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
     [exec]  17  	     ((sum(ai.amount) - sum(s.wholesale_price)) / sum(ai.amount)) as maintained_markup,
     [exec]  18  	     (sum(ai.amount) / apt.total_dollar_sales) as demo_rev_p,
     [exec]  19  	     (sum(ai.amount) / aot.merch_rev) as total_rev_p,
     [exec]  20  	     pri.number_of_skus as number_of_skus,
     [exec]  21  	     si.skus_in_stock as skus_in_stock,
     [exec]  22  	     (si.skus_in_stock / pri.number_of_skus) as skus_in_stock_p,
     [exec]  23  	     ab.browses as browses,
     [exec]  24  	     count(distinct i.order_ref) as browse_conversions,
     [exec]  25  	     (count(distinct i.order_ref) / ab.browses) as shop_to_purc_conv,
     [exec]  26  	     ac.adds_to_cart as adds_to_cart,
     [exec]  27  	     count(i.order_ref) as cart_conversions,
     [exec]  28  	     (count(i.order_ref) / ac.adds_to_cart) as cart_to_purc_conv
     [exec]  29  from dcspp_order o,
     [exec]  30  	     dcspp_item i,
     [exec]  31  	     drpt_products pri,
     [exec]  32  	     dcspp_amount_info ai,
     [exec]  33  	     drpta_browses ab,
     [exec]  34  	     drpta_carts ac,
     [exec]  35  	     drpt_sku_stock si,
     [exec]  36  	     drpta_orders aot,
     [exec]  37  	     dcs_sku s,
     [exec]  38  	     drpta_male_25_39 apt,
     [exec]  39  	     dps_user u
     [exec]  40  where o.order_id = i.order_ref
     [exec]  41  	     and o.state != 'FAILED'
     [exec]  42  	     and o.state != 'REMOVED'
     [exec]  43  	     and i.product_id = pri.product_id
     [exec]  44  	     and i.price_info = ai.amount_info_id
     [exec]  45  	     and i.product_id = ac.product_id
     [exec]  46  	     and i.product_id = ab.product_id
     [exec]  47  	     and trunc(o.submitted_date, 'YEAR') = ab.year
     [exec]  48  	     and trunc(o.submitted_date, 'YEAR') = ac.year
     [exec]  49  	     and si.product_id = i.product_id
     [exec]  50  	     and aot.year = trunc(o.submitted_date, 'YEAR')
     [exec]  51  	     and apt.year = trunc(o.submitted_date, 'YEAR')
     [exec]  52  	     and i.catalog_ref_id = s.sku_id
     [exec]  53  	     and o.profile_id = u.id
     [exec]  54  	     and u.gender = 2
     [exec]  55  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 25)
     [exec]  56  	     and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 39)
     [exec]  57  group by trunc(o.submitted_date, 'YEAR'),
     [exec]  58  	     i.product_id,
     [exec]  59  	     pri.category_name,
     [exec]  60  	     pri.avg_cost,
     [exec]  61  	     pri.avg_list_price,
     [exec]  62  	     pri.avg_sale_price,
     [exec]  63  	     pri.avg_initial_markup,
     [exec]  64  	     pri.units_on_hand,
     [exec]  65  	     ab.browses,
     [exec]  66  	     ac.adds_to_cart,
     [exec]  67  	     aot.total_units_sold,
     [exec]  68  	     aot.merch_rev,
     [exec]  69  	     pri.number_of_skus,
     [exec]  70  	     si.skus_in_stock,
     [exec]  71  	     apt.total_units_sold,
     [exec]  72  	     apt.total_dollar_sales
     [exec]  73  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- reporting_views3.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptw_cat_sales calculates various statistics over each week on a per-category basis
     [exec] SQL> create or replace view drptw_cat_sales
     [exec]   2  as
     [exec]   3  select wps.week as week,
     [exec]   4  	     wps.category_name as category_name,
     [exec]   5  	     cri.avg_cost as avg_cost,
     [exec]   6  	     cri.avg_list_price as avg_list_price,
     [exec]   7  	     cri.avg_sale_price as avg_sale_price,
     [exec]   8  	     cri.avg_initial_markup as avg_initial_markup,
     [exec]   9  	     sum(wps.units_sold) as units_sold,
     [exec]  10  	     sum(wps.total_rev) as total_rev,
     [exec]  11  	     sum(wps.cost_of_goods_sold) as cost_of_goods_sold,
     [exec]  12  	     ((sum(wps.total_rev) - sum(wps.cost_of_goods_sold)) / sum(wps.total_rev)) as maintained_markup,
     [exec]  13  	     (sum(wps.units_sold) / wot.total_units_sold) as total_units_sold_p,
     [exec]  14  	     (sum(wps.total_rev) / wot.merch_rev) as total_rev_p,
     [exec]  15  	     sum(wps.units_on_hand) as units_on_hand,
     [exec]  16  	     sum(wps.number_of_skus) as number_of_skus,
     [exec]  17  	     sum(wps.skus_in_stock) as skus_in_stock,
     [exec]  18  	     (sum(wps.skus_in_stock) / sum(wps.number_of_skus)) as skus_in_stock_p,
     [exec]  19  	     sum(wps.browses) as browses,
     [exec]  20  	     sum(wps.browse_conversions) as browse_conversions,
     [exec]  21  	     (sum(wps.browse_conversions) / sum(wps.browses)) as shop_to_purc_conv,
     [exec]  22  	     sum(wps.adds_to_cart) as adds_to_cart,
     [exec]  23  	     sum(wps.cart_conversions) as cart_conversions,
     [exec]  24  	     (sum(wps.cart_conversions) / sum(wps.adds_to_cart)) as cart_to_purc_conv
     [exec]  25  from drptw_prod_sales wps,
     [exec]  26  	     drpt_category cri,
     [exec]  27  	     drptw_orders wot
     [exec]  28  where wps.category_name = cri.category_name
     [exec]  29  	     and wps.week = wot.week
     [exec]  30  group by wps.week,
     [exec]  31  	     wps.category_name,
     [exec]  32  	     cri.avg_cost,
     [exec]  33  	     cri.avg_list_price,
     [exec]  34  	     cri.avg_sale_price,
     [exec]  35  	     cri.avg_initial_markup,
     [exec]  36  	     wot.total_units_sold,
     [exec]  37  	     wot.merch_rev
     [exec]  38  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptm_cat_sales calculates various statistics over each month on a per-category basis
     [exec] SQL> create or replace view drptm_cat_sales
     [exec]   2  as
     [exec]   3  select mps.month as month,
     [exec]   4  	     mps.category_name as category_name,
     [exec]   5  	     cri.avg_cost as avg_cost,
     [exec]   6  	     cri.avg_list_price as avg_list_price,
     [exec]   7  	     cri.avg_sale_price as avg_sale_price,
     [exec]   8  	     cri.avg_initial_markup as avg_initial_markup,
     [exec]   9  	     sum(mps.units_sold) as units_sold,
     [exec]  10  	     sum(mps.total_rev) as total_rev,
     [exec]  11  	     sum(mps.cost_of_goods_sold) as cost_of_goods_sold,
     [exec]  12  	     ((sum(mps.total_rev) - sum(mps.cost_of_goods_sold)) / sum(mps.total_rev)) as maintained_markup,
     [exec]  13  	     (sum(mps.units_sold) / mot.total_units_sold) as total_units_sold_p,
     [exec]  14  	     (sum(mps.total_rev) / mot.merch_rev) as total_rev_p,
     [exec]  15  	     sum(mps.units_on_hand) as units_on_hand,
     [exec]  16  	     sum(mps.number_of_skus) as number_of_skus,
     [exec]  17  	     sum(mps.skus_in_stock) as skus_in_stock,
     [exec]  18  	     (sum(mps.skus_in_stock) / sum(mps.number_of_skus)) as skus_in_stock_p,
     [exec]  19  	     sum(mps.browses) as browses,
     [exec]  20  	     sum(mps.browse_conversions) as browse_conversions,
     [exec]  21  	     (sum(mps.browse_conversions) / sum(mps.browses)) as shop_to_purc_conv,
     [exec]  22  	     sum(mps.adds_to_cart) as adds_to_cart,
     [exec]  23  	     sum(mps.cart_conversions) as cart_conversions,
     [exec]  24  	     (sum(mps.cart_conversions) / sum(mps.adds_to_cart)) as cart_to_purc_conv
     [exec]  25  from drptm_prod_sales mps,
     [exec]  26  	     drpt_category cri,
     [exec]  27  	     drptm_orders mot
     [exec]  28  where mps.category_name = cri.category_name
     [exec]  29  	     and mps.month = mot.month
     [exec]  30  group by mps.month,
     [exec]  31  	     mps.category_name,
     [exec]  32  	     cri.avg_cost,
     [exec]  33  	     cri.avg_list_price,
     [exec]  34  	     cri.avg_sale_price,
     [exec]  35  	     cri.avg_initial_markup,
     [exec]  36  	     mot.total_units_sold,
     [exec]  37  	     mot.merch_rev
     [exec]  38  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drptq_cat_sales calculates various statistics over each quarter on a per-category basis
     [exec] SQL> create or replace view drptq_cat_sales
     [exec]   2  as
     [exec]   3  select qps.quarter as quarter,
     [exec]   4  	     qps.category_name as category_name,
     [exec]   5  	     cri.avg_cost as avg_cost,
     [exec]   6  	     cri.avg_list_price as avg_list_price,
     [exec]   7  	     cri.avg_sale_price as avg_sale_price,
     [exec]   8  	     cri.avg_initial_markup as avg_initial_markup,
     [exec]   9  	     sum(qps.units_sold) as units_sold,
     [exec]  10  	     sum(qps.total_rev) as total_rev,
     [exec]  11  	     sum(qps.cost_of_goods_sold) as cost_of_goods_sold,
     [exec]  12  	     ((sum(qps.total_rev) - sum(qps.cost_of_goods_sold)) / sum(qps.total_rev)) as maintained_markup,
     [exec]  13  	     (sum(qps.units_sold) / qot.total_units_sold) as total_units_sold_p,
     [exec]  14  	     (sum(qps.total_rev) / qot.merch_rev) as total_rev_p,
     [exec]  15  	     sum(qps.units_on_hand) as units_on_hand,
     [exec]  16  	     sum(qps.number_of_skus) as number_of_skus,
     [exec]  17  	     sum(qps.skus_in_stock) as skus_in_stock,
     [exec]  18  	     (sum(qps.skus_in_stock) / sum(qps.number_of_skus)) as skus_in_stock_p,
     [exec]  19  	     sum(qps.browses) as browses,
     [exec]  20  	     sum(qps.browse_conversions) as browse_conversions,
     [exec]  21  	     (sum(qps.browse_conversions) / sum(qps.browses)) as shop_to_purc_conv,
     [exec]  22  	     sum(qps.adds_to_cart) as adds_to_cart,
     [exec]  23  	     sum(qps.cart_conversions) as cart_conversions,
     [exec]  24  	     (sum(qps.cart_conversions) / sum(qps.adds_to_cart)) as cart_to_purc_conv
     [exec]  25  from drptq_prod_sales qps,
     [exec]  26  	     drpt_category cri,
     [exec]  27  	     drptq_orders qot
     [exec]  28  where qps.category_name = cri.category_name
     [exec]  29  	     and qps.quarter = qot.quarter
     [exec]  30  group by qps.quarter,
     [exec]  31  	     qps.category_name,
     [exec]  32  	     cri.avg_cost,
     [exec]  33  	     cri.avg_list_price,
     [exec]  34  	     cri.avg_sale_price,
     [exec]  35  	     cri.avg_initial_markup,
     [exec]  36  	     qot.total_units_sold,
     [exec]  37  	     qot.merch_rev
     [exec]  38  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --	  drpta_cat_sales calculates various statistics over each year on a per-category basis
     [exec] SQL> create or replace view drpta_cat_sales
     [exec]   2  as
     [exec]   3  select aps.year as year,
     [exec]   4  	     aps.category_name as category_name,
     [exec]   5  	     cri.avg_cost as avg_cost,
     [exec]   6  	     cri.avg_list_price as avg_list_price,
     [exec]   7  	     cri.avg_sale_price as avg_sale_price,
     [exec]   8  	     cri.avg_initial_markup as avg_initial_markup,
     [exec]   9  	     sum(aps.units_sold) as units_sold,
     [exec]  10  	     sum(aps.total_rev) as total_rev,
     [exec]  11  	     sum(aps.cost_of_goods_sold) as cost_of_goods_sold,
     [exec]  12  	     ((sum(aps.total_rev) - sum(aps.cost_of_goods_sold)) / sum(aps.total_rev)) as maintained_markup,
     [exec]  13  	     (sum(aps.units_sold) / aot.total_units_sold) as total_units_sold_p,
     [exec]  14  	     (sum(aps.total_rev) / aot.merch_rev) as total_rev_p,
     [exec]  15  	     sum(aps.units_on_hand) as units_on_hand,
     [exec]  16  	     sum(aps.number_of_skus) as number_of_skus,
     [exec]  17  	     sum(aps.skus_in_stock) as skus_in_stock,
     [exec]  18  	     (sum(aps.skus_in_stock) / sum(aps.number_of_skus)) as skus_in_stock_p,
     [exec]  19  	     sum(aps.browses) as browses, sum(aps.browse_conversions) as browse_conversions,
     [exec]  20  	     (sum(aps.browse_conversions) / sum(aps.browses)) as shop_to_purc_conv,
     [exec]  21  	     sum(aps.adds_to_cart) as adds_to_cart,
     [exec]  22  	     sum(aps.cart_conversions) as cart_conversions,
     [exec]  23  	     (sum(aps.cart_conversions) / sum(aps.adds_to_cart)) as cart_to_purc_conv
     [exec]  24  from drpta_prod_sales aps,
     [exec]  25  	     drpt_category cri,
     [exec]  26  	     drpta_orders aot
     [exec]  27  where aps.category_name = cri.category_name
     [exec]  28  	     and aps.year = aot.year
     [exec]  29  group by aps.year,
     [exec]  30  	     aps.category_name,
     [exec]  31  	     cri.avg_cost,
     [exec]  32  	     cri.avg_list_price,
     [exec]  33  	     cri.avg_sale_price,
     [exec]  34  	     cri.avg_initial_markup,
     [exec]  35  	     aot.total_units_sold,
     [exec]  36  	     aot.merch_rev
     [exec]  37  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- priceLists_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_price_list (
     [exec]   2  	     price_list_id   varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     display_name    varchar2(254)   null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     creation_date   date    null,
     [exec]   7  	     last_mod_date   date    null,
     [exec]   8  	     start_date      date    null,
     [exec]   9  	     end_date	     date    null,
     [exec]  10  	     locale  number(10)      null,
     [exec]  11  	     base_price_list varchar2(40)    null,
     [exec]  12  	     item_acl	     varchar2(1024)  null
     [exec]  13  ,constraint dcs_price_list_p primary key (price_list_id)
     [exec]  14  ,constraint dcs_pricbas_prcl_f foreign key (base_price_list) references dcs_price_list (price_list_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_pricelstbase_i on dcs_price_list (base_price_list);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_complex_price (
     [exec]   2  	     complex_price_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null
     [exec]   4  ,constraint dcs_complex_pric_p primary key (complex_price_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_price (
     [exec]   2  	     price_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     price_list      varchar2(40)    not null,
     [exec]   5  	     product_id      varchar2(40)    null,
     [exec]   6  	     sku_id  varchar2(40)    null,
     [exec]   7  	     parent_sku_id   varchar2(40)    null,
     [exec]   8  	     pricing_scheme  integer not null,
     [exec]   9  	     list_price      number(19,7)    null,
     [exec]  10  	     complex_price   varchar2(40)    null
     [exec]  11  ,constraint dcs_price_p primary key (price_id)
     [exec]  12  ,constraint dcs_priccomplx_p_f foreign key (complex_price) references dcs_complex_price (complex_price_id)
     [exec]  13  ,constraint dcs_pricpric_lst_f foreign key (price_list) references dcs_price_list (price_list_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_cmplx_prc_idx on dcs_price (complex_price);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_price_idx1 on dcs_price (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_price_idx2 on dcs_price (price_list,sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_price_levels (
     [exec]   2  	     complex_price_id	     varchar2(40)    not null,
     [exec]   3  	     price_levels    varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcs_price_levels_p primary key (complex_price_id,sequence_num)
     [exec]   6  ,constraint dcs_lvlscomplx_p_f foreign key (complex_price_id) references dcs_complex_price (complex_price_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_price_level (
     [exec]   2  	     price_level_id  varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     quantity	     integer not null,
     [exec]   5  	     price   number(19,7)    not null
     [exec]   6  ,constraint dcs_price_level_p primary key (price_level_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_gen_fol_pl (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     name    varchar2(40)    not null,
     [exec]   5  	     parent  varchar2(40)    null,
     [exec]   6  	     description     varchar2(254)   null,
     [exec]   7  	     item_acl	     varchar2(1024)  null
     [exec]   8  ,constraint dcs_gen_fol_pl_p primary key (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_child_fol_pl (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     child_folder_id varchar2(40)    not null
     [exec]   5  ,constraint dcs_child_fol_pl_p primary key (folder_id,sequence_num)
     [exec]   6  ,constraint dcs_chilfoldr_d_f foreign key (folder_id) references dcs_gen_fol_pl (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_plfol_chld (
     [exec]   2  	     plfol_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     price_list_id   varchar2(40)    not null
     [exec]   5  ,constraint dcs_plfol_chld_p primary key (plfol_id,sequence_num)
     [exec]   6  ,constraint dcs_plfoplfol_d_f foreign key (plfol_id) references dcs_gen_fol_pl (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- order_markers_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_order_markers (
     [exec]   2  	     marker_id	     varchar2(40)    not null,
     [exec]   3  	     order_id	     varchar2(40)    not null,
     [exec]   4  	     marker_key      varchar2(100)   not null,
     [exec]   5  	     marker_value    varchar2(100)   null,
     [exec]   6  	     marker_data     varchar2(100)   null,
     [exec]   7  	     creation_date   timestamp	     null,
     [exec]   8  	     version number(10)      not null,
     [exec]   9  	     marker_type     number(10)      null
     [exec]  10  ,constraint dcsordermarkers_p primary key (marker_id,order_id)
     [exec]  11  ,constraint dcsordermarkers_f foreign key (order_id) references dcspp_order (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_ordrmarkers1_x on dcs_order_markers (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_commerce_item_markers (
     [exec]   2  	     marker_id	     varchar2(40)    not null,
     [exec]   3  	     commerce_item_id	     varchar2(40)    not null,
     [exec]   4  	     marker_key      varchar2(100)   not null,
     [exec]   5  	     marker_value    varchar2(100)   null,
     [exec]   6  	     marker_data     varchar2(100)   null,
     [exec]   7  	     creation_date   timestamp	     null,
     [exec]   8  	     version number(10)      not null,
     [exec]   9  	     marker_type     number(10)      null
     [exec]  10  ,constraint dcscitemmarkers_p primary key (marker_id,commerce_item_id)
     [exec]  11  ,constraint dcscitemmarkers_f foreign key (commerce_item_id) references dcspp_item (commerce_item_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_itemmarkers1_x on dcspp_commerce_item_markers (commerce_item_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- abandoned_order_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- $Id: //product/DCS/version/9.4/templates/DCS/AbandonedOrderServices/sql/abandoned_order_ddl.xml#1 $
     [exec] SQL> 
     [exec] SQL> create table dcspp_ord_abandon (
     [exec]   2  	     abandonment_id  varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     order_id	     varchar2(40)    not null,
     [exec]   5  	     ord_last_updated	     date    null,
     [exec]   6  	     abandon_state   varchar2(40)    null,
     [exec]   7  	     abandonment_count	     number(10)      null,
     [exec]   8  	     abandonment_date	     date    null,
     [exec]   9  	     reanimation_date	     date    null,
     [exec]  10  	     convert_date    date    null,
     [exec]  11  	     lost_date	     date    null
     [exec]  12  ,constraint dcspp_ord_abndn_p primary key (abandonment_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcspp_ordabandn1_x on dcspp_ord_abandon (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_user_abandoned (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     order_id	     varchar2(40)    not null,
     [exec]   4  	     profile_id      varchar2(40)    not null
     [exec]   5  ,constraint dcs_usr_abndnd_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table drpt_conv_order (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     converted_date  date    not null,
     [exec]   4  	     amount  number(19,7)    not null,
     [exec]   5  	     promo_count     number(10)      not null,
     [exec]   6  	     promo_value     number(19,7)    not null
     [exec]   7  ,constraint drpt_conv_order_p primary key (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table drpt_session_ord (
     [exec]   2  	     dataset_id      varchar2(40)    not null,
     [exec]   3  	     order_id	     varchar2(40)    not null,
     [exec]   4  	     date_time	     date    not null,
     [exec]   5  	     amount  number(19,7)    not null,
     [exec]   6  	     submitted	     number(10)      not null,
     [exec]   7  	     order_persistent	     number(1)	     null,
     [exec]   8  	     session_id      varchar2(40)    null,
     [exec]   9  	     parent_session_id	     varchar2(40)    null
     [exec]  10  ,constraint drpt_session_ord_p primary key (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- abandoned_order_views.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create or replace view drpt_abandon_ord
     [exec]   2  as
     [exec]   3  	   select oa.abandonment_date as abandonment_date, ai.amount as amount, decode(oa.abandon_state, 'CONVERTED', 100, 0) as converted from dcspp_order o, dcspp_ord_abandon oa, dcspp_amount_info ai where oa.order_id=o.order_id and o.price_info=ai.amount_info_id
     [exec]   4  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create or replace view drpt_tns_abndn_ord
     [exec]   2  as
     [exec]   3  	   select date_time as abandonment_date, amount as amount from drpt_session_ord where submitted=0
     [exec]   4  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Abandoned Orders
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/AbandonedOrderServices/sql/db_components/oracle/abandoned_order_views.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/AbandonedOrderServices/sql/abandoned_order_views.xml#2 $$Change: 660996 $
     [exec] SQL> create or replace view drpt_abandon_ord
     [exec]   2  as
     [exec]   3  	   select oa.abandonment_date as abandonment_date, ai.amount as amount, decode(oa.abandon_state, 'CONVERTED', 100, 0) as converted from dcspp_order o, dcspp_ord_abandon oa, dcspp_amount_info ai where oa.order_id=o.order_id and o.price_info=ai.amount_info_id
     [exec]   4  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create or replace view drpt_tns_abndn_ord
     [exec]   2  as
     [exec]   3  	   select date_time as abandonment_date, amount as amount from drpt_session_ord where submitted=0
     [exec]   4  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Custom Catalogs
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/CustomCatalogs/sql/db_components/oracle/custom_catalog_user_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/CustomCatalogs/sql/custom_catalog_user_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> 
     [exec] SQL> create table dcs_user_catalog (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     user_catalog    varchar2(40)    null
     [exec]   4  ,constraint dcs_usr_catalog_pk primary key (user_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- DCS Search
     [exec] SQL> @D:\ATG\ATG9.4\home/../DAF/Search/common/sql/db_components/oracle/refinement_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DAF/version/9.4/Search/common/src/sql/refinement_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new refinement repository
     [exec] SQL> -- Add the SRCH_REFINE_ELEMS table, which lists refine elements
     [exec] SQL> 
     [exec] SQL> create table srch_refine_elems (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     type    number(10)      null,
     [exec]   4  	     label   varchar2(254)   not null,
     [exec]   5  	     property	     varchar2(254)   not null,
     [exec]   6  	     property_type   number(10)      not null,
     [exec]   7  	     range_type      number(10)      not null,
     [exec]   8  	     desired number(10)      null,
     [exec]   9  	     minimum number(10)      null,
     [exec]  10  	     incr    number(10)      null,
     [exec]  11  	     sort_type	     number(10)      null,
     [exec]  12  	     levels  number(10)      null,
     [exec]  13  	     parent_refine_elem      varchar2(40)    null,
     [exec]  14  	     priority	     number(10)      null,
     [exec]  15  	     remove_when_used	     number(3)	     not null,
     [exec]  16  	     display_fragment	     varchar2(254)   null,
     [exec]  17  	     max_values      number(10)      null,
     [exec]  18  	     round_free_range	     number(10)      null
     [exec]  19  ,constraint srch_refine_elem_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFINE_SUBELS table, which lists any child refine elementsfor a refine element.
     [exec] SQL> 
     [exec] SQL> create table srch_refine_subels (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     refine_element  varchar2(40)    null
     [exec]   5  ,constraint srch_refine_subl_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFEL_ORDER table which lists the explicit order values for a refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refel_order (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     order_value     varchar2(254)   not null
     [exec]   5  ,constraint srch_refel_order_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFEL_RANGE table which lists the explicit range values for a refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refel_range (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     range_value     varchar2(254)   not null
     [exec]   5  ,constraint srch_refel_range_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFEL_SELECT table which lists the select values for a refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refel_select (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     select_value    varchar2(254)   not null
     [exec]   5  ,constraint srch_refel_selct_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFEL_EXCLUDE table which lists the excluded values for a refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refel_exclude (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     exclude_value   varchar2(254)   not null
     [exec]   4  ,constraint srch_refel_excl_p primary key (id,exclude_value));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_SORT_OPTIONS table which lists available sort options
     [exec] SQL> 
     [exec] SQL> create table srch_sort_options (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     label   varchar2(254)   not null,
     [exec]   4  	     property	     varchar2(254)   not null,
     [exec]   5  	     property_type   number(10)      not null,
     [exec]   6  	     ascending	     number(3)	     not null
     [exec]   7  ,constraint srch_sort_opts_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- The SRCH_REFINE_CONFIG table, which lists the generated refinement configurations.
     [exec] SQL> 
     [exec] SQL> create table srch_refine_config (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     type    number(10)      not null,
     [exec]   4  	     refine_cfg_name varchar2(80)    null
     [exec]   5  ,constraint srch_refine_cfg_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- List of refine elements that belong to a refine config
     [exec] SQL> 
     [exec] SQL> create table srch_refcfg_elems (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     refine_element  varchar2(40)    null
     [exec]   5  ,constraint srch_refcfg_els_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the list of sort options per refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refine_sort (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     sort_option     varchar2(40)    not null
     [exec]   4  ,constraint srch_refine_sort_p primary key (id,sort_option));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- ============================================= Search Merchandising==================================
     [exec] SQL> -- Add the SRCH_CFG_DIM table, dimensionNode
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_dimnode (
     [exec]   2  	     dim_id  varchar2(40)    not null,
     [exec]   3  	     dim_type	     number(10)      not null,
     [exec]   4  	     dim_name	     varchar2(254)   not null,
     [exec]   5  	     dim_desc	     varchar2(254)   null,
     [exec]   6  	     dim_value	     varchar2(254)   null,
     [exec]   7  	     dim_service     varchar2(254)   null
     [exec]   8  ,constraint srch_cfg_dim_p primary key (dim_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_DTINFO table, dimensionTreeInfo
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_dtinfo (
     [exec]   2  	     dti_id  varchar2(40)    not null,
     [exec]   3  	     dti_name	     varchar2(254)   not null,
     [exec]   4  	     dti_desc	     varchar2(254)   null,
     [exec]   5  	     dti_app number(10)      not null,
     [exec]   6  	     dti_root_id     varchar2(40)    null
     [exec]   7  ,constraint srch_cfg_dti_p primary key (dti_id)
     [exec]   8  ,constraint srch_cfg_dim1_f foreign key (dti_root_id) references srch_cfg_dimnode (dim_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_dim1_x on srch_cfg_dtinfo (dti_root_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_FOL table, dimensionFolder
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_fol (
     [exec]   2  	     fol_id  varchar2(40)    not null,
     [exec]   3  	     fol_dim_svc     varchar2(40)    null
     [exec]   4  ,constraint srch_cfg_fol_p primary key (fol_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_RULE table, searchRule
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rule (
     [exec]   2  	     r_id    varchar2(40)    not null,
     [exec]   3  	     r_type  number(10)      not null,
     [exec]   4  	     r_display_name  varchar2(254)   null,
     [exec]   5  	     r_enabled	     number(3)	     not null,
     [exec]   6  	     r_rule_type     number(10)      null,
     [exec]   7  	     r_rule  clob    not null,
     [exec]   8  	     r_action	     clob    not null,
     [exec]   9  	     r_desc  varchar2(254)   null
     [exec]  10  ,constraint srch_cfg_rule_p primary key (r_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_SYNSET table, synset
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_synset (
     [exec]   2  	     syn_id  varchar2(40)    not null,
     [exec]   3  	     syn_base_term   varchar2(254)   not null,
     [exec]   4  	     syn_reciprocal  number(3)	     not null
     [exec]   5  ,constraint srch_cfg_synset_p primary key (syn_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_APROP table, availableRankingProperty
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_aprop (
     [exec]   2  	     arp_id  varchar2(40)    not null,
     [exec]   3  	     arp_name	     varchar2(254)   not null,
     [exec]   4  	     arp_data_type   number(10)      not null,
     [exec]   5  	     arp_value_type  number(10)      not null,
     [exec]   6  	     arp_app number(10)      not null
     [exec]   7  ,constraint srch_cfg_aprop_p primary key (arp_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_RPROP table, rankingProperty
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rprop (
     [exec]   2  	     rp_id   varchar2(40)    not null,
     [exec]   3  	     rp_arp  varchar2(40)    not null,
     [exec]   4  	     rp_def_rank     number(10)      not null,
     [exec]   5  	     rp_weighting    number(5,2)     not null,
     [exec]   6  	     rp_rng_met      number(10)      null
     [exec]   7  ,constraint srch_cfg_rprop_p primary key (rp_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_CFG table, genericSearchConfig
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_cfg (
     [exec]   2  	     cfg_id  varchar2(40)    not null,
     [exec]   3  	     cfg_app number(10)      not null,
     [exec]   4  	     cfg_locale      varchar2(40)    null,
     [exec]   5  	     cfg_rm  varchar2(40)    null,
     [exec]   6  	     cfg_base_id     varchar2(40)    null,
     [exec]   7  	     use_base_rankprps	     number(3)	     not null
     [exec]   8  ,constraint srch_cfg_cfg_p primary key (cfg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_CFG table, genericSearchConfig.baseSearchConfig & derivedSearchConfigs
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_base (
     [exec]   2  	     cfg_id  varchar2(40)    not null,
     [exec]   3  	     cfg_base_id     varchar2(40)    not null
     [exec]   4  ,constraint srch_cfg_base_p primary key (cfg_id)
     [exec]   5  ,constraint srch_cfg_base1_f foreign key (cfg_id) references srch_cfg_dimnode (dim_id)
     [exec]   6  ,constraint srch_cfg_base2_f foreign key (cfg_base_id) references srch_cfg_dimnode (dim_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_base1_x on srch_cfg_base (cfg_base_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_FOL_CHLDCFGS table, dimensionFolder.searchConfigs (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_fol_chldcfgs (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     srch_cfg_id     varchar2(40)    not null,
     [exec]   4  	     chldcfgs_seq    number(10)      not null
     [exec]   5  ,constraint srch_cfg_ccfgs_p primary key (folder_id,chldcfgs_seq)
     [exec]   6  ,constraint srch_cfg_cfg1_f foreign key (folder_id) references srch_cfg_dimnode (dim_id)
     [exec]   7  ,constraint srch_cfg_cfg2_f foreign key (srch_cfg_id) references srch_cfg_dimnode (dim_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cffolchld1_x on srch_cfg_fol_chldcfgs (srch_cfg_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_FOL_CHLDFOL table, dimensionFolder.childDimensionFolders (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_fol_chldfol (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     chldfol_seq     number(10)      not null,
     [exec]   4  	     chld_fol_id     varchar2(40)    not null
     [exec]   5  ,constraint srch_cfg_chldfol_p primary key (folder_id,chldfol_seq)
     [exec]   6  ,constraint srch_cfg_fol_f foreign key (folder_id) references srch_cfg_dimnode (dim_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_RPSET table, genericSearchConfig.rankingProperties (set)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rpset (
     [exec]   2  	     rpset_cfg_id    varchar2(40)    not null,
     [exec]   3  	     rpset_rp_id     varchar2(40)    not null
     [exec]   4  ,constraint srch_cfg_rpset_p primary key (rpset_cfg_id,rpset_rp_id)
     [exec]   5  ,constraint srch_cfg_rpset1_f foreign key (rpset_cfg_id) references srch_cfg_cfg (cfg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_VRPSET table, genericSearchConfig.variableRankingProperties (set)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_vrpset (
     [exec]   2  	     vrpset_cfg_id   varchar2(40)    not null,
     [exec]   3  	     vrpset_rp_id    varchar2(40)    not null
     [exec]   4  ,constraint srch_cfg_vrpset_p primary key (vrpset_cfg_id,vrpset_rp_id)
     [exec]   5  ,constraint srch_cfg_vrpset1_f foreign key (vrpset_cfg_id) references srch_cfg_cfg (cfg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_SYNLNK table, genericSearchConfig.synsets (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_synlnk (
     [exec]   2  	     slnk_cfg_id     varchar2(40)    not null,
     [exec]   3  	     slnk_syn_id     varchar2(40)    not null,
     [exec]   4  	     slnk_seq	     number(10)      not null
     [exec]   5  ,constraint srch_cfg_synlnk_p primary key (slnk_cfg_id,slnk_seq)
     [exec]   6  ,constraint srch_cfg_synlnk1_f foreign key (slnk_cfg_id) references srch_cfg_cfg (cfg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_DRULE table, genericSearchConfig.disabledBaseRules (set)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_drule (
     [exec]   2  	     dr_cfg_id	     varchar2(40)    not null,
     [exec]   3  	     dr_id   varchar2(40)    not null
     [exec]   4  ,constraint srch_cfg_drule_p primary key (dr_cfg_id,dr_id)
     [exec]   5  ,constraint srch_cfg_drule1_f foreign key (dr_cfg_id) references srch_cfg_cfg (cfg_id)
     [exec]   6  ,constraint srch_cfg_drule2_f foreign key (dr_id) references srch_cfg_rule (r_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_drule1_x on srch_cfg_drule (dr_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_DSYN table, genericSearchConfig.disabledBaseSynsets (set)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_dsyn (
     [exec]   2  	     ds_cfg_id	     varchar2(40)    not null,
     [exec]   3  	     ds_id   varchar2(40)    not null
     [exec]   4  ,constraint srch_cfg_dsyn_p primary key (ds_cfg_id)
     [exec]   5  ,constraint srch_cfg_dsyn1_f foreign key (ds_cfg_id) references srch_cfg_cfg (cfg_id)
     [exec]   6  ,constraint srch_cfg_dsyn2_f foreign key (ds_id) references srch_cfg_synset (syn_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_dsyn1_x on srch_cfg_dsyn (ds_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_ERULE table, genericSearchConfig.exclusionRules (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_erule (
     [exec]   2  	     er_cfg_id	     varchar2(40)    not null,
     [exec]   3  	     er_id   varchar2(40)    not null,
     [exec]   4  	     er_seq  number(10)      not null
     [exec]   5  ,constraint srch_cfg_erule_p primary key (er_id,er_seq)
     [exec]   6  ,constraint srch_cfg_erule1_f foreign key (er_cfg_id) references srch_cfg_cfg (cfg_id)
     [exec]   7  ,constraint srch_cfg_erule2_f foreign key (er_id) references srch_cfg_rule (r_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_erule1_x on srch_cfg_erule (er_cfg_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_RRULE table, genericSearchConfig.redirectionRules (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rrule (
     [exec]   2  	     rr_cfg_id	     varchar2(40)    not null,
     [exec]   3  	     rr_id   varchar2(40)    not null,
     [exec]   4  	     rr_seq  number(10)      not null
     [exec]   5  ,constraint srch_cfg_rrule_p primary key (rr_id,rr_seq)
     [exec]   6  ,constraint srch_cfg_rrule1_f foreign key (rr_cfg_id) references srch_cfg_cfg (cfg_id)
     [exec]   7  ,constraint srch_cfg_rrule2_f foreign key (rr_id) references srch_cfg_rule (r_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_rrule1_x on srch_cfg_rrule (rr_cfg_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_PRULE table, genericSearchConfig.positioningRules (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_prule (
     [exec]   2  	     pr_cfg_id	     varchar2(40)    not null,
     [exec]   3  	     pr_id   varchar2(40)    not null,
     [exec]   4  	     pr_seq  number(10)      not null
     [exec]   5  ,constraint srch_cfg_prule_p primary key (pr_id,pr_seq)
     [exec]   6  ,constraint srch_cfg_prule1_f foreign key (pr_cfg_id) references srch_cfg_cfg (cfg_id)
     [exec]   7  ,constraint srch_cfg_prule2_f foreign key (pr_id) references srch_cfg_rule (r_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_prule1_x on srch_cfg_prule (pr_cfg_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_TERM table, synset.terms
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_term (
     [exec]   2  	     trm_syn_id      varchar2(40)    not null,
     [exec]   3  	     trm_term	     varchar2(254)   not null
     [exec]   4  ,constraint srch_cfg_term_p primary key (trm_syn_id,trm_term)
     [exec]   5  ,constraint srch_cfg_term_f foreign key (trm_syn_id) references srch_cfg_synset (syn_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_RANK table, rankingProperty.valueRanks
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rank (
     [exec]   2  	     rank_rp_id      varchar2(40)    not null,
     [exec]   3  	     rank_value      varchar2(254)   not null,
     [exec]   4  	     rank_rank	     number(10)      not null
     [exec]   5  ,constraint srch_cfg_rank_p primary key (rank_rp_id,rank_value)
     [exec]   6  ,constraint srch_cfg_rank_f foreign key (rank_rp_id) references srch_cfg_rprop (rp_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DAF/Search/Index/sql/db_components/oracle/search_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DAF/version/9.4/Search/Index/src/sql/search_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new search schema.
     [exec] SQL> -- Add the search_config... used to track which generation is the currentgeneration.
     [exec] SQL> 
     [exec] SQL> create table srch_config (
     [exec]   2  	     config_path     varchar2(254)   not null,
     [exec]   3  	     generation      number(10)      not null,
     [exec]   4  	     claimed_generation      number(10)      null,
     [exec]   5  	     nxt_inc_generation      number(10)      null,
     [exec]   6  	     uniq_server_id  varchar2(254)   null,
     [exec]   7  	     last_activity   date    null,
     [exec]   8  	     last_full_index date    null,
     [exec]   9  	     last_incr_index date    null
     [exec]  10  ,constraint srch_config_p primary key (config_path));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Holds an association of a config path and repository name. Usedto reduce the length of the primary key for srch_update_queue
     [exec] SQL> 
     [exec] SQL> create table srch_config_repo (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     config_path     varchar2(254)   not null,
     [exec]   4  	     repository_path varchar2(254)   not null
     [exec]   5  ,constraint srch_config_repo_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the search_update_queue... used by the IncrementalLoader to trackrepository changes.
     [exec] SQL> 
     [exec] SQL> create table srch_update_queue (
     [exec]   2  	     repository_id   varchar2(254)   not null,
     [exec]   3  	     config_repo_id  varchar2(40)    not null,
     [exec]   4  	     generation      number(10)      not null,
     [exec]   5  	     item_desc_name  varchar2(64)    not null,
     [exec]   6  	     change_type     number(10)      not null
     [exec]   7  ,constraint srch_up_queue_p primary key (repository_id,config_repo_id,generation,item_desc_name)
     [exec]   8  ,constraint srch_upq_cfrp_f1 foreign key (config_repo_id) references srch_config_repo (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_updateque1_x on srch_update_queue (config_repo_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the search_update_queue... used by the IncrementalLoader to trackrepository changes.
     [exec] SQL> 
     [exec] SQL> create table srch_update_vqueue (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     config_path     varchar2(254)   not null,
     [exec]   4  	     generation      number(10)      not null,
     [exec]   5  	     repository_path varchar2(254)   not null,
     [exec]   6  	     item_desc_name  varchar2(64)    not null,
     [exec]   7  	     repository_id   varchar2(254)   not null,
     [exec]   8  	     change_type     number(10)      not null,
     [exec]   9  	     dev_line_id     varchar2(40)    not null,
     [exec]  10  	     asset_version   number(10)      not null
     [exec]  11  ,constraint srch_up_vqueue_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_up_vqueue on srch_update_vqueue (config_path,generation,repository_path,item_desc_name,repository_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/Search/common/sql/db_components/oracle/commerce_refinement_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/Search/common/sql/commerce_refinement_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new catalog-extended refinement repository
     [exec] SQL> 
     [exec] SQL> create table dcs_refine_config (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     inherit_global  number(3)	     not null,
     [exec]   4  	     inherit_category	     number(3)	     not null,
     [exec]   5  	     can_child_inherit	     number(3)	     not null,
     [exec]   6  	     is_global	     number(3)	     not null
     [exec]   7  ,constraint dcs_refine_cfg_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_refcfg_genels (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     refine_element  varchar2(40)    not null
     [exec]   5  ,constraint dcs_rfcfg_genels_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_refcfg (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     refine_config_id	     varchar2(40)    null
     [exec]   4  ,constraint dcs_cat_refcfg_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/Search/CustomCatalogs/common/sql/db_components/oracle/custom_catalog_refinement_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/Search/CustomCatalogs/common/sql/custom_catalog_refinement_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new catalog-extended refinement repository
     [exec] SQL> 
     [exec] SQL> create table dcs_refcfg_custom (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     inherit_catalog number(3)	     not null
     [exec]   4  ,constraint dcs_rfcf_custom_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_catinfo_refcfg (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     refine_config_id	     varchar2(40)    not null
     [exec]   4  ,constraint dcs_catinf_rfcfg_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_catalog_refcfg (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     refine_config_id	     varchar2(40)    null
     [exec]   4  ,constraint dcs_cata_rfcfg_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> rem DAF Routing
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DAF/Search/Routing/sql/db_components/oracle/routing_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DAF/version/9.4/Search/Routing/src/sql/routing_ddl.xml#2 $$Change: 652444 $
     [exec] SQL> -- This file contains create table statements, which will configureyour database for use with the search routing schema.
     [exec] SQL> 
     [exec] SQL> create table rout_index (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     idx_start	     date    null,
     [exec]   4  	     idx_end date    null,
     [exec]   5  	     est_start	     date    null,
     [exec]   6  	     est_end date    null
     [exec]   7  ,constraint rout_index_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table rout_lp_summary (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     duration_seconds	     number(10)      null,
     [exec]   4  	     estimated_bytes number(19)      null,
     [exec]   5  	     actual_bytes    number(19)      null,
     [exec]   6  	     items_sent      number(10)      null,
     [exec]   7  	     items_deferred  number(10)      null,
     [exec]   8  	     error_count     number(10)      null
     [exec]   9  ,constraint rout_lp_smry_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table rout_lp_cmd_count (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     cmd_name	     varchar2(40)    null,
     [exec]   4  	     cmd_count	     number(10)      null
     [exec]   5  ,constraint rout_cmd_cnt_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table rout_lp_smry_cmds (
     [exec]   2  	     lp_summary_id   varchar2(40)    not null,
     [exec]   3  	     cmd_count_id    varchar2(40)    not null,
     [exec]   4  	     cmd_indx	     number(10)      not null
     [exec]   5  ,constraint rout_smry_cmds_m_p primary key (lp_summary_id,cmd_indx)
     [exec]   6  ,constraint rout_lpsmryp_f1 foreign key (lp_summary_id) references rout_lp_summary (id)
     [exec]   7  ,constraint rout_smry_fk2 foreign key (cmd_count_id) references rout_lp_cmd_count (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index rout_smry1_x on rout_lp_smry_cmds (cmd_count_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table rout_env (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     env_name	     varchar2(254)   not null,
     [exec]   4  	     rollback_policy number(1)	     null,
     [exec]   5  	     server_repl_policy      number(1)	     null,
     [exec]   6  	     current_index   varchar2(40)    null,
     [exec]   7  	     deploying_index varchar2(40)    null,
     [exec]   8  	     current_deployment      varchar2(40)    null,
     [exec]   9  	     deploy_type     number(1)	     null,
     [exec]  10  	     env_type	     number(1)	     null,
     [exec]  11  	     parent_project  varchar2(40)    null,
     [exec]  12  	     parent_proj_name	     varchar2(254)   null,
     [exec]  13  	     shadow  number(1)	     null,
     [exec]  14  	     request_options clob    null,
     [exec]  15  	     bulk_env_id     varchar2(40)    null,
     [exec]  16  	     indexable	     number(1)	     null,
     [exec]  17  	     searchable      number(1)	     null,
     [exec]  18  	     multiplicity    number(10)      null
     [exec]  19  ,constraint rout_env_pk primary key (id)
     [exec]  20  ,constraint env_unique unique (env_name)
     [exec]  21  ,constraint rout_env_f1 foreign key (current_index) references rout_index (id)
     [exec]  22  ,constraint rout_env_f2 foreign key (deploying_index) references rout_index (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index rout_env1_x on rout_env (current_index);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index rout_env2_x on rout_env (deploying_index);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table rout_host_inf (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     hostname	     varchar2(64)    null,
     [exec]   4  	     start_port      number(10)      null,
     [exec]   5  	     end_port	     number(10)      null,
     [exec]   6  	     lnch_svc_port   number(10)      null,
     [exec]   7  	     lnch_svc_name   varchar2(40)    null,
     [exec]   8  	     lnch_svc_protocol	     varchar2(40)    null,
     [exec]   9  	     cpu_count	     number(10)      null,
     [exec]  10  	     os_name varchar2(254)   null,
     [exec]  11  	     os_arch varchar2(254)   null,
     [exec]  12  	     os_version      varchar2(254)   null
     [exec]  13  ,constraint rout_host_inf_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table rout_host (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     host_info_id    varchar2(40)    null,
     [exec]   4  	     parent_env_id   varchar2(40)    null,
     [exec]   5  	     index_root_path varchar2(254)   null,
     [exec]   6  	     num_engines     number(10)      null
     [exec]   7  ,constraint rout_host_pk primary key (id)
     [exec]   8  ,constraint rout_host_f1 foreign key (parent_env_id) references rout_env (id)
     [exec]   9  ,constraint rout_host_f2 foreign key (host_info_id) references rout_host_inf (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index rout_host1_x on rout_host (parent_env_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index rout_host2_x on rout_host (host_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table rout_part (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     parent_index    varchar2(40)    null,
     [exec]   4  	     last_partition  varchar2(40)    null,
     [exec]   5  	     content_guid    varchar2(64)    null,
     [exec]   6  	     date_created    date    null,
     [exec]   7  	     files_exist     number(1)	     null,
     [exec]   8  	     space_used_kb   number(19)      null,
     [exec]   9  	     space_free_kb   number(19)      null,
     [exec]  10  	     items_indexed   number(19)      null,
     [exec]  11  	     ideamap varchar2(254)   null,
     [exec]  12  	     storage varchar2(254)   null,
     [exec]  13  	     hdocmap varchar2(254)   null,
     [exec]  14  	     needs_content_guid      number(1)	     not null,
     [exec]  15  	     shared_id	     varchar2(40)    null,
     [exec]  16  	     indexing_mode   number(1)	     not null,
     [exec]  17  	     def_wrk_path    varchar2(254)   null,
     [exec]  18  	     sent_bytes      number(19)      null,
     [exec]  19  	     content_bytes   number(19)      null,
     [exec]  20  	     max_bytes	     number(19)      null,
     [exec]  21  	     idx_start	     date    null,
     [exec]  22  	     idx_end date    null,
     [exec]  23  	     bak_start	     date    null,
     [exec]  24  	     bak_end date    null,
     [exec]  25  	     part_full	     number(1)	     null,
     [exec]  26  	     backup_ideamap  varchar2(254)   null,
     [exec]  27  	     backup_storage  varchar2(254)   null,
     [exec]  28  	     backup_ideamap_old      varchar2(254)   null,
     [exec]  29  	     backup_storage_old      varchar2(254)   null,
     [exec]  30  	     backup_time     date    null,
     [exec]  31  	     backup_time_old date    null
     [exec]  32  ,constraint rout_part_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table rout_engine (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     index_partition_id      varchar2(40)    null,
     [exec]   4  	     host_id varchar2(40)    null,
     [exec]   5  	     port    number(10)      null,
     [exec]   6  	     local_content_path      varchar2(254)   null,
     [exec]   7  	     server_state    number(1)	     null,
     [exec]   8  	     failures	     number(10)      null,
     [exec]   9  	     max_failures    number(10)      null
     [exec]  10  ,constraint rout_engine_pk primary key (id)
     [exec]  11  ,constraint rout_engine_f1 foreign key (index_partition_id) references rout_part (id)
     [exec]  12  ,constraint rout_engine_f2 foreign key (host_id) references rout_host (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index rout_engine1_x on rout_engine (index_partition_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index rout_engine2_x on rout_engine (host_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table rout_log_part (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     lp_name varchar2(40)    null,
     [exec]   4  	     lp_description  varchar2(254)   null,
     [exec]   5  	     parent_index    varchar2(40)    null,
     [exec]   6  	     partition_mode  number(1)	     not null,
     [exec]   7  	     orig_part_count number(10)      not null,
     [exec]   8  	     shared_id	     varchar2(40)    not null,
     [exec]   9  	     flggd_for_full  number(1)	     not null,
     [exec]  10  	     curr_idx_full   number(1)	     not null,
     [exec]  11  	     last_partition  varchar2(40)    null,
     [exec]  12  	     summary_id      varchar2(40)    null,
     [exec]  13  	     indexing_state  number(1)	     not null,
     [exec]  14  	     est_start	     date    null,
     [exec]  15  	     est_end date    null
     [exec]  16  ,constraint rout_log_part_p primary key (id)
     [exec]  17  ,constraint rout_log_part_f1 foreign key (parent_index) references rout_index (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index rout_log_part1_x on rout_log_part (parent_index);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table rout_phys_part_m (
     [exec]   2  	     log_part_id     varchar2(40)    not null,
     [exec]   3  	     phys_part_id    varchar2(40)    not null,
     [exec]   4  	     phys_indx	     number(10)      not null
     [exec]   5  ,constraint rout_phys_part_m_p primary key (log_part_id,phys_indx)
     [exec]   6  ,constraint rout_phys_m_f1 foreign key (log_part_id) references rout_log_part (id)
     [exec]   7  ,constraint rout_phys_m_f2 foreign key (phys_part_id) references rout_part (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index rout_phys_m1_x on rout_phys_part_m (phys_part_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table rout_idx_log_parts (
     [exec]   2  	     parent_index    varchar2(40)    not null,
     [exec]   3  	     log_part_id     varchar2(40)    not null,
     [exec]   4  	     log_indx	     number(10)      not null
     [exec]   5  ,constraint rout_lparts_m_p primary key (parent_index,log_indx)
     [exec]   6  ,constraint rout_idxlogp_f1 foreign key (parent_index) references rout_index (id)
     [exec]   7  ,constraint rout_idxlogp_fk2 foreign key (log_part_id) references rout_log_part (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index rout_idxlogp1_x on rout_idx_log_parts (log_part_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table rout_dep_hist (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     environment     varchar2(40)    null,
     [exec]   4  	     new_index	     varchar2(40)    null,
     [exec]   5  	     time_started    date    null,
     [exec]   6  	     time_ended      date    null,
     [exec]   7  	     deploy_status   number(1)	     null
     [exec]   8  ,constraint rout_dep_hist_pk primary key (id)
     [exec]   9  ,constraint rout_dep_hist_f1 foreign key (new_index) references rout_index (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index rout_dep_hist1_x on rout_dep_hist (new_index);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table rout_swpchk (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     appserver_name  varchar2(254)   null,
     [exec]   4  	     last_check_time date    null,
     [exec]   5  	     swap_state      number(1)	     null
     [exec]   6  ,constraint rout_swpch_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DAF/Search/Topics/sql/db_components/oracle/search_topics_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table src_topic_set (
     [exec]   2  	     topic_set_id    varchar2(40)    not null,
     [exec]   3  	     language_en     varchar2(200)   null,
     [exec]   4  	     last_mod	     date    not null
     [exec]   5  ,constraint src_topic_set_pk primary key (topic_set_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table src_topic (
     [exec]   2  	     topic_id	     varchar2(40)    not null,
     [exec]   3  	     node_type	     number(10)      not null,
     [exec]   4  	     parent_id	     varchar2(40)    null,
     [exec]   5  	     name    varchar2(200)   null,
     [exec]   6  	     display_name    varchar2(200)   null,
     [exec]   7  	     description     varchar2(1000)  null
     [exec]   8  ,constraint src_topic_pk primary key (topic_id)
     [exec]   9  ,constraint src_topic_fk1 foreign key (parent_id) references src_topic (topic_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index src_topic1_ix on src_topic (parent_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index src_topic_ix1 on src_topic (name);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table src_topicchild_seq (
     [exec]   2  	     parent_topic_id varchar2(40)    not null,
     [exec]   3  	     child_topic_id  varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null
     [exec]   5  ,constraint src_topicchild_p primary key (parent_topic_id,sequence_num)
     [exec]   6  ,constraint src_topicchild_fk1 foreign key (parent_topic_id) references src_topic (topic_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table src_roottopics_seq (
     [exec]   2  	     topic_set_id    varchar2(40)    not null,
     [exec]   3  	     topic_id	     varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null
     [exec]   5  ,constraint src_roottpcs_seq_p primary key (topic_set_id,sequence_num)
     [exec]   6  ,constraint src_roottopics_fk1 foreign key (topic_set_id) references src_topic_set (topic_set_id)
     [exec]   7  ,constraint src_roottopics_fk2 foreign key (topic_id) references src_topic (topic_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index src_rttopicsseq1_x on src_roottopics_seq (topic_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table src_topic_macro (
     [exec]   2  	     macro_id	     varchar2(40)    not null,
     [exec]   3  	     macro_name      varchar2(80)    not null,
     [exec]   4  	     learn_id	     varchar2(40)    null,
     [exec]   5  	     def     varchar2(1666)  not null
     [exec]   6  ,constraint src_topicmacro_p primary key (macro_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table src_topicmacro_seq (
     [exec]   2  	     topic_id	     varchar2(40)    not null,
     [exec]   3  	     macro_id	     varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null
     [exec]   5  ,constraint src_topicmacros_p primary key (topic_id,sequence_num)
     [exec]   6  ,constraint src_topicmac_fk1 foreign key (topic_id) references src_topic (topic_id)
     [exec]   7  ,constraint src_topicmac_fk2 foreign key (macro_id) references src_topic_macro (macro_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index src_topicmac2_ix on src_topicmacro_seq (macro_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table src_global_macro (
     [exec]   2  	     macro_id	     varchar2(40)    not null,
     [exec]   3  	     macro_name      varchar2(80)    not null,
     [exec]   4  	     learn_id	     varchar2(40)    null,
     [exec]   5  	     def     varchar2(1666)  not null
     [exec]   6  ,constraint src_globalmacro_p primary key (macro_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table src_topic_pattern (
     [exec]   2  	     pattern_id      varchar2(40)    not null,
     [exec]   3  	     learn_id	     varchar2(40)    null,
     [exec]   4  	     pattern varchar2(1000)  not null,
     [exec]   5  	     weight  number(10)      not null,
     [exec]   6  	     language	     varchar2(200)   null,
     [exec]   7  	     groups  varchar2(200)   null,
     [exec]   8  	     is_enabled      number(1)	     not null
     [exec]   9  ,constraint src_topicpattern_p primary key (pattern_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table src_topic_pat_seq (
     [exec]   2  	     topic_id	     varchar2(40)    not null,
     [exec]   3  	     pattern_id      varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null
     [exec]   5  ,constraint src_topicpats_p primary key (topic_id,sequence_num)
     [exec]   6  ,constraint src_topicpats_fk1 foreign key (topic_id) references src_topic (topic_id)
     [exec]   7  ,constraint src_topicpats_fk2 foreign key (pattern_id) references src_topic_pattern (pattern_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index src_topicpats2_ix on src_topic_pat_seq (pattern_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table src_topic_label (
     [exec]   2  	     label_id	     varchar2(40)    not null,
     [exec]   3  	     name    varchar2(200)   not null,
     [exec]   4  	     topic_id	     varchar2(40)    not null
     [exec]   5  ,constraint src_topic_label_p primary key (label_id)
     [exec]   6  ,constraint srctopiclabel_fk1 foreign key (topic_id) references src_topic (topic_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srctopiclabel1_ix on src_topic_label (topic_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- SearchTesting
     [exec] SQL> @D:\ATG\ATG9.4\home/../DAF/Search/common/sql/db_components/oracle/searchtesting_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $id: c:/work/platform/acton/daf/search/common/src/config/atg/search/repository/searchtestingrepository_ddl.xml $$change: 433350 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the search testing repository
     [exec] SQL> --     Add the tst_folders table, searchTestFolder
     [exec] SQL> 
     [exec] SQL> create table tst_folders (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     application     number(10)      not null,
     [exec]   4  	     owner_id	     varchar2(40)    null,
     [exec]   5  	     display_name    varchar2(254)   not null,
     [exec]   6  	     folder_type     number(10)      not null,
     [exec]   7  	     description     varchar2(254)   null,
     [exec]   8  	     parent_folder_id	     varchar2(40)    null
     [exec]   9  ,constraint tst_folders_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the tst_search_tests table, searchTest
     [exec] SQL> 
     [exec] SQL> create table tst_search_tests (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     application     number(10)      not null,
     [exec]   4  	     parent_folder_id	     varchar2(40)    not null,
     [exec]   5  	     owner_id	     varchar2(40)    null,
     [exec]   6  	     display_name    varchar2(254)   not null,
     [exec]   7  	     description     varchar2(254)   null,
     [exec]   8  	     creation_date   date    not null,
     [exec]   9  	     creation_author varchar2(40)    not null,
     [exec]  10  	     last_modified_date      date    not null,
     [exec]  11  	     last_modified_author    varchar2(40)    not null,
     [exec]  12  	     search_config_name      varchar2(254)   null,
     [exec]  13  	     refine_config_name      varchar2(254)   null,
     [exec]  14  	     category_id     varchar2(40)    null,
     [exec]  15  	     query_text      clob    null,
     [exec]  16  	     facet_trail     clob    null,
     [exec]  17  	     sort_by_type    number(10)      null,
     [exec]  18  	     sort_prop	     clob    null,
     [exec]  19  	     results number(10)      null,
     [exec]  20  	     preview_user_id varchar2(40)    null
     [exec]  21  ,constraint tst_search_tests_p primary key (id)
     [exec]  22  ,constraint tst_search_tests_f foreign key (parent_folder_id) references tst_folders (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index tst_search_tests_x on tst_search_tests (parent_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> --     Add the tst_track_items table, searchTest.trackItems
     [exec] SQL> 
     [exec] SQL> create table tst_track_items (
     [exec]   2  	     test_id varchar2(40)    not null,
     [exec]   3  	     track_item_id   varchar2(254)   not null
     [exec]   4  ,constraint tst_track_items_p primary key (test_id,track_item_id)
     [exec]   5  ,constraint tst_track_items_f foreign key (test_id) references tst_search_tests (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Add the tst_test_types table, searchTest.testTypes
     [exec] SQL> 
     [exec] SQL> create table tst_test_types (
     [exec]   2  	     test_id varchar2(40)    not null,
     [exec]   3  	     test_type	     varchar2(40)    not null
     [exec]   4  ,constraint tst_test_types_p primary key (test_id,test_type)
     [exec]   5  ,constraint tst_test_types_f foreign key (test_id) references tst_search_tests (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Add the tst_dimension_values table, searchTest.dimensionValues
     [exec] SQL> 
     [exec] SQL> create table tst_dimension_values (
     [exec]   2  	     test_id varchar2(40)    not null,
     [exec]   3  	     dimension_name  varchar2(254)   not null,
     [exec]   4  	     dimension_value varchar2(254)   not null
     [exec]   5  ,constraint tst_dimvalues_p primary key (test_id,dimension_name)
     [exec]   6  ,constraint tst_dimvalues_f foreign key (test_id) references tst_search_tests (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Add the tst_advanced_parameters table, searchTest.advancedParameters
     [exec] SQL> 
     [exec] SQL> create table tst_advanced_parameters (
     [exec]   2  	     test_id varchar2(40)    not null,
     [exec]   3  	     param_key	     varchar2(254)   not null,
     [exec]   4  	     param_value     clob    not null
     [exec]   5  ,constraint tst_advparam_p primary key (test_id,param_key)
     [exec]   6  ,constraint tst_advparam_f foreign key (test_id) references tst_search_tests (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Search Admin
     [exec] SQL> @D:\ATG\ATG9.4\home/../Search9.4/SearchAdmin/common/sql/db_components/oracle/searchadmin_admin_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_adv_conf (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     conf    clob    null
     [exec]   4  ,constraint srch_adv_conf_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_project (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     srch_idx_id     varchar2(40)    null,
     [exec]   4  	     cur_srch_idx_id varchar2(40)    null,
     [exec]   5  	     name    varchar2(254)   not null,
     [exec]   6  	     description     varchar2(254)   null,
     [exec]   7  	     min_inact_idxs  number(5)	     null,
     [exec]   8  	     preserve_cnt    number(5)	     null,
     [exec]   9  	     preserve_age    number(5)	     null,
     [exec]  10  	     srch_adv_c_id   varchar2(40)    null,
     [exec]  11  	     force_full_index	     number(1)	     null,
     [exec]  12  	     last_update_data	     blob    null
     [exec]  13  ,constraint srch_project_p primary key (id)
     [exec]  14  ,constraint srch_project_u1 unique (name)
     [exec]  15  ,constraint srch_project_fk2 foreign key (srch_adv_c_id) references srch_adv_conf (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_project_x2 on srch_project (srch_adv_c_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_reg_impl (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     intface varchar2(254)   null,
     [exec]   4  	     classname	     varchar2(254)   null,
     [exec]   5  	     classloader     varchar2(254)   null,
     [exec]   6  	     name    varchar2(254)   null,
     [exec]   7  	     description     varchar2(254)   null
     [exec]   8  ,constraint srch_reg_impl_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_css_id_to_targ_ids (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     srch_project_id varchar2(40)    not null,
     [exec]   4  	     srch_content_ss_id      varchar2(40)    not null,
     [exec]   5  	     srch_idx_id     varchar2(40)    not null,
     [exec]   6  	     srch_shared_lp_id	     varchar2(40)    not null
     [exec]   7  ,constraint srch_css_to_targ_p primary key (id)
     [exec]   8  ,constraint srch_css_2_trg_fk1 foreign key (srch_project_id) references srch_project (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_csidtargid1_x on srch_css_id_to_targ_ids (srch_project_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_content (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   null,
     [exec]   4  	     srch_content_id varchar2(40)    null,
     [exec]   5  	     srch_adv_c_id   varchar2(40)    null,
     [exec]   6  	     handservice     varchar2(254)   null
     [exec]   7  ,constraint srch_content_p primary key (id)
     [exec]   8  ,constraint srch_content_fk1 foreign key (srch_content_id) references srch_content (id)
     [exec]   9  ,constraint srch_content_fk2 foreign key (srch_adv_c_id) references srch_adv_conf (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_content_x1 on srch_content (srch_content_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_content_x2 on srch_content (srch_adv_c_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_content_ss (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     shared_id	     varchar2(40)    not null,
     [exec]   4  	     name    varchar2(254)   null,
     [exec]   5  	     last_modified   date    null,
     [exec]   6  	     srch_content_id varchar2(40)    not null,
     [exec]   7  	     srch_content_ss_id      varchar2(40)    null,
     [exec]   8  	     structured      number(10)      null,
     [exec]   9  	     force_con_type  number(1)	     null,
     [exec]  10  	     srch_log_part_id	     varchar2(40)    null,
     [exec]  11  	     srch_adv_c_id   varchar2(40)    null,
     [exec]  12  	     doc_set_subpath varchar2(254)   null
     [exec]  13  ,constraint srch_content_ss_p primary key (id)
     [exec]  14  ,constraint srch_cont_ss_fk1 foreign key (srch_adv_c_id) references srch_adv_conf (id)
     [exec]  15  ,constraint srch_cont_ss_fk2 foreign key (srch_content_id) references srch_content (id)
     [exec]  16  ,constraint srch_cont_ss_fk3 foreign key (srch_content_ss_id) references srch_content_ss (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cont_ss_x1 on srch_content_ss (srch_adv_c_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_cont_ss_x2 on srch_content_ss (srch_content_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_cont_ss_x3 on srch_content_ss (srch_content_ss_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_content_ss_mm (
     [exec]   2  	     srch_content_ss_id      varchar2(40)    not null,
     [exec]   3  	     members varchar2(254)   not null
     [exec]   4  ,constraint srch_cont_ss_mm_p primary key (srch_content_ss_id,members)
     [exec]   5  ,constraint srch_cont_ss_mm_fk foreign key (srch_content_ss_id) references srch_content_ss (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_platform (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     platformid      number(19)      null,
     [exec]   4  	     maxpartsize     number(19)      null
     [exec]   5  ,constraint srch_platform_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_act_idx_v (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     srch_platform_id	     varchar2(40)    null,
     [exec]   4  	     majorversion    number(19)      null,
     [exec]   5  	     minorversion    number(19)      null,
     [exec]   6  	     charsize	     number(10)      null
     [exec]   7  ,constraint srch_act_idx_v_p primary key (id)
     [exec]   8  ,constraint srch_act_idx_v_f1 foreign key (srch_platform_id) references srch_platform (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_act_idx_v_x1 on srch_act_idx_v (srch_platform_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_sync_task_type (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     enum    number(5)	     null
     [exec]   5  ,constraint srch_task_type_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_sync_step_type (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     enum    number(5)	     null,
     [exec]   5  	     super_step_enum number(5)	     null
     [exec]   6  ,constraint srch_step_type_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_base_sync_task (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     base_type	     number(5)	     not null,
     [exec]   4  	     type_id varchar2(40)    not null,
     [exec]   5  	     subname varchar2(254)   null,
     [exec]   6  	     srch_adv_c_id   varchar2(40)    null,
     [exec]   7  	     src_srch_idx_id varchar2(40)    null
     [exec]   8  ,constraint srch_bsynctask_p primary key (id)
     [exec]   9  ,constraint srch_bsynctask_f1 foreign key (srch_adv_c_id) references srch_adv_conf (id)
     [exec]  10  ,constraint srch_synctaskd_f3 foreign key (type_id) references srch_sync_task_type (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_bsynctask_x1 on srch_base_sync_task (srch_adv_c_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_synctaskd_x3 on srch_base_sync_task (type_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_sync_task (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     definition_id   varchar2(40)    not null,
     [exec]   4  	     srch_project_id varchar2(40)    not null,
     [exec]   5  	     error_count     number(10)      null,
     [exec]   6  	     index_id	     varchar2(40)    null,
     [exec]   7  	     start_tstamp    date    not null,
     [exec]   8  	     end_tstamp      date    null
     [exec]   9  ,constraint srch_sync_task_p primary key (id)
     [exec]  10  ,constraint srch_synctask_f3 foreign key (srch_project_id) references srch_project (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_synctask_x3 on srch_sync_task (srch_project_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_sync_step_option (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     option_type     number(5)	     not null
     [exec]   5  ,constraint srch_syncstepopt_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_base_sync_step (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     base_type	     number(5)	     not null,
     [exec]   4  	     step_type_id    varchar2(40)    not null,
     [exec]   5  	     step_option_id  varchar2(40)    not null
     [exec]   6  ,constraint srch_bsyncstep_p primary key (id)
     [exec]   7  ,constraint srch_bsyncstep_f1 foreign key (step_type_id) references srch_sync_step_type (id)
     [exec]   8  ,constraint srch_bsyncstep_f2 foreign key (step_option_id) references srch_sync_step_option (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_bsyncstep_x1 on srch_base_sync_step (step_type_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_bsyncstep_x2 on srch_base_sync_step (step_option_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_sync_task_step_m (
     [exec]   2  	     task_id varchar2(40)    not null,
     [exec]   3  	     idx     number(10)      not null,
     [exec]   4  	     step_id varchar2(40)    not null
     [exec]   5  ,constraint srch_tskd_stp_m_p primary key (task_id,idx)
     [exec]   6  ,constraint srch_task_stp_m_f1 foreign key (task_id) references srch_base_sync_task (id)
     [exec]   7  ,constraint srch_task_stp_m_f2 foreign key (step_id) references srch_base_sync_step (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_task_stp_m_x2 on srch_sync_task_step_m (step_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_sync_task_type_step_m (
     [exec]   2  	     task_type_id    varchar2(40)    not null,
     [exec]   3  	     idx     number(10)      not null,
     [exec]   4  	     step_type_id    varchar2(40)    not null
     [exec]   5  ,constraint srch_tasktype_m_p primary key (task_type_id,idx)
     [exec]   6  ,constraint srch_tasktype_m_f1 foreign key (task_type_id) references srch_sync_task_type (id)
     [exec]   7  ,constraint srch_tasktype_m_f2 foreign key (step_type_id) references srch_sync_step_type (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_tasktype_m_x2 on srch_sync_task_type_step_m (step_type_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_sync_step_type_option_m (
     [exec]   2  	     step_type_id    varchar2(40)    not null,
     [exec]   3  	     idx     number(10)      not null,
     [exec]   4  	     step_option_id  varchar2(40)    not null
     [exec]   5  ,constraint srch_step_typeo_p primary key (step_type_id,idx)
     [exec]   6  ,constraint srch_stp_type_o_f1 foreign key (step_type_id) references srch_sync_step_type (id)
     [exec]   7  ,constraint srch_stp_type_o_f2 foreign key (step_option_id) references srch_sync_step_option (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_stp_type_o_x2 on srch_sync_step_type_option_m (step_option_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_sync_task_def (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     srch_project_id varchar2(40)    not null,
     [exec]   4  	     last_modified   date    null,
     [exec]   5  	     enabled number(1)	     null,
     [exec]   6  	     description     varchar2(254)   null,
     [exec]   7  	     schedule	     varchar2(254)   null,
     [exec]   8  	     is_all_css      number(1)	     null,
     [exec]   9  	     is_all_custom_data      number(1)	     null,
     [exec]  10  	     depl_type	     varchar2(20)    null,
     [exec]  11  	     depl_target     varchar2(255)   null
     [exec]  12  ,constraint srch_synctaskdef_p primary key (id)
     [exec]  13  ,constraint srch_synctaskd_f2 foreign key (srch_project_id) references srch_project (id)
     [exec]  14  ,constraint srch_sync_task_chk check (enabled IN (0, 1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_synctaskd_x2 on srch_sync_task_def (srch_project_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_sync_step_def (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     task_definition_id      varchar2(40)    not null
     [exec]   4  ,constraint srch_syncstepdef_p primary key (id)
     [exec]   5  ,constraint srch_stepdef_f1 foreign key (task_definition_id) references srch_sync_task_def (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_stepdef_x1 on srch_sync_step_def (task_definition_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_hist_step (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     step_definition_id      varchar2(40)    null,
     [exec]   4  	     status_id	     number(5)	     not null,
     [exec]   5  	     error_count     number(5)	     not null,
     [exec]   6  	     start_time      date    null,
     [exec]   7  	     end_time	     date    null
     [exec]   8  ,constraint srch_hist_step_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_step_error (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     hist_step_id    varchar2(40)    not null,
     [exec]   4  	     occurred_time   date    not null,
     [exec]   5  	     content_id      varchar2(254)   null,
     [exec]   6  	     is_fatal	     number(1)	     null,
     [exec]   7  	     error_message   clob    null,
     [exec]   8  	     cause   clob    null
     [exec]   9  ,constraint srch_step_err_p primary key (id)
     [exec]  10  ,constraint srch_hist_step_fk1 foreign key (hist_step_id) references srch_hist_step (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_hist_step_x2 on srch_step_error (hist_step_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_history (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     act_part_size   number(12,0)    null,
     [exec]   4  	     est_part_size   number(12,0)    null,
     [exec]   5  	     est_psiz_uppr   number(12,0)    null,
     [exec]   6  	     est_psiz_lowr   number(12,0)    null,
     [exec]   7  	     item_count      number(10)      null,
     [exec]   8  	     start_time      date    null,
     [exec]   9  	     end_time	     date    null,
     [exec]  10  	     succeeded	     number(1)	     null
     [exec]  11  ,constraint srch_history_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_hist_stepm (
     [exec]   2  	     srch_history_id varchar2(40)    not null,
     [exec]   3  	     srch_hist_step_id	     varchar2(40)    not null,
     [exec]   4  	     idx     number(10)      not null
     [exec]   5  ,constraint srch_hist_stepm_p primary key (srch_history_id,idx)
     [exec]   6  ,constraint srch_hist_stepm_f1 foreign key (srch_history_id) references srch_history (id)
     [exec]   7  ,constraint srch_hist_stepm_f2 foreign key (srch_hist_step_id) references srch_hist_step (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_hist_stepm_x1 on srch_hist_stepm (srch_hist_step_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_env_p_m (
     [exec]   2  	     srch_project_id varchar2(40)    not null,
     [exec]   3  	     search_env_id   varchar2(40)    not null
     [exec]   4  ,constraint srch_env_p_m_p primary key (srch_project_id,search_env_id)
     [exec]   5  ,constraint srch_env_p_m_f1 foreign key (srch_project_id) references srch_project (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_sorg (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   null,
     [exec]   4  	     parent  varchar2(254)   null
     [exec]   5  ,constraint srch_sorg_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_env_sorg_m (
     [exec]   2  	     srch_project_id varchar2(40)    not null,
     [exec]   3  	     secure_org_id   varchar2(40)    not null
     [exec]   4  ,constraint srch_env_sorg_m_p primary key (srch_project_id,secure_org_id)
     [exec]   5  ,constraint srch_env_sorgm_f1 foreign key (srch_project_id) references srch_project (id)
     [exec]   6  ,constraint srch_env_sorgm_f2 foreign key (secure_org_id) references srch_sorg (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_env_sorgm_x2 on srch_env_sorg_m (secure_org_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_sync_content_ss_m (
     [exec]   2  	     sync_task_id    varchar2(40)    not null,
     [exec]   3  	     content_ss_id   varchar2(40)    not null
     [exec]   4  ,constraint srch_sync_cntss_p primary key (sync_task_id,content_ss_id)
     [exec]   5  ,constraint srch_sync_cntss_f1 foreign key (sync_task_id) references srch_base_sync_task (id)
     [exec]   6  ,constraint srch_sync_cntss_f2 foreign key (content_ss_id) references srch_content_ss (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_sync_cntss_x2 on srch_sync_content_ss_m (content_ss_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_sync_env_m (
     [exec]   2  	     sync_task_id    varchar2(40)    not null,
     [exec]   3  	     search_env_id   varchar2(40)    not null
     [exec]   4  ,constraint srch_sync_env_m_p primary key (sync_task_id,search_env_id)
     [exec]   5  ,constraint srch_sync_env_m_f1 foreign key (sync_task_id) references srch_base_sync_task (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_custom_ds (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     shared_id	     varchar2(40)    not null,
     [exec]   4  	     select_type     number(10)      null,
     [exec]   5  	     srch_content_id varchar2(40)    not null,
     [exec]   6  	     srch_adv_c_id   varchar2(40)    null,
     [exec]   7  	     custom_dt	     varchar2(254)   not null,
     [exec]   8  	     new_save_data   blob    null,
     [exec]   9  	     old_save_data   blob    null
     [exec]  10  ,constraint srch_custom_ds_p primary key (id)
     [exec]  11  ,constraint srch_custom_ds_fk1 foreign key (srch_content_id) references srch_content (id)
     [exec]  12  ,constraint srch_custom_ds_fk6 foreign key (srch_adv_c_id) references srch_adv_conf (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_custom_ds_x1 on srch_custom_ds (srch_content_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_custom_ds_x6 on srch_custom_ds (srch_adv_c_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_project_custom_ds (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     srch_project_id varchar2(40)    null
     [exec]   4  ,constraint srch_prjcust_ds_p primary key (id)
     [exec]   5  ,constraint srch_prjcust_ds_f1 foreign key (id) references srch_custom_ds (id)
     [exec]   6  ,constraint srch_prjcust_ds_f2 foreign key (srch_project_id) references srch_project (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_prjcust_ds_x2 on srch_project_custom_ds (srch_project_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_sync_task_custom_ds (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     srch_sync_task_id	     varchar2(40)    null
     [exec]   4  ,constraint srch_snc_tsk_cst_p primary key (id)
     [exec]   5  ,constraint srch_sc_tsk_cst_f1 foreign key (id) references srch_custom_ds (id)
     [exec]   6  ,constraint srch_sc_tsk_cst_f2 foreign key (srch_sync_task_id) references srch_base_sync_task (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_sc_tsk_cst_x2 on srch_sync_task_custom_ds (srch_sync_task_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_css_custom_ds (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     srch_content_ss_id      varchar2(40)    null
     [exec]   4  ,constraint srch_csscust_ds_p primary key (id)
     [exec]   5  ,constraint srch_csscust_ds_f1 foreign key (id) references srch_custom_ds (id)
     [exec]   6  ,constraint srch_csscust_ds_f2 foreign key (srch_content_ss_id) references srch_content_ss (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_csscust_ds_x2 on srch_css_custom_ds (srch_content_ss_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_project_custom_dsm (
     [exec]   2  	     srch_project_id varchar2(40)    not null,
     [exec]   3  	     idx     number(10)      not null,
     [exec]   4  	     srch_project_custom_ds_id	     varchar2(40)    null
     [exec]   5  ,constraint srch_prjcst_dsm_p primary key (srch_project_id,idx)
     [exec]   6  ,constraint srch_prjcst_dsm_f1 foreign key (srch_project_id) references srch_project (id)
     [exec]   7  ,constraint srch_prjcst_dsm_f2 foreign key (srch_project_custom_ds_id) references srch_project_custom_ds (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_prjcst_x2 on srch_project_custom_dsm (srch_project_custom_ds_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_css_custom_dsm (
     [exec]   2  	     srch_content_ss_id      varchar2(40)    not null,
     [exec]   3  	     idx     number(10)      not null,
     [exec]   4  	     srch_csscust_ds_id      varchar2(40)    null
     [exec]   5  ,constraint srch_csscst_dsm_p primary key (srch_content_ss_id,idx)
     [exec]   6  ,constraint srch_csscst_dsm_f1 foreign key (srch_content_ss_id) references srch_content_ss (id)
     [exec]   7  ,constraint srch_csscst_dsm_f2 foreign key (srch_csscust_ds_id) references srch_css_custom_ds (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_csscst_x2 on srch_css_custom_dsm (srch_csscust_ds_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_custom_ds_mm (
     [exec]   2  	     srch_custom_ds_id	     varchar2(40)    not null,
     [exec]   3  	     idx     number(10)      not null,
     [exec]   4  	     sub     varchar2(254)   not null
     [exec]   5  ,constraint srch_cust_ds_mm_p primary key (srch_custom_ds_id,idx)
     [exec]   6  ,constraint srch_cust_ds_mm_fk foreign key (srch_custom_ds_id) references srch_custom_ds (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_file (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     srch_content_id varchar2(40)    not null,
     [exec]   4  	     name    clob    not null,
     [exec]   5  	     namehash	     number(10)      not null,
     [exec]   6  	     tstamp  varchar2(40)    null,
     [exec]   7  	     gnumber varchar2(40)    null
     [exec]   8  ,constraint srch_file_p primary key (id)
     [exec]   9  ,constraint srch_file_f1 foreign key (srch_content_id) references srch_content (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_file_x2 on srch_file (srch_content_id,namehash);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_queue (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     sync_task_def_id	     varchar2(40)    not null,
     [exec]   4  	     qtime   timestamp	     not null
     [exec]   5  ,constraint srch_queue_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_audit (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     srch_sync_task_id	     varchar2(40)    not null,
     [exec]   4  	     el_name varchar2(100)   not null,
     [exec]   5  	     el_value	     number(19)      not null
     [exec]   6  ,constraint srch_audit_p primary key (id)
     [exec]   7  ,constraint srch_audit_f1 foreign key (srch_sync_task_id) references srch_sync_task (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_audit_x1 on srch_audit (srch_sync_task_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../Search9.4/SearchAdmin/customizations/sql/db_components/oracle/searchadmin_dictionary_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_dic_tr_pt (
     [exec]   2  	     dic_tr_pt_id    varchar2(40)    not null,
     [exec]   3  	     dic_tr_pt_type  number(10)      not null
     [exec]   4  ,constraint srch_dic_tr_pt_1_p primary key (dic_tr_pt_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_dic_dict (
     [exec]   2  	     dic_dict_id     varchar2(40)    not null,
     [exec]   3  	     dic_dict_name   varchar2(200)   not null,
     [exec]   4  	     dic_dict_desc   varchar2(1000)  null,
     [exec]   5  	     dic_dict_language	     varchar2(200)   not null,
     [exec]   6  	     dic_dict_load_mode      varchar2(200)   not null,
     [exec]   7  	     dict_adapter_name	     varchar2(200)   null,
     [exec]   8  	     dic_dict_max_exp	     number(10)      null,
     [exec]   9  	     dic_dict_last_mod	     date    not null
     [exec]  10  ,constraint srch_dic_dict1_p primary key (dic_dict_id)
     [exec]  11  ,constraint srch_dic_dict1_u unique (dic_dict_name)
     [exec]  12  ,constraint srch_dic_tr_pt1_f foreign key (dic_dict_id) references srch_dic_tr_pt (dic_tr_pt_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_dic_trm (
     [exec]   2  	     dic_trm_id      varchar2(40)    not null,
     [exec]   3  	     dic_trm_pt_id   varchar2(40)    not null,
     [exec]   4  	     dic_trm_seq     number(10)      null,
     [exec]   5  	     dic_trm_name    varchar2(200)   not null,
     [exec]   6  	     dic_trm_propagate	     number(1)	     not null,
     [exec]   7  	     dic_trm_spch_part	     varchar2(200)   not null,
     [exec]   8  	     dic_trm_weight  number(5)	     null,
     [exec]   9  	     dic_trm_norm_name	     varchar2(200)   null
     [exec]  10  ,constraint srch_dic_trm1_p primary key (dic_trm_id)
     [exec]  11  ,constraint srch_dic_tr_pt2_f foreign key (dic_trm_id) references srch_dic_tr_pt (dic_tr_pt_id)
     [exec]  12  ,constraint srch_dic_tr_pt3_f foreign key (dic_trm_pt_id) references srch_dic_tr_pt (dic_tr_pt_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_dic_tr_pt3_x on srch_dic_trm (dic_trm_pt_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_dic_trm_x1 on srch_dic_trm (dic_trm_norm_name);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_dic_syn (
     [exec]   2  	     dic_syn_id      varchar2(40)    not null,
     [exec]   3  	     dic_syn_pt_id   varchar2(40)    not null,
     [exec]   4  	     dic_syn_name    varchar2(200)   not null,
     [exec]   5  	     dic_syn_relation	     varchar2(200)   not null,
     [exec]   6  	     dic_syn_spch_part	     varchar2(200)   null,
     [exec]   7  	     dic_syn_language	     varchar2(200)   null,
     [exec]   8  	     dic_syn_weight  number(5)	     null,
     [exec]   9  	     dic_syn_norm_name	     varchar2(200)   null
     [exec]  10  ,constraint srch_dic_syn1_p primary key (dic_syn_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_dic_syn_x1 on srch_dic_syn (dic_syn_norm_name);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../Search9.4/SearchAdmin/customizations/sql/db_components/oracle/searchadmin_termweights_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_tw_set (
     [exec]   2  	     tw_set_id	     varchar2(40)    not null,
     [exec]   3  	     tw_set_name     varchar2(200)   not null,
     [exec]   4  	     tw_set_desc     varchar2(1000)  null,
     [exec]   5  	     tw_set_language varchar2(200)   not null,
     [exec]   6  	     tw_set_readonly number(1)	     null,
     [exec]   7  	     tw_set_last_mod date    not null
     [exec]   8  ,constraint srch_tw_set1_p primary key (tw_set_id)
     [exec]   9  ,constraint srch_tw_set1_u unique (tw_set_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_tw_term (
     [exec]   2  	     tw_term_id      varchar2(40)    not null,
     [exec]   3  	     tw_term_set_id  varchar2(40)    not null,
     [exec]   4  	     tw_term_name    varchar2(200)   not null,
     [exec]   5  	     tw_term_weight  number(5)	     not null
     [exec]   6  ,constraint srch_tw_term1_p primary key (tw_term_id)
     [exec]   7  ,constraint srch_tw_term1_u unique (tw_term_name,tw_term_set_id)
     [exec]   8  ,constraint srch_tw_set1_f foreign key (tw_term_set_id) references srch_tw_set (tw_set_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_tw_set1_x on srch_tw_term (tw_term_set_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../Search9.4/SearchAdmin/customizations/sql/db_components/oracle/searchadmin_queryrules_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_qr_pt_node (
     [exec]   2  	     qr_pt_id	     varchar2(40)    not null,
     [exec]   3  	     qr_pt_type      number(10)      not null
     [exec]   4  ,constraint srch_qr_pt_p primary key (qr_pt_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_qr_sets (
     [exec]   2  	     qr_set_id	     varchar2(40)    not null,
     [exec]   3  	     qr_set_name     varchar2(200)   not null,
     [exec]   4  	     qr_set_dsc      varchar2(1000)  null,
     [exec]   5  	     qr_set_lst_mdf  date    null
     [exec]   6  ,constraint srch_qr_set_p primary key (qr_set_id)
     [exec]   7  ,constraint qr_set_name_u unique (qr_set_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_qr_groups (
     [exec]   2  	     qr_grp_id	     varchar2(40)    not null,
     [exec]   3  	     qr_grp_pt_id    varchar2(40)    null,
     [exec]   4  	     qr_grp_seq      number(10)      null,
     [exec]   5  	     qr_grp_name     varchar2(200)   not null
     [exec]   6  ,constraint srch_qr_grp_p primary key (qr_grp_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_qr (
     [exec]   2  	     qr_id   varchar2(40)    not null,
     [exec]   3  	     qr_prn_grp_id   varchar2(40)    null,
     [exec]   4  	     qr_seq  number(10)      null,
     [exec]   5  	     qr_name varchar2(200)   not null
     [exec]   6  ,constraint srch_qr_p primary key (qr_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_qr_patterns (
     [exec]   2  	     qr_ptrn_id      varchar2(40)    not null,
     [exec]   3  	     qr_ptrn_qr_id   varchar2(40)    null,
     [exec]   4  	     qr_ptrn_is_enbl number(1)	     not null,
     [exec]   5  	     qr_ptrn_name    varchar2(200)   not null,
     [exec]   6  	     qr_ptrn_weight  number(10)      null,
     [exec]   7  	     qr_ptrn_grp     varchar2(200)   null,
     [exec]   8  	     qr_ptrn_lang    varchar2(100)   not null
     [exec]   9  ,constraint srch_qr_ptrn_p primary key (qr_ptrn_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_qr_actions (
     [exec]   2  	     qr_act_id	     varchar2(40)    not null,
     [exec]   3  	     qr_act_qr_id    varchar2(40)    null,
     [exec]   4  	     qr_act_is_enbl  number(1)	     not null,
     [exec]   5  	     qr_act_name     varchar2(200)   not null,
     [exec]   6  	     qr_act_lang     varchar2(100)   not null
     [exec]   7  ,constraint srch_qr_act_p primary key (qr_act_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_qr_gl_ms (
     [exec]   2  	     qr_gl_m_id      varchar2(40)    not null,
     [exec]   3  	     qr_gl_m_name    varchar2(40)    not null,
     [exec]   4  	     qr_gl_m_def     varchar2(900)   not null,
     [exec]   5  	     qr_gl_m_type    number(10)      not null
     [exec]   6  ,constraint srch_qr_gl_m_p primary key (qr_gl_m_id)
     [exec]   7  ,constraint srch_qr_gl_m_u unique (qr_gl_m_name,qr_gl_m_type));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../Search9.4/SearchAdmin/customizations/sql/db_components/oracle/searchadmin_tpo_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_tpo_sets (
     [exec]   2  	     tpo_set_id      varchar2(40)    not null,
     [exec]   3  	     tpo_set_name    varchar2(254)   not null,
     [exec]   4  	     tpo_set_desc    varchar2(254)   null,
     [exec]   5  	     tpo_set_created date    null,
     [exec]   6  	     tpo_set_date    date    null,
     [exec]   7  	     tpo_set_level   number(10)      not null,
     [exec]   8  	     tpo_set_project_id      varchar2(40)    null
     [exec]   9  ,constraint srch_tpo_sets_p primary key (tpo_set_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_tpo_sets_i1 on srch_tpo_sets (tpo_set_level);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_tpo_sets_i2 on srch_tpo_sets (tpo_set_project_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table srch_tpo_opts (
     [exec]   2  	     tpo_opt_id      varchar2(40)    not null,
     [exec]   3  	     tpo_opt_name    varchar2(254)   not null,
     [exec]   4  	     tpo_opt_set_id  varchar2(40)    not null
     [exec]   5  ,constraint srch_tpo_opts_p primary key (tpo_opt_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_tpo_values (
     [exec]   2  	     tpo_value_opt_id	     varchar2(40)    not null,
     [exec]   3  	     tpo_value_item  varchar2(100)   null,
     [exec]   4  	     tpo_value_seq   number(10)      not null
     [exec]   5  ,constraint srch_tpo_values_p primary key (tpo_value_opt_id,tpo_value_seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../Search9.4/SearchAdmin/customizations/sql/db_components/oracle/searchadmin_facet_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_facet_base (
     [exec]   2  	     facet_base_id   varchar2(40)    not null,
     [exec]   3  	     facet_base_type number(10)      not null
     [exec]   4  ,constraint srch_facet_base_p primary key (facet_base_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_facet_set (
     [exec]   2  	     facet_set_id    varchar2(40)    not null,
     [exec]   3  	     facet_set_name  varchar2(254)   not null,
     [exec]   4  	     facet_set_desc  varchar2(254)   null,
     [exec]   5  	     facet_set_last_mod      date    not null
     [exec]   6  ,constraint srch_facet_set_p primary key (facet_set_id)
     [exec]   7  ,constraint srch_facet_set_u unique (facet_set_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_facet_set_mapping (
     [exec]   2  	     facet_set_id    varchar2(40)    not null,
     [exec]   3  	     facet_set_mapping_id    varchar2(40)    not null,
     [exec]   4  	     facet_set_mapping	     varchar2(254)   not null,
     [exec]   5  	     sequence_num    number(10)      null
     [exec]   6  ,constraint srch_fs_mapping_p primary key (facet_set_mapping_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_facet_item (
     [exec]   2  	     facet_item_id   varchar2(40)    not null,
     [exec]   3  	     facet_item_parent_id    varchar2(40)    not null,
     [exec]   4  	     facet_item_set_id	     varchar2(40)    not null,
     [exec]   5  	     facet_item_name varchar2(254)   not null,
     [exec]   6  	     facet_item_prop varchar2(254)   not null,
     [exec]   7  	     facet_item_type number(10)      not null,
     [exec]   8  	     facet_item_levels	     number(10)      null,
     [exec]   9  	     facet_item_range	     number(10)      not null,
     [exec]  10  	     facet_item_select	     varchar2(254)   null,
     [exec]  11  	     facet_item_rng_num      number(10)      null,
     [exec]  12  	     facet_item_rng_siz      number(10)      null,
     [exec]  13  	     facet_item_min_val      number(10)      null,
     [exec]  14  	     facet_item_valuedt      varchar2(254)   null,
     [exec]  15  	     facet_item_case number(1)	     null,
     [exec]  16  	     facet_item_filter	     number(1)	     null,
     [exec]  17  	     facet_item_prec number(10)      null,
     [exec]  18  	     facet_item_round	     number(10)      null,
     [exec]  19  	     facet_item_sort number(10)      not null,
     [exec]  20  	     facet_item_pres varchar2(254)   null
     [exec]  21  ,constraint srch_facet_item_p primary key (facet_item_id)
     [exec]  22  ,constraint srch_facet_item_u unique (facet_item_name,facet_item_set_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_facet_spec (
     [exec]   2  	     facet_spec_item_id      varchar2(40)    not null,
     [exec]   3  	     facet_spec_idx  varchar2(40)    not null,
     [exec]   4  	     facet_spec_value	     varchar2(254)   not null
     [exec]   5  ,constraint srch_facet_spec_p primary key (facet_spec_item_id,facet_spec_idx));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_facet_exc (
     [exec]   2  	     facet_exc_item_id	     varchar2(40)    not null,
     [exec]   3  	     facet_exc_idx   varchar2(40)    not null,
     [exec]   4  	     facet_exc_value varchar2(254)   not null
     [exec]   5  ,constraint srch_facet_exc_p primary key (facet_exc_item_id,facet_exc_idx));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table srch_facet_rngs (
     [exec]   2  	     facet_rngs_item_id      varchar2(40)    not null,
     [exec]   3  	     facet_rngs_idx  varchar2(40)    not null,
     [exec]   4  	     facet_rngs_value	     varchar2(254)   not null
     [exec]   5  ,constraint srch_facet_rngs_p primary key (facet_rngs_item_id,facet_rngs_idx));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Castorama
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_core_order.sql
     [exec] SQL> CREATE TABLE CASTO_ORDER (
     [exec]   2    ORDER_ID VARCHAR2 (40) NOT NULL REFERENCES DCSPP_ORDER(ORDER_ID),
     [exec]   3    ISGIFT NUMBER (1,0) CONSTRAINT ISGIFT_CH CHECK (ISGIFT in (0,1)),
     [exec]   4    COMMENTAIRE VARCHAR2 (200),
     [exec]   5    EXPORTDATE DATE,
     [exec]   6    DATESUPPRESSION DATE,
     [exec]   7    AUTEUR VARCHAR2 (150),
     [exec]   8    NUMCHEQUE VARCHAR2 (50),
     [exec]   9    LIBELLE_BANQUE VARCHAR2 (30),
     [exec]  10    MONTANT_CHEQUE_FRANCS NUMBER (12,2),
     [exec]  11    MONTANT_CHEQUE_EUROS NUMBER (12,2),
     [exec]  12    CHEQUE_NON_VALIDE NUMBER,
     [exec]  13    COMMENTAIRE_CHEQUE VARCHAR2 (500),
     [exec]  14    NUM_CARTE_ATOUT VARCHAR2 (50),
     [exec]  15    DATE_VALID_ATOUT DATE,
     [exec]  16    OPTION_PAIEMENT_ATOUT NUMBER,
     [exec]  17    MESSAGE_TRANSPORTEUR VARCHAR2 (500),
     [exec]  18    BOSTATE VARCHAR2 (40),
     [exec]  19    BOSTATE_DETAIL VARCHAR2 (254),
     [exec]  20    BOSTATE_NUM NUMBER (2,0),
     [exec]  21    PREPARATION_PRICE_INFO VARCHAR2 (40) REFERENCES DCSPP_AMOUNT_INFO(AMOUNT_INFO_ID),
     [exec]  22    CVENTE NUMBER (12,0),
     [exec]  23    FETAT_INTEGRATION NUMBER (1,0),
     [exec]  24    MONTANT_CHEQUE_CADEAU NUMBER (12,2),
     [exec]  25    PAIEMENT_CHEQUE_CADEAU NUMBER (1,0),
     [exec]  26    ENREG_CCP_PRESENT VARCHAR2 (1),
     [exec]  27    COMMENTAIRE_PAIEMENT VARCHAR2 (100),
     [exec]  28    ETAGE_LIVRAISON NUMBER,
     [exec]  29    NUM_FIC_EXPORT NUMBER (10,0),
     [exec]  30    ORIGINE_MAGASIN NUMBER,
     [exec]  31    JSESSIONID VARCHAR2 (60),
     [exec]  32    MNT_TOTAL_TTC NUMBER (10,2),
     [exec]  33    MNT_LIV_NON_REMISE NUMBER (10,2),
     [exec]  34    MNT_MONTEE_ETAGE NUMBER (10,2),
     [exec]  35    MNT_REMISE_LIV_ETAGE NUMBER (10,2),
     [exec]  36    MNT_PREPA_NON_REMISE NUMBER (10,2),
     [exec]  37    MNT_FRAIS_PREPA_REMISE NUMBER (10,2),
     [exec]  38    MNT_REMISES_COMMANDE NUMBER (10,2),
     [exec]  39    CARTE_ATOUT_INDETERMINE NUMBER (1,0),
     [exec]  40    MONTANT_PFL NUMBER (12,2),
     [exec]  41    MONTANT_PFT NUMBER (12,2),
     [exec]  42    COMMANDE_ADMIN NUMBER (1,0),
     [exec]  43    LOGIN_ADMIN VARCHAR2 (50),
     [exec]  44    CP_ACCEPTEES NUMBER,
     [exec]  45    PRIMARY KEY (ORDER_ID)
     [exec]  46  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ORDER_EMAILS (
     [exec]   2  	     ORDER_ID VARCHAR2 (40) NOT NULL REFERENCES CASTO_ORDER(ORDER_ID),
     [exec]   3  	     EMAIL_TYPE VARCHAR2 (50),
     [exec]   4  	     IS_SENT NUMBER (1,0),
     [exec]   5  	     PRIMARY KEY (ORDER_ID, EMAIL_TYPE)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ORDER_COMMENTAIRE (
     [exec]   2    REPOSITORYID VARCHAR2 (50) NOT NULL PRIMARY KEY,
     [exec]   3    COMMENTAIRE VARCHAR2 (2000)
     [exec]   4  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_TRADEDOUBLER (
     [exec]   2    ORDER_ID VARCHAR2 (40) NOT NULL PRIMARY KEY,
     [exec]   3    TDUID VARCHAR2 (32) NOT NULL
     [exec]   4  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CARTE_ATOUT (
     [exec]   2    PAYMENT_GROUP_ID VARCHAR2 (40) NOT NULL PRIMARY KEY,
     [exec]   3    ID_TRANSACTION NUMBER (18,0),
     [exec]   4    NUM_AUTORISATION VARCHAR2 (20),
     [exec]   5    NUM_TRANSACTION NUMBER (18,0),
     [exec]   6    DATE_TRANSACTION TIMESTAMP(6),
     [exec]   7    DATE_PAIEMENT TIMESTAMP(6),
     [exec]   8    DATE_VALID_ATOUT TIMESTAMP(6),
     [exec]   9    NUM_CARTE_ATOUT VARCHAR2 (40),
     [exec]  10    OPTION_PAIEMENT_ATOUT NUMBER
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CARTE_CHEQUE (
     [exec]   2    PAYMENT_GROUP_ID VARCHAR2 (40) NOT NULL PRIMARY KEY,
     [exec]   3    NUMCHEQUE VARCHAR2 (50),
     [exec]   4    LIBELLE_BANQUE VARCHAR2 (30),
     [exec]   5    MONTANT_CHEQUE_FRANCS NUMBER (12,2),
     [exec]   6    MONTANT_CHEQUE_EUROS NUMBER (12,2),
     [exec]   7    CHEQUE_NON_VALIDE NUMBER,
     [exec]   8    COMMENTAIRE_CHEQUE VARCHAR2 (500)
     [exec]   9  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_BILL_ADDR (
     [exec]   2    PAYMENT_GROUP_ID VARCHAR2 (40) NOT NULL PRIMARY KEY,
     [exec]   3    CIVILITE NUMBER,
     [exec]   4    TEL_PORTABLE VARCHAR2 (30),
     [exec]   5    TEL_PROFESSIONNEL VARCHAR2 (30),
     [exec]   6    ADRESSE_LIBELLE VARCHAR2 (60),
     [exec]   7    TVA_INTRACOMUNAUTAIRE VARCHAR2 (13),
     [exec]   8    ALERTE_AUTO NUMBER (1,0),
     [exec]   9    MOYEN_CONTACT VARCHAR2 (1)
     [exec]  10  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_COMMERCE_ITEM (
     [exec]   2    COMMERCE_ITEM_ID VARCHAR2 (40) NOT NULL REFERENCES DCSPP_ITEM (COMMERCE_ITEM_ID),
     [exec]   3    POIDS NUMBER,
     [exec]   4    HORS_NORMES NUMBER (1,0),
     [exec]   5    EXONERATION_PFE NUMBER (1,0) CONSTRAINT EXONERATION_PFE_CH CHECK (EXONERATION_PFE in (0,1)),
     [exec]   6    CADEAU NUMBER (1,0) DEFAULT 0,
     [exec]   7    CODEARTICLE VARCHAR2 (40),
     [exec]   8    ENVENTE NUMBER (1,0),
     [exec]   9    DATEFINVIE DATE,
     [exec]  10    COEFFICIENTDESATISFACTION NUMBER (10,2),
     [exec]  11    GENERALEMENTLIVREENHEURES NUMBER (4,0),
     [exec]  12    SOMME_FORFAITAIRE NUMBER (19,7),
     [exec]  13    EXONERATION_PFT NUMBER (1,0),
     [exec]  14    CREATION_DATE DATE DEFAULT SYSDATE NOT NULL,
     [exec]  15    PRIMARY KEY (COMMERCE_ITEM_ID)
     [exec]  16  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_HARDGOOD_SHIPPING_GROUP (
     [exec]   2    SHIPPING_GROUP_ID VARCHAR2 (40) NOT NULL REFERENCES DCSPP_SHIP_GROUP (SHIPPING_GROUP_ID),
     [exec]   3    POIDS_TOTAL NUMBER,
     [exec]   4    FRAIS_PREPARATION NUMBER (10,2),
     [exec]   5    DELAI_ENGAGEMENT NUMBER (5,0),
     [exec]   6    LIBELLE_DELAI_ENGAGEMENT VARCHAR2 (50),
     [exec]   7    TRANCHE_HORAIRE_CLIENT_MAD VARCHAR2 (75),
     [exec]   8    POIDS_PFL NUMBER,
     [exec]   9    POIDS_PFT NUMBER,
     [exec]  10    PRIMARY KEY (SHIPPING_GROUP_ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SHIP_ADDR (
     [exec]   2    SHIPPING_GROUP_ID VARCHAR2 (40) NOT NULL PRIMARY KEY,
     [exec]   3    CIVILITE NUMBER,
     [exec]   4    TEL_PORTABLE VARCHAR2 (30),
     [exec]   5    TEL_PROFESSIONNEL VARCHAR2 (30),
     [exec]   6    ADRESSE_LIBELLE VARCHAR2 (60),
     [exec]   7    TVA_INTRACOMUNAUTAIRE VARCHAR2 (13),
     [exec]   8    ALERTE_AUTO NUMBER (1,0),
     [exec]   9    MOYEN_CONTACT VARCHAR2 (1)
     [exec]  10  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PFE_POIDS (
     [exec]   2    ID VARCHAR2 (30) NOT NULL PRIMARY KEY,
     [exec]   3    POIDS_INF NUMBER NOT NULL,
     [exec]   4    POIDS_SUP NUMBER NOT NULL,
     [exec]   5    PRIX_AU_KG NUMBER (12,2) NOT NULL,
     [exec]   6    FORFAIT_TTC NUMBER (12,2) NOT NULL,
     [exec]   7    FORFAIT_HN_TTC NUMBER (12,2) NOT NULL,
     [exec]   8    GRILLE_PFE_ID VARCHAR2 (40) DEFAULT '1'
     [exec]   9  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PREPARATION_POIDS (
     [exec]   2    ID VARCHAR2 (30) NOT NULL PRIMARY KEY,
     [exec]   3    POIDS_INF NUMBER NOT NULL,
     [exec]   4    POIDS_SUP NUMBER NOT NULL,
     [exec]   5    MONTANT NUMBER (12,2) NOT NULL
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CODESPOSTAUX_PFE (
     [exec]   2    CODE_POSTAL VARCHAR2 (5) NOT NULL PRIMARY KEY,
     [exec]   3    GRILLE_PFE_ID VARCHAR2 (40) NOT NULL,
     [exec]   4    POID_MINIMUM NUMBER NOT NULL,
     [exec]   5    VOLUME_MINIMUM NUMBER NOT NULL
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PREPARATION_PRICE_INFO (
     [exec]   2    ID VARCHAR2 (40) NOT NULL REFERENCES DCSPP_AMOUNT_INFO (AMOUNT_INFO_ID),
     [exec]   3    POIDS NUMBER NOT NULL,
     [exec]   4    PRIMARY KEY (ID)
     [exec]   5  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ORDER_PRICE_INFO (
     [exec]   2    ID VARCHAR2 (40) NOT NULL REFERENCES DCSPP_AMOUNT_INFO (AMOUNT_INFO_ID),
     [exec]   3    FRAISDEPREPARATION NUMBER NOT NULL,
     [exec]   4    PRIMARY KEY (ID)
     [exec]   5  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE cast_commerce_item (
     [exec]   2  	 COMMERCE_ITEM_ID VARCHAR2 (40) NOT NULL PRIMARY KEY,
     [exec]   3  	 CREATION_DATE DATE DEFAULT SYSDATE NOT NULL
     [exec]   4  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE DCSPP_BILL_ADDR MODIFY (
     [exec]   2  	 FIRST_NAME	     varchar2(100),
     [exec]   3  	 LAST_NAME	     varchar2(100),
     [exec]   4  	 ADDRESS_1	      varchar2(100),
     [exec]   5  	 ADDRESS_2	      varchar2(100),
     [exec]   6  	 ADDRESS_3	      varchar2(100),
     [exec]   7  	 POSTAL_CODE	     varchar2(16),
     [exec]   8  	 CITY		     varchar2(100)
     [exec]   9  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE DCSPP_SHIP_ADDR MODIFY (
     [exec]   2  	 FIRST_NAME	     varchar2(100),
     [exec]   3  	 LAST_NAME	     varchar2(100),
     [exec]   4  	 ADDRESS_1	      varchar2(100),
     [exec]   5  	 ADDRESS_2	      varchar2(100),
     [exec]   6  	 ADDRESS_3	      varchar2(100),
     [exec]   7  	 POSTAL_CODE	     varchar2(16),
     [exec]   8  	 CITY		     varchar2(100)
     [exec]   9  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD (
     [exec]   2  		     TOTAL_DISCOUNT NUMBER (10,2) NULL,
     [exec]   3  		     PROCESSING_FEES NUMBER (10,2) NULL,
     [exec]   4  		     SHIPPING_FEES NUMBER (10,2) NULL,
     [exec]   5  		     SHIPPING_DISCOUNT NUMBER (10,2) NULL,
     [exec]   6  		     TOTAL_WEIGHT NUMBER (10,2) NULL
     [exec]   7  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_COMMERCE_ITEM ADD DELIVERY_PERIOD NUMBER (4,0) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD TOTAL_DISCOUNT NUMBER (10,2) NULL;
     [exec] ALTER TABLE CASTO_ORDER ADD TOTAL_DISCOUNT NUMBER (10,2) NULL
     [exec]                             *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD PROCESSING_FEES NUMBER (10,2) NULL;
     [exec] ALTER TABLE CASTO_ORDER ADD PROCESSING_FEES NUMBER (10,2) NULL
     [exec]                             *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD SHIPPING_FEES NUMBER (10,2) NULL;
     [exec] ALTER TABLE CASTO_ORDER ADD SHIPPING_FEES NUMBER (10,2) NULL
     [exec]                             *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD SHIPPING_DISCOUNT NUMBER (10,2) NULL;
     [exec] ALTER TABLE CASTO_ORDER ADD SHIPPING_DISCOUNT NUMBER (10,2) NULL
     [exec]                             *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD TOTAL_WEIGHT NUMBER (10,2) NULL;
     [exec] ALTER TABLE CASTO_ORDER ADD TOTAL_WEIGHT NUMBER (10,2) NULL
     [exec]                             *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD ITEMS_DISCOUNT NUMBER (10,2) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_COMMERCE_ITEM ADD DELIVERY_PERIOD NUMBER (4,0) NULL;
     [exec] ALTER TABLE CASTO_COMMERCE_ITEM ADD DELIVERY_PERIOD NUMBER (4,0) NULL
     [exec]                                     *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_COMMERCE_ITEM ADD DISPLAY_NAME VARCHAR2(255 BYTE) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD TRANSACTION_COUNT NUMBER(2,0) DEFAULT 0 NOT NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD PAYBOX_HANDLED NUMBER(1,0) DEFAULT 0 NOT NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD PAYMENT_SOURCE VARCHAR2(16);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_BILL_ADDR ADD (
     [exec]   2    PHONE_NUMBER_2 VARCHAR2 (15),
     [exec]   3    LOCALITY VARCHAR2 (100) );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SHIP_ADDR ADD (
     [exec]   2    PHONE_NUMBER_2 VARCHAR2 (15),
     [exec]   3    LOCALITY VARCHAR2 (100) );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD PAYMENT_USER_ID VARCHAR2(40);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_ITEM_PRICE_INFO (
     [exec]   2    ID VARCHAR2 (40) NOT NULL REFERENCES DCSPP_AMOUNT_INFO (AMOUNT_INFO_ID),
     [exec]   3    ON_SALE_DISCOUNT_DISPLAY NUMBER(1,0) DEFAULT 0 NULL,
     [exec]   4    PRIMARY KEY (ID)
     [exec]   5  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> alter table CASTO_ORDER modify COMMENTAIRE varchar2(400);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_core_user.sql
     [exec] SQL> CREATE TABLE CASTO_QUESTIONS
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     LIBELLE VARCHAR2(200 BYTE),
     [exec]   5  	     ORDRE_AFFICHAGE VARCHAR2(10 BYTE),
     [exec]   6  	     PRIMARY KEY (ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PROFESSION
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     LIBELLE VARCHAR2(100 BYTE),
     [exec]   5  	     PRIMARY KEY (ID)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_NIVEAUX_BRICOLAGE
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     LIBELLE VARCHAR2(100 BYTE),
     [exec]   5  	     PRIMARY KEY (ID)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SAUVEGARDE_PAGE
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     LIBELLE VARCHAR2(200 BYTE),
     [exec]   5  	     URL VARCHAR2(200 BYTE),
     [exec]   6  	      PRIMARY KEY (ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_E_DECORATEUR_OBJET
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     NOM VARCHAR2(128 BYTE) NOT NULL ENABLE,
     [exec]   5  	     COULEUR VARCHAR2(32 BYTE) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SAUVEGARDE_CREATION
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     NOM_SAUVEGARDE VARCHAR2(100 BYTE),
     [exec]   5  	     NOM_PIECE VARCHAR2(100 BYTE),
     [exec]   6  	     NOM_MOBILIER VARCHAR2(100 BYTE),
     [exec]   7  	     PRIMARY KEY (ID)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_LISTE_OBJETS_DECO
     [exec]   2  (
     [exec]   3  	     SAUVEGARDE NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     OBJET NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (SAUVEGARDE, SEQ),
     [exec]   7  	     FOREIGN KEY (SAUVEGARDE)
     [exec]   8  	       REFERENCES CASTO_SAUVEGARDE_CREATION (ID),
     [exec]   9  	     FOREIGN KEY (OBJET)
     [exec]  10  	       REFERENCES CASTO_E_DECORATEUR_OBJET (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CONTACT_INFO
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     CIVILITE NUMBER(*,0),
     [exec]   5  	     SOCIETE VARCHAR2(100 BYTE),
     [exec]   6  	     TYPE_ADRESSE NUMBER(1,0),
     [exec]   7  	     EMAIL VARCHAR2(255 BYTE),
     [exec]   8  	     TEL_GSM VARCHAR2(30 BYTE),
     [exec]   9  	     TEL_PROFESSIONNEL VARCHAR2(30 BYTE),
     [exec]  10  	     NUMERO_TVA VARCHAR2(25 BYTE),
     [exec]  11  	     INFOS_SMS VARCHAR2(1 BYTE),
     [exec]  12  	     ACTIVE_ADRESSE NUMBER(1,0),
     [exec]  13  	     phone_number_2  varchar2(15)    null,
     [exec]  14  	     locality	     varchar2(100)   null,
     [exec]  15  	     PRIMARY KEY (ID),
     [exec]  16  	     FOREIGN KEY (ID)
     [exec]  17  	       REFERENCES DPS_CONTACT_INFO (ID)
     [exec]  18  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE dps_contact_info MODIFY (
     [exec]   2  	     FIRST_NAME 		     varchar2(100),
     [exec]   3  	 LAST_NAME		     varchar2(100),
     [exec]   4  	     ADDRESS1			     varchar2(100),
     [exec]   5  	     ADDRESS2			     varchar2(100),
     [exec]   6  	     ADDRESS3			     varchar2(100),
     [exec]   7  	     POSTAL_CODE	     varchar2(16),
     [exec]   8  	     CITY			     varchar2(100)
     [exec]   9  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OTHER_BILLING_ADDR
     [exec]   2  (
     [exec]   3  	     USER_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     TAG VARCHAR2(42 BYTE) NOT NULL ENABLE,
     [exec]   5  	     ADDRESS_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (TAG, USER_ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OTHER_BILLSHIP_ADDR
     [exec]   2  (
     [exec]   3  	     USER_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     TAG VARCHAR2(42 BYTE) NOT NULL ENABLE,
     [exec]   5  	     ADDRESS_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (TAG, USER_ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_LISTE_DE_COURSES
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     LIBELLE VARCHAR2(255 BYTE) NOT NULL ENABLE,
     [exec]   5  	     DATE_CREATION DATE NOT NULL ENABLE,
     [exec]   6  	      PRIMARY KEY (ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_LISTE_DE_COURSES_CONTENU
     [exec]   2  (
     [exec]   3  	     LISTE_DE_COURSES_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SKU_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     PRIMARY KEY (LISTE_DE_COURSES_ID, SKU_ID),
     [exec]   6  	     FOREIGN KEY (LISTE_DE_COURSES_ID)
     [exec]   7  	       REFERENCES CASTO_LISTE_DE_COURSES (ID) ENABLE
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> ALTER TABLE dps_user MODIFY (
     [exec]   2  	     FIRST_NAME 		     varchar2(64),
     [exec]   3  	     LAST_NAME			     varchar2(64),
     [exec]   4  	     LOGIN			     VARCHAR2(255)
     [exec]   5  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> CREATE TABLE CASTO_USER
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     PROSPECT_SINCE DATE,
     [exec]   5  	     STATUT NUMBER(*,0),
     [exec]   6  	     DATE_CHANGE_STATUT DATE,
     [exec]   7  	     CIVILITE NUMBER(*,0),
     [exec]   8  	     PROFESSION_ID NUMBER(*,0),
     [exec]   9  	     TOP_ROBINSON_LIST NUMBER(*,0),
     [exec]  10  	     NB_RECLAMATIONS NUMBER(*,0),
     [exec]  11  	     NB_APPELS_CALLCENTER NUMBER(*,0),
     [exec]  12  	     PROVENANCE_URL VARCHAR2(50 BYTE),
     [exec]  13  	     CARTE_ATOUT NUMBER(*,0),
     [exec]  14  	     ADRESSE_FACTURATION_ID VARCHAR2(40 BYTE),
     [exec]  15  	     ADRESSE_LIVRAISON1_ID VARCHAR2(40 BYTE),
     [exec]  16  	     ADRESSE_LIVRAISON2_ID VARCHAR2(40 BYTE),
     [exec]  17  	     SOCIETE VARCHAR2(100 BYTE),
     [exec]  18  	     BLOQUE NUMBER(1,0),
     [exec]  19  	     ID_MAGASIN_REF VARCHAR2(255 BYTE),
     [exec]  20  	     ACCES_FO NUMBER(22,0),
     [exec]  21  	     NUMEROCARTEATOUT VARCHAR2(100 BYTE),
     [exec]  22  	     SUPPRIME NUMBER(1,0),
     [exec]  23  	     TYPEMAJPROFIL NUMBER,
     [exec]  24  	     DATEMAJPROFIL DATE,
     [exec]  25  	     DATE_DERNIERE_COMMANDE DATE,
     [exec]  26  	     UTILISATEUR_CONCEPTION_CUISINE NUMBER(1,0),
     [exec]  27  	     price_list 	     varchar2(40)    null,
     [exec]  28  	     sale_price_list	     varchar2(40)    null,
     [exec]  29  	     PRIMARY KEY (ID),
     [exec]  30  	     FOREIGN KEY (ID)
     [exec]  31  	       REFERENCES DPS_USER (ID),
     [exec]  32  	      FOREIGN KEY (ADRESSE_FACTURATION_ID)
     [exec]  33  	       REFERENCES CASTO_CONTACT_INFO (ID),
     [exec]  34  	      FOREIGN KEY (ADRESSE_LIVRAISON1_ID)
     [exec]  35  	       REFERENCES CASTO_CONTACT_INFO (ID),
     [exec]  36  	      FOREIGN KEY (ADRESSE_LIVRAISON2_ID)
     [exec]  37  	       REFERENCES CASTO_CONTACT_INFO (ID),
     [exec]  38  	      FOREIGN KEY (PROFESSION_ID)
     [exec]  39  	       REFERENCES CASTO_PROFESSION (ID)
     [exec]  40  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_USER_LISTE_DE_COURSES
     [exec]   2  (
     [exec]   3  	     USR_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     LISTEDECOURSES_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     PRIMARY KEY (USR_ID, LISTEDECOURSES_ID),
     [exec]   6  	     FOREIGN KEY (LISTEDECOURSES_ID)
     [exec]   7  	       REFERENCES CASTO_LISTE_DE_COURSES (ID),
     [exec]   8  	     FOREIGN KEY (USR_ID)
     [exec]   9  	       REFERENCES DCS_USER (USER_ID)
     [exec]  10  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_USER_FOGROUPS
     [exec]   2  (
     [exec]   3  	     USR_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     GROUP_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     PRIMARY KEY (USR_ID, GROUP_ID)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_IDENTIFICATION_HELPER
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     REMINDER_PASSWORD VARCHAR2(100 BYTE),
     [exec]   5  	     REPONSE_REMINDER VARCHAR2(50 BYTE),
     [exec]   6  	     PRIMARY KEY (ID),
     [exec]   7  	     FOREIGN KEY (ID)
     [exec]   8  	       REFERENCES DPS_USER (ID)
     [exec]   9  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CLUB_CASTO
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     MEMBRE_CLUB NUMBER(*,0),
     [exec]   5  	     DATE_ENTREE_CLUB DATE,
     [exec]   6  	     DATE_SORTIE_CLUB DATE,
     [exec]   7  	     TOP_PARRAIN NUMBER(*,0),
     [exec]   8  	     PRIMARY KEY (ID),
     [exec]   9  	     CONSTRAINT CLUB_CASTO_ID FOREIGN KEY (ID)
     [exec]  10  	       REFERENCES DPS_USER (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_STAT_LAST_VISIT
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     NB_PAGE_DERNIERE_SESSION NUMBER(*,0),
     [exec]   5  	     PRIMARY KEY (ID),
     [exec]   6  	     CONSTRAINT STAT_LAST_VISIT_ID FOREIGN KEY (ID)
     [exec]   7  	       REFERENCES DPS_USER (ID)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SCORES
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     CODE_SEG_COMPORT_1 NUMBER(*,0),
     [exec]   5  	     POTENTIEL NUMBER(*,0),
     [exec]   6  	     CONTRIBUTION_A_LA_MARGE NUMBER(*,0),
     [exec]   7  	     SATISFACTION_CLIENT NUMBER(*,0),
     [exec]   8  	     CLUB_READERS NUMBER(*,0),
     [exec]   9  	     BLACK_LIST NUMBER(*,0),
     [exec]  10  	     NB_PROJETS_ENVOYE_AMI NUMBER(*,0),
     [exec]  11  	     CODE_RFM NUMBER(*,0),
     [exec]  12  	     RENTABILITE NUMBER(*,0),
     [exec]  13  	     PRIMARY KEY (ID),
     [exec]  14  	     CONSTRAINT CASTO_SCORES_ID FOREIGN KEY (ID)
     [exec]  15  	       REFERENCES DPS_USER (ID)
     [exec]  16  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MON_NIVEAU_BRICOLAGE
     [exec]   2  (
     [exec]   3  	ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     NIVEAU_CATEGORIE_1_ID NUMBER(*,0),
     [exec]   5  	     NIVEAU_CATEGORIE_2_ID NUMBER(*,0),
     [exec]   6  	     NIVEAU_CATEGORIE_3_ID NUMBER(*,0),
     [exec]   7  	     NIVEAU_CATEGORIE_4_ID NUMBER(*,0),
     [exec]   8  	     NIVEAU_CATEGORIE_5_ID NUMBER(*,0),
     [exec]   9  	     NIVEAU_CATEGORIE_6_ID NUMBER(*,0),
     [exec]  10  	     NIVEAU_CATEGORIE_7_ID NUMBER(*,0),
     [exec]  11  	     NIVEAU_CATEGORIE_8_ID NUMBER(*,0),
     [exec]  12  	     NIVEAU_CATEGORIE_9_ID NUMBER(*,0),
     [exec]  13  	     NIVEAU_CATEGORIE_10_ID NUMBER(*,0),
     [exec]  14  	     PRIMARY KEY (ID),
     [exec]  15  	     CONSTRAINT MON_NIVEAU_BRICOLAGE_ID FOREIGN KEY (ID)
     [exec]  16  	       REFERENCES DPS_USER (ID) ENABLE,
     [exec]  17  	     FOREIGN KEY (NIVEAU_CATEGORIE_1_ID)
     [exec]  18  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  19  	      FOREIGN KEY (NIVEAU_CATEGORIE_2_ID)
     [exec]  20  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  21  	      FOREIGN KEY (NIVEAU_CATEGORIE_3_ID)
     [exec]  22  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  23  	      FOREIGN KEY (NIVEAU_CATEGORIE_4_ID)
     [exec]  24  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  25  	      FOREIGN KEY (NIVEAU_CATEGORIE_5_ID)
     [exec]  26  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  27  	      FOREIGN KEY (NIVEAU_CATEGORIE_6_ID)
     [exec]  28  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  29  	      FOREIGN KEY (NIVEAU_CATEGORIE_7_ID)
     [exec]  30  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  31  	      FOREIGN KEY (NIVEAU_CATEGORIE_8_ID)
     [exec]  32  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  33  	      FOREIGN KEY (NIVEAU_CATEGORIE_9_ID)
     [exec]  34  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  35  	      FOREIGN KEY (NIVEAU_CATEGORIE_10_ID)
     [exec]  36  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE
     [exec]  37  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_STAT_COMMERCE
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     NB_SESSION NUMBER(*,0),
     [exec]   5  	     NB_SESSION_AVEC_ACHAT NUMBER(*,0),
     [exec]   6  	     NB_TOTAL_COMMANDES NUMBER(*,0),
     [exec]   7  	     MONTANT_TOTAL_COMMANDE_HT NUMBER(*,0),
     [exec]   8  	     MONTANT_TOTAL_COMMANDE_TTC NUMBER(*,0),
     [exec]   9  	     MONTANT_TOTAL_FACTURE_TTC NUMBER(*,0),
     [exec]  10  	     NB_ARTICLE_COMMANDE_EN_PROMO NUMBER(*,0),
     [exec]  11  	     MONTANT_PROMO_CUMULE_TTC NUMBER(*,0),
     [exec]  12  	     NB_COUPONS_UTILISE NUMBER(*,0),
     [exec]  13  	     PRIMARY KEY (ID),
     [exec]  14  	     CONSTRAINT STAT_COMMERCE_ID FOREIGN KEY (ID)
     [exec]  15  	       REFERENCES DPS_USER (ID)
     [exec]  16  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_RAYONS_UTILISE
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     COMPTEUR_USAGE_RAYON_1 NUMBER(*,0),
     [exec]   5  	     COMPTEUR_USAGE_RAYON_2 NUMBER(*,0),
     [exec]   6  	     COMPTEUR_USAGE_RAYON_3 NUMBER(*,0),
     [exec]   7  	     COMPTEUR_USAGE_RAYON_4 NUMBER(*,0),
     [exec]   8  	     COMPTEUR_USAGE_RAYON_5 NUMBER(*,0),
     [exec]   9  	     COMPTEUR_USAGE_RAYON_6 NUMBER(*,0),
     [exec]  10  	     COMPTEUR_USAGE_RAYON_7 NUMBER(*,0),
     [exec]  11  	     COMPTEUR_USAGE_RAYON_8 NUMBER(*,0),
     [exec]  12  	     COMPTEUR_USAGE_RAYON_9 NUMBER(*,0),
     [exec]  13  	     COMPTEUR_USAGE_RAYON_10 NUMBER(*,0),
     [exec]  14  	     COMPTEUR_USAGE_RAYON_11 NUMBER(*,0),
     [exec]  15  	     COMPTEUR_USAGE_RAYON_12 NUMBER(*,0),
     [exec]  16  	     PRIMARY KEY (ID),
     [exec]  17  	     CONSTRAINT RAYONS_UTILISE_ID FOREIGN KEY (ID)
     [exec]  18  	       REFERENCES DPS_USER (ID)
     [exec]  19  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_LOGEMENT
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     ANCIENNETE_LOGEMENT VARCHAR2(20 BYTE),
     [exec]   5  	     DATE_ENTREE_LOGEMENT DATE,
     [exec]   6  	     SITUATION_HABITAT NUMBER(*,0),
     [exec]   7  	     JARDIN NUMBER(*,0),
     [exec]   8  	     TYPE_LOGEMENT NUMBER(*,0),
     [exec]   9  	     BALCON NUMBER(*,0),
     [exec]  10  	     PRIMARY KEY (ID),
     [exec]  11  	     CONSTRAINT LOGEMENT_ID FOREIGN KEY (ID)
     [exec]  12  	       REFERENCES DPS_USER (ID) ENABLE
     [exec]  13  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_TELEPHONIE
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     TELEPHONE_PRIVE VARCHAR2(40 BYTE),
     [exec]   5  	     TELEPHONE_PORTABLE VARCHAR2(40 BYTE),
     [exec]   6  	     TELEPHONE_TRAVAIL VARCHAR2(40 BYTE),
     [exec]   7  	     SMS_ACCEPTED NUMBER(*,0),
     [exec]   8  	     PRIMARY KEY (ID),
     [exec]   9  	     CONSTRAINT TELEPHONIE_ID FOREIGN KEY (ID)
     [exec]  10  	       REFERENCES DPS_USER (ID) ENABLE
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_USER_MAILING
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     EMAIL_HTML NUMBER(*,0),
     [exec]   5  	     PRIMARY KEY (ID),
     [exec]   6  	     CONSTRAINT USER_MAILING_ID FOREIGN KEY (ID)
     [exec]   7  	       REFERENCES DPS_USER (ID)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SITUATION_FAMILIALE
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SITUATION_FAMILIALE NUMBER(*,0),
     [exec]   5  	     NB_ENFANTS NUMBER(*,0),
     [exec]   6  	     PRIMARY KEY (ID),
     [exec]   7  	     CONSTRAINT SITUATION_FAMILIALE_ID FOREIGN KEY (ID)
     [exec]   8  	       REFERENCES DPS_USER (ID)
     [exec]   9  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_USER_NEWSLETTER
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     ABONNEMENT_NEWSLETTER_ID VARCHAR2(100 BYTE),
     [exec]   5  	     PRIMARY KEY (ID),
     [exec]   6  	     CONSTRAINT USER_NEWSLETTER_ID FOREIGN KEY (ID)
     [exec]   7  	       REFERENCES DPS_USER (ID)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MES_PAGES_SAUVEGARDEES
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     SAUVEGARDE_ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID, SEQ),
     [exec]   7  	     CONSTRAINT MES_PAGES_SAUVEGARDEES_ID FOREIGN KEY (ID)
     [exec]   8  	       REFERENCES DPS_USER (ID),
     [exec]   9  	     FOREIGN KEY (SAUVEGARDE_ID)
     [exec]  10  	       REFERENCES CASTO_SAUVEGARDE_PAGE (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MES_CREA_SAUVEGARDEES
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     SAUVEGARDE_ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID, SEQ),
     [exec]   7  	     CONSTRAINT MES_CREA_SAUVEGARDEES_ID FOREIGN KEY (ID)
     [exec]   8  	       REFERENCES DPS_USER (ID),
     [exec]   9  	     FOREIGN KEY (SAUVEGARDE_ID)
     [exec]  10  	       REFERENCES CASTO_SAUVEGARDE_CREATION (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_WISHLIST
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     SKU_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID, SEQ)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SESSION_TRACKING
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     TRACKID VARCHAR2(40 BYTE),
     [exec]   5  	     DATE_PREMIERE_VISITE DATE,
     [exec]   6  	     DATE_DERNIERE_VISITE DATE,
     [exec]   7  	     PRIMARY KEY (ID)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_USER_SESSION_TRACKING
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER NOT NULL ENABLE,
     [exec]   5  	     TRACKID VARCHAR2(40 BYTE),
     [exec]   6  	     PRIMARY KEY (ID, SEQ),
     [exec]   7  	     CONSTRAINT USER_SESSION_TRACKING_ID FOREIGN KEY (ID)
     [exec]   8  	       REFERENCES DPS_USER (ID),
     [exec]   9  	     FOREIGN KEY (TRACKID)
     [exec]  10  	       REFERENCES CASTO_SESSION_TRACKING (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_FOGROUPS
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     LIBELLE VARCHAR2(255 BYTE) NOT NULL ENABLE,
     [exec]   5  	     DATE_CREATION DATE NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_FOPRIV
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     LIBELLE VARCHAR2(255 BYTE) NOT NULL ENABLE,
     [exec]   5  	     PRIMARY KEY (ID)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_FOGROUPS_FOPRIV
     [exec]   2  (
     [exec]   3  	     GROUP_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     PRIV_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     PRIMARY KEY (GROUP_ID, PRIV_ID)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ALERTE_DISPONIBILITE
     [exec]   2  (
     [exec]   3  	     ALERTE_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     USER_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     SKU_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     ETAT_ALERTE VARCHAR2(1 BYTE),
     [exec]   7  	     DATE_CREATION_ALERTE DATE,
     [exec]   8  	     DATE_ENVOI_EMAIL DATE,
     [exec]   9  	     PRIMARY KEY (ALERTE_ID),
     [exec]  10  	     FOREIGN KEY (USER_ID)
     [exec]  11  	       REFERENCES DCS_USER (USER_ID)
     [exec]  12  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_REFEREE
     [exec]   2  (
     [exec]   3  	     ID 		     VARCHAR2(40)    NOT NULL,
     [exec]   4  	     EMAIL	     VARCHAR2(100)   NOT NULL,
     [exec]   5  	     COUPON_ID	     VARCHAR2(40)    NOT NULL,
     [exec]   6  	     APPLIED	     number(1,0)	     DEFAULT 0 not null,
     [exec]   7  	     PRIMARY KEY (ID)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_REFEREE_COUPONID_IDX ON CASTO_REFEREE (COUPON_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_REFERRER_REFEREE
     [exec]   2  (
     [exec]   3  	     REFERRER_ID	     VARCHAR2(40)    NOT NULL REFERENCES DPS_USER(id),
     [exec]   4  	     REFEREE_ID 	     VARCHAR2(100)   NOT NULL REFERENCES CASTO_REFEREE(id),
     [exec]   5  	     PRIMARY KEY (REFERRER_ID, REFEREE_ID)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CODES_POSTAUX
     [exec]   2  (
     [exec]   3  	     REPOSITORYID	     VARCHAR2(40)    NOT NULL,
     [exec]   4  	     CODE_POSTAL	     VARCHAR2(5)     NOT NULL,
     [exec]   5  	     VILLE			     VARCHAR2(255)   NOT NULL,
     [exec]   6  	     PRIMARY KEY (REPOSITORYID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> INSERT INTO CASTO_CODES_POSTAUX (REPOSITORYID, CODE_POSTAL, VILLE) VALUES ('36686', '98000', 'MONACO');
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> INSERT INTO CASTO_CODES_POSTAUX (REPOSITORYID, CODE_POSTAL, VILLE) VALUES ('36687', '20000', 'CORSE');
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE MOTIF
     [exec]   2  (
     [exec]   3    ID	       VARCHAR2(40),
     [exec]   4    TITLE	   VARCHAR2(100),
     [exec]   5    CODE	   VARCHAR2(40) DEFAULT '0',
     [exec]   6    PRIMARY KEY (ID)
     [exec]   7   );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CONTACT_US_MOTIF
     [exec]   2  (
     [exec]   3    ID	       VARCHAR2(40),
     [exec]   4    MOTIF_ID    VARCHAR2(50) REFERENCES MOTIF(ID),
     [exec]   5    FORM_TYPE   VARCHAR2(40),
     [exec]   6    MESSAGE	   VARCHAR2(500),
     [exec]   7    PRIMARY KEY (ID)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE cast_faq_statistics
     [exec]   2  (
     [exec]   3    nom		   VARCHAR2(64),
     [exec]   4    prenom		   VARCHAR2(64),
     [exec]   5    email		   VARCHAR2(255),
     [exec]   6    adresse		   VARCHAR2(100),
     [exec]   7    code_postal	   VARCHAR2(5),
     [exec]   8    ville		   VARCHAR2(64),
     [exec]   9    telephone	   VARCHAR2(13),
     [exec]  10    stat_id		   varchar2(40),
     [exec]  11    type_contact	   varchar2(40),
     [exec]  12    motif		   varchar2(50),
     [exec]  13    civilite 	   varchar2(15),
     [exec]  14    adresse_reponse	   varchar2(81),
     [exec]  15    message		   varchar2(500),
     [exec]  16    question 	   varchar2(500),
     [exec]  17    reference_produit   varchar2(30),
     [exec]  18    magasin		   varchar2(60),
     [exec]  19    date_contact	   date,
     [exec]  20    type_machine	   varchar2(30),
     [exec]  21    type_processeur	   varchar2(30),
     [exec]  22    systeme_exploit	   varchar2(30),
     [exec]  23    naviguateur	   varchar2(30),
     [exec]  24    connexion	   varchar2(30),
     [exec]  25    lundi		   number(1),
     [exec]  26    mardi		   number(1),
     [exec]  27    mercredi 	   number(1),
     [exec]  28    jeudi		   number(1),
     [exec]  29    vendredi 	   number(1),
     [exec]  30    matin		   number(1),
     [exec]  31    apres_midi	   number(1),
     [exec]  32    date_enreg	   date,
     [exec]  33    profile_id	   varchar2(40),
     [exec]  34    code_motif	   varchar2(5),
     [exec]  35    order_id 	   varchar2(20),
     [exec]  36  PRIMARY KEY (stat_id)
     [exec]  37  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE MESSAGE_MOTIF
     [exec]   2  (
     [exec]   3    ID	     VARCHAR2(40) NOT NULL,
     [exec]   4    CMOTIF	     NUMBER(4,0) NOT NULL,
     [exec]   5    CONSTRAINT MESSAGE_MOTIF_PK PRIMARY KEY (ID),
     [exec]   6    CONSTRAINT MESSAGE_MOTIF_FK FOREIGN KEY (ID) REFERENCES MOTIF (ID),
     [exec]   7    CONSTRAINT MESSAGE__MOTIF_UNIQUE UNIQUE (CMOTIF)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE MESSAGE_QUESTION
     [exec]   2  (
     [exec]   3    ID	     VARCHAR2(40) NOT NULL,
     [exec]   4    MOTIF_ID	VARCHAR2(40),
     [exec]   5    QUESTION	VARCHAR2(100) NOT NULL,
     [exec]   6    INSTRUCTION	VARCHAR2(500),
     [exec]   7    LINKTEXT	VARCHAR2(100),
     [exec]   8    LINKVALUE	VARCHAR2(100),
     [exec]   9    MESSAGE	     VARCHAR2(500),
     [exec]  10    ORDRE	     INT DEFAULT 1000 NOT NULL ,
     [exec]  11    CONSTRAINT MESSAGE_QUESTION_PK PRIMARY KEY (ID),
     [exec]  12    CONSTRAINT MESSAGE_QUESTION_MOTIF_FK FOREIGN KEY (MOTIF_ID) REFERENCES MESSAGE_MOTIF (ID)
     [exec]  13  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_RESERVATION_CATALOGUE (
     [exec]   2  	     ID 				     VARCHAR2(40)    NOT NULL,
     [exec]   3  	     EMAIL			     VARCHAR2(255)   NULL,
     [exec]   4  	     CIVILITE			     VARCHAR2(50)    NOT NULL,
     [exec]   5  	     PRENOM			     VARCHAR2(100)   NOT NULL,
     [exec]   6  	     NOM			     VARCHAR2(100)   NOT NULL,
     [exec]   7  	     ADRESSE			     VARCHAR2(100)   NOT NULL,
     [exec]   8  	     ADRESSE2			     VARCHAR2(100),
     [exec]   9  	     ADRESSE3			     VARCHAR2(100),
     [exec]  10  	     ADRESSE4			     VARCHAR2(100),
     [exec]  11  	     CPLTADRESSE	     VARCHAR2(100),
     [exec]  12  	     VILLE			     VARCHAR2(100)   NOT NULL,
     [exec]  13  	     CODEPOSTAL 		     VARCHAR2(16)    NOT NULL,
     [exec]  14  	     PAYS			     VARCHAR2(40)    NOT NULL,
     [exec]  15  	     DATENAISSANCE	     DATE,
     [exec]  16  	     DATERESERVATION	     DATE		     NOT NULL,
     [exec]  17  	     NOUVEAUCOMPTE	     NUMBER(*,0)     NULL,
     [exec]  18  	     OPTIN			     NUMBER(*,0)     NULL,
     [exec]  19  	     PHONE_NUMBER_1	     varchar2(15)    NOT NULL,
     [exec]  20  	     PHONE_NUMBER_2	     varchar2(15),
     [exec]  21  	     CATALOGUE_ID	     VARCHAR2(40)    NOT NULL,
     [exec]  22  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE HINT_SEARCH (
     [exec]   2  	     ID 				     VARCHAR2(40)    NOT NULL,
     [exec]   3  	     QUERY			     VARCHAR2(400)   NOT NULL,
     [exec]   4  	     LAST_MODIFIED	     DATE		     NOT NULL,
     [exec]   5  	     HINT_COUNT 		     INT			     NULL,
     [exec]   6  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_REFEREE ADD REF_COUPON_ID VARCHAR2(40) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_USER ADD PASSWORD_HASHED NUMBER (1,0) DEFAULT 1;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_USER ADD
     [exec]   2  (
     [exec]   3    CONSTRAINT CASTO_USER_PASSWORD_HASHED
     [exec]   4    CHECK
     [exec]   5    (
     [exec]   6  	 PASSWORD_HASHED in (0,1)
     [exec]   7    )
     [exec]   8    NOT DEFERRABLE INITIALLY IMMEDIATE
     [exec]   9    ENABLE
     [exec]  10  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE dps_contact_info MODIFY PHONE_NUMBER VARCHAR2 (50);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE dps_contact_info MODIFY FAX_NUMBER VARCHAR2 (50);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE dps_contact_info MODIFY ADDRESS1 VARCHAR2 (120);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE dps_contact_info MODIFY ADDRESS2 VARCHAR2 (120);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE dps_user MODIFY PASSWORD VARCHAR2(40);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_REFEREE MODIFY (EMAIL VARCHAR2(255));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CONTACT_US_MOTIF ADD CASTO_DIRECT NUMBER (1,0) DEFAULT 0;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SHOPPINGLIST
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     SKU_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID, SEQ)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_newsletter.sql
     [exec] SQL> CREATE TABLE CASTO_ABONNEMENT_NEWSLETTER (
     [exec]   2  	     EMAIL				     VARCHAR2(255 BYTE) 	     NOT NULL ENABLE,
     [exec]   3  	     PROFILE_ID 			     VARCHAR2(40)		     NULL,
     [exec]   4  	     NOM				     VARCHAR2(50 BYTE),
     [exec]   5  	     PRENOM				     VARCHAR2(50 BYTE),
     [exec]   6  	     FORMAT				     NUMBER(*,0),
     [exec]   7  	     ACCES_PARTENAIRES_CASTO NUMBER(*,0),
     [exec]   8  	     IS_TEST				     NUMBER(*,0),
     [exec]   9  	     VALID				     NUMBER(*,0),
     [exec]  10  	     DATECREATION		     DATE,
     [exec]  11  	     EMAIL_STATUS		     NUMBER(*,0),
     [exec]  12  	     RECEIVE_EMAIL		     NUMBER(*,0) default 0 not null,
     [exec]  13  	     RESEIVE_OFFERS		     number(1,0) default 0 not null,
     [exec]  14  	     LOCALE				     NUMBER(*,0),
     [exec]  15  	     NBEMAILFAILURE		     NUMBER(*,0),
     [exec]  16  	     LASTFAILUREDATE		     DATE,
     [exec]  17  	     CIVILITE				     VARCHAR2(10 BYTE),
     [exec]  18  	     VILLE				     VARCHAR2(100 BYTE),
     [exec]  19  	     CODEPOSTAL 			     VARCHAR2(10 BYTE),
     [exec]  20  	     AGE				     VARCHAR2(10 BYTE),
     [exec]  21  	     PROPRIETAIRE_LOCATAIRE  VARCHAR2(20 BYTE),
     [exec]  22  	     NBPERSONNES		     VARCHAR2(10 BYTE),
     [exec]  23  	     CARTEATOUT 			     NUMBER,
     [exec]  24  	     MAISONCAMPAGNE		     NUMBER,
     [exec]  25  	     MAISON				     NUMBER,
     [exec]  26  	     appartement		     number(1,0)		     null,
     [exec]  27  	     JARDIN				     NUMBER,
     [exec]  28  	     CANALINSCRIPTION		     VARCHAR2(50 BYTE),
     [exec]  29  	     CANALDESINSCRIPTION     VARCHAR2(50 BYTE),
     [exec]  30  	     DATEDESINCRPTION		     DATE,
     [exec]  31  	     DATEDERNIEREMODIFICATION DATE,
     [exec]  32  	     DATE_OFFERS_DESINCRPTION DATE,
     [exec]  33  	     QUESTIONDES1		     VARCHAR2(50 BYTE),
     [exec]  34  	     QUESTIONDES2		     VARCHAR2(50 BYTE),
     [exec]  35  	     QUESTIONDES3		     VARCHAR2(50 BYTE),
     [exec]  36  	     QUESTIONDES4		     VARCHAR2(50 BYTE),
     [exec]  37  	     QUESTIONDES5		     VARCHAR2(50 BYTE),
     [exec]  38  	     REMARQUEDES		     VARCHAR2(500 BYTE),
     [exec]  39  	     B2B				     VARCHAR2(50 BYTE),
     [exec]  40  	     JOUEUR				     NUMBER,
     [exec]  41  	     MAGASIN				     VARCHAR2(50 BYTE),
     [exec]  42  	     DATE_REPONSE_ENQUETE_MAGASIN DATE,
     [exec]  43  	     REPONSE_LOI_LEN		     VARCHAR2(40 BYTE),
     [exec]  44  	     DATE_REPONSE_LOI_LEN    DATE,
     [exec]  45  	     PAYS				     VARCHAR2(40 BYTE),
     [exec]  46  	     ESPRIT_CONTEMPORAIN     NUMBER(22,0),
     [exec]  47  	     ESPRIT_TECHNICOLOR 	     NUMBER(22,0),
     [exec]  48  	     ESPRIT_CHARME		     NUMBER(22,0),
     [exec]  49  	     ESPRIT_AUTHENTIQUE 	     NUMBER(22,0),
     [exec]  50  	     DATE_OFFERS_INSCRIPTION DATE,
     [exec]  51  	     DATEINSCRIPTION		     DATE,
     [exec]  52  	     DATE_OF_BIRTH		     DATE,
     [exec]  53  	     CONSTRAINT CASTO_ABONNEMENT_PK PRIMARY KEY (EMAIL),
     [exec]  54  	     CONSTRAINT CASTO_ABONNEMENT_FK FOREIGN KEY (PROFILE_ID) REFERENCES CASTO_USER (ID)
     [exec]  55  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_THEME_NEWSLETTER
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(50 BYTE) NOT NULL ENABLE,
     [exec]   4  	     PRIMARY KEY (ID)
     [exec]   5  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_THEME_FAVORIS_NEWSLETTER
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     THEME_FAVORI_ID VARCHAR2(50 BYTE) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID, SEQ),
     [exec]   7  	     FOREIGN KEY (ID)
     [exec]   8  		     REFERENCES CASTO_ABONNEMENT_NEWSLETTER (EMAIL),
     [exec]   9  	     FOREIGN KEY (THEME_FAVORI_ID)
     [exec]  10  		     REFERENCES CASTO_THEME_NEWSLETTER (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PARAGRAPHE_NEWSLETTER
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     TITRE VARCHAR2(50 BYTE),
     [exec]   5  	     CONTENU VARCHAR2(500 BYTE),
     [exec]   6  	     URL_IMAGE VARCHAR2(150 BYTE),
     [exec]   7  	     THEME_TRAITE_ID VARCHAR2(50 BYTE) NOT NULL ENABLE,
     [exec]   8  	     PRIMARY KEY (ID),
     [exec]   9  	     FOREIGN KEY (THEME_TRAITE_ID)
     [exec]  10  		     REFERENCES CASTO_THEME_NEWSLETTER (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ARCHIVE_NEWSLETTER
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     EMAIL_EXPEDITEUR VARCHAR2(50 BYTE),
     [exec]   5  	     TITRE VARCHAR2(50 BYTE),
     [exec]   6  	     INTRODUCTION VARCHAR2(500 BYTE),
     [exec]   7  	     DIVERS VARCHAR2(500 BYTE),
     [exec]   8  	     TO_SEND NUMBER(*,0),
     [exec]   9  	     DATE_CREATION VARCHAR2(50 BYTE),
     [exec]  10  	     PRIMARY KEY (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ARCHIVE_CONT_PARAGRAPHE
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     PARAGRAPHE_CONTENU_ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID, SEQ),
     [exec]   7  	     FOREIGN KEY (ID)
     [exec]   8  	       REFERENCES CASTO_ARCHIVE_NEWSLETTER (ID),
     [exec]   9  	     FOREIGN KEY (PARAGRAPHE_CONTENU_ID)
     [exec]  10  	       REFERENCES CASTO_PARAGRAPHE_NEWSLETTER (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_NEWSLETTER_MAILING
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     NAME VARCHAR2(80 BYTE),
     [exec]   5  	     SUBJECT VARCHAR2(80 BYTE),
     [exec]   6  	     UNIQ_SERVER_ID VARCHAR2(255 BYTE),
     [exec]   7  	     FROM_ADDRESS VARCHAR2(255 BYTE),
     [exec]   8  	     REPLYTO VARCHAR2(255 BYTE),
     [exec]   9  	     TEMPLATE_URL VARCHAR2(255 BYTE),
     [exec]  10  	     SEND_AS_HTML NUMBER(*,0),
     [exec]  11  	     SEND_AS_TEXT NUMBER(*,0),
     [exec]  12  	     PARAMS LONG RAW,
     [exec]  13  	     START_TIME DATE,
     [exec]  14  	     END_TIME DATE,
     [exec]  15  	     STATUS NUMBER(*,0),
     [exec]  16  	     NUM_PROFILES NUMBER(*,0),
     [exec]  17  	     NUM_SENT NUMBER(*,0),
     [exec]  18  	     NUM_BOUNCES NUMBER(*,0),
     [exec]  19  	     NUM_ERRORS NUMBER(*,0),
     [exec]  20  	     FILL_FROM_TEMPL NUMBER(1,0),
     [exec]  21  	     PRIMARY KEY (ID)
     [exec]  22  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_NEWSLETTER_USER_MAILING
     [exec]   2  (
     [exec]   3  	     MAILING_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     USER_ID VARCHAR2(50 BYTE) NOT NULL ENABLE,
     [exec]   5  	     IDX NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (MAILING_ID, USER_ID),
     [exec]   7  	     FOREIGN KEY (MAILING_ID)
     [exec]   8  		     REFERENCES CASTO_NEWSLETTER_MAILING (ID),
     [exec]   9  	     FOREIGN KEY (USER_ID)
     [exec]  10  		     REFERENCES CASTO_ABONNEMENT_NEWSLETTER (EMAIL)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_U_MAIL_MID ON CASTO_NEWSLETTER_USER_MAILING (MAILING_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_U_MAIL_UID ON CASTO_NEWSLETTER_USER_MAILING (USER_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Cloud
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_cloud.sql
     [exec] SQL>   CREATE TABLE CAST_CLOUD (
     [exec]   2  	     "ID"			 NUMBER(19)    NOT NULL,
     [exec]   3  	     "REFERENCE_ID"		 VARCHAR2(40)  NOT NULL,
     [exec]   4  	     "TYPE"			 NUMBER(5)    NOT NULL
     [exec]   5  	     ,CONSTRAINT PK_CAST_CLOUD PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE CAST_CLOUD_TERM (
     [exec]   2  	     "ID"			 NUMBER(19)    NOT NULL,
     [exec]   3  	     "CLOUD_ID" 		 NUMBER(19)    NULL,
     [exec]   4  	     "TERM"			 VARCHAR2(250) NOT NULL,
     [exec]   5  	     "TYPE"			 NUMBER(5)    NOT NULL,
     [exec]   6  	     "URL"			 VARCHAR2(250) NOT NULL,
     [exec]   7  	     "SORT_ORDER"		 NUMBER(5)    NOT NULL
     [exec]   8  	     ,CONSTRAINT PK_CAST_CLOUD_TERM PRIMARY KEY (ID)
     [exec]   9  	     ,CONSTRAINT FK_CAST_CLOUD_TERM FOREIGN KEY (CLOUD_ID) REFERENCES CAST_CLOUD (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --Back Office
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_bo.sql
     [exec] SQL>   CREATE TABLE "SCD_CONTACT"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0),
     [exec]   4  	     "CCONTACT" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   5  	     "CCLIENT" NUMBER(10,0),
     [exec]   6  	     "CVENTE" NUMBER(12,0),
     [exec]   7  	     "CUTILISATEUR" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   8  	     "DCONTACT" DATE NOT NULL ENABLE,
     [exec]   9  	     "TGESTION" NUMBER(1,0),
     [exec]  10  	     "CTRANSPORTEUR" NUMBER(8,0),
     [exec]  11  	     "CTYPE_LIVREUR_C007" NUMBER(4,0),
     [exec]  12  	     "NRELANCE" NUMBER(6,0),
     [exec]  13  	     "CRECLAMATION" NUMBER(8,0),
     [exec]  14  	     "CQUESTION" NUMBER(8,0),
     [exec]  15  	     "DCREATION" DATE NOT NULL ENABLE,
     [exec]  16  	     "DMODIFICATION" DATE,
     [exec]  17  	     "TMODIFICATION" NUMBER(1,0) NOT NULL ENABLE,
     [exec]  18  	     "DTRANSFERT" DATE,
     [exec]  19  	     "DFIN_CONTACT" DATE,
     [exec]  20  	     "CETAB_ORIGINE_CONTACT" NUMBER(4,0),
     [exec]  21  	     "CCATEGORIE_1" NUMBER(4,0),
     [exec]  22  	     "CCATEGORIE_2" NUMBER(4,0),
     [exec]  23  	     "CCATEGORIE_3" NUMBER(4,0),
     [exec]  24  	     "CMOTIF_CONTACT_C618" NUMBER(4,0),
     [exec]  25  	     "CSENS_CONTACT_C659" NUMBER(4,0),
     [exec]  26  	     "CONTACT_ID" VARCHAR2(40 BYTE),
     [exec]  27  	     "LCONTACT" VARCHAR2(2000 BYTE),
     [exec]  28  	     "LCOMMENTAIRE_INTERNE" VARCHAR2(1000 BYTE),
     [exec]  29  	     "DLECTURE_CLIENT" DATE,
     [exec]  30  	     "DLECTURE_CASTO" DATE,
     [exec]  31  	     "DRELANCE_SI_NON_LU" DATE,
     [exec]  32  	     "DRELANCE_EFFECTIVE" DATE,
     [exec]  33  	     "FRELANCE_AUTO" NUMBER(1,0),
     [exec]  34  	     "FREPONSE_CLIENT_ATTENDUE" NUMBER(1,0),
     [exec]  35  	     "CMOTIF_ECHEC_C664" NUMBER(4,0),
     [exec]  36  	     "FREPONSE_IMMEDIATE" NUMBER(1,0),
     [exec]  37  	     "DCLOTURE" DATE,
     [exec]  38  	     "CUTILISATEUR_LECTURE" VARCHAR2(40 BYTE),
     [exec]  39  	     "CUTILISATEUR_CLOTURE" VARCHAR2(40 BYTE),
     [exec]  40  	     "CTYPE_CONTACT_C632" NUMBER(4,0) NOT NULL ENABLE,
     [exec]  41  	     "CSUPPORT_CONTACT_C633" NUMBER(4,0),
     [exec]  42  	     "CINITIATEUR_C619" NUMBER(4,0),
     [exec]  43  	      CONSTRAINT "PK_SCD_CONTACT" PRIMARY KEY ("CCONTACT")
     [exec]  44  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_FACTURE_AVOIR"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CFACTURE_AVOIR" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   5  	     "LNOM_FACTURE" VARCHAR2(80 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "NCOMMANDE_CLIENT" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   7  	     "CCLIENT" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   8  	     "CENLEVEMENT" NUMBER(8,0),
     [exec]   9  	     "LADRESSE_1_FACTURE" VARCHAR2(48 BYTE),
     [exec]  10  	     "LADRESSE_2_FACTURE" VARCHAR2(48 BYTE),
     [exec]  11  	     "LADRESSE_3_FACTURE" VARCHAR2(48 BYTE),
     [exec]  12  	     "CODE_POSTAL_FACTURE" NUMBER(10,0) NOT NULL ENABLE,
     [exec]  13  	     "LVILLE_FACTURE" VARCHAR2(48 BYTE) NOT NULL ENABLE,
     [exec]  14  	     "CPAYS_FACTURE" NUMBER(3,0) NOT NULL ENABLE,
     [exec]  15  	     "DFACTURE_AVOIR" DATE NOT NULL ENABLE,
     [exec]  16  	     "DREPRISE_AVOIR" DATE,
     [exec]  17  	     "DAVOIR_EMIS_JDV" DATE,
     [exec]  18  	     "DAVOIR_REPRIS_JDV" DATE,
     [exec]  19  	     "LNOM_LIVRAISON" VARCHAR2(80 BYTE),
     [exec]  20  	     "LADRESSE_1_LIVRAISON" VARCHAR2(48 BYTE),
     [exec]  21  	     "LADRESSE_2_LIVRAISON" VARCHAR2(48 BYTE),
     [exec]  22  	     "LADRESSE_3_LIVRAISON" VARCHAR2(48 BYTE),
     [exec]  23  	     "CODE_POSTAL_LIVRAISON" NUMBER(5,0),
     [exec]  24  	     "LVILLE_LIVRAISON" VARCHAR2(48 BYTE),
     [exec]  25  	     "CPAYS_LIVRAISON" NUMBER(3,0),
     [exec]  26  	     "CDEVISE" NUMBER(5,0) NOT NULL ENABLE,
     [exec]  27  	     "MTOTAL_HT" NUMBER(12,2),
     [exec]  28  	     "MTOTAL_TTC" NUMBER(12,2),
     [exec]  29  	     "MTOTAL_TVA" NUMBER(12,2),
     [exec]  30  	     "LMENTION_OBLIGATOIRE" VARCHAR2(400 BYTE) NOT NULL ENABLE,
     [exec]  31  	     "LCODE_CHEQUE" VARCHAR2(20 BYTE),
     [exec]  32  	     "LCOMMENTAIRE" VARCHAR2(400 BYTE),
     [exec]  33  	     "FLIVRAISON_DIRECTE_FOURNISSEUR" NUMBER(1,0),
     [exec]  34  	     "FCADEAU" NUMBER(1,0),
     [exec]  35  	     "LCOMMENTAIRE_CADEAU" VARCHAR2(400 BYTE),
     [exec]  36  	     "FEMAIL_ENVOYE" NUMBER(1,0),
     [exec]  37  	     "DCREATION" DATE NOT NULL ENABLE,
     [exec]  38  	     "DMODIFICATION" DATE,
     [exec]  39  	     "TMODIFICATION" NUMBER(1,0) NOT NULL ENABLE,
     [exec]  40  	     "DTRANSFERT" DATE,
     [exec]  41  	     "M_REMISE" NUMBER(18,2),
     [exec]  42  	     "TCLIENT_FACTURE_C003" NUMBER(4,0),
     [exec]  43  	     "TFACTURE_AVOIR_C600" NUMBER(8,0),
     [exec]  44  	     "TMODE_REGLEMENT_C601" NUMBER(5,0) NOT NULL ENABLE,
     [exec]  45  	      CONSTRAINT "PK_SCD_FACTURE_AVOIR" PRIMARY KEY ("CFACTURE_AVOIR")
     [exec]  46  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_FACTURE_AVOIR_LIGNE"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CFACTURE_AVOIR" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   5  	     "CLIGNE" NUMBER(6,0) NOT NULL ENABLE,
     [exec]   6  	     "CARTICLE" NUMBER(10,0),
     [exec]   7  	     "LARTICLE" VARCHAR2(80 BYTE),
     [exec]   8  	     "TARTICLE" NUMBER(1,0),
     [exec]   9  	     "QUNITE_VENTE" NUMBER(8,2),
     [exec]  10  	     "MPV_HT" NUMBER(8,2),
     [exec]  11  	     "MPV_TTC" NUMBER(12,2),
     [exec]  12  	     "MTAUX_TVA" NUMBER(5,2),
     [exec]  13  	     "MTOTAL_TVA" NUMBER(8,2),
     [exec]  14  	     "MPV_TOTAL_TTC" NUMBER(12,2),
     [exec]  15  	     "DCREATION" DATE NOT NULL ENABLE,
     [exec]  16  	     "DMODIFICATION" DATE,
     [exec]  17  	     "TMODIFICATION" NUMBER(1,0) NOT NULL ENABLE,
     [exec]  18  	     "DTRANSFERT" DATE,
     [exec]  19  	     "MPV_HT_NET" NUMBER(8,2),
     [exec]  20  	     "MPV_TTC_NET" NUMBER(12,2),
     [exec]  21  	     "MTOTAL_TVA_NET" NUMBER(8,2),
     [exec]  22  	     "M_REMISE" NUMBER(18,2),
     [exec]  23  	     "TREMISE_C102" NUMBER(4,0),
     [exec]  24  	     "CLIGNE_FACTURE_ID" NUMBER(12,0),
     [exec]  25  	     "TFACTURE_AVOIR_C600" NUMBER(8,0),
     [exec]  26  	      CONSTRAINT "PK_SCD_FACTURE_AVOIR_LIGNE" PRIMARY KEY ("CLIGNE_FACTURE_ID")
     [exec]  27  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_RECLAMATION"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0),
     [exec]   4  	     "CRECLAMATION" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   5  	     "CTYPE_RECLAMATION_C62X" NUMBER(4,0),
     [exec]   6  	     "CORIGINE_RECLAMATION" NUMBER(3,0),
     [exec]   7  	     "DRECLAMATION" DATE NOT NULL ENABLE,
     [exec]   8  	     "CCONTACT" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   9  	     "CUTILISATEUR_CREATION" VARCHAR2(40 BYTE),
     [exec]  10  	     "CMOTIF_RECLAMATION_C618" NUMBER(4,0) NOT NULL ENABLE,
     [exec]  11  	     "DCLOTURE" DATE,
     [exec]  12  	     "CUTILISATEUR_CLOTURE" VARCHAR2(40 BYTE),
     [exec]  13  	     "MGESTE_COMMERCIAL" NUMBER(12,2),
     [exec]  14  	     "LCOUPON" VARCHAR2(40 BYTE),
     [exec]  15  	     "DCOUPON" DATE,
     [exec]  16  	     "FPREVISION_RETOUR" NUMBER(1,0),
     [exec]  17  	     "LRECLAMATION" VARCHAR2(2000 BYTE),
     [exec]  18  	     "DCREATION" DATE NOT NULL ENABLE,
     [exec]  19  	     "DMODIFICATION" DATE,
     [exec]  20  	     "TMODIFICATION" NUMBER(1,0) NOT NULL ENABLE,
     [exec]  21  	     "DTRANSFERT" DATE,
     [exec]  22  	     "CUTILISATEUR_RESPONSABLE" VARCHAR2(40 BYTE),
     [exec]  23  	     "DSUIVI_RECLAMATION" DATE,
     [exec]  24  	     "TYPE_CLOTURE_AUTO_C661" NUMBER(4,0),
     [exec]  25  	     "TETAT_RECLAMATION_C660" NUMBER(4,0),
     [exec]  26  	     "FCLOTURE_SI_EXPEDITION" NUMBER(1,0),
     [exec]  27  	     "TCOLIS_RECUS_C662" NUMBER(4,0),
     [exec]  28  	     "NB_COLIS_RECUS" NUMBER(6,0),
     [exec]  29  	     "TGESTE_COMMERCIAL_C665" NUMBER(4,0),
     [exec]  30  	     "LRESERVE_CLIENT_EMISES" VARCHAR2(400 BYTE),
     [exec]  31  	     "FCLOTURE_SI_VALIDATION" NUMBER(1,0),
     [exec]  32  	     "TEMBALLAGES_RECUS_C663" NUMBER(4,0),
     [exec]  33  	     "DVALIDITE_COUPON" DATE,
     [exec]  34  	     "TCOUPON_C666" NUMBER(4,0),
     [exec]  35  	     "DPRISE_EN_CHARGE" DATE,
     [exec]  36  	     "CVENTE" NUMBER(12,0),
     [exec]  37  	      CONSTRAINT "PK_SCD_RECLAMATION" PRIMARY KEY ("CRECLAMATION")
     [exec]  38  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_REMBOURSEMENT"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CREMBOURSEMENT" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   5  	     "CCLIENT" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   6  	     "CVENTE" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   7  	     "CRECLAMATION" NUMBER(8,0),
     [exec]   8  	     "CRETOUR" NUMBER(8,0),
     [exec]   9  	     "DDEMANDE_REMBOURSEMENT" DATE,
     [exec]  10  	     "M_REMBOURSEMENT_DEMANDE" NUMBER(12,2),
     [exec]  11  	     "DREMBOURSEMENT" DATE,
     [exec]  12  	     "M_REMBOURSEMENT_EFFECTIF" NUMBER(12,2),
     [exec]  13  	     "CMOTIF_REMBOURSEMENT_C635" NUMBER(4,0),
     [exec]  14  	     "CFACTURE_AVOIR" NUMBER(12,0),
     [exec]  15  	     "CUTILISATEUR" VARCHAR2(40 BYTE),
     [exec]  16  	     "CMODE_REMBOURSEMENT_C636" NUMBER(4,0),
     [exec]  17  	     "LCHEQUE" VARCHAR2(40 BYTE),
     [exec]  18  	     "LREMBOURSEMENT" VARCHAR2(200 BYTE),
     [exec]  19  	     "CUTILISATEUR_REMBOURSEMENT" VARCHAR2(40 BYTE),
     [exec]  20  	     "DINTEGRATION_JDV" DATE,
     [exec]  21  	     "DCREATION" DATE,
     [exec]  22  	     "DMODIFICATION" DATE,
     [exec]  23  	     "DTRANSFERT" DATE,
     [exec]  24  	     "TMODIFICATION" NUMBER(1,0),
     [exec]  25  	     "TFACTURE_AVOIR_C600" NUMBER(8,0),
     [exec]  26  	      CONSTRAINT "PK_SCD_REMBOURSEMENT" PRIMARY KEY ("CREMBOURSEMENT")
     [exec]  27  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_REMBOURSEMENT_LIGNE"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CREMBOURSEMENT" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   5  	     "NLIGNE" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   6  	     "NLIGNE_RETOUR" NUMBER(8,0),
     [exec]   7  	     "CVENTE" NUMBER(12,0),
     [exec]   8  	     "CVENTE_LIGNE" NUMBER(8,0),
     [exec]   9  	     "CESCLAVE" NUMBER(8,0) NOT NULL ENABLE,
     [exec]  10  	     "QTE_A_REMBOURSER" NUMBER(13,2) NOT NULL ENABLE,
     [exec]  11  	     "MPV_A_REMBOURSER" NUMBER(13,2),
     [exec]  12  	     "PFT_A_REMBOURSER" NUMBER(13,2),
     [exec]  13  	     "PFL_A_REMBOURSER" NUMBER(13,2),
     [exec]  14  	     "CMOTIF_REMBOURSEMENT_C656" NUMBER(4,0),
     [exec]  15  	     "CUTILISATEUR" VARCHAR2(20 BYTE),
     [exec]  16  	     "DCREATION" DATE,
     [exec]  17  	     "DMODIFICATION" DATE,
     [exec]  18  	     "TMODIFICATION" NUMBER(1,0),
     [exec]  19  	     "DTRANSFERT" DATE,
     [exec]  20  	      CONSTRAINT "PK_SCD_REMBOURSEMENT_LIGNE" PRIMARY KEY ("NLIGNE")
     [exec]  21  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_RETOUR"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CRETOUR" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   5  	     "CRECLAMATION" NUMBER(8,0),
     [exec]   6  	     "CCLIENT" NUMBER(12,0),
     [exec]   7  	     "CVENTE" NUMBER(12,0),
     [exec]   8  	     "M_AREMBOURSER" NUMBER(12,2),
     [exec]   9  	     "M_PFE_A_REMBOURSER" NUMBER(12,2),
     [exec]  10  	     "FENLEVEMENT_A_ORGANISER" NUMBER(1,0),
     [exec]  11  	     "DMANDAT_AU_TRANSPORTEUR" DATE,
     [exec]  12  	     "TGESTION" NUMBER(1,0),
     [exec]  13  	     "CTRANSPORTEUR_MANDATE" NUMBER(8,0),
     [exec]  14  	     "CTYPE_LIVREUR_C007" NUMBER(4,0),
     [exec]  15  	     "LNOM_PERSONNE_AYANT_MANDATE" VARCHAR2(40 BYTE),
     [exec]  16  	     "FCOLISSIMO_A_ENVOYER" NUMBER(1,0),
     [exec]  17  	     "NCOLISSIMO_ENVOYE" VARCHAR2(20 BYTE),
     [exec]  18  	     "LCOMMENTAIRE" VARCHAR2(200 BYTE),
     [exec]  19  	     "LCOMMENTAIRE_AU_TRANSPORTEUR" VARCHAR2(200 BYTE),
     [exec]  20  	     "LCOLISAGE" VARCHAR2(200 BYTE),
     [exec]  21  	     "DRETRAIT_SOUHAITEE" DATE,
     [exec]  22  	     "MMASSE_ESTIMEE" NUMBER(12,2),
     [exec]  23  	     "DRETOUR_MARCHANDISE" DATE,
     [exec]  24  	     "DVALIDATION_RETOUR" DATE,
     [exec]  25  	     "DREFUS_RETOUR" DATE,
     [exec]  26  	     "DENVOI_MAIL_PREV_RETOUR" DATE,
     [exec]  27  	     "DCREATION" DATE NOT NULL ENABLE,
     [exec]  28  	     "DMODIFICATION" DATE,
     [exec]  29  	     "TMODIFICATION" NUMBER(1,0) NOT NULL ENABLE,
     [exec]  30  	     "DTRANSFERT" DATE,
     [exec]  31  	     "NRELIVRAISON_CREEE" NUMBER(8,0),
     [exec]  32  	     "CFACTURE_AVOIR" NUMBER(12,0),
     [exec]  33  	     "FANTICIPE_ACTION" NUMBER(1,0),
     [exec]  34  	     "TFACTURE_AVOIR_C600" NUMBER(8,0),
     [exec]  35  	      CONSTRAINT "PK_SCD_RETOUR" PRIMARY KEY ("CRETOUR")
     [exec]  36  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_RETOUR_LIGNE"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CRETOUR" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   5  	     "NLIGNE" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   6  	     "CESCLAVE" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   7  	     "PRMP" NUMBER(12,3) NOT NULL ENABLE,
     [exec]   8  	     "M_PFE_LIGNE" NUMBER(12,2),
     [exec]   9  	     "QPREVUE_RETOUR" NUMBER(12,2),
     [exec]  10  	     "QARELIVRER" NUMBER(12,2),
     [exec]  11  	     "QAREMBOURSER" NUMBER(12,2),
     [exec]  12  	     "QRETOUR" NUMBER(12,2),
     [exec]  13  	     "QAREINTEGRER_EN_STOCK" NUMBER(12,2),
     [exec]  14  	     "CCONFORMITE_C637" NUMBER(4,0),
     [exec]  15  	     "QDEMARQUE" NUMBER(12,2),
     [exec]  16  	     "QLIVREE" NUMBER(12,2),
     [exec]  17  	     "LCOMMENTAIRE_CRM" VARCHAR2(400 BYTE),
     [exec]  18  	     "LCOMMENTAIRE_LOG" VARCHAR2(400 BYTE),
     [exec]  19  	     "NORDRE_MVT" NUMBER(10,0),
     [exec]  20  	     "DCREATION" DATE NOT NULL ENABLE,
     [exec]  21  	     "DMODIFICATION" DATE,
     [exec]  22  	     "TMODIFICATION" NUMBER(1,0) NOT NULL ENABLE,
     [exec]  23  	     "DTRANSFERT" DATE,
     [exec]  24  	     "QSAV" NUMBER(12,2),
     [exec]  25  	     "QSANS_RETOUR" NUMBER(12,2),
     [exec]  26  	     "FPFL_A_REMBOURSER" NUMBER(1,0),
     [exec]  27  	     "FPFT_A_REMBOURSER" NUMBER(1,0),
     [exec]  28  	     "QLITIGE_TRANSPORT" NUMBER(12,2),
     [exec]  29  	     "CLIGNE_RETOUR_ID" NUMBER(12,0),
     [exec]  30  	     "CMOTIF_RETOUR_DONNE_C640" NUMBER(8,0),
     [exec]  31  	     "CMOTIF_RETOUR_SUR_BON_C640" NUMBER(8,0),
     [exec]  32  	      CONSTRAINT "PK_SCD_RETOUR_LIGNE" PRIMARY KEY ("CLIGNE_RETOUR_ID")
     [exec]  33  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_VENTE_LIGNE"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CVENTE" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   5  	     "CVENTE_LIGNE" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   6  	     "CFACTURE_AVOIR" NUMBER(12,0),
     [exec]   7  	     "CLIGNE" NUMBER(6,0),
     [exec]   8  	     "CESCLAVE" NUMBER(8,0),
     [exec]   9  	     "QUNITE_VENTE" NUMBER(8,2),
     [exec]  10  	     "DELAI_EXPEDITION_ANNONCE" NUMBER(8,0),
     [exec]  11  	     "DPREMIERE_EXPEDITION_REELLE" DATE,
     [exec]  12  	     "NLIGNE_INITIALE" NUMBER(8,0),
     [exec]  13  	     "PV_INITIAL" NUMBER(13,2),
     [exec]  14  	     "MMASSE" NUMBER(13,0),
     [exec]  15  	     "MMASSE_PFL" NUMBER(13,2),
     [exec]  16  	     "MMASSE_PFT" NUMBER(13,2),
     [exec]  17  	     "PFL_INITIALE" NUMBER(13,2),
     [exec]  18  	     "FEXONERATION_PFT" NUMBER(1,0),
     [exec]  19  	     "FEXONERATION_PFL" NUMBER(1,0),
     [exec]  20  	     "PFT_INITIALE" NUMBER(13,2),
     [exec]  21  	     "PFL_A_PAYER" NUMBER(13,2),
     [exec]  22  	     "PFT_A_PAYER" NUMBER(13,2),
     [exec]  23  	     "DCREATION" DATE,
     [exec]  24  	     "DMODIFICATION" DATE,
     [exec]  25  	     "TMODIFICATION" NUMBER(1,0),
     [exec]  26  	     "DTRANSFERT" DATE,
     [exec]  27  	     "CETAT_APPRO_C667" NUMBER(4,0),
     [exec]  28  	     "CMOTIF_LIGNE_C652" NUMBER(6,0),
     [exec]  29  	     "TFACTURE_AVOIR_C400" NUMBER(8,0),
     [exec]  30  	      CONSTRAINT "PK_SCD_VENTE_LIGNE" PRIMARY KEY ("CVENTE_LIGNE")
     [exec]  31  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_VENTE_WEB"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0),
     [exec]   4  	     "NCOMMANDE_CLIENT" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "CCLIENT_WEB" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "CVENTE" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   7  	     "CADRESSE_FACTURE" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   8  	     "CCLIENT_LIVRAISON" NUMBER(12,0),
     [exec]   9  	     "CADRESSE_LIVRAISON" NUMBER(8,0),
     [exec]  10  	     "CMODE_PAIEMENT_C607" NUMBER(4,0) NOT NULL ENABLE,
     [exec]  11  	     "CMODE_LIVRAISON_C609" NUMBER(4,0) NOT NULL ENABLE,
     [exec]  12  	     "CTRANSACTION_BANCAIRE" VARCHAR2(20 BYTE),
     [exec]  13  	     "DLIMITE_AUTORISATION" DATE,
     [exec]  14  	     "TETAT_COMMANDE_C602" NUMBER(4,0) NOT NULL ENABLE,
     [exec]  15  	     "DENVOI" DATE,
     [exec]  16  	     "DEXPEDITION" DATE,
     [exec]  17  	     "DENVOI_JDV" DATE,
     [exec]  18  	     "DPAIEMENT" DATE,
     [exec]  19  	     "DSUPPRESSION" DATE,
     [exec]  20  	     "CDEVISE" NUMBER(5,0) NOT NULL ENABLE,
     [exec]  21  	     "MTOTAL_HT" NUMBER(18,2) NOT NULL ENABLE,
     [exec]  22  	     "MTOTAL_TVA" NUMBER(18,2) NOT NULL ENABLE,
     [exec]  23  	     "MTOTAL_TTC" NUMBER(18,2) NOT NULL ENABLE,
     [exec]  24  	     "FCADEAU" NUMBER(1,0) NOT NULL ENABLE,
     [exec]  25  	     "CUTILISATEUR" VARCHAR2(50 BYTE),
     [exec]  26  	     "NB_LIGNES_HORS_NORME" NUMBER(6,0) NOT NULL ENABLE,
     [exec]  27  	     "NB_LIGNES_LDF" NUMBER(6,0) NOT NULL ENABLE,
     [exec]  28  	     "TCONTROLE_EMAIL_C611" NUMBER(4,0),
     [exec]  29  	     "LCOMMENTAIRE_CADEAU" VARCHAR2(400 BYTE),
     [exec]  30  	     "LCOMMENTAIRE" VARCHAR2(400 BYTE),
     [exec]  31  	     "DCREATION" DATE NOT NULL ENABLE,
     [exec]  32  	     "DMODIFICATION" DATE,
     [exec]  33  	     "TMODIFICATION" NUMBER,
     [exec]  34  	     "DTRANSFERT" DATE,
     [exec]  35  	     "DENVOI_LDF" DATE,
     [exec]  36  	     "CTEL_LIVRAISON" NUMBER(8,0),
     [exec]  37  	     "M_TRANSACTION_BANCAIRE" NUMBER(13,2),
     [exec]  38  	     "LREFERENCE_BANCAIRE" VARCHAR2(20 BYTE),
     [exec]  39  	     "LCERTIFICAT_BANCAIRE" VARCHAR2(20 BYTE),
     [exec]  40  	     "DTRANSACTION_BANCAIRE" DATE,
     [exec]  41  	     "LCODE_CHEQUE" VARCHAR2(50 BYTE),
     [exec]  42  	     "LBANQUE_CHEQUE" VARCHAR2(30 BYTE),
     [exec]  43  	     "M_VALEUR_CHEQUE" NUMBER(18,2),
     [exec]  44  	     "CCARTE_ATOUT" NUMBER(19,0),
     [exec]  45  	     "DFIN_VALIDITE_ATOUT" DATE,
     [exec]  46  	     "COPTION_PAIEMENT_ATOUT_C613" NUMBER(4,0),
     [exec]  47  	     "M_REMISE" NUMBER(18,2),
     [exec]  48  	     "LCOUPON" VARCHAR2(200 BYTE),
     [exec]  49  	     "LCOMMENTAIRE_TRANSPORT" VARCHAR2(200 BYTE),
     [exec]  50  	     "LNOM_TRANSPORTEUR" VARCHAR2(40 BYTE),
     [exec]  51  	     "LREFERENCE_TRANSPORTEUR" VARCHAR2(40 BYTE),
     [exec]  52  	     "CTRANSPORTEUR" VARCHAR2(20 BYTE),
     [exec]  53  	     "LBON_LIVRAISON" VARCHAR2(20 BYTE),
     [exec]  54  	     "MMASSE" NUMBER(8,0),
     [exec]  55  	     "LCOLIS" VARCHAR2(40 BYTE),
     [exec]  56  	     "DVALIDATION" DATE,
     [exec]  57  	     "TVENTE_C638" NUMBER(4,0),
     [exec]  58  	     "CVENTE_ORIGINE" NUMBER(12,0),
     [exec]  59  	     "CMOTIF_SUPPRESSION_C642" NUMBER(4,0),
     [exec]  60  	     "M_PAIEMENT_ATOUT" NUMBER(12,2),
     [exec]  61  	     "CVAGUE" NUMBER(8,0),
     [exec]  62  	     "CLIEU_EXPEDITION" NUMBER(4,0),
     [exec]  63  	     "DDEBUT_PREPARATION" DATE,
     [exec]  64  	     "DFIN_PREPARATION" DATE,
     [exec]  65  	     "CUTILISATEUR_PREPARATION" VARCHAR2(40 BYTE),
     [exec]  66  	     "DLIVRAISON_CALCULEE" DATE,
     [exec]  67  	     "DLIVRAISON_PREVUE" DATE,
     [exec]  68  	     "DCONTROLE" DATE,
     [exec]  69  	     "TVALIDATION_C643" NUMBER(4,0),
     [exec]  70  	     "DSUSPEND" DATE,
     [exec]  71  	     "CMOTIF_SUSPEND_C653" NUMBER(4,0),
     [exec]  72  	     "MREMISE_INITIALE" NUMBER(13,2),
     [exec]  73  	     "MPFE_PAYEE" NUMBER(13,2),
     [exec]  74  	     "MPFT_PAYEE" NUMBER(13,2),
     [exec]  75  	     "TOTAL_PFE" NUMBER(13,2),
     [exec]  76  	     "TOTAL_PFT" NUMBER(13,2),
     [exec]  77  	     "DEXPEDITION_DIFFEREE" DATE,
     [exec]  78  	     "CUTILISATEUR_SUSPEND" VARCHAR2(40 BYTE),
     [exec]  79  	     "CUTILISATEUR_SUPPRESSION" VARCHAR2(40 BYTE),
     [exec]  80  	     "CUTILISATEUR_VALIDATION" VARCHAR2(40 BYTE),
     [exec]  81  	     "CUTILISATEUR_EXPE_DIFFEREE" VARCHAR2(40 BYTE),
     [exec]  82  	     "CTRACEUR_WEB" VARCHAR2(32 BYTE),
     [exec]  83  	     "DTRANSFERT_FO" DATE,
     [exec]  84  	      CONSTRAINT "PK_SCD_VENTE_WEB" PRIMARY KEY ("CVENTE")
     [exec]  85  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "VTE_ENLEVEMENT"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CVENTE" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   5  	     "CENLEVEMENT" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   6  	     "CCLIENT" NUMBER(12,0),
     [exec]   7  	     "CUTILISATEUR" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   8  	     "DSORTIE_PREVU" DATE,
     [exec]   9  	     "DSORTIE_REEL" DATE,
     [exec]  10  	     "M_ACOMPTE_REPRIS_PREVU" NUMBER(10,2),
     [exec]  11  	     "M_ACOMPTE_REPRIS_REEL" NUMBER(10,2),
     [exec]  12  	     "LENLEVEMENT_COMP" VARCHAR2(255 BYTE),
     [exec]  13  	     "TENLEVEMENT_C105" NUMBER(4,0),
     [exec]  14  	     "TLIVRAISON_C006" NUMBER(4,0),
     [exec]  15  	     "FENLEVEMENT_PREPARE" NUMBER(1,0),
     [exec]  16  	     "NB_PALETTE" NUMBER(5,2),
     [exec]  17  	     "CADRESSE" NUMBER(8,0),
     [exec]  18  	     "CSECTEUR_LIVRAISON" NUMBER(8,0),
     [exec]  19  	     "CJOUR" NUMBER(1,0),
     [exec]  20  	     "CPLAGE" NUMBER(8,0),
     [exec]  21  	     "DMAJ" DATE,
     [exec]  22  	     "CST_DEPORTE" NUMBER(3,0),
     [exec]  23  	     "CRETOUR" NUMBER(8,0),
     [exec]  24  	     "DVALIDATION" DATE,
     [exec]  25  	     "CUTILISATEUR_VALIDATION" VARCHAR2(40 BYTE),
     [exec]  26  	     "CUTILISATEUR_CREATION" VARCHAR2(40 BYTE),
     [exec]  27  	     "MAX_DELAI_ANNONCE" NUMBER(8,0),
     [exec]  28  	     "DATE_LIMITE_ANNONCEE" DATE,
     [exec]  29  	     "DCONFIRMEE" DATE,
     [exec]  30  	     "CUTILISATEUR_CONFIRMATION" VARCHAR2(40 BYTE),
     [exec]  31  	     "CTYPE_OL_C650" NUMBER(4,0),
     [exec]  32  	     "CFOUR" NUMBER(5,0),
     [exec]  33  	     "DATE_ENVOI_PREPA" DATE,
     [exec]  34  	     "CETAT_OL_C651" NUMBER(4,0),
     [exec]  35  	     "ORIGINE_OL" NUMBER(6,0),
     [exec]  36  	     "ENLEVEMENT_D_ORIGINE" NUMBER(12,0),
     [exec]  37  	     "DDISPO_PREVU" DATE,
     [exec]  38  	     "NRATTACHEMENT_PRECOMMANDE" NUMBER(8,0),
     [exec]  39  	     "DATE_EXPEDITION_REELLE" DATE,
     [exec]  40  	     "TRANSPORTEUR" VARCHAR2(32 BYTE),
     [exec]  41  	     "NCOLIS_TRANSPORTEUR" VARCHAR2(40 BYTE),
     [exec]  42  	     "DENVOI_JDV" DATE,
     [exec]  43  	     "DSUSPEND" DATE,
     [exec]  44  	     "CMOTIF_SUSPEND" NUMBER(2,0),
     [exec]  45  	     "CUTILISATEUR_SUSPEND" VARCHAR2(40 BYTE),
     [exec]  46  	     "NBR_COLIS" NUMBER(6,0),
     [exec]  47  	     "LNOM_LIVRAISON" VARCHAR2(80 BYTE),
     [exec]  48  	     "LADRESSE_1_LIVRAISON" VARCHAR2(48 BYTE),
     [exec]  49  	     "LADRESSE_2_LIVRAISON" VARCHAR2(48 BYTE),
     [exec]  50  	     "LADRESSE_3_LIVRAISON" VARCHAR2(48 BYTE),
     [exec]  51  	     "CPAYS_LIVRAISON" NUMBER(2,0),
     [exec]  52  	     "CODE_POSTAL_LIVRAISON" NUMBER(5,0),
     [exec]  53  	     "DMODIFICATION" DATE,
     [exec]  54  	     "NTEL_LIVRAISON" VARCHAR2(16 BYTE),
     [exec]  55  	     "CEXPEDITION_C657" NUMBER(6,0),
     [exec]  56  	      CONSTRAINT "PK_VTE_ENLEVEMENT" PRIMARY KEY ("CENLEVEMENT")
     [exec]  57  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "VTE_VENTE"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CVENTE" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   5  	     "CCLIENT" NUMBER(12,0),
     [exec]   6  	     "CDEVIS" NUMBER(8,0),
     [exec]   7  	     "CUTILISATEUR" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   8  	     "DVENTE" DATE,
     [exec]   9  	     "LVENTE_COMP" VARCHAR2(255 BYTE),
     [exec]  10  	     "TSITUATION_C104" NUMBER(4,0),
     [exec]  11  	     "LSUSPENDU" VARCHAR2(48 BYTE),
     [exec]  12  	     "M_ACOMPTE_VERSE_PREVU" NUMBER(10,2),
     [exec]  13  	     "M_ACOMPTE_VERSE_REEL" NUMBER(10,2),
     [exec]  14  	     "DCLOTURE" DATE,
     [exec]  15  	     "DMAJ" DATE,
     [exec]  16  	     "FPOSE" NUMBER(1,0),
     [exec]  17  	     "MMASSE" NUMBER(12,0),
     [exec]  18  	      CONSTRAINT "PK_VTE_VENTE" PRIMARY KEY ("CVENTE")
     [exec]  19  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "VTE_VENTE_LIGNE"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CVENTE" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   5  	     "CVENTE_LIGNE" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   6  	     "CESCLAVE" NUMBER(6,0) NOT NULL ENABLE,
     [exec]   7  	     "CENLEVEMENT" NUMBER(8,0),
     [exec]   8  	     "CUTILISATEUR_CREATION" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   9  	     "CUTILISATEUR_MODIF" VARCHAR2(20 BYTE),
     [exec]  10  	     "QDIM1_SAISI" NUMBER(9,3),
     [exec]  11  	     "QDIM2_SAISI" NUMBER(9,3),
     [exec]  12  	     "QDIM3_SAISI" NUMBER(9,3),
     [exec]  13  	     "QTE_SAISI" NUMBER(9,3),
     [exec]  14  	     "STOCK_DISPO" NUMBER(8,2),
     [exec]  15  	     "M_PV_FICHIER" NUMBER(10,2),
     [exec]  16  	     "M_PV_SAISI" NUMBER(10,2),
     [exec]  17  	     "TREMISE_C102" NUMBER(4,0),
     [exec]  18  	     "M_REMISE" NUMBER(10,2),
     [exec]  19  	     "PREMISE" NUMBER(5,2),
     [exec]  20  	     "M_PRMP" NUMBER(10,2),
     [exec]  21  	     "LARTICLE_COMP" VARCHAR2(255 BYTE),
     [exec]  22  	     "DDISPO_PREVU" DATE,
     [exec]  23  	     "QTE_SORTIE_REEL" NUMBER(9,3),
     [exec]  24  	     "FCDE_FOUR" NUMBER(1,0),
     [exec]  25  	     "FCDE_SPEC" NUMBER(1,0),
     [exec]  26  	     "FBON_PREPA" NUMBER(1,0),
     [exec]  27  	     "TSITUATION_C104" NUMBER(4,0),
     [exec]  28  	     "DMAJ" DATE,
     [exec]  29  	     "CFOUR" NUMBER(5,0),
     [exec]  30  	     "LREFFOUR" VARCHAR2(18 BYTE),
     [exec]  31  	     "CTICKET" NUMBER(10,0),
     [exec]  32  	     "DJOURNEE_VENTE" DATE,
     [exec]  33  	     "CALVEOLE" NUMBER(4,0),
     [exec]  34  	     "QTE_ALVEOLE" NUMBER(9,3),
     [exec]  35  	     "DMVT_ALVEOLE" DATE,
     [exec]  36  	     "NB_COLIS" NUMBER(2,0),
     [exec]  37  	     "MMASSE" NUMBER(12,0),
     [exec]  38  	     "FHORS_NORMES_PFE" NUMBER(1,0),
     [exec]  39  	     "FEXONERATION_PFE" NUMBER(1,0),
     [exec]  40  	      CONSTRAINT "PK_VTE_VENTE_LIGNE" PRIMARY KEY ("CVENTE_LIGNE")
     [exec]  41  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "TYPE_LISTE_LANGUE"
     [exec]   2  	(
     [exec]   3  	     "CLISTE" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CLISTE_DETAIL" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   5  	     "CLANGUE" VARCHAR2(3 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "LLISTE_DETAIL" VARCHAR2(100 BYTE) NOT NULL ENABLE,
     [exec]   7  	     "DCREATION" DATE NOT NULL ENABLE,
     [exec]   8  	     "DMODIFICATION" DATE,
     [exec]   9  	     "TMODIFICATION" NUMBER(1,0) NOT NULL ENABLE,
     [exec]  10  	     "DTRANSFERT" DATE,
     [exec]  11  	     "CMNEMO_LISTE_DETAIL" VARCHAR2(3 BYTE),
     [exec]  12  	     "ID" NUMBER(8,0),
     [exec]  13  	      CONSTRAINT "PK_TYPE_LISTE_LANGUE" PRIMARY KEY ("ID")
     [exec]  14  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "RESERVATION_ARTICLE"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CNATURE" NUMBER(3,0) NOT NULL ENABLE,
     [exec]   5  	     "CARTICLE" NUMBER(6,0) NOT NULL ENABLE,
     [exec]   6  	     "DMVTSTOCK" DATE NOT NULL ENABLE,
     [exec]   7  	     "QQTE" NUMBER(11,2) NOT NULL ENABLE,
     [exec]   8  	     "DFIN" DATE,
     [exec]   9  	     "PDEVALUATION" NUMBER(5,2),
     [exec]  10  	     "DMODIFICATION" DATE NOT NULL ENABLE,
     [exec]  11  	     "TMODIFICATION" NUMBER,
     [exec]  12  	     "DTRANSFERT_ODS" DATE,
     [exec]  13  	     "CORIGINE_RESERVATION_C610" NUMBER(4,0),
     [exec]  14  	     "CIDENTIFIANT1_RESERVATION" NUMBER(6,0),
     [exec]  15  	     "CIDENTIFIANT2_RESERVATION" NUMBER(6,0),
     [exec]  16  	      CONSTRAINT "RESERVATION_ARTICLE_PK" PRIMARY KEY ("CIDENTIFIANT2_RESERVATION")
     [exec]  17  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 	     ALTER TABLE "SCD_FACTURE_AVOIR_LIGNE"
     [exec]   2  		     MODIFY ("LARTICLE" VARCHAR2(90));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 	     ALTER TABLE "SCD_CONTACT"
     [exec]   2  		     ADD "EMAILED"  DATE;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "SCD_FACTURE_AVOIR" MODIFY (
     [exec]   2    "LADRESSE_1_FACTURE" VARCHAR2(80 BYTE),
     [exec]   3    "LADRESSE_2_FACTURE" VARCHAR2(80 BYTE),
     [exec]   4    "LADRESSE_3_FACTURE" VARCHAR2(80 BYTE),
     [exec]   5    "LADRESSE_1_LIVRAISON" VARCHAR2(80 BYTE),
     [exec]   6    "LADRESSE_2_LIVRAISON" VARCHAR2(80 BYTE),
     [exec]   7    "LADRESSE_3_LIVRAISON" VARCHAR2(80 BYTE)
     [exec]   8  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "VTE_ENLEVEMENT" MODIFY (
     [exec]   2    "LADRESSE_1_LIVRAISON" VARCHAR2(80 BYTE),
     [exec]   3    "LADRESSE_2_LIVRAISON" VARCHAR2(80 BYTE),
     [exec]   4    "LADRESSE_3_LIVRAISON" VARCHAR2(80 BYTE)
     [exec]   5  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "SCD_VENTE_WEB" MODIFY (
     [exec]   2    "LCOMMENTAIRE_TRANSPORT" VARCHAR2(240 BYTE),
     [exec]   3    "LBANQUE_CHEQUE" VARCHAR2(40 BYTE),
     [exec]   4    "LCOMMENTAIRE" VARCHAR2(480 BYTE)
     [exec]   5  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "SCD_RETOUR" MODIFY (
     [exec]   2    "LCOMMENTAIRE_AU_TRANSPORTEUR" VARCHAR2(240 BYTE),
     [exec]   3    "LCOMMENTAIRE" VARCHAR2(240 BYTE)
     [exec]   4  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "SCD_FACTURE_AVOIR_LIGNE" MODIFY (
     [exec]   2    "LARTICLE" VARCHAR2(100)
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "SCD_CONTACT" MODIFY (
     [exec]   2    "LCONTACT" VARCHAR2(2400)
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "SCD_VENTE_WEB" MODIFY (
     [exec]   2    "LCODE_CHEQUE" VARCHAR2(60)
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "SCD_REMBOURSEMENT" MODIFY (
     [exec]   2    "LREMBOURSEMENT" VARCHAR2(240)
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> --Order message
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_order_message.sql
     [exec] SQL>   CREATE TABLE "THEME"
     [exec]   2  	(
     [exec]   3  	     "IDTHEME" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "LIBELLE" VARCHAR2(255 BYTE),
     [exec]   5  	      CONSTRAINT "PK_THEME" PRIMARY KEY ("IDTHEME")
     [exec]   6  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SOUS_THEME"
     [exec]   2  	(
     [exec]   3  	     "IDSOUSTHEME" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "LIBELLESOUSTHEME" VARCHAR2(255 BYTE),
     [exec]   5  	     "IDTHEME" VARCHAR2(40 BYTE),
     [exec]   6  	      CONSTRAINT "PK_SOUS_THEME" PRIMARY KEY ("IDSOUSTHEME")
     [exec]   7  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CASTO_CONTACT"
     [exec]   2  	(
     [exec]   3  	     "IDCONTACT" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "IDORDER" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "NUMCONTACT" NUMBER(8,0),
     [exec]   6  	     "NUMDOSSIER" NUMBER(8,0),
     [exec]   7  	     "CONTENU" VARCHAR2(2000 BYTE) NOT NULL ENABLE,
     [exec]   8  	     "DATECONTACT" DATE NOT NULL ENABLE,
     [exec]   9  	     "DATELECTURECLIENT" DATE,
     [exec]  10  	     "DATEENVOYEBO" DATE,
     [exec]  11  	     "CMOTIF_C618" NUMBER(4,0) NOT NULL ENABLE,
     [exec]  12  	     "TYPECONTACT_C632" NUMBER(4,0) NOT NULL ENABLE,
     [exec]  13  	     "INITIATEURCONTACT_C659" NUMBER(4,0) NOT NULL ENABLE,
     [exec]  14  	      CONSTRAINT "PK_CASTO_CONTACT_FO" PRIMARY KEY ("IDCONTACT")
     [exec]  15  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "QUESTION_REPONSE"
     [exec]   2  	(
     [exec]   3  	     "LIBELLE_QUESTION" VARCHAR2(512 BYTE),
     [exec]   4  	     "LIBELLE_REPONSE" VARCHAR2(2048 BYTE),
     [exec]   5  	     "IDSOUSTHEME" VARCHAR2(40 BYTE),
     [exec]   6  	     "IDQR" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   7  	      CONSTRAINT "PK_QUESTION_REPONSE" PRIMARY KEY ("IDQR")
     [exec]   8  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CASTO_CONTACT_STATUS"
     [exec]   2  	(
     [exec]   3  	     "STATUS_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "IDCONTACT" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "IDORDER" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "NUMCONTACT" NUMBER(8,0),
     [exec]   7  	     "CVENTE" NUMBER(8,0),
     [exec]   8  	     "DATEREADED" DATE,
     [exec]   9  	     "DATEREPLIED" DATE,
     [exec]  10  	      CONSTRAINT "PK_CASTO_CONTACT_STATUS" PRIMARY KEY ("STATUS_ID")
     [exec]  11  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --Export journal
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_export_journal.sql
     [exec] SQL>   CREATE TABLE "CASTO_EXPORT_JOURNALISATION"
     [exec]   2  	(
     [exec]   3  	     "ID"    NUMBER(19)      NOT NULL,
     [exec]   4  	     "TYPE_DE_FLUX" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "NUMERO_DE_SEQUENCE" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   6  	     "DATE_CREATION" DATE NOT NULL ENABLE,
     [exec]   7  	     "DATE_INTEGRATION" DATE,
     [exec]   8  	     "DATE_RECEPTION" DATE,
     [exec]   9  	     "REPRISEMANUELLE" VARCHAR2(40 BYTE),
     [exec]  10  	     "RESULTAT" VARCHAR2(40 BYTE),
     [exec]  11  	     "NB_BLOCKS_ACQUITES" NUMBER(8,0),
     [exec]  12  	     "MODE_EXPORT" VARCHAR2(10 BYTE),
     [exec]  13  	     "CODE_RETOUR" NUMBER(2,0),
     [exec]  14  	     CONSTRAINT "PK_CASTO_EXPORT_JOURNALISATION" PRIMARY KEY ("ID")
     [exec]  15  	);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> --Export SKU journal
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_export_sku_journal.sql
     [exec] SQL> CREATE TABLE "CASTO_BORNES_EXPORT_JOURNAL"
     [exec]   2  (
     [exec]   3  	     "SKU_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "URL" VARCHAR2(254 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "DATE_EXPORT" DATE,
     [exec]   6  	     CONSTRAINT "PK_BORNES_EXPORT_SKU_JOURNAL" PRIMARY KEY ("SKU_ID")
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE "CASTO_PLANNER_EXPORT_JOURNAL"
     [exec]   2  (
     [exec]   3  	     "SKU_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "IMAGE_URL" VARCHAR2(254 BYTE),
     [exec]   5  	     "BRAND_URL" VARCHAR2(254 BYTE),
     [exec]   6  	     "IMAGE_DATE_EXPORT" DATE,
     [exec]   7  	     "BRAND_DATE_EXPORT" DATE,
     [exec]   8  	     CONSTRAINT "PK_PLANNER_EXPORT_SKU_JOURNAL" PRIMARY KEY ("SKU_ID")
     [exec]   9  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> --Sips log
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_sips_log.sql
     [exec] SQL>   CREATE TABLE "CASTO_SIPS_LOG"
     [exec]   2  	(
     [exec]   3  	     "ID" NUMBER(19,0) NOT NULL ENABLE,
     [exec]   4  	     "ORDER_ID" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "RESPONSE_CODE" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "LIBELLE" VARCHAR2(50 BYTE),
     [exec]   7  	     "MONTANT" NUMBER(*,0),
     [exec]   8  	     "TRANSACTION_ID" VARCHAR2(20 BYTE),
     [exec]   9  	     "AUTHORISATION_ID" VARCHAR2(20 BYTE),
     [exec]  10  	     "PAYMENT_MEANS" VARCHAR2(20 BYTE),
     [exec]  11  	     "CARD_NUMBER" VARCHAR2(20 BYTE),
     [exec]  12  	     "PAYMENT_CERTIFICATE" VARCHAR2(20 BYTE),
     [exec]  13  	     "PAYMENT_TIME" VARCHAR2(20 BYTE),
     [exec]  14  	     "PAYMENT_DATE" VARCHAR2(20 BYTE),
     [exec]  15  	     "DEVISE" VARCHAR2(20 BYTE),
     [exec]  16  	     "PROFILE_ID" VARCHAR2(20 BYTE),
     [exec]  17  	     "DATE_TRANS_EXPIRE" VARCHAR2(8 BYTE),
     [exec]  18  	     "TRANSACTION_IDENTIFICATOR" VARCHAR2(20 BYTE),
     [exec]  19  	     "PAYMENT_SYSTEM" VARCHAR2(8 BYTE),
     [exec]  20  	     "ABONNEMENT" VARCHAR2(20 BYTE),
     [exec]  21  	      PRIMARY KEY ("ID")
     [exec]  22  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SIPS_LOG ADD (
     [exec]   2  	 TRANSACTION_INDEX VARCHAR2(10),
     [exec]   3  	 REQUEST_URL VARCHAR2(1000)
     [exec]   4  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --Call center
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_log_call_center.sql
     [exec] SQL>   CREATE TABLE "CASTO_LOG_CALL_CENTER"
     [exec]   2  	(
     [exec]   3  	     "ID_JOURNALISATION" VARCHAR2(40 BYTE),
     [exec]   4  	     "USER_ID" VARCHAR2(40 BYTE),
     [exec]   5  	     "LOGIN" VARCHAR2(40 BYTE),
     [exec]   6  	     "DATE_ACTION" DATE,
     [exec]   7  	     "ACTION" VARCHAR2(40 BYTE),
     [exec]   8  	     "ORDER_ID" VARCHAR2(40 BYTE),
     [exec]   9  	      PRIMARY KEY ("ID_JOURNALISATION")
     [exec]  10  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> --Coupons
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_coupons.sql
     [exec] SQL> CREATE TABLE "CASTO_COUPONS"
     [exec]   2  (	     "ID" NUMBER NOT NULL ENABLE,
     [exec]   3  	     "ORDER_ID" VARCHAR2(40 BYTE),
     [exec]   4  	     "CODE_COUPON" VARCHAR2(40 BYTE),
     [exec]   5  	     "DATE_USAGE" DATE DEFAULT sysdate NOT NULL ENABLE
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> --Order transaction
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_order_transaction.sql
     [exec] SQL> CREATE TABLE "CASTO_ORDER_TRANSACTION"
     [exec]   2  (
     [exec]   3  	     "ID" NUMBER(19,0) NOT NULL ENABLE,
     [exec]   4  	     "ORDER_ID" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "DATE_TRANS_EXPIRE" DATE,
     [exec]   6  	     "AUTHORISATION_ID" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   7  	      PRIMARY KEY ("ID"),
     [exec]   8  	      UNIQUE ("ORDER_ID")
     [exec]   9  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> --Order backup
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_order_backup.sql
     [exec] SQL> CREATE TABLE "CASTO_ORDER_BACKUP"
     [exec]   2  (
     [exec]   3  	     "ORDER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "LOGIN" VARCHAR2(60 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "NOM_CLIENT" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "PRENOM_CLIENT" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   7  	     "TEL_PORTABLE" VARCHAR2(40 BYTE),
     [exec]   8  	     "TEL_FIXE" VARCHAR2(40 BYTE),
     [exec]   9  	     "ADRESSE_LIBELLE_FACTU" VARCHAR2(500 BYTE),
     [exec]  10  	     "ADRESSE_LIBELLE_LIV" VARCHAR2(500 BYTE),
     [exec]  11  	     "DATE_COMMANDE" DATE NOT NULL ENABLE,
     [exec]  12  	     "TOTAL_ARTICLES" NUMBER(12,2) NOT NULL ENABLE,
     [exec]  13  	     "FRAIS_LIVRAISON" NUMBER(12,2) NOT NULL ENABLE,
     [exec]  14  	     "FRAIS_TRAITEMENT" NUMBER(12,2) NOT NULL ENABLE,
     [exec]  15  	     "TOTAL_COMMANDE" NUMBER(12,2) NOT NULL ENABLE,
     [exec]  16  	     "ORIGINE_MAGASIN" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]  17  	     "MOYEN_PAIEMENT" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]  18  	      PRIMARY KEY ("ORDER_ID")
     [exec]  19  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE "CASTO_CCE_ITEM_LISTE_BACKUP"
     [exec]   2  (
     [exec]   3  	     "ORDER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "COMMERCE_ITEM_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	      PRIMARY KEY ("ORDER_ID", "COMMERCE_ITEM_ID")
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE "CASTO_COMMERCE_ITEM_BACKUP"
     [exec]   2  (
     [exec]   3  	     "CDE_REF" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "COMMERCE_ITEM_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "CODE_ARTICLE" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "QUANTITE" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   7  	     "PRIX_UNITAIRE" NUMBER(12,2) NOT NULL ENABLE,
     [exec]   8  	      PRIMARY KEY ("COMMERCE_ITEM_ID", "CDE_REF")
     [exec]   9  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER_BACKUP MODIFY (
     [exec]   2  	 NOM_CLIENT	       varchar2(100),
     [exec]   3  	 PRENOM_CLIENT	   varchar2(100)
     [exec]   4  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> --Log admin
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_log_admin.sql
     [exec] SQL> CREATE TABLE "CASTO_LOGS_ADMIN"
     [exec]   2  (
     [exec]   3  	     "ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "TYPE" VARCHAR2(254 BYTE),
     [exec]   5  	     "DATECREATION" DATE,
     [exec]   6  	     "NOMLOGIN" VARCHAR2(50 BYTE),
     [exec]   7  	     "ADRESSEIP" VARCHAR2(40 BYTE),
     [exec]   8  	     "ACTION" VARCHAR2(254 BYTE),
     [exec]   9  	     "COMMENTAIRE" VARCHAR2(4000 BYTE),
     [exec]  10  	      PRIMARY KEY ("ID")
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> --Mail log
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_maillog.sql
     [exec] SQL> CREATE TABLE CASTO_MAILSUIVICOMMANDE (
     [exec]   2  	     ID VARCHAR2(40) NOT NULL,
     [exec]   3  	     PROFILE_ID VARCHAR2(40) NOT NULL,
     [exec]   4  	     ORDER_ID VARCHAR2(40) NOT NULL,
     [exec]   5  	     QUESTIONNAIRE_ID VARCHAR2(40) NOT NULL,
     [exec]   6  	     LCOMMENTAIRE VARCHAR2(1000),
     [exec]   7  	     CCONTACT NUMBER(8, 0),
     [exec]   8  	     CENLEVEMENT NUMBER(8, 0),
     [exec]   9  	     DATE_ENVOIE DATE,
     [exec]  10  	     CREMBOURSEMENT NUMBER(8, 0),
     [exec]  11  	     CONSTRAINT PK_CASTO_MAILSUIVICMD PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --Patch
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p19/cast_core.sql
     [exec] SQL> CREATE TABLE CAST_ITEM_PRICE_INFO (
     [exec]   2    ID VARCHAR2 (40) NOT NULL REFERENCES DCSPP_AMOUNT_INFO (AMOUNT_INFO_ID),
     [exec]   3    ON_SALE_DISCOUNT_DISPLAY NUMBER(1,0) DEFAULT 0 NULL,
     [exec]   4    PRIMARY KEY (ID)
     [exec]   5  );
     [exec] CREATE TABLE CAST_ITEM_PRICE_INFO (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_APPLLIED_COUPONS(
     [exec]   2    USER_ID VARCHAR2(4000 BYTE) NOT NULL ENABLE,
     [exec]   3    PROMOTION_ID VARCHAR2(4000 BYTE)
     [exec]   4  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p20/cast_core.sql
     [exec] SQL> alter table "CASTO_CCE_ITEM_LISTE_BACKUP" add constraint FK_CASTO_CCE_ITEM_LISTE_BACKUP foreign key("ORDER_ID") references "CASTO_ORDER_BACKUP"("ORDER_ID") on delete cascade;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_FAILED_NEWSLETTER(
     [exec]   2    FR_URL VARCHAR2(1200 BYTE) NOT NULL ENABLE
     [exec]   3  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p21/cast_core.sql
     [exec] SQL> CREATE TABLE CASTO_TICKET_MAPPING (
     [exec]   2    PROFILE_ID VARCHAR2(40) NOT NULL,
     [exec]   3    HOME_ID VARCHAR2(40),
     [exec]   4    SOFINCO_ACCOUNT VARCHAR2(40),
     [exec]   5    ACTIVE NUMBER(1,0) DEFAULT 0 NOT NULL,
     [exec]   6    SOFINCO_NAME1 VARCHAR2(255),
     [exec]   7    SOFINCO_NAME2 VARCHAR2(255)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_TICKET_MAPPING ADD CONSTRAINT CASTO_TICKET_MAPPING_PK PRIMARY KEY (PROFILE_ID);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_TICKET_HEADER (
     [exec]   2    HEADER_ID VARCHAR2(40) NOT NULL,
     [exec]   3    WDM_ID VARCHAR2(40),
     [exec]   4    TICKET_ID VARCHAR2(40) NOT NULL,
     [exec]   5    STORE_ID VARCHAR2(40) NOT NULL,
     [exec]   6    TICKET_DATE DATE NOT NULL,
     [exec]   7    HOME_ID VARCHAR2(40) NOT NULL,
     [exec]   8    TILL_ID VARCHAR2(40),
     [exec]   9    HOSTESS_ID VARCHAR2(40),
     [exec]  10    TOTAL_QUANTITY INTEGER,
     [exec]  11    TOTAL_PRICE_TTC NUMBER,
     [exec]  12    TOTAL_HT NUMBER,
     [exec]  13    LAST_MODIFIED DATE
     [exec]  14  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_TICKET_HEADER ADD CONSTRAINT CASTO_TICKET_HEADER_PK PRIMARY KEY (HEADER_ID);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_TICKET_METHOD (
     [exec]   2    HEADER_ID VARCHAR2(40) NOT NULL,
     [exec]   3    METHOD_ID VARCHAR2(40) NOT NULL,
     [exec]   4    PAYMENT_TYPE NUMBER,
     [exec]   5    PAYMENT_AMMOUNT NUMBER
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_TICKET_METHOD ADD CONSTRAINT CASTO_TICKET_METHOD_PK PRIMARY KEY (METHOD_ID);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_TICKET_LINE (
     [exec]   2    HEADER_ID VARCHAR2(40) NOT NULL,
     [exec]   3    LINE_ID VARCHAR2(40) NOT NULL,
     [exec]   4    PRODUCT_ID VARCHAR2(40),
     [exec]   5    PRODUCT_DATE DATE,
     [exec]   6    PRODUCT_QUANTITY NUMBER,
     [exec]   7    PRODUCT_LABEL VARCHAR2(255),
     [exec]   8    UNIT_PRICE_HT NUMBER,
     [exec]   9    UNIT_PRICE_TTC NUMBER,
     [exec]  10    RATE_TVA NUMBER,
     [exec]  11    DISCOUNT_AMOUNT NUMBER,
     [exec]  12    DISCOUNT_LABEL VARCHAR2(255),
     [exec]  13    LINE_NUMBER INTEGER
     [exec]  14  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_TICKET_LINE ADD CONSTRAINT CASTO_TICKET_LINE_PK PRIMARY KEY (LINE_ID);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_TICKET_STATISTIC (
     [exec]   2    ID VARCHAR2(40) NOT NULL,
     [exec]   3    IMPORT_NAME VARCHAR2(1024),
     [exec]   4    IMPORT_DATE DATE,
     [exec]   5    IMPORT_TYPE NUMBER,
     [exec]   6    SUCCESS_COUNT INTEGER,
     [exec]   7    ERROR_COUNT INTEGER
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_TICKET_STATISTIC ADD CONSTRAINT CASTO_TICKET_STATISTIC_PK PRIMARY KEY (ID);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_TICKET_HEADER_TK_IDX ON CASTO_TICKET_HEADER(TICKET_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_TICKET_HEADER_HM_IDX ON CASTO_TICKET_HEADER(HOME_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_TICKET_HEADER_ST_IDX ON CASTO_TICKET_HEADER(STORE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_TICKET_HEADER_TD_IDX ON CASTO_TICKET_HEADER(TICKET_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_TICKET_LINE_HD_IDX ON CASTO_TICKET_LINE(HEADER_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_TICKET_LINE_PL_IDX ON CASTO_TICKET_LINE(PRODUCT_LABEL);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_TICKET_METHOD_HD_IDX ON CASTO_TICKET_METHOD(HEADER_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER_BACKUP MODIFY (
     [exec]   2    LOGIN varchar2(60)
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- patch 21.0.2
     [exec] SQL> ALTER TABLE CASTO_TICKET_HEADER MODIFY (
     [exec]   2    TOTAL_QUANTITY NUMBER
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p22/cast_core.sql
     [exec] SQL> drop TABLE "CAST_CORE"."CASTO_COMMERCE_ITEM_BACKUP_TMP";
     [exec] drop TABLE "CAST_CORE"."CASTO_COMMERCE_ITEM_BACKUP_TMP"
     [exec]                        *
     [exec] ERROR at line 1:
     [exec] ORA-00942: table or view does not exist
     [exec] 
     [exec] 
     [exec] SQL> create table "CAST_CORE".CASTO_COMMERCE_ITEM_BACKUP_TMP as select * from "CAST_CORE"."CASTO_COMMERCE_ITEM_BACKUP" where '1' = '1';
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> alter table "CASTO_CCE_ITEM_LISTE_BACKUP" drop constraint "FK_CASTO_CCE_ITEMS_BACKUP";
     [exec] alter table "CASTO_CCE_ITEM_LISTE_BACKUP" drop constraint "FK_CASTO_CCE_ITEMS_BACKUP"
     [exec]                                                           *
     [exec] ERROR at line 1:
     [exec] ORA-02443: Cannot drop constraint  - nonexistent constraint
     [exec] 
     [exec] 
     [exec] SQL> drop TABLE "CAST_CORE"."CASTO_COMMERCE_ITEM_BACKUP"cascade constraints;
     [exec] 
     [exec] Table dropped.
     [exec] 
     [exec] SQL> alter table "CAST_CORE"."CASTO_COMMERCE_ITEM_BACKUP_TMP" rename to CASTO_COMMERCE_ITEM_BACKUP;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> alter table "CASTO_COMMERCE_ITEM_BACKUP" add constraint PK_CASTO_COMMERCE_ITEM_BACKUP primary key("COMMERCE_ITEM_ID");
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> alter table "CASTO_CCE_ITEM_LISTE_BACKUP" add constraint FK_CASTO_CCE_ITEMS_BACKUP foreign key("COMMERCE_ITEM_ID") references "CASTO_COMMERCE_ITEM_BACKUP"("COMMERCE_ITEM_ID") ON DELETE CASCADE ENABLE;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/pdr/cast_core.sql
     [exec] SQL> CREATE TABLE CASTO_EXPERIAN_REQUESTS(
     [exec]   2  	 ID			      VARCHAR2(40) NOT NULL,
     [exec]   3  	 CIVILITE		      NUMBER(*,0),
     [exec]   4  	 FIRST_NAME		      VARCHAR2(64),
     [exec]   5  	 LAST_NAME		      VARCHAR2(64),
     [exec]   6  	 EMAIL			      VARCHAR2(255 BYTE),
     [exec]   7  	 ADDRESS1		      VARCHAR2(120),
     [exec]   8  	 ADDRESS2		      VARCHAR2(120),
     [exec]   9  	 ADDRESS3		      VARCHAR2(100),
     [exec]  10  	 ADDRESS4		      VARCHAR2(100),
     [exec]  11  	 POSTAL_CODE		      VARCHAR2(16),
     [exec]  12  	 CITY			      VARCHAR2(100),
     [exec]  13  	 PAYS			      VARCHAR2(40 BYTE),
     [exec]  14  	 RECEIVE_EMAIL		      NUMBER(*,0) default 0 not null,
     [exec]  15  	 RESEIVE_OFFERS 	      NUMBER(1,0) default 0 not null,
     [exec]  16  	 SOURCE_INSCRIPTION	      VARCHAR2(75),
     [exec]  17  	 DATEINSCRIPTION	      DATE,
     [exec]  18  	 DATEDESINCRIPTION	      DATE,
     [exec]  19  	 DATE_OFFERS_INSCRIPTION      DATE,
     [exec]  20  	 DATE_OFFERS_DESINCRPTION     DATE,
     [exec]  21  	 PHONE_NUMBER		      VARCHAR2(50),
     [exec]  22  	 PHONE_NUMBER_2 	      VARCHAR2(15),
     [exec]  23  	 CUSTOMER_CASTO 	      NUMBER(1,0),
     [exec]  24  	 STORE_REFERENCE	      VARCHAR2(50),
     [exec]  25  	 CARTEATOUT		      NUMBER,
     [exec]  26  	 JARDIN 		      NUMBER,
     [exec]  27  	 MAISON 		      NUMBER,
     [exec]  28  	 PROPRIETAIRE_LOCATAIRE       VARCHAR2(20 BYTE),
     [exec]  29  	 MAISONCAMPAGNE 	      NUMBER,
     [exec]  30  	 NBPERSONNES		      VARCHAR2(10 BYTE),
     [exec]  31  	 USER_ID		      VARCHAR2(40 BYTE),
     [exec]  32  	 DATE_OF_BIRTH		      DATE,
     [exec]  33  	 REGISTRATION_DATE	      DATE,
     [exec]  34  	 DATEMAJPROFIL		      DATE,
     [exec]  35  	 TYPEMAJPROFIL		      NUMBER,
     [exec]  36  	 REQUEST_SOURCE 	      NUMBER,
     [exec]  37  	 PRIMARY KEY (ID)
     [exec]  38  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_EXPERIAN_HISTORY (
     [exec]   2  	     EXPORT_DATE		  DATE,
     [exec]   3  	 ID			      VARCHAR2(40) NOT NULL,
     [exec]   4  	 CIVILITE		      NUMBER(*,0),
     [exec]   5  	 FIRST_NAME		      VARCHAR2(64),
     [exec]   6  	 LAST_NAME		      VARCHAR2(64),
     [exec]   7  	 EMAIL			      VARCHAR2(255 BYTE),
     [exec]   8  	 ADDRESS1		      VARCHAR2(120),
     [exec]   9  	 ADDRESS2		      VARCHAR2(120),
     [exec]  10  	 ADDRESS3		      VARCHAR2(100),
     [exec]  11  	 ADDRESS4		      VARCHAR2(100),
     [exec]  12  	 POSTAL_CODE		      VARCHAR2(16),
     [exec]  13  	 CITY			      VARCHAR2(100),
     [exec]  14  	 PAYS			      VARCHAR2(40 BYTE),
     [exec]  15  	 RECEIVE_EMAIL		      NUMBER(*,0) default 0 not null,
     [exec]  16  	 RESEIVE_OFFERS 	      NUMBER(1,0) default 0 not null,
     [exec]  17  	 SOURCE_INSCRIPTION	      VARCHAR2(75),
     [exec]  18  	 DATEINSCRIPTION	      DATE,
     [exec]  19  	 DATEDESINCRIPTION	      DATE,
     [exec]  20  	 DATE_OFFERS_INSCRIPTION      DATE,
     [exec]  21  	 DATE_OFFERS_DESINCRPTION     DATE,
     [exec]  22  	 PHONE_NUMBER		      VARCHAR2(50),
     [exec]  23  	 PHONE_NUMBER_2 	      VARCHAR2(15),
     [exec]  24  	 CUSTOMER_CASTO 	      NUMBER(1,0),
     [exec]  25  	 STORE_REFERENCE	      VARCHAR2(50),
     [exec]  26  	 CARTEATOUT		      NUMBER,
     [exec]  27  	 JARDIN 		      NUMBER,
     [exec]  28  	 MAISON 		      NUMBER,
     [exec]  29  	 PROPRIETAIRE_LOCATAIRE       VARCHAR2(20 BYTE),
     [exec]  30  	 MAISONCAMPAGNE 	      NUMBER,
     [exec]  31  	 NBPERSONNES		      VARCHAR2(10 BYTE),
     [exec]  32  	 USER_ID		      VARCHAR2(40 BYTE),
     [exec]  33  	 DATE_OF_BIRTH		      DATE,
     [exec]  34  	 REGISTRATION_DATE	      DATE,
     [exec]  35  	 DATEMAJPROFIL		      DATE,
     [exec]  36  	 TYPEMAJPROFIL		      NUMBER,
     [exec]  37  	 REQUEST_SOURCE 	      NUMBER,
     [exec]  38  	 PRIMARY KEY (ID)
     [exec]  39  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> alter table CASTO_ABONNEMENT_NEWSLETTER add SOURCE_INSCRIPTION VARCHAR2(75 BYTE);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p23/cast_core.sql
     [exec] SQL> alter table CASTO_ORDER modify COMMENTAIRE varchar2(400);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SHOPPINGLIST
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     SKU_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID, SEQ)
     [exec]   7  );
     [exec] CREATE TABLE CASTO_SHOPPINGLIST
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/s2/cast_core.sql
     [exec] SQL> ALTER TABLE CASTO_USER ADD	card_price_list varchar2(40)	null;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p28/cast_core.sql
     [exec] SQL>   CREATE TABLE "CASTO_BDDCC_EXECUTION"
     [exec]   2  	(    "EXECUTION_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   3  	     "START_DATE" DATE NOT NULL ENABLE,
     [exec]   4  	     "END_DATE" DATE,
     [exec]   5  	     "SELECTED_CLIENTS" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     "PROCESSED_CLIENTS" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   7  	      CONSTRAINT "CASTO_BDDCC_P" PRIMARY KEY ("EXECUTION_ID")
     [exec]   8    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255
     [exec]   9    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  10    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  11  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  12    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  13    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE INDEX "BDDCC_STRT_DTE_IDX" ON "CASTO_BDDCC_EXECUTION" ("START_DATE")
     [exec]   2    PCTFREE 10 INITRANS 2 MAXTRANS 255
     [exec]   3    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   4    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/fl/cast_core.sql
     [exec] SP2-0310: unable to open file "D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/fl/cast_core.sql"
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p29/cast_core.sql
     [exec] SQL> ALTER TABLE SCD_FACTURE_AVOIR_LIGNE ADD(
     [exec]   2  	     TAXD3E NUMBER(14, 2) NULL,
     [exec]   3  	     LTAXD3E VARCHAR2(40 BYTE) NULL,
     [exec]   4  	     TAXREP NUMBER(14, 2) NULL,
     [exec]   5  	     LTAXREP VARCHAR2(40 BYTE) NULL
     [exec]   6   );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p30/cast_core.sql
     [exec] SQL> ALTER TABLE CASTO_ABONNEMENT_NEWSLETTER ADD (LAST_BDDCC_EXTRACTION DATE);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/cc/cast_core.sql
     [exec] SQL> /*
     [exec] SQL> =======================================================================================================
     [exec] SQL> Document Information
     [exec] SQL> =======================================================================================================
     [exec] SQL> Auth	  : EPAM Team
     [exec] SQL> E-mail	  :
     [exec] SQL> Created	  : 04/05/2012
     [exec] SQL> Use	  : Add local price lists to the user
     [exec] SQL> Run As	  : CORE
     [exec] SQL> Duration Est : This will take less than 20 seconds to install
     [exec] SQL> =======================================================================================================
     [exec] SQL> */
     [exec] SQL> ALTER TABLE CASTO_USER ADD(
     [exec]   2    LOCAL_LIST_PRICE_LIST VARCHAR2(40) NULL,
     [exec]   3    LOCAL_SALE_PRICE_LIST VARCHAR2(40) NULL,
     [exec]   4    CURRENT_LOCAL_STORE VARCHAR2(40) NULL
     [exec]   5  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD(
     [exec]   2    DELIVERY_TYPE NUMBER(*,0) DEFAULT 0 NOT NULL ENABLE,
     [exec]   3    MAGASIN_ID VARCHAR2(40) DEFAULT '999' NOT NULL ENABLE
     [exec]   4  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> /*
     [exec] SQL> 	 start improve mail sender functionality
     [exec] SQL> */
     [exec] SQL> CREATE INDEX CASTO_MAILSUIVICOMMANDE_IDX1 ON CASTO_MAILSUIVICOMMANDE
     [exec]   2    (
     [exec]   3  	 ORDER_ID
     [exec]   4    );
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_MAILSUIVICOMMANDE_IDX2 ON CASTO_MAILSUIVICOMMANDE
     [exec]   2    (
     [exec]   3  	 QUESTIONNAIRE_ID
     [exec]   4    );
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_SIPS_LOG_IDX1 ON CASTO_SIPS_LOG
     [exec]   2    (
     [exec]   3  	 ORDER_ID
     [exec]   4    );
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> /*
     [exec] SQL> 	 end improve mail sender functionality
     [exec] SQL> */
     [exec] SQL> 
     [exec] SQL> CREATE INDEX SRCH_UPDATE_QUEUE_IDX1 ON SRCH_UPDATE_QUEUE
     [exec]   2    (
     [exec]   3  	 GENERATION
     [exec]   4    );
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX INDEX_PROFILE_ID ON CASTO_ABONNEMENT_NEWSLETTER
     [exec]   2    (
     [exec]   3  	 PROFILE_ID
     [exec]   4    );
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX SCD_CONTACT_INDEX1 ON SCD_CONTACT
     [exec]   2    (
     [exec]   3  	 CVENTE,
     [exec]   4  	 DCONTACT
     [exec]   5    );
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD(
     [exec]   2    PROCESSING_FEE_NICE_WORD VARCHAR2(1000));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ABONNEMENT_NEWSLETTER ADD (
     [exec]   2    ACCEPT_RECONTACT NUMBER(1,0) DEFAULT 0 NOT NULL);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_USER ADD(
     [exec]   2    LOCAL_PRICE_LIST VARCHAR2(40) NULL
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_USER DROP (
     [exec]   2    LOCAL_LIST_PRICE_LIST,
     [exec]   3    LOCAL_SALE_PRICE_LIST
     [exec]   4  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p31/cast_core.sql
     [exec] SQL> ALTER TABLE CASTO_CONTACT_INFO MODIFY PHONE_NUMBER_2 VARCHAR2(16);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/hmacImpl/cast_core.sql
     [exec] SQL> CREATE TABLE CASTO_PAYBOX_NUMQUESTION
     [exec]   2  (
     [exec]   3    NUMQUESTION_DATE DATE	      NOT NULL ENABLE,
     [exec]   4    NUMQUESTION	NUMBER(10, 0) NOT NULL ENABLE
     [exec]   5  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> INSERT INTO CASTO_PAYBOX_NUMQUESTION (NUMQUESTION_DATE, NUMQUESTION) VALUES (SYSDATE, 1);
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/inventoryCheck/cast_core.sql
     [exec] SQL> CREATE TABLE inventory_request (
     [exec]   2  	     request_id VARCHAR(32) not null,
     [exec]   3  	     request_date DATE not null,
     [exec]   4  	     store_id VARCHAR(32) not null,
     [exec]   5  	     order_id VARCHAR(32) not null,
     [exec]   6  	     request_status VARCHAR(32) not null,
     [exec]   7  	     primary key(request_id)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE inventory_request_order_items (
     [exec]   2  	     request_id VARCHAR(32) not null references inventory_request(request_id),
     [exec]   3  	     order_item_id VARCHAR(32) not null,
     [exec]   4  	     primary key(request_id, order_item_id)
     [exec]   5  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/lc/cast_core.sql
     [exec] SQL> ALTER TABLE CASTO_CONTACT_INFO MODIFY PHONE_NUMBER_2 VARCHAR2(17);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/ds/cast_core.sql
     [exec] SQL> ALTER TABLE VTE_ENLEVEMENT ADD (
     [exec]   2  	     URL_TRANSPORTEUR VARCHAR2(80) NULL
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_EXPERIAN_REQUESTS MODIFY PHONE_NUMBER_2 VARCHAR2(17);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/lh/cast_core.sql
     [exec] SP2-0310: unable to open file "D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/lh/cast_core.sql"
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/tablets/cast_core.sql
     [exec] SQL> CREATE TABLE CASTO_CGV_INFO (
     [exec]   2    ID VARCHAR2 (10) NOT NULL PRIMARY KEY,
     [exec]   3    LAST_MODIFIED_DATE DATE
     [exec]   4  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> INSERT INTO CASTO_CGV_INFO (ID, LAST_MODIFIED_DATE) VALUES ('CGV_HTML', TO_DATE('01-JAN-2014', 'DD-MON-YYYY'));
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/sl/cast_core.sql
     [exec] SP2-0310: unable to open file "D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/sl/cast_core.sql"
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/sp/cast_core.sql
     [exec] SQL> ALTER TABLE CASTO_USER ADD(
     [exec]   2  	     FAILED_ATTEMPTS NUMBER(1,0) DEFAULT 0,
     [exec]   3  	     FIRST_ATTEMPT_DATE DATE,
     [exec]   4  	     LOCKOUT_DATE DATE);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PASSWORD_LINK(
     [exec]   2  	     ID VARCHAR2(40) NOT NULL,
     [exec]   3  	     DATE_EXP DATE,
     [exec]   4  	     KEY VARCHAR2(200),
     [exec]   5  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/si/cast_core.sql
     [exec] SP2-0310: unable to open file "D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/si/cast_core.sql"
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/cc/cast_core.sql
     [exec] SQL> /*
     [exec] SQL> =======================================================================================================
     [exec] SQL> Document Information
     [exec] SQL> =======================================================================================================
     [exec] SQL> Auth	  : EPAM Team
     [exec] SQL> E-mail	  :
     [exec] SQL> Created	  : 04/05/2012
     [exec] SQL> Use	  : Add local price lists to the user
     [exec] SQL> Run As	  : CORE
     [exec] SQL> Duration Est : This will take less than 20 seconds to install
     [exec] SQL> =======================================================================================================
     [exec] SQL> */
     [exec] SQL> ALTER TABLE CASTO_USER ADD(
     [exec]   2    LOCAL_LIST_PRICE_LIST VARCHAR2(40) NULL,
     [exec]   3    LOCAL_SALE_PRICE_LIST VARCHAR2(40) NULL,
     [exec]   4    CURRENT_LOCAL_STORE VARCHAR2(40) NULL
     [exec]   5  );
     [exec]   CURRENT_LOCAL_STORE VARCHAR2(40) NULL
     [exec]   *
     [exec] ERROR at line 4:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD(
     [exec]   2    DELIVERY_TYPE NUMBER(*,0) DEFAULT 0 NOT NULL ENABLE,
     [exec]   3    MAGASIN_ID VARCHAR2(40) DEFAULT '999' NOT NULL ENABLE
     [exec]   4  );
     [exec]   DELIVERY_TYPE NUMBER(*,0) DEFAULT 0 NOT NULL ENABLE,
     [exec]   *
     [exec] ERROR at line 2:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> /*
     [exec] SQL> 	 start improve mail sender functionality
     [exec] SQL> */
     [exec] SQL> CREATE INDEX CASTO_MAILSUIVICOMMANDE_IDX1 ON CASTO_MAILSUIVICOMMANDE
     [exec]   2    (
     [exec]   3  	 ORDER_ID
     [exec]   4    );
     [exec] CREATE INDEX CASTO_MAILSUIVICOMMANDE_IDX1 ON CASTO_MAILSUIVICOMMANDE
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_MAILSUIVICOMMANDE_IDX2 ON CASTO_MAILSUIVICOMMANDE
     [exec]   2    (
     [exec]   3  	 QUESTIONNAIRE_ID
     [exec]   4    );
     [exec] CREATE INDEX CASTO_MAILSUIVICOMMANDE_IDX2 ON CASTO_MAILSUIVICOMMANDE
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_SIPS_LOG_IDX1 ON CASTO_SIPS_LOG
     [exec]   2    (
     [exec]   3  	 ORDER_ID
     [exec]   4    );
     [exec] CREATE INDEX CASTO_SIPS_LOG_IDX1 ON CASTO_SIPS_LOG
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> /*
     [exec] SQL> 	 end improve mail sender functionality
     [exec] SQL> */
     [exec] SQL> 
     [exec] SQL> CREATE INDEX SRCH_UPDATE_QUEUE_IDX1 ON SRCH_UPDATE_QUEUE
     [exec]   2    (
     [exec]   3  	 GENERATION
     [exec]   4    );
     [exec] CREATE INDEX SRCH_UPDATE_QUEUE_IDX1 ON SRCH_UPDATE_QUEUE
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX INDEX_PROFILE_ID ON CASTO_ABONNEMENT_NEWSLETTER
     [exec]   2    (
     [exec]   3  	 PROFILE_ID
     [exec]   4    );
     [exec] CREATE INDEX INDEX_PROFILE_ID ON CASTO_ABONNEMENT_NEWSLETTER
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX SCD_CONTACT_INDEX1 ON SCD_CONTACT
     [exec]   2    (
     [exec]   3  	 CVENTE,
     [exec]   4  	 DCONTACT
     [exec]   5    );
     [exec] CREATE INDEX SCD_CONTACT_INDEX1 ON SCD_CONTACT
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD(
     [exec]   2    PROCESSING_FEE_NICE_WORD VARCHAR2(1000));
     [exec]   PROCESSING_FEE_NICE_WORD VARCHAR2(1000))
     [exec]   *
     [exec] ERROR at line 2:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ABONNEMENT_NEWSLETTER ADD (
     [exec]   2    ACCEPT_RECONTACT NUMBER(1,0) DEFAULT 0 NOT NULL);
     [exec]   ACCEPT_RECONTACT NUMBER(1,0) DEFAULT 0 NOT NULL)
     [exec]   *
     [exec] ERROR at line 2:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_USER ADD(
     [exec]   2    LOCAL_PRICE_LIST VARCHAR2(40) NULL
     [exec]   3  );
     [exec]   LOCAL_PRICE_LIST VARCHAR2(40) NULL
     [exec]   *
     [exec] ERROR at line 2:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_USER DROP (
     [exec]   2    LOCAL_LIST_PRICE_LIST,
     [exec]   3    LOCAL_SALE_PRICE_LIST
     [exec]   4  );
     [exec]   LOCAL_SALE_PRICE_LIST
     [exec]   *
     [exec] ERROR at line 3:
     [exec] ORA-00904: "LOCAL_SALE_PRICE_LIST": invalid identifier
     [exec] 
     [exec] 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> Disconnected from Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production

-copysql:

createcatalogtables:

-performcatalogsql:

-performsql:
     [echo] about to execute sql/sql_run/create_catalog_tables.sql using CAST_CATA/CAST_CATA@XE
     [exec] 
     [exec] SQL*Plus: Release 11.2.0.2.0 Production on Mon May 2 18:49:33 2016
     [exec] 
     [exec] Copyright (c) 1982, 2014, Oracle.  All rights reserved.
     [exec] 
     [exec] 
     [exec] Connected to:
     [exec] Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production
     [exec] 
     [exec] SQL> REM !!! create_catalog_tables.sql
     [exec] SQL> 
     [exec] SQL> -- DCS
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/sql/db_components/oracle/priceLists_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/sql/priceLists_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> 
     [exec] SQL> create table dcs_price_list (
     [exec]   2  	     price_list_id   varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     display_name    varchar2(254)   null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     creation_date   date    null,
     [exec]   7  	     last_mod_date   date    null,
     [exec]   8  	     start_date      date    null,
     [exec]   9  	     end_date	     date    null,
     [exec]  10  	     locale  number(10)      null,
     [exec]  11  	     base_price_list varchar2(40)    null,
     [exec]  12  	     item_acl	     varchar2(1024)  null
     [exec]  13  ,constraint dcs_price_list_p primary key (price_list_id)
     [exec]  14  ,constraint dcs_pricbas_prcl_f foreign key (base_price_list) references dcs_price_list (price_list_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_pricelstbase_i on dcs_price_list (base_price_list);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_complex_price (
     [exec]   2  	     complex_price_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null
     [exec]   4  ,constraint dcs_complex_pric_p primary key (complex_price_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_price (
     [exec]   2  	     price_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     price_list      varchar2(40)    not null,
     [exec]   5  	     product_id      varchar2(40)    null,
     [exec]   6  	     sku_id  varchar2(40)    null,
     [exec]   7  	     parent_sku_id   varchar2(40)    null,
     [exec]   8  	     pricing_scheme  integer not null,
     [exec]   9  	     list_price      number(19,7)    null,
     [exec]  10  	     complex_price   varchar2(40)    null
     [exec]  11  ,constraint dcs_price_p primary key (price_id)
     [exec]  12  ,constraint dcs_priccomplx_p_f foreign key (complex_price) references dcs_complex_price (complex_price_id)
     [exec]  13  ,constraint dcs_pricpric_lst_f foreign key (price_list) references dcs_price_list (price_list_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_cmplx_prc_idx on dcs_price (complex_price);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_price_idx1 on dcs_price (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_price_idx2 on dcs_price (price_list,sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_price_levels (
     [exec]   2  	     complex_price_id	     varchar2(40)    not null,
     [exec]   3  	     price_levels    varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcs_price_levels_p primary key (complex_price_id,sequence_num)
     [exec]   6  ,constraint dcs_lvlscomplx_p_f foreign key (complex_price_id) references dcs_complex_price (complex_price_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_price_level (
     [exec]   2  	     price_level_id  varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     quantity	     integer not null,
     [exec]   5  	     price   number(19,7)    not null
     [exec]   6  ,constraint dcs_price_level_p primary key (price_level_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_gen_fol_pl (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     name    varchar2(40)    not null,
     [exec]   5  	     parent  varchar2(40)    null,
     [exec]   6  	     description     varchar2(254)   null,
     [exec]   7  	     item_acl	     varchar2(1024)  null
     [exec]   8  ,constraint dcs_gen_fol_pl_p primary key (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_child_fol_pl (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     child_folder_id varchar2(40)    not null
     [exec]   5  ,constraint dcs_child_fol_pl_p primary key (folder_id,sequence_num)
     [exec]   6  ,constraint dcs_chilfoldr_d_f foreign key (folder_id) references dcs_gen_fol_pl (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_plfol_chld (
     [exec]   2  	     plfol_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     price_list_id   varchar2(40)    not null
     [exec]   5  ,constraint dcs_plfol_chld_p primary key (plfol_id,sequence_num)
     [exec]   6  ,constraint dcs_plfoplfol_d_f foreign key (plfol_id) references dcs_gen_fol_pl (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/sql/db_components/oracle/product_catalog_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/sql/product_catalog_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> 
     [exec] SQL> create table dcs_folder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     description     varchar2(254)   null,
     [exec]   8  	     name    varchar2(254)   not null,
     [exec]   9  	     path    varchar2(254)   not null,
     [exec]  10  	     parent_folder_id	     varchar2(40)    null
     [exec]  11  ,constraint dcs_folder_p primary key (folder_id)
     [exec]  12  ,constraint dcs_foldparnt_fl_f foreign key (parent_folder_id) references dcs_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index fldr_pfldrid_idx on dcs_folder (parent_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index fldr_end_dte_idx on dcs_folder (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index fldr_path_idx on dcs_folder (path);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index fldr_strt_dte_idx on dcs_folder (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_media (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     description     varchar2(254)   null,
     [exec]   8  	     name    varchar2(254)   not null,
     [exec]   9  	     path    varchar2(254)   not null,
     [exec]  10  	     parent_folder_id	     varchar2(40)    not null,
     [exec]  11  	     media_type      integer null
     [exec]  12  ,constraint dcs_media_p primary key (media_id)
     [exec]  13  ,constraint dcs_medparnt_fl_f foreign key (parent_folder_id) references dcs_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index med_pfldrid_idx on dcs_media (parent_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index med_end_dte_idx on dcs_media (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index med_path_idx on dcs_media (path);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index med_strt_dte_idx on dcs_media (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index med_type_idx on dcs_media (media_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_media_ext (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     url     varchar2(254)   not null
     [exec]   4  ,constraint dcs_media_ext_p primary key (media_id)
     [exec]   5  ,constraint dcs_medxtmed_d_f foreign key (media_id) references dcs_media (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_media_bin (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     length  integer not null,
     [exec]   4  	     last_modified   date    not null,
     [exec]   5  	     data    blob    not null
     [exec]   6  ,constraint dcs_media_bin_p primary key (media_id)
     [exec]   7  ,constraint dcs_medbnmed_d_f foreign key (media_id) references dcs_media (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_media_txt (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     length  integer not null,
     [exec]   4  	     last_modified   date    not null,
     [exec]   5  	     data    clob    not null
     [exec]   6  ,constraint dcs_media_txt_p primary key (media_id)
     [exec]   7  ,constraint dcs_medtxtmed_d_f foreign key (media_id) references dcs_media (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_category (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     catalog_id      varchar2(40)    null,
     [exec]   5  	     creation_date   date    null,
     [exec]   6  	     start_date      date    null,
     [exec]   7  	     end_date	     date    null,
     [exec]   8  	     display_name    varchar2(254)   null,
     [exec]   9  	     description     varchar2(254)   null,
     [exec]  10  	     long_description	     clob    null,
     [exec]  11  	     parent_cat_id   varchar2(40)    null,
     [exec]  12  	     category_type   integer null,
     [exec]  13  	     root_category   number(1,0)     null
     [exec]  14  ,constraint dcs_category_p primary key (category_id)
     [exec]  15  ,constraint dcs_category_c check (root_category in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index cat_end_dte_idx on dcs_category (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index cat_pcatid_idx on dcs_category (parent_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index cat_strt_dte_idx on dcs_category (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index cat_type_idx on dcs_category (category_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_category_acl (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     item_acl	     varchar2(1024)  null
     [exec]   4  ,constraint dcs_category_acl_p primary key (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_product (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     display_name    varchar2(254)   null,
     [exec]   8  	     description     varchar2(254)   null,
     [exec]   9  	     long_description	     clob    null,
     [exec]  10  	     parent_cat_id   varchar2(40)    null,
     [exec]  11  	     product_type    integer null,
     [exec]  12  	     admin_display   varchar2(254)   null,
     [exec]  13  	     nonreturnable   number(1,0)     null,
     [exec]  14  	     brand   varchar2(254)   null,
     [exec]  15  	     disallow_recommend      number(1,0)     null
     [exec]  16  ,constraint dcs_product_p primary key (product_id)
     [exec]  17  ,constraint dcs_product_c check (nonreturnable in (0,1))
     [exec]  18  ,constraint dcs_product1_c check (disallow_recommend in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index prd_end_dte_idx on dcs_product (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prd_pcatid_idx on dcs_product (parent_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prd_strt_dte_idx on dcs_product (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prd_type_idx on dcs_product (product_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_product_acl (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     item_acl	     varchar2(1024)  null
     [exec]   4  ,constraint dcs_product_acl_p primary key (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     display_name    varchar2(254)   null,
     [exec]   8  	     description     varchar2(254)   null,
     [exec]   9  	     sku_type	     integer null,
     [exec]  10  	     wholesale_price number(19,7)    null,
     [exec]  11  	     list_price      number(19,7)    null,
     [exec]  12  	     sale_price      number(19,7)    null,
     [exec]  13  	     on_sale number(1,0)     null,
     [exec]  14  	     tax_status      integer null,
     [exec]  15  	     fulfiller	     integer null,
     [exec]  16  	     item_acl	     varchar2(1024)  null,
     [exec]  17  	     nonreturnable   number(1,0)     null
     [exec]  18  ,constraint dcs_sku_p primary key (sku_id)
     [exec]  19  ,constraint dcs_sku_c check (on_sale in (0,1))
     [exec]  20  ,constraint dcs_sku1_c check (nonreturnable in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sku_end_dte_idx on dcs_sku (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sku_lstprice_idx on dcs_sku (list_price);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sku_sleprice_idx on dcs_sku (sale_price);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sku_strt_dte_idx on dcs_sku (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sku_type_idx on dcs_sku (sku_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_groups (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     child_prd_group varchar2(254)   null,
     [exec]   4  	     child_cat_group varchar2(254)   null,
     [exec]   5  	     related_cat_group	     varchar2(254)   null
     [exec]   6  ,constraint dcs_cat_groups_p primary key (category_id)
     [exec]   7  ,constraint dcs_catgcatgry_d_f foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_chldprd (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     child_prd_id    varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_chldprd_p primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_catccatgry_d_f foreign key (category_id) references dcs_category (category_id)
     [exec]   7  ,constraint dcs_catcchild_pr_f foreign key (child_prd_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_chldprd_cpi_idx on dcs_cat_chldprd (child_prd_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_chldprd_cid_idx on dcs_cat_chldprd (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_chldcat (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     child_cat_id    varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_chldcat_p primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_catcchild_ct_f foreign key (child_cat_id) references dcs_category (category_id)
     [exec]   7  ,constraint dcs_chlccatgry_d_f foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_chldcat_cci_idx on dcs_cat_chldcat (child_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_chldcat_cid_idx on dcs_cat_chldcat (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_ancestors (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     anc_cat_id      varchar2(40)    not null
     [exec]   4  ,constraint dcs_cat_ancestor_p primary key (category_id,anc_cat_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_ct_anc_cat_id on dcs_cat_ancestors (anc_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_ct_cat_id on dcs_cat_ancestors (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_rltdcat (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     related_cat_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_rltdcat_p primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_catrcatgry_d_f foreign key (category_id) references dcs_category (category_id)
     [exec]   7  ,constraint dcs_catrreltd_ct_f foreign key (related_cat_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_rltdcat_rci_idx on dcs_cat_rltdcat (related_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_rltdcat_cid_idx on dcs_cat_rltdcat (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_keywrds (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     keyword varchar2(254)   not null
     [exec]   5  ,constraint dcs_cat_keywrds_p primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_catkcatgry_d_f foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index cat_keywrds_idx on dcs_cat_keywrds (keyword);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_keywrds_cid_idx on dcs_cat_keywrds (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_media (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     template_id     varchar2(40)    null,
     [exec]   4  	     thumbnail_image_id      varchar2(40)    null,
     [exec]   5  	     small_image_id  varchar2(40)    null,
     [exec]   6  	     large_image_id  varchar2(40)    null
     [exec]   7  ,constraint dcs_cat_media_p primary key (category_id)
     [exec]   8  ,constraint dcs_catmcatgry_d_f foreign key (category_id) references dcs_category (category_id)
     [exec]   9  ,constraint dcs_catmlarg_mgd_f foreign key (large_image_id) references dcs_media (media_id)
     [exec]  10  ,constraint dcs_catmsmall_mg_f foreign key (small_image_id) references dcs_media (media_id)
     [exec]  11  ,constraint dcs_catmtemplt_d_f foreign key (template_id) references dcs_media (media_id)
     [exec]  12  ,constraint dcs_catmthumbnl__f foreign key (thumbnail_image_id) references dcs_media (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_mdia_lrimid_idx on dcs_cat_media (large_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_mdia_smimid_idx on dcs_cat_media (small_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_mdia_tmplid_idx on dcs_cat_media (template_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_mdia_thimid_idx on dcs_cat_media (thumbnail_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_aux_media (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     media_id	     varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_aux_medi_p primary key (category_id,tag)
     [exec]   6  ,constraint dcs_catxcatgry_d_f foreign key (category_id) references dcs_category (category_id)
     [exec]   7  ,constraint dcs_catxmdmed_d_f foreign key (media_id) references dcs_media (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_aux_mdia_mi_idx on dcs_cat_aux_media (media_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_aux_mdia_ci_idx on dcs_cat_aux_media (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_keywrds (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     keyword varchar2(254)   not null
     [exec]   5  ,constraint dcs_prd_keywrds_p primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prdkprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index prd_keywrds_idx on dcs_prd_keywrds (keyword);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_keywrds_pid_idx on dcs_prd_keywrds (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_media (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     template_id     varchar2(40)    null,
     [exec]   4  	     thumbnail_image_id      varchar2(40)    null,
     [exec]   5  	     small_image_id  varchar2(40)    null,
     [exec]   6  	     large_image_id  varchar2(40)    null
     [exec]   7  ,constraint dcs_prd_media_p primary key (product_id)
     [exec]   8  ,constraint dcs_prdmlarg_mgd_f foreign key (large_image_id) references dcs_media (media_id)
     [exec]   9  ,constraint dcs_prdmsmall_mg_f foreign key (small_image_id) references dcs_media (media_id)
     [exec]  10  ,constraint dcs_prdmtemplt_d_f foreign key (template_id) references dcs_media (media_id)
     [exec]  11  ,constraint dcs_prdmthumbnl__f foreign key (thumbnail_image_id) references dcs_media (media_id)
     [exec]  12  ,constraint dcs_prdmprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_mdia_lrimid_idx on dcs_prd_media (large_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_mdia_smimid_idx on dcs_prd_media (small_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_mdia_tmplid_idx on dcs_prd_media (template_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_mdia_thimid_idx on dcs_prd_media (thumbnail_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_aux_media (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     media_id	     varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_aux_medi_p primary key (product_id,tag)
     [exec]   6  ,constraint dcs_prdaxmdmed_d_f foreign key (media_id) references dcs_media (media_id)
     [exec]   7  ,constraint dcs_prdaprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_aux_mdia_mi_idx on dcs_prd_aux_media (media_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_aux_mdia_pi_idx on dcs_prd_aux_media (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_chldsku (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     sku_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_chldsku_p primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prdcprodct_d_f foreign key (product_id) references dcs_product (product_id)
     [exec]   7  ,constraint dcs_prdcsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_chldsku_sid_idx on dcs_prd_chldsku (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_chldsku_pid_idx on dcs_prd_chldsku (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_skuattr (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     attribute_name  varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_skuattr_p primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prdsprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_skuattr_pid_idx on dcs_prd_skuattr (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_groups (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     related_prd_group	     varchar2(254)   null,
     [exec]   4  	     upsl_prd_group  varchar2(254)   null
     [exec]   5  ,constraint dcs_prd_groups_p primary key (product_id)
     [exec]   6  ,constraint dcs_prdgprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_rltdprd (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     related_prd_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_rltdprd_p primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prdrprodct_d_f foreign key (product_id) references dcs_product (product_id)
     [exec]   7  ,constraint dcs_prdrreltd_pr_f foreign key (related_prd_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_rltdprd_rpi_idx on dcs_prd_rltdprd (related_prd_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_rltdprd_pid_idx on dcs_prd_rltdprd (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_upslprd (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     upsell_prd_id   varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_upslprd_p primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prduprodct_d_f foreign key (product_id) references dcs_product (product_id)
     [exec]   7  ,constraint dcs_prdureltd_pr_f foreign key (upsell_prd_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_upslprd_upi_idx on dcs_prd_upslprd (upsell_prd_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_ancestors (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     anc_cat_id      varchar2(40)    not null
     [exec]   4  ,constraint dcs_prd_ancestor_p primary key (product_id,anc_cat_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_prd_anc_cat_id on dcs_prd_ancestors (anc_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_prd_prd_id on dcs_prd_ancestors (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_attr (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     attribute_name  varchar2(42)    not null,
     [exec]   4  	     attribute_value varchar2(254)   not null
     [exec]   5  ,constraint dcs_sku_attr_p primary key (sku_id,attribute_name)
     [exec]   6  ,constraint dcs_skuttrsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sku_attr_skuid_idx on dcs_sku_attr (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_link (
     [exec]   2  	     sku_link_id     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     display_name    varchar2(254)   null,
     [exec]   8  	     description     varchar2(254)   null,
     [exec]   9  	     quantity	     integer not null,
     [exec]  10  	     bundle_item     varchar2(40)    not null,
     [exec]  11  	     item_acl	     varchar2(1024)  null
     [exec]  12  ,constraint dcs_sku_link_p primary key (sku_link_id)
     [exec]  13  ,constraint dcs_skulbundl_tm_f foreign key (bundle_item) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_link_bndlid_idx on dcs_sku_link (bundle_item);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index skl_end_dte_idx on dcs_sku_link (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index skl_strt_dte_idx on dcs_sku_link (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_bndllnk (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     sku_link_id     varchar2(40)    not null
     [exec]   5  ,constraint dcs_sku_bndllnk_p primary key (sku_id,sequence_num)
     [exec]   6  ,constraint dcs_skubsku_d_f foreign key (sku_id) references dcs_sku (sku_id)
     [exec]   7  ,constraint dcs_skubsku_lnkd_f foreign key (sku_link_id) references dcs_sku_link (sku_link_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_bndllnk_sli_idx on dcs_sku_bndllnk (sku_link_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sk_bndllnk_sid_idx on dcs_sku_bndllnk (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_media (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     template_id     varchar2(40)    null,
     [exec]   4  	     thumbnail_image_id      varchar2(40)    null,
     [exec]   5  	     small_image_id  varchar2(40)    null,
     [exec]   6  	     large_image_id  varchar2(40)    null
     [exec]   7  ,constraint dcs_sku_media_p primary key (sku_id)
     [exec]   8  ,constraint dcs_skumlarg_mgd_f foreign key (large_image_id) references dcs_media (media_id)
     [exec]   9  ,constraint dcs_skumsmall_mg_f foreign key (small_image_id) references dcs_media (media_id)
     [exec]  10  ,constraint dcs_skumtemplt_d_f foreign key (template_id) references dcs_media (media_id)
     [exec]  11  ,constraint dcs_skumthumbnl__f foreign key (thumbnail_image_id) references dcs_media (media_id)
     [exec]  12  ,constraint dcs_skumdsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_mdia_lrimid_idx on dcs_sku_media (large_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sk_mdia_smimid_idx on dcs_sku_media (small_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sk_mdia_tmplid_idx on dcs_sku_media (template_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sk_mdia_thimid_idx on dcs_sku_media (thumbnail_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_aux_media (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     media_id	     varchar2(40)    not null
     [exec]   5  ,constraint dcs_sku_aux_medi_p primary key (sku_id,tag)
     [exec]   6  ,constraint dcs_skuxmdmed_d_f foreign key (media_id) references dcs_media (media_id)
     [exec]   7  ,constraint dcs_skuxmdsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_aux_mdia_mi_idx on dcs_sku_aux_media (media_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sk_aux_mdia_si_idx on dcs_sku_aux_media (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_replace (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     replacement     varchar2(40)    not null
     [exec]   5  ,constraint dcs_sku_replace_p primary key (sku_id,sequence_num)
     [exec]   6  ,constraint dcs_skurplcsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_replace_sid_idx on dcs_sku_replace (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_conf (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     config_props    varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcs_sku_conf_p primary key (sku_id,sequence_num)
     [exec]   6  ,constraint dcs_skucnfsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_config_prop (
     [exec]   2  	     config_prop_id  varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     display_name    varchar2(40)    null,
     [exec]   5  	     description     varchar2(255)   null,
     [exec]   6  	     item_acl	     varchar2(1024)  null
     [exec]   7  ,constraint dcs_config_prop_p primary key (config_prop_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_conf_options (
     [exec]   2  	     config_prop_id  varchar2(40)    not null,
     [exec]   3  	     config_options  varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcs_conf_options_p primary key (config_prop_id,sequence_num)
     [exec]   6  ,constraint dcs_confconfg_pr_f foreign key (config_prop_id) references dcs_config_prop (config_prop_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_config_opt (
     [exec]   2  	     config_opt_id   varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     display_name    varchar2(40)    null,
     [exec]   5  	     description     varchar2(255)   null,
     [exec]   6  	     sku     varchar2(40)    null,
     [exec]   7  	     product varchar2(40)    null,
     [exec]   8  	     price   number(19,7)    null,
     [exec]   9  	     item_acl	     varchar2(1024)  null
     [exec]  10  ,constraint dcs_config_opt_p primary key (config_opt_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_conf_prod_idx on dcs_config_opt (product);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_conf_sku_idx on dcs_config_opt (sku);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_foreign_cat (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     name    varchar2(100)   null,
     [exec]   6  	     description     varchar2(255)   null,
     [exec]   7  	     host    varchar2(100)   null,
     [exec]   8  	     port    integer null,
     [exec]   9  	     base_url	     varchar2(255)   null,
     [exec]  10  	     return_url      varchar2(255)   null,
     [exec]  11  	     item_acl	     varchar2(1024)  null
     [exec]  12  ,constraint dcs_foreign_cat_p primary key (catalog_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/sql/db_components/oracle/promotion_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/sql/promotion_ddl.xml#2 $$Change: 660996 $
     [exec] SQL> 
     [exec] SQL> create table dcs_promotion (
     [exec]   2  	     promotion_id    varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     display_name    varchar2(254)   null,
     [exec]   8  	     description     varchar2(254)   null,
     [exec]   9  	     promotion_type  integer null,
     [exec]  10  	     enabled number(1,0)     null,
     [exec]  11  	     begin_usable    date    null,
     [exec]  12  	     end_usable      date    null,
     [exec]  13  	     priority	     integer null,
     [exec]  14  	     global  number(1,0)     null,
     [exec]  15  	     anon_profile    number(1,0)     null,
     [exec]  16  	     allow_multiple  number(1,0)     null,
     [exec]  17  	     uses    integer null,
     [exec]  18  	     rel_expiration  number(1,0)     null,
     [exec]  19  	     time_until_expire	     integer null
     [exec]  20  ,constraint dcs_promotion_p primary key (promotion_id)
     [exec]  21  ,constraint dcs_promotion1_c check (enabled in (0,1))
     [exec]  22  ,constraint dcs_promotion2_c check (global in (0,1))
     [exec]  23  ,constraint dcs_promotion3_c check (anon_profile in (0,1))
     [exec]  24  ,constraint dcs_promotion4_c check (allow_multiple in (0,1))
     [exec]  25  ,constraint dcs_promotion5_c check (rel_expiration in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index prmo_bgin_use_idx on dcs_promotion (begin_usable);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prmo_end_dte_idx on dcs_promotion (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prmo_end_use_idx on dcs_promotion (end_usable);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prmo_strt_dte_idx on dcs_promotion (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_promo_media (
     [exec]   2  	     promotion_id    varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     media_id	     varchar2(40)    not null
     [exec]   5  ,constraint dcs_promo_media_p primary key (promotion_id,tag)
     [exec]   6  ,constraint dcs_prommdmed_d_f foreign key (media_id) references dcs_media (media_id)
     [exec]   7  ,constraint dcs_prompromtn_d_f foreign key (promotion_id) references dcs_promotion (promotion_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index promo_mdia_mid_idx on dcs_promo_media (media_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index promo_mdia_pid_idx on dcs_promo_media (promotion_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_discount_promo (
     [exec]   2  	     promotion_id    varchar2(40)    not null,
     [exec]   3  	     calculator      varchar2(254)   not null,
     [exec]   4  	     adjuster	     number(19,7)    not null,
     [exec]   5  	     pmdl_rule	     clob    not null,
     [exec]   6  	     one_use number(1,0)     null
     [exec]   7  ,constraint dcs_discount_pro_p primary key (promotion_id)
     [exec]   8  ,constraint dcs_discpromtn_d_f foreign key (promotion_id) references dcs_promotion (promotion_id)
     [exec]   9  ,constraint dcs_discount_pro_c check (one_use in (0, 1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_promo_upsell (
     [exec]   2  	     promotion_id    varchar2(40)    not null,
     [exec]   3  	     upsell  number(1,0)     null
     [exec]   4  ,constraint dcs_promo_upsell_p primary key (promotion_id)
     [exec]   5  ,constraint dcs_proupsell_d_f foreign key (promotion_id) references dcs_promotion (promotion_id)
     [exec]   6  ,constraint dcs_promo_upsell_c check (upsell in (0, 1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_upsell_action (
     [exec]   2  	     action_id	     varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     name    varchar2(40)    not null,
     [exec]   5  	     upsell_prd_grp  clob    null
     [exec]   6  ,constraint dcs_upsell_actn_p primary key (action_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_close_qualif (
     [exec]   2  	     close_qualif_id varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     name    varchar2(40)    not null,
     [exec]   5  	     priority	     number(10)      null,
     [exec]   6  	     qualifier	     clob    null,
     [exec]   7  	     upsell_media    varchar2(40)    null,
     [exec]   8  	     upsell_action   varchar2(40)    null
     [exec]   9  ,constraint dcs_close_qualif_p primary key (close_qualif_id)
     [exec]  10  ,constraint dcs_cq_media_d_f foreign key (upsell_media) references dcs_media (media_id)
     [exec]  11  ,constraint dcs_cq_action_d_f foreign key (upsell_action) references dcs_upsell_action (action_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_closequalif2_x on dcs_close_qualif (upsell_media);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_closequalif1_x on dcs_close_qualif (upsell_action);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prm_cls_qlf (
     [exec]   2  	     promotion_id    varchar2(40)    not null,
     [exec]   3  	     closeness_qualif	     varchar2(40)    not null
     [exec]   4  ,constraint dcs_promo_cq_d_f foreign key (promotion_id) references dcs_promotion (promotion_id)
     [exec]   5  ,constraint dcs_prmclsqlf_d_f foreign key (closeness_qualif) references dcs_close_qualif (close_qualif_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_prm_cls_qlf2_x on dcs_prm_cls_qlf (promotion_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_prm_cls_qlf1_x on dcs_prm_cls_qlf (closeness_qualif);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_upsell_prods (
     [exec]   2  	     action_id	     varchar2(40)    not null,
     [exec]   3  	     product_id      varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null
     [exec]   5  ,constraint dcs_upsell_prods_p primary key (action_id,product_id)
     [exec]   6  ,constraint dcs_ups_prod_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_upsellprods1_x on dcs_upsell_prods (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Custom Catalogs
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/CustomCatalogs/sql/db_components/oracle/custom_catalog_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/CustomCatalogs/sql/custom_catalog_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> 
     [exec] SQL> create table dcs_catalog (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     display_name    varchar2(254)   null,
     [exec]   5  	     creation_date   date    null,
     [exec]   6  	     last_mod_date   date    null,
     [exec]   7  	     migration_status	     number(3,0)     null,
     [exec]   8  	     migration_index number(10)      null,
     [exec]   9  	     item_acl	     varchar2(1024)  null
     [exec]  10  ,constraint dcs_catalog_p primary key (catalog_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_root_cats (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     root_cat_id     varchar2(40)    not null
     [exec]   4  ,constraint dcs_root_cats_p primary key (catalog_id,root_cat_id)
     [exec]   5  ,constraint dcs_rotccatlg_d_f foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   6  ,constraint dcs_rotcrot_ctd_f foreign key (root_cat_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_rootcatscat_id on dcs_root_cats (root_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_allroot_cats (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     root_cat_id     varchar2(40)    not null
     [exec]   4  ,constraint dcs_allroot_cats_p primary key (catalog_id,root_cat_id)
     [exec]   5  ,constraint dcs_allrcatlg_d_f foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   6  ,constraint dcs_allrrot_ctd_f foreign key (root_cat_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_allrt_cats_id on dcs_allroot_cats (root_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_root_subcats (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     sub_catalog_id  varchar2(40)    not null
     [exec]   4  ,constraint dcs_root_subcats_p primary key (catalog_id,sub_catalog_id)
     [exec]   5  ,constraint dcs_rotscatlg_d_f foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   6  ,constraint dcs_rotssub_ctlg_f foreign key (sub_catalog_id) references dcs_catalog (catalog_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_rtsubcats_id on dcs_root_subcats (sub_catalog_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sub_catalogs (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     sub_catalog_id  varchar2(40)    not null
     [exec]   4  ,constraint dcs_sub_catalogs_p primary key (catalog_id,sub_catalog_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_category_info (
     [exec]   2  	     category_info_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     item_acl	     varchar2(1024)  null
     [exec]   5  ,constraint dcs_category_inf_p primary key (category_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_product_info (
     [exec]   2  	     product_info_id varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     parent_cat_id   varchar2(40)    null,
     [exec]   5  	     item_acl	     varchar2(1024)  null
     [exec]   6  ,constraint dcs_product_info_p primary key (product_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_info (
     [exec]   2  	     sku_info_id     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     item_acl	     varchar2(1024)  null
     [exec]   5  ,constraint dcs_sku_info_p primary key (sku_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_subcats (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     catalog_id      varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_subcats_p primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_catscatlg_d_f foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   7  ,constraint dcs_catscatgry_d_f foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_catsubcatlogid on dcs_cat_subcats (catalog_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_subroots (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     sub_category_id varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_subroots_p primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_subrtscatgry_f foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_catinfo (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null,
     [exec]   4  	     category_info_id	     varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_catinfo_p primary key (category_id,catalog_id)
     [exec]   6  ,constraint dcs_infocatgry_d_f foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_catinfo_anc (
     [exec]   2  	     category_info_id	     varchar2(40)    not null,
     [exec]   3  	     anc_cat_id      varchar2(40)    not null
     [exec]   4  ,constraint dcs_catinfo_anc_p primary key (category_info_id,anc_cat_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_prdinfo (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null,
     [exec]   4  	     product_info_id varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_prdinfo_p primary key (product_id,catalog_id)
     [exec]   6  ,constraint dcs_prdpprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prdinfo_rdprd (
     [exec]   2  	     product_info_id varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     related_prd_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_prdinfo_rdpr_p primary key (product_info_id,sequence_num)
     [exec]   6  ,constraint dcs_prdireltd_pr_f foreign key (related_prd_id) references dcs_product (product_id)
     [exec]   7  ,constraint dcs_prdiprodct_n_f foreign key (product_info_id) references dcs_product_info (product_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_prdrelatedinfo on dcs_prdinfo_rdprd (related_prd_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prdinfo_anc (
     [exec]   2  	     product_info_id varchar2(40)    not null,
     [exec]   3  	     anc_cat_id      varchar2(40)    not null
     [exec]   4  ,constraint dcs_prdinfo_anc_p primary key (product_info_id,anc_cat_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_skuinfo (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null,
     [exec]   4  	     sku_info_id     varchar2(40)    not null
     [exec]   5  ,constraint dcs_sku_skuinfo_p primary key (sku_id,catalog_id)
     [exec]   6  ,constraint dcs_skusknfsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_skuinfo_rplc (
     [exec]   2  	     sku_info_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     replacement     varchar2(40)    not null
     [exec]   5  ,constraint dcs_skuinfo_rplc_p primary key (sku_info_id,sequence_num)
     [exec]   6  ,constraint dcs_skunsku_nfd_f foreign key (sku_info_id) references dcs_sku_info (sku_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_gen_fol_cat (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     name    varchar2(40)    not null,
     [exec]   5  	     parent  varchar2(40)    null,
     [exec]   6  	     description     varchar2(254)   null,
     [exec]   7  	     item_acl	     varchar2(1024)  null
     [exec]   8  ,constraint dcs_gen_fol_cat_p primary key (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_child_fol_cat (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     child_folder_id varchar2(40)    not null
     [exec]   5  ,constraint dcs_child_fol_ca_p primary key (folder_id,sequence_num)
     [exec]   6  ,constraint dcs_catlfoldr_d_f foreign key (folder_id) references dcs_gen_fol_cat (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_catfol_chld (
     [exec]   2  	     catfol_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     catalog_id      varchar2(40)    not null
     [exec]   5  ,constraint dcs_catfol_chld_p primary key (catfol_id,sequence_num)
     [exec]   6  ,constraint dcs_catfcatfl_d_f foreign key (catfol_id) references dcs_gen_fol_cat (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_dir_anc_ctlgs (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     anc_catalog_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_dirancctlgs_pk primary key (catalog_id,sequence_num)
     [exec]   6  ,constraint dcs_dirancctlgs_f1 foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   7  ,constraint dcs_dirancctlgs_f2 foreign key (anc_catalog_id) references dcs_catalog (catalog_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_dirancctlg_idx on dcs_dir_anc_ctlgs (anc_catalog_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_ind_anc_ctlgs (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     anc_catalog_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_indancctlgs_pk primary key (catalog_id,sequence_num)
     [exec]   6  ,constraint dcs_indancctlgs_f1 foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   7  ,constraint dcs_indancctlgs_f2 foreign key (anc_catalog_id) references dcs_catalog (catalog_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_indanctlg_idx on dcs_ind_anc_ctlgs (anc_catalog_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_ctlg_anc_cats (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     category_id     varchar2(40)    not null
     [exec]   5  ,constraint dcs_ctlganccats_pk primary key (catalog_id,sequence_num)
     [exec]   6  ,constraint dcs_ctlganccats_f1 foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   7  ,constraint dcs_ctlganccats_f2 foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_ctlgancat_idx on dcs_ctlg_anc_cats (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_prnt_ctlg (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     parent_ctlg_id  varchar2(40)    not null
     [exec]   4  ,constraint dcs_catprntctlg_pk primary key (category_id)
     [exec]   5  ,constraint dcs_catprntctlg_f2 foreign key (parent_ctlg_id) references dcs_catalog (catalog_id)
     [exec]   6  ,constraint dcs_catprntctlg_f1 foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index cat_pctlgid_idx on dcs_cat_prnt_ctlg (parent_ctlg_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_anc_cats (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     anc_category_id varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_anccats_pk primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_cat_anccats_f1 foreign key (category_id) references dcs_category (category_id)
     [exec]   7  ,constraint dcs_cat_anccats_f2 foreign key (anc_category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_catanccat_idx on dcs_cat_anc_cats (anc_category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_prnt_cats (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null,
     [exec]   4  	     category_id     varchar2(40)    not null
     [exec]   5  ,constraint dcs_prdprntcats_pk primary key (product_id,catalog_id)
     [exec]   6  ,constraint dcs_prdprntcats_f2 foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   7  ,constraint dcs_prdprntcats_f3 foreign key (category_id) references dcs_category (category_id)
     [exec]   8  ,constraint dcs_prdprntcats_f1 foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_prnt_cat_pi_idx on dcs_prd_prnt_cats (catalog_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_prnt_cat_ci_idx on dcs_prd_prnt_cats (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_anc_cats (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     category_id     varchar2(40)    not null
     [exec]   5  ,constraint dcs_prdanc_cats_pk primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prdanc_cats_f2 foreign key (category_id) references dcs_category (category_id)
     [exec]   7  ,constraint dcs_prdanc_cats_f1 foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_prdanccat_idx on dcs_prd_anc_cats (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_catalogs (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null
     [exec]   4  ,constraint dcs_cat_catalgs_pk primary key (category_id,catalog_id)
     [exec]   5  ,constraint dcs_cat_catalgs_f2 foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   6  ,constraint dcs_cat_catalgs_f1 foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_catctlgs_idx on dcs_cat_catalogs (catalog_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_catalogs (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null
     [exec]   4  ,constraint dcs_prd_catalgs_pk primary key (product_id,catalog_id)
     [exec]   5  ,constraint dcs_prd_catalgs_f2 foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   6  ,constraint dcs_prd_catalgs_f1 foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_prd_ctlgs_idx on dcs_prd_catalogs (catalog_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_catalogs (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null
     [exec]   4  ,constraint dcs_sku_catalgs_pk primary key (sku_id,catalog_id)
     [exec]   5  ,constraint dcs_sku_catalgs_f2 foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   6  ,constraint dcs_sku_catalgs_f1 foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_sku_ctlgs_idx on dcs_sku_catalogs (catalog_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Search
     [exec] SQL> @D:\ATG\ATG9.4\home/../DAF/Search/common/sql/db_components/oracle/refinement_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DAF/version/9.4/Search/common/src/sql/refinement_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new refinement repository
     [exec] SQL> -- Add the SRCH_REFINE_ELEMS table, which lists refine elements
     [exec] SQL> 
     [exec] SQL> create table srch_refine_elems (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     type    number(10)      null,
     [exec]   4  	     label   varchar2(254)   not null,
     [exec]   5  	     property	     varchar2(254)   not null,
     [exec]   6  	     property_type   number(10)      not null,
     [exec]   7  	     range_type      number(10)      not null,
     [exec]   8  	     desired number(10)      null,
     [exec]   9  	     minimum number(10)      null,
     [exec]  10  	     incr    number(10)      null,
     [exec]  11  	     sort_type	     number(10)      null,
     [exec]  12  	     levels  number(10)      null,
     [exec]  13  	     parent_refine_elem      varchar2(40)    null,
     [exec]  14  	     priority	     number(10)      null,
     [exec]  15  	     remove_when_used	     number(3)	     not null,
     [exec]  16  	     display_fragment	     varchar2(254)   null,
     [exec]  17  	     max_values      number(10)      null,
     [exec]  18  	     round_free_range	     number(10)      null
     [exec]  19  ,constraint srch_refine_elem_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFINE_SUBELS table, which lists any child refine elementsfor a refine element.
     [exec] SQL> 
     [exec] SQL> create table srch_refine_subels (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     refine_element  varchar2(40)    null
     [exec]   5  ,constraint srch_refine_subl_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFEL_ORDER table which lists the explicit order values for a refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refel_order (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     order_value     varchar2(254)   not null
     [exec]   5  ,constraint srch_refel_order_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFEL_RANGE table which lists the explicit range values for a refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refel_range (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     range_value     varchar2(254)   not null
     [exec]   5  ,constraint srch_refel_range_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFEL_SELECT table which lists the select values for a refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refel_select (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     select_value    varchar2(254)   not null
     [exec]   5  ,constraint srch_refel_selct_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFEL_EXCLUDE table which lists the excluded values for a refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refel_exclude (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     exclude_value   varchar2(254)   not null
     [exec]   4  ,constraint srch_refel_excl_p primary key (id,exclude_value));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_SORT_OPTIONS table which lists available sort options
     [exec] SQL> 
     [exec] SQL> create table srch_sort_options (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     label   varchar2(254)   not null,
     [exec]   4  	     property	     varchar2(254)   not null,
     [exec]   5  	     property_type   number(10)      not null,
     [exec]   6  	     ascending	     number(3)	     not null
     [exec]   7  ,constraint srch_sort_opts_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- The SRCH_REFINE_CONFIG table, which lists the generated refinement configurations.
     [exec] SQL> 
     [exec] SQL> create table srch_refine_config (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     type    number(10)      not null,
     [exec]   4  	     refine_cfg_name varchar2(80)    null
     [exec]   5  ,constraint srch_refine_cfg_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- List of refine elements that belong to a refine config
     [exec] SQL> 
     [exec] SQL> create table srch_refcfg_elems (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     refine_element  varchar2(40)    null
     [exec]   5  ,constraint srch_refcfg_els_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the list of sort options per refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refine_sort (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     sort_option     varchar2(40)    not null
     [exec]   4  ,constraint srch_refine_sort_p primary key (id,sort_option));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- ============================================= Search Merchandising==================================
     [exec] SQL> -- Add the SRCH_CFG_DIM table, dimensionNode
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_dimnode (
     [exec]   2  	     dim_id  varchar2(40)    not null,
     [exec]   3  	     dim_type	     number(10)      not null,
     [exec]   4  	     dim_name	     varchar2(254)   not null,
     [exec]   5  	     dim_desc	     varchar2(254)   null,
     [exec]   6  	     dim_value	     varchar2(254)   null,
     [exec]   7  	     dim_service     varchar2(254)   null
     [exec]   8  ,constraint srch_cfg_dim_p primary key (dim_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_DTINFO table, dimensionTreeInfo
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_dtinfo (
     [exec]   2  	     dti_id  varchar2(40)    not null,
     [exec]   3  	     dti_name	     varchar2(254)   not null,
     [exec]   4  	     dti_desc	     varchar2(254)   null,
     [exec]   5  	     dti_app number(10)      not null,
     [exec]   6  	     dti_root_id     varchar2(40)    null
     [exec]   7  ,constraint srch_cfg_dti_p primary key (dti_id)
     [exec]   8  ,constraint srch_cfg_dim1_f foreign key (dti_root_id) references srch_cfg_dimnode (dim_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_dim1_x on srch_cfg_dtinfo (dti_root_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_FOL table, dimensionFolder
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_fol (
     [exec]   2  	     fol_id  varchar2(40)    not null,
     [exec]   3  	     fol_dim_svc     varchar2(40)    null
     [exec]   4  ,constraint srch_cfg_fol_p primary key (fol_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_RULE table, searchRule
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rule (
     [exec]   2  	     r_id    varchar2(40)    not null,
     [exec]   3  	     r_type  number(10)      not null,
     [exec]   4  	     r_display_name  varchar2(254)   null,
     [exec]   5  	     r_enabled	     number(3)	     not null,
     [exec]   6  	     r_rule_type     number(10)      null,
     [exec]   7  	     r_rule  clob    not null,
     [exec]   8  	     r_action	     clob    not null,
     [exec]   9  	     r_desc  varchar2(254)   null
     [exec]  10  ,constraint srch_cfg_rule_p primary key (r_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_SYNSET table, synset
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_synset (
     [exec]   2  	     syn_id  varchar2(40)    not null,
     [exec]   3  	     syn_base_term   varchar2(254)   not null,
     [exec]   4  	     syn_reciprocal  number(3)	     not null
     [exec]   5  ,constraint srch_cfg_synset_p primary key (syn_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_APROP table, availableRankingProperty
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_aprop (
     [exec]   2  	     arp_id  varchar2(40)    not null,
     [exec]   3  	     arp_name	     varchar2(254)   not null,
     [exec]   4  	     arp_data_type   number(10)      not null,
     [exec]   5  	     arp_value_type  number(10)      not null,
     [exec]   6  	     arp_app number(10)      not null
     [exec]   7  ,constraint srch_cfg_aprop_p primary key (arp_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_RPROP table, rankingProperty
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rprop (
     [exec]   2  	     rp_id   varchar2(40)    not null,
     [exec]   3  	     rp_arp  varchar2(40)    not null,
     [exec]   4  	     rp_def_rank     number(10)      not null,
     [exec]   5  	     rp_weighting    number(5,2)     not null,
     [exec]   6  	     rp_rng_met      number(10)      null
     [exec]   7  ,constraint srch_cfg_rprop_p primary key (rp_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_CFG table, genericSearchConfig
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_cfg (
     [exec]   2  	     cfg_id  varchar2(40)    not null,
     [exec]   3  	     cfg_app number(10)      not null,
     [exec]   4  	     cfg_locale      varchar2(40)    null,
     [exec]   5  	     cfg_rm  varchar2(40)    null,
     [exec]   6  	     cfg_base_id     varchar2(40)    null,
     [exec]   7  	     use_base_rankprps	     number(3)	     not null
     [exec]   8  ,constraint srch_cfg_cfg_p primary key (cfg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_CFG table, genericSearchConfig.baseSearchConfig & derivedSearchConfigs
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_base (
     [exec]   2  	     cfg_id  varchar2(40)    not null,
     [exec]   3  	     cfg_base_id     varchar2(40)    not null
     [exec]   4  ,constraint srch_cfg_base_p primary key (cfg_id)
     [exec]   5  ,constraint srch_cfg_base1_f foreign key (cfg_id) references srch_cfg_dimnode (dim_id)
     [exec]   6  ,constraint srch_cfg_base2_f foreign key (cfg_base_id) references srch_cfg_dimnode (dim_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_base1_x on srch_cfg_base (cfg_base_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_FOL_CHLDCFGS table, dimensionFolder.searchConfigs (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_fol_chldcfgs (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     srch_cfg_id     varchar2(40)    not null,
     [exec]   4  	     chldcfgs_seq    number(10)      not null
     [exec]   5  ,constraint srch_cfg_ccfgs_p primary key (folder_id,chldcfgs_seq)
     [exec]   6  ,constraint srch_cfg_cfg1_f foreign key (folder_id) references srch_cfg_dimnode (dim_id)
     [exec]   7  ,constraint srch_cfg_cfg2_f foreign key (srch_cfg_id) references srch_cfg_dimnode (dim_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cffolchld1_x on srch_cfg_fol_chldcfgs (srch_cfg_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_FOL_CHLDFOL table, dimensionFolder.childDimensionFolders (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_fol_chldfol (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     chldfol_seq     number(10)      not null,
     [exec]   4  	     chld_fol_id     varchar2(40)    not null
     [exec]   5  ,constraint srch_cfg_chldfol_p primary key (folder_id,chldfol_seq)
     [exec]   6  ,constraint srch_cfg_fol_f foreign key (folder_id) references srch_cfg_dimnode (dim_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_RPSET table, genericSearchConfig.rankingProperties (set)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rpset (
     [exec]   2  	     rpset_cfg_id    varchar2(40)    not null,
     [exec]   3  	     rpset_rp_id     varchar2(40)    not null
     [exec]   4  ,constraint srch_cfg_rpset_p primary key (rpset_cfg_id,rpset_rp_id)
     [exec]   5  ,constraint srch_cfg_rpset1_f foreign key (rpset_cfg_id) references srch_cfg_cfg (cfg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_VRPSET table, genericSearchConfig.variableRankingProperties (set)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_vrpset (
     [exec]   2  	     vrpset_cfg_id   varchar2(40)    not null,
     [exec]   3  	     vrpset_rp_id    varchar2(40)    not null
     [exec]   4  ,constraint srch_cfg_vrpset_p primary key (vrpset_cfg_id,vrpset_rp_id)
     [exec]   5  ,constraint srch_cfg_vrpset1_f foreign key (vrpset_cfg_id) references srch_cfg_cfg (cfg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_SYNLNK table, genericSearchConfig.synsets (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_synlnk (
     [exec]   2  	     slnk_cfg_id     varchar2(40)    not null,
     [exec]   3  	     slnk_syn_id     varchar2(40)    not null,
     [exec]   4  	     slnk_seq	     number(10)      not null
     [exec]   5  ,constraint srch_cfg_synlnk_p primary key (slnk_cfg_id,slnk_seq)
     [exec]   6  ,constraint srch_cfg_synlnk1_f foreign key (slnk_cfg_id) references srch_cfg_cfg (cfg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_DRULE table, genericSearchConfig.disabledBaseRules (set)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_drule (
     [exec]   2  	     dr_cfg_id	     varchar2(40)    not null,
     [exec]   3  	     dr_id   varchar2(40)    not null
     [exec]   4  ,constraint srch_cfg_drule_p primary key (dr_cfg_id,dr_id)
     [exec]   5  ,constraint srch_cfg_drule1_f foreign key (dr_cfg_id) references srch_cfg_cfg (cfg_id)
     [exec]   6  ,constraint srch_cfg_drule2_f foreign key (dr_id) references srch_cfg_rule (r_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_drule1_x on srch_cfg_drule (dr_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_DSYN table, genericSearchConfig.disabledBaseSynsets (set)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_dsyn (
     [exec]   2  	     ds_cfg_id	     varchar2(40)    not null,
     [exec]   3  	     ds_id   varchar2(40)    not null
     [exec]   4  ,constraint srch_cfg_dsyn_p primary key (ds_cfg_id)
     [exec]   5  ,constraint srch_cfg_dsyn1_f foreign key (ds_cfg_id) references srch_cfg_cfg (cfg_id)
     [exec]   6  ,constraint srch_cfg_dsyn2_f foreign key (ds_id) references srch_cfg_synset (syn_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_dsyn1_x on srch_cfg_dsyn (ds_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_ERULE table, genericSearchConfig.exclusionRules (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_erule (
     [exec]   2  	     er_cfg_id	     varchar2(40)    not null,
     [exec]   3  	     er_id   varchar2(40)    not null,
     [exec]   4  	     er_seq  number(10)      not null
     [exec]   5  ,constraint srch_cfg_erule_p primary key (er_id,er_seq)
     [exec]   6  ,constraint srch_cfg_erule1_f foreign key (er_cfg_id) references srch_cfg_cfg (cfg_id)
     [exec]   7  ,constraint srch_cfg_erule2_f foreign key (er_id) references srch_cfg_rule (r_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_erule1_x on srch_cfg_erule (er_cfg_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_RRULE table, genericSearchConfig.redirectionRules (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rrule (
     [exec]   2  	     rr_cfg_id	     varchar2(40)    not null,
     [exec]   3  	     rr_id   varchar2(40)    not null,
     [exec]   4  	     rr_seq  number(10)      not null
     [exec]   5  ,constraint srch_cfg_rrule_p primary key (rr_id,rr_seq)
     [exec]   6  ,constraint srch_cfg_rrule1_f foreign key (rr_cfg_id) references srch_cfg_cfg (cfg_id)
     [exec]   7  ,constraint srch_cfg_rrule2_f foreign key (rr_id) references srch_cfg_rule (r_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_rrule1_x on srch_cfg_rrule (rr_cfg_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_PRULE table, genericSearchConfig.positioningRules (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_prule (
     [exec]   2  	     pr_cfg_id	     varchar2(40)    not null,
     [exec]   3  	     pr_id   varchar2(40)    not null,
     [exec]   4  	     pr_seq  number(10)      not null
     [exec]   5  ,constraint srch_cfg_prule_p primary key (pr_id,pr_seq)
     [exec]   6  ,constraint srch_cfg_prule1_f foreign key (pr_cfg_id) references srch_cfg_cfg (cfg_id)
     [exec]   7  ,constraint srch_cfg_prule2_f foreign key (pr_id) references srch_cfg_rule (r_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_prule1_x on srch_cfg_prule (pr_cfg_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_TERM table, synset.terms
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_term (
     [exec]   2  	     trm_syn_id      varchar2(40)    not null,
     [exec]   3  	     trm_term	     varchar2(254)   not null
     [exec]   4  ,constraint srch_cfg_term_p primary key (trm_syn_id,trm_term)
     [exec]   5  ,constraint srch_cfg_term_f foreign key (trm_syn_id) references srch_cfg_synset (syn_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_RANK table, rankingProperty.valueRanks
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rank (
     [exec]   2  	     rank_rp_id      varchar2(40)    not null,
     [exec]   3  	     rank_value      varchar2(254)   not null,
     [exec]   4  	     rank_rank	     number(10)      not null
     [exec]   5  ,constraint srch_cfg_rank_p primary key (rank_rp_id,rank_value)
     [exec]   6  ,constraint srch_cfg_rank_f foreign key (rank_rp_id) references srch_cfg_rprop (rp_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DAF/Search/Index/sql/db_components/oracle/search_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DAF/version/9.4/Search/Index/src/sql/search_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new search schema.
     [exec] SQL> -- Add the search_config... used to track which generation is the currentgeneration.
     [exec] SQL> 
     [exec] SQL> create table srch_config (
     [exec]   2  	     config_path     varchar2(254)   not null,
     [exec]   3  	     generation      number(10)      not null,
     [exec]   4  	     claimed_generation      number(10)      null,
     [exec]   5  	     nxt_inc_generation      number(10)      null,
     [exec]   6  	     uniq_server_id  varchar2(254)   null,
     [exec]   7  	     last_activity   date    null,
     [exec]   8  	     last_full_index date    null,
     [exec]   9  	     last_incr_index date    null
     [exec]  10  ,constraint srch_config_p primary key (config_path));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Holds an association of a config path and repository name. Usedto reduce the length of the primary key for srch_update_queue
     [exec] SQL> 
     [exec] SQL> create table srch_config_repo (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     config_path     varchar2(254)   not null,
     [exec]   4  	     repository_path varchar2(254)   not null
     [exec]   5  ,constraint srch_config_repo_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the search_update_queue... used by the IncrementalLoader to trackrepository changes.
     [exec] SQL> 
     [exec] SQL> create table srch_update_queue (
     [exec]   2  	     repository_id   varchar2(254)   not null,
     [exec]   3  	     config_repo_id  varchar2(40)    not null,
     [exec]   4  	     generation      number(10)      not null,
     [exec]   5  	     item_desc_name  varchar2(64)    not null,
     [exec]   6  	     change_type     number(10)      not null
     [exec]   7  ,constraint srch_up_queue_p primary key (repository_id,config_repo_id,generation,item_desc_name)
     [exec]   8  ,constraint srch_upq_cfrp_f1 foreign key (config_repo_id) references srch_config_repo (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_updateque1_x on srch_update_queue (config_repo_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the search_update_queue... used by the IncrementalLoader to trackrepository changes.
     [exec] SQL> 
     [exec] SQL> create table srch_update_vqueue (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     config_path     varchar2(254)   not null,
     [exec]   4  	     generation      number(10)      not null,
     [exec]   5  	     repository_path varchar2(254)   not null,
     [exec]   6  	     item_desc_name  varchar2(64)    not null,
     [exec]   7  	     repository_id   varchar2(254)   not null,
     [exec]   8  	     change_type     number(10)      not null,
     [exec]   9  	     dev_line_id     varchar2(40)    not null,
     [exec]  10  	     asset_version   number(10)      not null
     [exec]  11  ,constraint srch_up_vqueue_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_up_vqueue on srch_update_vqueue (config_path,generation,repository_path,item_desc_name,repository_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/Search/common/sql/db_components/oracle/commerce_refinement_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/Search/common/sql/commerce_refinement_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new catalog-extended refinement repository
     [exec] SQL> 
     [exec] SQL> create table dcs_refine_config (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     inherit_global  number(3)	     not null,
     [exec]   4  	     inherit_category	     number(3)	     not null,
     [exec]   5  	     can_child_inherit	     number(3)	     not null,
     [exec]   6  	     is_global	     number(3)	     not null
     [exec]   7  ,constraint dcs_refine_cfg_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_refcfg_genels (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     refine_element  varchar2(40)    not null
     [exec]   5  ,constraint dcs_rfcfg_genels_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_refcfg (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     refine_config_id	     varchar2(40)    null
     [exec]   4  ,constraint dcs_cat_refcfg_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/Search/CustomCatalogs/common/sql/db_components/oracle/custom_catalog_refinement_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/Search/CustomCatalogs/common/sql/custom_catalog_refinement_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new catalog-extended refinement repository
     [exec] SQL> 
     [exec] SQL> create table dcs_refcfg_custom (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     inherit_catalog number(3)	     not null
     [exec]   4  ,constraint dcs_rfcf_custom_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_catinfo_refcfg (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     refine_config_id	     varchar2(40)    not null
     [exec]   4  ,constraint dcs_catinf_rfcfg_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_catalog_refcfg (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     refine_config_id	     varchar2(40)    null
     [exec]   4  ,constraint dcs_cata_rfcfg_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Castorama
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_magasin.sql
     [exec] SQL> CREATE TABLE CASTO_REGION_MESSAGES (
     [exec]   2  	     MESSAGE_ID 						     VARCHAR2(40),
     [exec]   3  	     REGION_ID							     VARCHAR2(40),
     [exec]   4  	     SEQ							     INTEGER,
     [exec]   5  	     PRIMARY KEY (MESSAGE_ID, REGION_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MESSAGES (
     [exec]   2  	     MESSAGE_ID 						     VARCHAR2(40),
     [exec]   3  	     MESSAGE_NOM						     VARCHAR2(50),
     [exec]   4  	     MESSAGE_TEXTE						     VARCHAR2(4000),
     [exec]   5  	     PRIMARY KEY (MESSAGE_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_DEPARTEMENT_OLD (
     [exec]   2  	     ID 								     VARCHAR2(40)	       NOT NULL,
     [exec]   3  	     NUMERO								     VARCHAR2(40)	       NOT NULL,
     [exec]   4  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_DEPARTEMENT(
     [exec]   2  	     ID 								     VARCHAR2(40)			  NOT NULL,
     [exec]   3  	     NUMERO								     VARCHAR2(40)			  NOT NULL,
     [exec]   4  	     NOM								     VARCHAR2(100),
     [exec]   5  	     REGION_ID								     VARCHAR2(40),
     [exec]   6  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ADRESSE (
     [exec]   2  	     ID 	    VARCHAR2(40)		     NOT NULL,
     [exec]   3  	     DEPARTEMENTID  VARCHAR2(40)		     NOT NULL,
     [exec]   4  	     VILLE	    VARCHAR2(128)			     NOT NULL,
     [exec]   5  	     CP 	    VARCHAR2(10),
     [exec]   6  	     RUE	    VARCHAR2(128),
     [exec]   7  	     TEL	    VARCHAR2(32),
     [exec]   8  	     FAX	    VARCHAR2(32),
     [exec]   9  	     COMMENTAIRE    VARCHAR2(500),
     [exec]  10  	     PRIMARY KEY (ID),
     [exec]  11  	     --FOREIGN KEY (DEPARTEMENTID) REFERENCES CASTO_DEPARTEMENT_OLD (ID),
     [exec]  12  	     CONSTRAINT FK_DEPARTEMENT FOREIGN KEY (DEPARTEMENTID) REFERENCES CASTO_DEPARTEMENT (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ENTITE (
     [exec]   2  	     ID 	  VARCHAR2(40)		     NOT NULL,
     [exec]   3  	     ADRESSEID	  VARCHAR2(40)		     NOT NULL,
     [exec]   4  	     NOM	  VARCHAR2(64)		     NOT NULL,
     [exec]   5  	     LOGIN_ADMIN  VARCHAR2(64)		     NOT NULL,
     [exec]   6  	     PASS_ADMIN   VARCHAR2(64)		     NOT NULL,
     [exec]   7  	     EMAIL	  VARCHAR2(255),
     [exec]   8  	     PRIMARY KEY (ID),
     [exec]   9  	     CONSTRAINT FK_ADRESSE FOREIGN KEY (ADRESSEID) REFERENCES CASTO_ADRESSE (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_COMMANDE_SERVICE (
     [exec]   2  	     ID_SERVICE 					     VARCHAR2(40)	       NOT NULL,
     [exec]   3  	     LIBELLE						     VARCHAR2(255)	  NOT NULL,
     [exec]   4  	     URL_BOUTON 					     VARCHAR2(255)	  NOT NULL,
     [exec]   5  	     SHIPPING_GROUP_NAME				     VARCHAR2(255)	  NOT NULL,
     [exec]   6  	     PRIMARY KEY (ID_SERVICE));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN (
     [exec]   2  	     ID 						     VARCHAR2(40)	   NOT NULL,
     [exec]   3  	     ENTITE_ID						     VARCHAR2(40)	   NOT NULL,
     [exec]   4  	     NOM						     VARCHAR2(64),
     [exec]   5  	     URL_IMG_PLAN					     VARCHAR2(128)	       DEFAULT 0		     NOT NULL,
     [exec]   6  	     URL_PDF_PLAN					     VARCHAR2(128)	       DEFAULT 0		     NOT NULL,
     [exec]   7  	     ACCES_ROUTE					     VARCHAR2(500),
     [exec]   8  	     ACCES_ROUTE2					     VARCHAR2(500),
     [exec]   9  	     ACCES_AUTOROUTE					     VARCHAR2(500),
     [exec]  10  	     ACCES_TRANSPORT_COMMUN				     VARCHAR2(500),
     [exec]  11  	     HORAIRES						     VARCHAR2(500),
     [exec]  12  	     NOM_SECONDAIRE					     VARCHAR2(64),
     [exec]  13  	     URL_IMG_PLAN_MASSE 				     VARCHAR2(128)	       DEFAULT 0		     NOT NULL,
     [exec]  14  	     URL_PDF_PLAN_MASSE 				     VARCHAR2(128)	       DEFAULT 0		     NOT NULL,
     [exec]  15  	     URL_PHOTO						     VARCHAR2(128)	       DEFAULT 0		     NOT NULL,
     [exec]  16  	     POSITION_TOP					     INTEGER		 DEFAULT 0		       NOT NULL,
     [exec]  17  	     POSITION_LEFT					     INTEGER		 DEFAULT 0		       NOT NULL,
     [exec]  18  	     KEYWORDS						     VARCHAR2(254),
     [exec]  19  	     DESCRIPTION					     VARCHAR2(254),
     [exec]  20  	     STORE_URL								     VARCHAR2(254),
     [exec]  21  	     DELAI_PREPARATION					     NUMBER(14),
     [exec]  22  	     DELAI_LIVRAISON					     NUMBER(14),
     [exec]  23  	     PRIMARY KEY (ID),
     [exec]  24  	     CONSTRAINT FK_ENTITE FOREIGN KEY (ENTITE_ID) REFERENCES CASTO_ENTITE (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGAS_COUPLE_SERVICE (
     [exec]   2  	     ID_SERVICE 						     VARCHAR2(40)	      NOT NULL,
     [exec]   3  	     ID_MAGASIN 						     VARCHAR2(40)	      NOT NULL,
     [exec]   4  	     ID_COUPLE							     VARCHAR2(40)	      NOT NULL,
     [exec]   5  	     PRIMARY KEY (ID_COUPLE));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_REGION (
     [exec]   2  	     ID 							     VARCHAR2(40)	 NOT NULL,
     [exec]   3  	     NOM							     VARCHAR2(64)	     NOT NULL,
     [exec]   4  	     URL_IMG_REGION						     VARCHAR2(128),
     [exec]   5  	     ORDRE_AFFICHAGE						     VARCHAR2(10),
     [exec]   6  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SERVICE (
     [exec]   2  	     ID 								     VARCHAR2(40)	 NOT NULL,
     [exec]   3  	     NOM								     VARCHAR2(64)	     NOT NULL,
     [exec]   4  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN_COMM_SERVICE (
     [exec]   2  	     ID_SERVICE 						     VARCHAR2(40)	 NOT NULL REFERENCES CASTO_COMMANDE_SERVICE (ID_SERVICE),
     [exec]   3  	     ID_MAGASIN 						     VARCHAR2(40)	 NOT NULL REFERENCES CASTO_MAGASIN (ID),
     [exec]   4  	     PRIMARY KEY (ID_SERVICE, ID_MAGASIN));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN_SERVICE (
     [exec]   2  	     MAGASIN_ID 						     VARCHAR2(40)	 NOT NULL,
     [exec]   3  	     SEQ							     INTEGER		 NOT NULL,
     [exec]   4  	     SERVICE_ID 						     VARCHAR2(40)	 NOT NULL,
     [exec]   5  	     PRIMARY KEY (MAGASIN_ID, SERVICE_ID),
     [exec]   6  	     FOREIGN KEY (MAGASIN_ID) REFERENCES CASTO_MAGASIN (ID),
     [exec]   7  	     FOREIGN KEY (SERVICE_ID) REFERENCES CASTO_SERVICE (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OFFRE (
     [exec]   2  	     ID 							     VARCHAR2(40)		 NOT NULL,
     [exec]   3  	     REFERENCE							     VARCHAR2(16)		 NOT NULL,
     [exec]   4  	     TITRE							     VARCHAR2(128),
     [exec]   5  	     DATEMIN							     DATE,
     [exec]   6  	     DATEMAX							     DATE,
     [exec]   7  	     ACTIVATE							     NUMBER(1),
     [exec]   8  	     DESCRIPTION						     LONG,
     [exec]   9  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ACTUALITE (
     [exec]   2  	     ID 								     VARCHAR2(40)		 NOT NULL,
     [exec]   3  	     TITRE								     VARCHAR2(128),
     [exec]   4  	     DATEMIN								     DATE,
     [exec]   5  	     DATEMAX								     DATE,
     [exec]   6  	     CONTENU								     VARCHAR2(1000),
     [exec]   7  	     ACTIVATE								     NUMBER(1),
     [exec]   8  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OPERATION_SPECIALE (
     [exec]   2  	     ID 							     VARCHAR2(40)		     NOT NULL,
     [exec]   3  	     TITRE_HP							     VARCHAR2(255)			     NOT NULL,
     [exec]   4  	     LIBELLE_LIEN						     VARCHAR2(255)			     NOT NULL,
     [exec]   5  	     TITRE							     VARCHAR2(255)			     NOT NULL,
     [exec]   6  	     INTRODUCTION						     VARCHAR2(2000)			     NOT NULL,
     [exec]   7  	     DATE_DEBUT 						     DATE			     NOT NULL,
     [exec]   8  	     DATE_FIN							     DATE			     NOT NULL,
     [exec]   9  	     ACTIVATE							     NUMBER			     DEFAULT 0			   NOT NULL,
     [exec]  10  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OPERATION_MAGASIN (
     [exec]   2  	     ID 								     VARCHAR2(40)		       NOT NULL,
     [exec]   3  	     SEQ							     NUMBER			       NOT NULL,
     [exec]   4  	     MAGASIN_ID 						     VARCHAR2(40)		       NOT NULL,
     [exec]   5  	     PRIMARY KEY (ID, SEQ),
     [exec]   6  	     FOREIGN KEY (ID) REFERENCES CASTO_OPERATION_SPECIALE (ID),
     [exec]   7  	     FOREIGN KEY (MAGASIN_ID) REFERENCES CASTO_MAGASIN (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_IMAGE_AUX (
     [exec]   2  	     IMAGE_AUX_ID						     VARCHAR2(40)		 NOT NULL,
     [exec]   3  	     MAGASIN_ID 						     VARCHAR2(40)		 NOT NULL,
     [exec]   4  	     SMALL_IMAGE_URL						     VARCHAR2(128)		     NOT NULL,
     [exec]   5  	     LARGE_IMAGE_URL						     VARCHAR2(128)		     NOT NULL,
     [exec]   6  	     PRIMARY KEY  (IMAGE_AUX_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OUVERTURE_EXCEP (
     [exec]   2  	     ID 							     VARCHAR2(40)		NOT NULL,
     [exec]   3  	     MAGASIN_ID 						     VARCHAR2(40)		NOT NULL,
     [exec]   4  	     LIBELLE							     VARCHAR2(100),
     [exec]   5  	     DATE_FIN_VALIDITE						     DATE			NOT NULL,
     [exec]   6  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OFFRE_MAGASIN (
     [exec]   2  	     OFFRE_ID							     VARCHAR2(40)		       NOT NULL,
     [exec]   3  	     SEQ							     INTEGER			       NOT NULL,
     [exec]   4  	     MAGASIN_ID 						     VARCHAR2(40)		       NOT NULL,
     [exec]   5  	     PRIMARY KEY (OFFRE_ID, MAGASIN_ID),
     [exec]   6  	     FOREIGN KEY (OFFRE_ID) REFERENCES CASTO_OFFRE (ID),
     [exec]   7  	     FOREIGN KEY (MAGASIN_ID) REFERENCES CASTO_MAGASIN (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASINS_ACTU (
     [exec]   2  	     MAGASIN_ID 						     VARCHAR2(40)		       NOT NULL,
     [exec]   3  	     SEQ							     INTEGER			    NOT NULL,
     [exec]   4  	     ACTU_ID							     VARCHAR2(40)		       NOT NULL,
     [exec]   5  	     PRIMARY KEY (MAGASIN_ID, ACTU_ID),
     [exec]   6  	     FOREIGN KEY (ACTU_ID) REFERENCES CASTO_ACTUALITE (ID),
     [exec]   7  	     FOREIGN KEY (MAGASIN_ID) REFERENCES CASTO_MAGASIN (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN_IMAGE_AUX (
     [exec]   2  	     MAGASIN_ID 						     VARCHAR2(40)		     NOT NULL,
     [exec]   3  	     SEQ							     INTEGER			     NOT NULL,
     [exec]   4  	     IMAGE_AUX_ID						     VARCHAR2(40)		     NOT NULL,
     [exec]   5  	     PRIMARY KEY (MAGASIN_ID, IMAGE_AUX_ID),
     [exec]   6  	     FOREIGN KEY (MAGASIN_ID) REFERENCES CASTO_MAGASIN (ID),
     [exec]   7  	     FOREIGN KEY (IMAGE_AUX_ID) REFERENCES CASTO_IMAGE_AUX (IMAGE_AUX_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN_OUVERTURE_EXCEP (
     [exec]   2  	     MAGASIN_ID 						     VARCHAR2(40)		       NOT NULL,
     [exec]   3  	     SEQ							     INTEGER			       NOT NULL,
     [exec]   4  	     ID 							     VARCHAR2(40)		       NOT NULL,
     [exec]   5  	     PRIMARY KEY  (MAGASIN_ID, ID),
     [exec]   6  	     FOREIGN KEY (MAGASIN_ID) REFERENCES CASTO_MAGASIN (ID),
     [exec]   7  	     FOREIGN KEY (ID) REFERENCES CASTO_OUVERTURE_EXCEP (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN_PROCHE (
     [exec]   2  	     MAGASIN_REF						     VARCHAR2(40)		   NOT NULL,
     [exec]   3  	     SEQ							     INTEGER			   NOT NULL,
     [exec]   4  	     MAGASIN_PROCHE						     VARCHAR2(40)		   NOT NULL,
     [exec]   5  	     PRIMARY KEY  (MAGASIN_REF, MAGASIN_PROCHE),
     [exec]   6  	     FOREIGN KEY (MAGASIN_REF) REFERENCES CASTO_MAGASIN (ID),
     [exec]   7  	     FOREIGN KEY (MAGASIN_PROCHE) REFERENCES CASTO_MAGASIN (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_catalog.sql
     [exec] SQL> CREATE TABLE CAST_DOCUMENT (
     [exec]   2  	 DOCUMENT_ID							      VARCHAR2(40)   NOT NULL,
     [exec]   3  	     DOCUMENT_TYPE						      INTEGER		 NULL,
     [exec]   4  	     TITLE								      VARCHAR2(254)  NULL,
     [exec]   5  	     IMAGE								      VARCHAR2(40)   NULL,
     [exec]   6  	     DESCRIPTION							      VARCHAR2(2048) NULL,
     [exec]   7  	     RELATIVE_URL						      VARCHAR2(2048) NULL,
     [exec]   8  	     RATING				      NUMBER(19,3)   NULL,
     [exec]   9  	     TEMPLATE_ID							      VARCHAR2(40)   NULL
     [exec]  10  ,	 CONSTRAINT CAST_DOCUMENT_P PRIMARY KEY (DOCUMENT_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_CAT_DOCUMENT (
     [exec]   2  	 SEQUENCE_NUM						     INTEGER	    NOT NULL,
     [exec]   3  	     DOCUMENT_ID						     VARCHAR2(40)   NOT NULL,
     [exec]   4  	     CATEGORY_ID						     VARCHAR2(40)   NOT NULL,
     [exec]   5  	     CONSTRAINT CAST_CAT_DOCUMENT_P PRIMARY KEY (CATEGORY_ID, SEQUENCE_NUM),
     [exec]   6  	 CONSTRAINT CAST_CAT_DOCUMENT_C_F FOREIGN KEY (CATEGORY_ID) REFERENCES DCS_CATEGORY (CATEGORY_ID),
     [exec]   7  	 CONSTRAINT CAST_CAT_DOCUMENT_D_F FOREIGN KEY (DOCUMENT_ID) REFERENCES CAST_DOCUMENT(DOCUMENT_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_DOC_KEYWRDS (
     [exec]   2  	     ID 									     VARCHAR2(40) NOT NULL REFERENCES CAST_DOCUMENT(DOCUMENT_ID),
     [exec]   3  	     SEQ_NUM								     INTEGER NOT NULL,
     [exec]   4  	     KEYWORDS								     VARCHAR2(254) NULL,
     [exec]   5  	     PRIMARY KEY(ID, SEQ_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE cast_style (
     [exec]   2  	 style_id VARCHAR2 (40) NOT NULL PRIMARY KEY,
     [exec]   3  	 color VARCHAR2 (7) DEFAULT '#000000',
     [exec]   4  	 foreground VARCHAR2 (7) DEFAULT '#FFFFFF',
     [exec]   5  	 dropdown_color VARCHAR2 (7),
     [exec]   6  	 font_name VARCHAR2 (30),
     [exec]   7  	 font_size VARCHAR2 (5),
     [exec]   8  	 font_weight NUMBER DEFAULT 0 NOT NULL,
     [exec]   9  	     tab_style VARCHAR2 (30),
     [exec]  10  	     bg_style VARCHAR2 (30),
     [exec]  11  	     link_style VARCHAR2 (30),
     [exec]  12  	     facet_style VARCHAR2 (30),
     [exec]  13  	     breadcrumbs_style VARCHAR2 (30),
     [exec]  14  	     product_promo_style VARCHAR2 (30),
     [exec]  15  	     paging_style VARCHAR2 (30),
     [exec]  16  	     cloud_style VARCHAR2 (30),
     [exec]  17  	     right_menu_style VARCHAR2 (30),
     [exec]  18  	     list_style VARCHAR2 (30),
     [exec]  19  	     border_style  VARCHAR2 (30)
     [exec]  20  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE cast_category_style (
     [exec]   2  	 category_id VARCHAR2 (40) NOT NULL REFERENCES dcs_category(category_id),
     [exec]   3  	 style_id VARCHAR2 (40) NOT NULL REFERENCES cast_style(style_id),
     [exec]   4  	 PRIMARY KEY (category_id)
     [exec]   5  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_PROMO_TEMPLATE (
     [exec]   2  	     PROMO_TEMPLATE_ID			     VARCHAR2(40)	 NOT NULL,
     [exec]   3  	     LAYOUTTYPE 			     INTEGER		 NOT NULL,
     [exec]   4  	     PRIMARY KEY (PROMO_TEMPLATE_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_PROMO_INFORMATION (
     [exec]   2  	     PROMO_INFORMATION_ID		     VARCHAR2(40)	 NOT NULL,
     [exec]   3  	     IMAGE				     VARCHAR2(40)	 NULL,
     [exec]   4  	     FLASH				     VARCHAR2(40)	 NULL,
     [exec]   5  	     DESCRIPTION			     VARCHAR2(400)	 NULL,
     [exec]   6  	     URL				     VARCHAR2(255)	  NULL,
     [exec]   7  	     VIDEOURL				     VARCHAR2(500)	 NULL,
     [exec]   8  	     TITLE								     VARCHAR2(100)	     NULL,
     [exec]   9  	     DOCUMENT_ID							     VARCHAR2(40)	     NULL REFERENCES CAST_DOCUMENT(DOCUMENT_ID),
     [exec]  10  	     PRODUCT_ID 							     VARCHAR2(40)	     NULL REFERENCES DCS_PRODUCT (PRODUCT_ID),
     [exec]  11  	     CATEGORY_ID							     VARCHAR2(40)	     NULL REFERENCES DCS_CATEGORY(CATEGORY_ID),
     [exec]  12  	     PRIMARY KEY (PROMO_INFORMATION_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_TEMPLATE_INFORMATION (
     [exec]   2  	     PROMO_TEMPLATE_ID			     VARCHAR2(40)	 NOT NULL REFERENCES CAST_PROMO_TEMPLATE(PROMO_TEMPLATE_ID),
     [exec]   3  	     PROMO_INFORMATION_ID		     VARCHAR2(40)	 NOT NULL REFERENCES CAST_PROMO_INFORMATION(PROMO_INFORMATION_ID),
     [exec]   4  	     PROMO_KEY				    INTEGER		NOT NULL,
     [exec]   5  	     PRIMARY KEY (PROMO_TEMPLATE_ID, PROMO_INFORMATION_ID, PROMO_KEY));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_COULEUR (
     [exec]   2  	     ID 								     VARCHAR2(32)   NOT NULL,
     [exec]   3  	     COULEUR								     VARCHAR2(32)   NOT NULL,
     [exec]   4  	     NOM								     VARCHAR2(100)  NOT NULL,
     [exec]   5  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU(SKU_ID),
     [exec]   3  	     CODEARTICLE						     INTEGER			     NULL,
     [exec]   4  	     MODELE								     VARCHAR2(45)	     NULL,
     [exec]   5  	     MARQUECOMMERCIAL						     VARCHAR2(100)	     NULL,
     [exec]   6  	     RESTRICTIONSUSAGE						     VARCHAR2(300)	     NULL,
     [exec]   7  	     MENTIONSLEGALESOBLIGATOIRES		     VARCHAR2(1200)	     NULL,
     [exec]   8  	     CONTRAINTESUTILISATION				     VARCHAR2(1200),
     [exec]   9  	     PLUSDUPRODUIT						     VARCHAR2(1200)	     NULL,
     [exec]  10  	     LIBELLECLIENTCOURT 					     VARCHAR2(2200)	     NULL,
     [exec]  11  	     GENERALEMENTLIVREENHEURES				     NUMBER(2, 0)	     NULL,
     [exec]  12  	     LIVRAISONDIRECTEFOURNISSEUR		     NUMBER(1, 0),
     [exec]  13  	     CHAMPSDYNAMIQUE						     NUMBER(1, 0)	     NULL,
     [exec]  14  	     ENVENTE								     NUMBER(1, 0)	     NULL,
     [exec]  15  	     HORSNORMES 							     NUMBER(1, 0)	     NULL,
     [exec]  16  	     CODEFOURNISSEUR						     INTEGER			     NULL,
     [exec]  17  	     NOMFOURNISSEUR						     VARCHAR2(45)	     NULL,
     [exec]  18  	     POIDSUV								     INTEGER			     NULL,
     [exec]  19  	     CODERAYON								     INTEGER			     NULL,
     [exec]  20  	     CODEFAMILLE						     INTEGER			     NULL,
     [exec]  21  	     CODEMODULE 							     INTEGER			     NULL,
     [exec]  22  	     TAUXTVA								     NUMBER(12, 2)	     NULL,
     [exec]  23  	     PRIXVENTETTCFRANCS 					     NUMBER(12, 2)	     NULL,
     [exec]  24  	     PRIXVENTETTCEURO						     NUMBER(12, 2)	     NULL,
     [exec]  25  	     PRIXVENTEHTFRANCS						     NUMBER(12, 2)	     NULL,
     [exec]  26  	     PRIXVENTEHTEURO						     NUMBER(12, 2)	     NULL,
     [exec]  27  	     HAUTEURUV								     INTEGER			     NULL,
     [exec]  28  	     LARGEURUV								     INTEGER			     NULL,
     [exec]  29  	     PROFONDEURUV						     INTEGER			     NULL,
     [exec]  30  	     DATECREATIONCODEARTICLE				     DATE			     NULL,
     [exec]  31  	     DATEFINVIE 							     DATE			     NULL,
     [exec]  32  	     FRAISEXCEPTIONNEL						     NUMBER(12, 2)	     NULL,
     [exec]  33  	     GARANTIE								     VARCHAR2(70)	     NULL,
     [exec]  34  	     LIBELLEDESCRIPTIFARTICLE				     VARCHAR2(300)	     NULL,
     [exec]  35  	     LIBELLECLIENTLONG						     VARCHAR2(1200)	     NULL,
     [exec]  36  	     UNITEUV								     VARCHAR2(30)	     NULL,
     [exec]  37  	     NORMESTEXT 							     VARCHAR2(400)	     NULL,
     [exec]  38  	     CADEAU								     NUMBER(1, 0)	     NULL,
     [exec]  39  	     VENTEENMAGASINSEULEMENT				     NUMBER(1, 0)	     NULL,
     [exec]  40  	     COULEUR								     VARCHAR2(32)	     NULL REFERENCES CASTO_COULEUR (ID),
     [exec]  41  	     COEFFICIENTDESATISFACTION				     NUMBER(10, 2)	     NULL,
     [exec]  42  	     TYPE_DE_TRANSPORT						     INTEGER			     NULL,  --unused
     [exec]  43  	     EXONERATION_PFE						     NUMBER(1, 0)	     NULL,
     [exec]  44  	     LIBELLEPROMOTIONNEL				     VARCHAR2(80)	     NULL,
     [exec]  45  	     URLGRANDPICTOREMISE				     VARCHAR2(80)	     NULL,
     [exec]  46  	     URLPETITPICTOREMISE				     VARCHAR2(80)	     NULL,
     [exec]  47  	     DATEDEBUTFONCTIONNELLE				     DATE			     NULL,
     [exec]  48  	     DATEFINFONCTIONNELLE				     DATE			     NULL,
     [exec]  49  	     DATEDEBUTAFFICHAGE 					     DATE			     NULL,
     [exec]  50  	     UNIQUEMENTSURLESITE				     NUMBER(1, 0)	     NULL,
     [exec]  51  	     LISTPRICEXLS						     NUMBER(19, 7)	     NULL,
     [exec]  52  	     TYPEEXPEDITION						     NUMBER(8, 0)	     NULL,
     [exec]  53  	     TYPEARTICLE						     NUMBER(8, 0)	     NULL,
     [exec]  54  	     TRANSPORTEUR						     VARCHAR2(40)	     NULL,
     [exec]  55  	     EXONERATIONPFT						     NUMBER(1, 0)	     NULL,
     [exec]  56  	     RETRAITMOMENTANEDATEDEBUT				     DATE			     NULL,
     [exec]  57  	     RETRAITMOMENTANEDATEFIN				     DATE			     NULL,
     [exec]  58  	     RETRAITMOMENTANEMOTIFSCODIFIES		     NUMBER(8, 0)	     NULL,
     [exec]  59  	     RETRAITMOMENTANEUTILISATEUR		     VARCHAR2(60)	     NULL,
     [exec]  60  	     DELAIEXPEDITIONBO						     NUMBER(8, 0)	     NULL, --unused
     [exec]  61  	     ECOTAXEENEURO						     NUMBER(14, 2)	     NULL,
     [exec]  62  	     VIDEO_URL								     VARCHAR2(50)	     NULL,
     [exec]  63  	     BAROMETRE								     NUMBER			     NULL,
     [exec]  64  	     CHAPO_CONTENU						     VARCHAR2(100)	     NULL,
     [exec]  65  	     CHAPO_STYLE						     NUMBER			     NULL,
     [exec]  66  	     PROMOTIONSEXCLUES						     NUMBER(1, 0)	     NULL,
     [exec]  67  	     PRIXDETAIL 							     NUMBER(12, 0)	     NULL,
     [exec]  68  	     PRIXTYPEDETAIL						     NUMBER			     NULL,
     [exec]  69  	     FIABILITESTOCK						     NUMBER(3, 0)	     NULL,
     [exec]  70  	     CACHESKUCOMPTEUR						     NUMBER(11, 2)	     NULL,
     [exec]  71  	     CODENEWMODULE						     VARCHAR2(100)	     NULL,
     [exec]  72  	     SOUMISAD3E 							     NUMBER(1, 0)	     NULL,
     [exec]  73  	     PRMP								     NUMBER(12, 2)	     NULL,
     [exec]  74  	     DELAIAPPROFOURNISSEUR				     NUMBER(12, 2)	     NULL,
     [exec]  75  	     PROMOTIONCARTEATOUT				     NUMBER(1, 0)	     NULL,
     [exec]  76  	     PURCENTPROMOCARTEATOUT				     INTEGER			     NULL,
     [exec]  77  	     ISPURCENT								     INTEGER			     NULL,
     [exec]  78  	     QUANTITE_LIMITEE						     NUMBER(1, 0)	     NULL,
     [exec]  79  	     THEME_SKU								     VARCHAR2(70)	     NULL,
     [exec]  80  	     URL_PAGE								     VARCHAR2(260)	     NULL,
     [exec]  81  	     CONDITIONSPARTICULIERES				     NUMBER			     NULL,
     [exec]  82  	     EXCLUSIONLIVRAISONCORSE				     NUMBER			     NULL,
     [exec]  83  	     SOMMEFORFAITAIRE						     NUMBER(19, 7)	     NULL,
     [exec]  84  	     FLASH_PRODUIT						     VARCHAR2(100)	     NULL,
     [exec]  85  	     FLASH_ZOOM 							     VARCHAR2(100)	     NULL,
     [exec]  86  	     DATE_DEB_DESTOCK						     DATE			     NULL,
     [exec]  87  	     DATE_FIN_DESTOCK						     DATE			     NULL,
     [exec]  88  	     DATE_INIT_DESTOCK						     DATE			     NULL,
     [exec]  89  	     VAL_STOCK_DESTOCK						     NUMBER(6, 0)	     NULL,
     [exec]  90  	     CUV								     VARCHAR2(2)		     NULL,
     [exec]  91  	     CUP								     VARCHAR2(2)		     NULL,
     [exec]  92  	     PUPUV								     NUMBER(10, 6)	     NULL,
     [exec]  93  	     PRIX_REF								     NUMBER(12, 2)	     NULL,
     [exec]  94  	     PRIX_SOLDE 							     NUMBER(12, 2)	     NULL,
     [exec]  95  	     F_SOLDE								     NUMBER(1, 0)	     NULL,
     [exec]  96  	     DATE_FIN_SOLDE						     DATE			     NULL,
     [exec]  97  	     PRIMARY KEY (SKU_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_SKU_CODEARTICLE_IDX ON CASTO_SKU (CODEARTICLE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_SKU_MARQUECOMMERCIAL_IDX ON CASTO_SKU (MARQUECOMMERCIAL) ;
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_PICTO (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL REFERENCES CASTO_SKU(SKU_ID),
     [exec]   3  	     SEQ_NUM								     INTEGER			     NOT NULL,
     [exec]   4  	     URL_PICTO								     VARCHAR2(100)	     NULL,
     [exec]   5  	     PRIMARY KEY (SKU_ID, SEQ_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_RELATED (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL REFERENCES CASTO_SKU(SKU_ID),
     [exec]   3  	     AUX_ID								     VARCHAR2(40)	     NOT NULL REFERENCES CASTO_SKU(SKU_ID),
     [exec]   4  	     PRIMARY KEY (SKU_ID, AUX_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_CROSS_SELLING (
     [exec]   2  	     CROSS_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     SKU_ID								     VARCHAR2(40)	     NULL REFERENCES DCS_SKU (SKU_ID),
     [exec]   4  	     PRODUCT_ID 							     VARCHAR2(40)	     NULL REFERENCES DCS_PRODUCT (PRODUCT_ID),
     [exec]   5  	     PRIMARY KEY (CROSS_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_CROSS_SELLING_ASSOC (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU (SKU_ID),
     [exec]   3  	     SEQUENCE_NUM						     INTEGER			     NOT NULL,
     [exec]   4  	     CROSS_ID								     VARCHAR2(40)	     NULL REFERENCES CASTO_SKU_CROSS_SELLING (CROSS_ID),
     [exec]   5  	     PRIMARY KEY (SKU_ID, SEQUENCE_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_IK_CS_ASSOC (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU (SKU_ID),
     [exec]   3  	     SEQUENCE_NUM						     INTEGER			     NOT NULL,
     [exec]   4  	     CROSS_ID								     VARCHAR2(40)	     NULL REFERENCES CASTO_SKU_CROSS_SELLING (CROSS_ID),
     [exec]   5  	     PRIMARY KEY (SKU_ID, SEQUENCE_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_ATTR_VALUE (
     [exec]   2  	     ATTRIBUTE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     ATTRIBUTE_NAME						     VARCHAR2(42)	     NULL,
     [exec]   4  	     DISPLAYNAME						     VARCHAR2(50)	     NULL,
     [exec]   5  	     VALUEINTEGER						     INTEGER			     NULL,
     [exec]   6  	     VALUESTRING						     VARCHAR2(255)	     NULL,
     [exec]   7  	     VALUEFLOAT 							     NUMBER(12, 2)	     NULL,
     [exec]   8  	     VALUEDATE								     DATE			     NULL,
     [exec]   9  	     VALUEBOOLEAN						     NUMBER(1, 0)	     NULL,
     [exec]  10  	     UNIT								     VARCHAR2(10)	     NULL,
     [exec]  11  	     TYPE								     INTEGER			     NULL,
     [exec]  12  	     PRIMARY KEY (ATTRIBUTE_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_ATTR (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL REFERENCES CASTO_SKU(SKU_ID),
     [exec]   3  	     SEQUENCE_NUM						     INTEGER			     NOT NULL,
     [exec]   4  	     ATTRIBUTE_ID						     VARCHAR2(40)	     NULL REFERENCES CASTO_SKU_ATTR_VALUE(ATTRIBUTE_ID),
     [exec]   5  	     PRIMARY KEY (SKU_ID, SEQUENCE_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_ATTR_SKUID_IDX ON CASTO_SKU_ATTR (ATTRIBUTE_ID DESC);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_NORMES (
     [exec]   2  	     NORMES_ID								     VARCHAR2(40) NOT NULL,
     [exec]   3  	     URLPICTOGRAMME						     VARCHAR2(254),
     [exec]   4  	     URLPAGE								     VARCHAR2(254),
     [exec]   5  	     DESCRIPTION						     LONG,
     [exec]   6  	     NOMCOURT								     VARCHAR2(20),
     [exec]   7  	     PRIMARY KEY (NORMES_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_NORMES (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	      NOT NULL REFERENCES CASTO_SKU(SKU_ID),
     [exec]   3  	     SEQUENCE_NUM						     INTEGER			      NOT NULL,
     [exec]   4  	     NORMES_ID								     VARCHAR2(40)	      NOT NULL REFERENCES CASTO_NORMES(NORMES_ID),
     [exec]   5  	     PRIMARY KEY (SKU_ID, SEQUENCE_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_SERVICE_MAGASIN (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU(SKU_ID),
     [exec]   3  	     ID_COUPLE								     VARCHAR2(40)	     NOT NULL REFERENCES CASTO_MAGAS_COUPLE_SERVICE(ID_COUPLE),
     [exec]   4  	     PRIMARY KEY (SKU_ID, ID_COUPLE));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_MEDIA (
     [exec]   2  	     QUAL_ID								     VARCHAR2(1)	     NOT NULL ENABLE,
     [exec]   3  	     MEDIA_ID								     VARCHAR2(40)	     NOT NULL ENABLE,
     [exec]   4  	     PRIMARY KEY (MEDIA_ID, QUAL_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_AFFINAGE_QUESTION (
     [exec]   2  	     ID 									     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     LIBELLE								     VARCHAR2(500),
     [exec]   4  	     CONTENTGROUP						     VARCHAR2(500),
     [exec]   5  	     MULTIVALUE 							     NUMBER			     DEFAULT 0	     NOT NULL,
     [exec]   6  	     MEDIA_ID VARCHAR2(40)				     NULL CONSTRAINT MEDIA REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   7  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_AFFINAGE_REPONSE (
     [exec]   2  	     ID 							     VARCHAR2(32)		NOT NULL,
     [exec]   3  	     LIBELLE							     VARCHAR2(32)		NOT NULL,
     [exec]   4  	     CONTENTGROUP						     VARCHAR2(32),
     [exec]   5  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_AFFINAGE_QUEST_REP (
     [exec]   2  	     QUESTION_ID						     VARCHAR2(32)	 NOT NULL REFERENCES CASTO_AFFINAGE_QUESTION (ID),
     [exec]   3  	     SEQUENCE_NUM						     INTEGER		 NOT NULL,
     [exec]   4  	     REPONSE_ID 						     VARCHAR2(32)	     NULL REFERENCES CASTO_AFFINAGE_REPONSE (ID),
     [exec]   5  	     PRIMARY KEY (QUESTION_ID, SEQUENCE_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_DATA_MAGASIN (
     [exec]   2  	     ID_COUPLE								     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     DELAI_APPRO_FOURNISSEUR				     NUMBER(12, 2)	     NULL,
     [exec]   4  	     ECO_TAXE								     NUMBER(19, 7)	     NULL,
     [exec]   5  	     SOUMISAD3E 							     NUMBER(1, 0)	     NULL,
     [exec]   6  	     COEFFICIENTDESATISFACTION				     NUMBER(10, 2)	     NULL,
     [exec]   7  	     PRMP								     NUMBER(10, 2)	     NULL,
     [exec]   8  	     PROMCORDRE 							     NUMBER(4, 0)	     NULL,
     [exec]   9  	     PROMFNAT								     NUMBER(2, 0)	     NULL,
     [exec]  10  	     PRIXLIVRE								     NUMBER(1, 0)	     NULL,
     [exec]  11  	     DDEBPROMO								     DATE			     NULL,
     [exec]  12  	     DFINPROMO								     DATE			     NULL,
     [exec]  13  	     PRODUITDETENU						     NUMBER(1, 0)	     NULL,
     [exec]  14  	     PRIXVENTETTCEURO						     NUMBER(10, 2)	     NULL,
     [exec]  15  	     PRIXVENTEHTEURO						     NUMBER(10, 2)	     NULL,
     [exec]  16  	     PRIMARY KEY (ID_COUPLE));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_MAGASIN (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     ID_MAGASIN 							     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     ID_COUPLE								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     PRIMARY KEY (SKU_ID,ID_MAGASIN,ID_COUPLE));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PRODUCT (
     [exec]   2  	     PRODUCT_ID 							     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     BOUTIQUEMARQUES						     NUMBER(1, 0)	     NULL,
     [exec]   4  	     PRODUCT_TETEDEGONDOLE				     VARCHAR2(40)	     NULL,
     [exec]   5  	     PRODUCT_FIXEDRELATEDPRODUCTUP		     VARCHAR2(40)	     NULL,
     [exec]   6  	     COULEUR								     VARCHAR2(32)	     NULL,
     [exec]   7  	     AFFICHAGE_ARTICLECOMPARABLE			     NUMBER(1, 0)	     NULL,
     [exec]   8  	     MARQUECOMMERCIAL						     VARCHAR2(100)	     NULL,
     [exec]   9  	     URL_FICHE_TECHNIQUE					     VARCHAR2(50)	     NULL,
     [exec]  10  	     URL_MODE_EMPLOI						     VARCHAR2(50)	     NULL,
     [exec]  11  	     CHAPO_CONTENU						     VARCHAR2(100)	     NULL,
     [exec]  12  	     CHAPO_STYLE							     NUMBER			     NULL,
     [exec]  13  	     NATURE_TETE_GONDOLE					     NUMBER(1, 0)	     NULL,
     [exec]  14  	     TYPE_AFFICHAGE_PROMO				     NUMBER(1, 0)	     NULL,
     [exec]  15  	     VIDEO_URL								     VARCHAR2(50)	     NULL,
     [exec]  16  	     URL_PAGE								     VARCHAR2(260)	     NULL,
     [exec]  17  	     PRIMARY KEY (PRODUCT_ID),
     [exec]  18  	     FOREIGN KEY (PRODUCT_ID) REFERENCES DCS_PRODUCT (PRODUCT_ID),
     [exec]  19  	     FOREIGN KEY (COULEUR) REFERENCES CASTO_COULEUR (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PRODUCT_QUESTION (
     [exec]   2  	     PRODUCT_ID 							     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     SEQ								     INTEGER			     NOT NULL,
     [exec]   4  	     QUESTION_ID							     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     PRIMARY KEY (PRODUCT_ID, SEQ),
     [exec]   6  	     FOREIGN KEY (PRODUCT_ID) REFERENCES DCS_PRODUCT (PRODUCT_ID),
     [exec]   7  	     FOREIGN KEY (QUESTION_ID) REFERENCES CASTO_AFFINAGE_QUESTION (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PRODUCT_AFFINAGE (
     [exec]   2  	     PRODUCT_ID 							     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     AFFINAGE								     INTEGER			     NULL,
     [exec]   4  	     PRIMARY KEY (PRODUCT_ID),
     [exec]   5  	     FOREIGN KEY (PRODUCT_ID) REFERENCES DCS_PRODUCT (PRODUCT_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PRODUCT_LISTE_MULTISKU (
     [exec]   2  	     PRODUCT_ID 							     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     LIBELLE_LISTE_ID						     VARCHAR2(40)	     NULL,
     [exec]   4  	     CONSTRAINT CASTO_PRODUCT_LISTE_MULTI_PK PRIMARY KEY (PRODUCT_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_IK_CATEGORY_TYPE (
     [exec]   2  	     TYPE_NAME								     VARCHAR2(255)	     NOT NULL,
     [exec]   3  	     PRIMARY KEY (TYPE_NAME));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CATEGORY (
     [exec]   2  	     CATEGORY_ID			     VARCHAR2(40)	 NOT NULL REFERENCES DCS_CATEGORY(CATEGORY_ID),
     [exec]   3  	     DROPDOWNTEMPLATE			     VARCHAR2(100)	 NULL,
     [exec]   4  	 PIVOT					     NUMBER(1,0)	     NULL,
     [exec]   5  	     PROMOTEMPLATE			     VARCHAR2(100)	 NULL REFERENCES CAST_PROMO_TEMPLATE(PROMO_TEMPLATE_ID),
     [exec]   6  	 PRODUCTS_COUNT 			     INTEGER		     NULL,
     [exec]   7  	     BOUTIQUEMARQUES				     NUMBER(1),
     [exec]   8  	     REDACTIONNELFAMILLEMARQUE1 		     VARCHAR2(255),
     [exec]   9  	     TITREBOUTIQUEMARQUE			     VARCHAR2(254),
     [exec]  10  	     COULEUR					     VARCHAR2(32)	     REFERENCES CASTO_COULEUR (ID),
     [exec]  11  	     HEADER_PAGE_LISTE				     NUMBER(1),
     [exec]  12  	     TYPE_TETE_GONDOLE					     NUMBER(1),
     [exec]  13  	     BOUTIQUE_EVENT					     NUMBER(1)		     DEFAULT 0,
     [exec]  14  	     IMAGE_URL					     VARCHAR2(255),
     [exec]  15  	     URL_EDITO					     VARCHAR2(255),
     [exec]  16  	     DESCRIPTIF_CATEGORIE			     VARCHAR2(255),
     [exec]  17  	     URL_INSPIRATION				     VARCHAR2(255),
     [exec]  18  	     URL_AIDE_AU_CHOIX				     VARCHAR2(255),
     [exec]  19  	     ACTIVATION_COMPARATEUR			     NUMBER(1)		     DEFAULT 1,
     [exec]  20  	     REDACTIONNELFAMILLEMARQUE3 		     VARCHAR2(100),
     [exec]  21  	     STYLECATEGORIE				     NUMBER(2)		     DEFAULT 0,
     [exec]  22  	     REDACTIONNELFAMILLEMARQUE2 		     NUMBER(2)		     DEFAULT 0,
     [exec]  23  	     TITRE_REFERENCEMENT			     VARCHAR2(200),
     [exec]  24  	     DESTOCKAGE 				     INTEGER,
     [exec]  25  	     BONNES_AFFAIRES				     NUMBER(1,0),
     [exec]  26  	     FOOTER					     CLOB,
     [exec]  27  	     COEFFIABILITE					     NUMBER(14,2),
     [exec]  28  	     URL_PAGE					     VARCHAR2(260),
     [exec]  29  	     IK_CATEGORY_TYPE						     VARCHAR2(255),
     [exec]  30  	     IK_CATEGORY_TYPE_NAV				     NUMBER(2)		     DEFAULT 0,
     [exec]  31  	     NE_PAS_AFFICHER				     INTEGER,
     [exec]  32  	     PRIMARY KEY (CATEGORY_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_INSPI (
     [exec]   2  	     INSPI_ID								     VARCHAR2(100)		   NOT NULL,
     [exec]   3  	     PRIMARY KEY (INSPI_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CATEGORY_ESPRIT(
     [exec]   2  	     ESPRIT_ID								     VARCHAR2(100)		   NOT NULL,
     [exec]   3  	     SEQ								     INTEGER			   NOT NULL,
     [exec]   4  	     INSPI_ID								     VARCHAR2(100)		   NOT NULL,
     [exec]   5  	     PRIMARY KEY  (ESPRIT_ID, INSPI_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_INSPI_NUANCIER(
     [exec]   2  	     INSPI_ID								     VARCHAR2(100 )		   NOT NULL,
     [exec]   3  	     SEQ								     INTEGER			   NOT NULL,
     [exec]   4  	     ID 								     VARCHAR2(100)		       NOT NULL,
     [exec]   5  	     PRIMARY KEY  (INSPI_ID, ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_NUANCIER(
     [exec]   2  	     ID 							     VARCHAR2(100)		   NOT NULL,
     [exec]   3  	     LIBELLE							     VARCHAR2(255)		   NOT NULL,
     [exec]   4  	     CODE_COULEUR						     VARCHAR2(500)		   NOT NULL,
     [exec]   5  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CATEGORY_INSPI(
     [exec]   2  	     CATEGORY_ID						     VARCHAR2(100)		       NOT NULL,
     [exec]   3  	     SEQ							     INTEGER			   NOT NULL,
     [exec]   4  	     INSPI_ID							     VARCHAR2(100)			   NOT NULL,
     [exec]   5  	     PRIMARY KEY (CATEGORY_ID, INSPI_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CATEGORY_SEQUENCE(
     [exec]   2  	     CAT_ID								     VARCHAR2(40)		       NOT NULL,
     [exec]   3  	     SEQ_NUM								     INTEGER			   NOT NULL,
     [exec]   4  	     SEQ_ID								     VARCHAR2(50),
     [exec]   5  	     PRIMARY KEY (CAT_ID, SEQ_NUM),
     [exec]   6  	     FOREIGN KEY (CAT_ID) REFERENCES CASTO_CATEGORY (CATEGORY_ID) ON DELETE CASCADE);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CATEGORY_BOUTIQUE_MAG(
     [exec]   2  	     ID_CATEGORY						     VARCHAR2(40)		   NOT NULL,
     [exec]   3  	     ID_MAGASIN 						     VARCHAR2(40)		   NOT NULL,
     [exec]   4  	     PRIMARY KEY (ID_CATEGORY, ID_MAGASIN),
     [exec]   5  	     FOREIGN KEY (ID_MAGASIN) REFERENCES CASTO_MAGASIN (ID),
     [exec]   6  	     FOREIGN KEY (ID_CATEGORY) REFERENCES CASTO_CATEGORY (CATEGORY_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_THEMES_NORMES (
     [exec]   2  	     THEME_ID	  VARCHAR2(40 BYTE)	     NOT NULL,
     [exec]   3  	     NAME	  VARCHAR2(254 BYTE),
     [exec]   4  	     DESCRIPTION  LONG,
     [exec]   5  	     PRIMARY KEY (THEME_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_THEMES_NORMES_ASSOC (
     [exec]   2  	     THEME_ID	   VARCHAR2(40 BYTE)	     NOT NULL,
     [exec]   3  	     SEQUENCE_NUM  INTEGER		     NOT NULL,
     [exec]   4  	     NORMES_ID	   VARCHAR2(40 BYTE)	     NOT NULL,
     [exec]   5  	     PRIMARY KEY (THEME_ID, SEQUENCE_NUM),
     [exec]   6  	     FOREIGN KEY (THEME_ID) REFERENCES CASTO_THEMES_NORMES (THEME_ID),
     [exec]   7  	     FOREIGN KEY (NORMES_ID) REFERENCES CASTO_NORMES (NORMES_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MARQUE (
     [exec]   2  	     MARQUE_ID		  VARCHAR2(40)	      NOT NULL,
     [exec]   3  	     NOMMARQUE		  VARCHAR2(254)       NOT NULL,
     [exec]   4  	     DESCRIPTION	  LONG,
     [exec]   5  	     LOGOMARQUE 	  VARCHAR2(40),
     [exec]   6  	     PREMIER_PRIX	  VARCHAR2(20),
     [exec]   7  	     QUALITE_PRIX	  VARCHAR2(20),
     [exec]   8  	     SELECTION_EXCLUSIVE  VARCHAR2(20),
     [exec]   9  	     GRANDE_MARQUE	  VARCHAR2(20),
     [exec]  10  	     URL			      VARCHAR2(254),
     [exec]  11  	     PRIMARY KEY (MARQUE_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CODES_UNITE (
     [exec]   2    CODE_UNITE	     VARCHAR2(2 BYTE),
     [exec]   3    DESIGNATION	     VARCHAR2(50 BYTE),
     [exec]   4    FLAG_AFFICHAGE_UP	VARCHAR2(1 BYTE),
     [exec]   5    LIBELLE_AFFICHAGE_UP	VARCHAR2(10 BYTE),
     [exec]   6    PRIMARY KEY (CODE_UNITE));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ------------------------- EPAM ----------------------------------------
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_SKU (
     [exec]   2  	 SKU_ID 				 VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU(SKU_ID),
     [exec]   3  	 TEST					 VARCHAR2(40),
     [exec]   4  	     MESSAGE_INFORMATION				     VARCHAR2(500));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_CATEGORY (
     [exec]   2  	     CATEGORY_ID			     VARCHAR2(40)	 NOT NULL REFERENCES DCS_CATEGORY(CATEGORY_ID),
     [exec]   3  	     DROPDOWNTEMPLATE			     VARCHAR2(100)	 NULL,
     [exec]   4  	 PIVOT					     NUMBER(1,0)	     NULL,
     [exec]   5  	     FEATUREDPRODUCT			     VARCHAR2(60)	 NULL REFERENCES DCS_PRODUCT(PRODUCT_ID),
     [exec]   6  	     PROMOTEMPLATE			     VARCHAR2(100)	 NULL REFERENCES CAST_PROMO_TEMPLATE(PROMO_TEMPLATE_ID),
     [exec]   7  	 PRODUCTS_COUNT 			     integer		     NULL,
     [exec]   8  	     META_KEYWORDS_PATTERN				     VARCHAR2(300)	     NULL,
     [exec]   9  	     META_DESCRIPTION_PATTERN				     VARCHAR2(300)	     NULL,
     [exec]  10  	     PAGE_TITLE_PATTERN 					     VARCHAR2(300)	     NULL,
     [exec]  11  	 INFO_TEXT				 VARCHAR2(500)	     NULL,
     [exec]  12  	 COMMERCE_TEXT				 VARCHAR2(500)	     NULL,
     [exec]  13  	     PRIMARY KEY (CATEGORY_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_CATALOG_CATEGORY (
     [exec]   2  	     SEQUENCE_NUM					     INTEGER		 NOT NULL,
     [exec]   3  	     CATEGORY_ID			     VARCHAR2(40)	 NOT NULL REFERENCES DCS_CATEGORY(CATEGORY_ID),
     [exec]   4  	     CATALOG_ID 			     VARCHAR2(40)	 NOT NULL REFERENCES DCS_CATALOG(CATALOG_ID),
     [exec]   5  	     PRIMARY KEY (CATEGORY_ID, CATALOG_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_GROUPED_PRODUCT (
     [exec]   2  	     GROUPED_PRODUCT_ID 		     VARCHAR2(40)	 NOT NULL REFERENCES DCS_PRODUCT(PRODUCT_ID),
     [exec]   3  	     GROUPINGTYPE						     INTEGER		 NOT NULL,
     [exec]   4  	     PRIMARY KEY (GROUPED_PRODUCT_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_SKU_LINK (
     [exec]   2  	 SKU_LINK_ID				 VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU_LINK(SKU_LINK_ID),
     [exec]   3  	 TABNAME								     VARCHAR2(60)	 NULL,
     [exec]   4  	     PRIMARY KEY (SKU_LINK_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_SKU_PACKS (
     [exec]   2  	     SKU_ID				     VARCHAR2(40)	 NOT NULL REFERENCES DCS_SKU(SKU_ID),
     [exec]   3  	     PACKS_ID				     VARCHAR2(40)	 NOT NULL REFERENCES DCS_PRODUCT(PRODUCT_ID),
     [exec]   4  	     PRIMARY KEY (SKU_ID, PACKS_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_PRODUCT (
     [exec]   2  	     PRODUCT_ID 				  VARCHAR2(40)	     NOT NULL REFERENCES DCS_PRODUCT (PRODUCT_ID),
     [exec]   3  	     RATING				      NUMBER(19,3)   NULL,
     [exec]   4  	     PRODUCT_BENEFIT			      VARCHAR2(80)   NULL,
     [exec]   5  	     PRODUCT_PROMO_DESCRIPTION		      VARCHAR2(80)   NULL,
     [exec]   6  	     PROMO_BACKGROUND_COLOR				      VARCHAR2(40)   NULL,
     [exec]   7  	     PROMO_FONT_COLOR						      VARCHAR2(40)   NULL,
     [exec]   8  	     PROMO_START_DATE						      DATE	     NULL,
     [exec]   9  	     PROMO_EXPIRATION_DATE				      DATE	     NULL,
     [exec]  10  	     META_KEYWORDS_PATTERN				      VARCHAR2(300)  NULL,
     [exec]  11  	     META_DESCRIPTION_PATTERN				      VARCHAR2(300)  NULL,
     [exec]  12  	     PAGE_TITLE_PATTERN 					      VARCHAR2(300)  NULL,
     [exec]  13  	     SHOW_BRAND_LINK_PDP					      NUMBER(1, 0)   NULL,
     [exec]  14  	     PRIMARY KEY (PRODUCT_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_SKU_IMAGES (
     [exec]   2  	 SKU_ID 				 VARCHAR2(40) NOT NULL REFERENCES DCS_SKU(SKU_ID),
     [exec]   3  	 MINIATURE_IMAGE_ID			 VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   4  	 CAROUSEL_IMAGE_ID			 VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   5  	     SUPPORTING_IMAGE_ID		     VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   6  	     COMPARATOR_IMAGE_ID					     VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   7  	     PRIMARY KEY (SKU_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_GESTPROMO_ACTIONCO (
     [exec]   2  	     ACTIONCO_ID VARCHAR2(50) NOT NULL,
     [exec]   3  	     ACTIONCO_NOM VARCHAR2(50),
     [exec]   4  	     ACTIONCO_DESCRIPTION VARCHAR2(100),
     [exec]   5  	     NOTICE VARCHAR2(100),
     [exec]   6  	     PRIMARY KEY (ACTIONCO_ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_GESTPROMO_OPECO (
     [exec]   2  	     PROMOTION_ID		     VARCHAR2(50) NOT NULL REFERENCES DCS_PROMOTION(PROMOTION_ID),
     [exec]   3  	     CREATEUR				     VARCHAR2(50),
     [exec]   4  	     CONDITIONAPPLICATION    VARCHAR2(2000),
     [exec]   5  	     MESSAGECOUPON		     VARCHAR2(2000),
     [exec]   6  	     TYPEAFFICHAGE		     NUMBER(*,0),
     [exec]   7  	     APPLICATIONMAGASIN 	     NUMBER(*,0),
     [exec]   8  	     ACTIONCO_ID		     VARCHAR2(50) NULL REFERENCES CASTO_GESTPROMO_ACTIONCO(ACTIONCO_ID),
     [exec]   9  	     CHAPO				     VARCHAR2(255),
     [exec]  10  	     USAGEUNIQUE		     NUMBER(*,0),
     [exec]  11  	     OPECO_NC_ALL		     NUMBER(*,0),
     [exec]  12  	     PRIMARY KEY (PROMOTION_ID)
     [exec]  13  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_GESTPROMO_ELEMENT (
     [exec]   2  	     PROMOTION_ID VARCHAR2(50) NOT NULL REFERENCES DCS_PROMOTION(PROMOTION_ID),
     [exec]   3  	     SEQUENCE_NUM NUMBER(*,0) NOT NULL,
     [exec]   4  	     ELEMENT VARCHAR2(100),
     [exec]   5  	     PRIMARY KEY (PROMOTION_ID, SEQUENCE_NUM)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_GESTPROMO_OPECO_NC (
     [exec]   2  	     PROMOTION_ID VARCHAR2(50) NOT NULL REFERENCES DCS_PROMOTION(PROMOTION_ID),
     [exec]   3  	     SEQUENCE_NUM NUMBER(*,0) NOT NULL,
     [exec]   4  	     PROMOTIONNC_ID VARCHAR2(50),
     [exec]   5  	     PRIMARY KEY (PROMOTION_ID, SEQUENCE_NUM)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PROMOTION (
     [exec]   2  	     PROMOTION_ID VARCHAR2(50) NOT NULL REFERENCES DCS_PROMOTION(PROMOTION_ID),
     [exec]   3  	     TYPAGE_PROMOTION NUMBER(*,0),
     [exec]   4  	     PRIMARY KEY (PROMOTION_ID)
     [exec]   5  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_PRODUCT_CHARACTERISTICS (
     [exec]   2  	     CATALOG_ID 			     VARCHAR2(40)	 NOT NULL REFERENCES DCS_CATALOG(CATALOG_ID),
     [exec]   3  	     SEQUENCE_NUM						     INTEGER NOT NULL,
     [exec]   4  	     CHARACTERISTIC_PROPERTY				     VARCHAR2(50)    NULL,
     [exec]   5  	     PRIMARY KEY(CATALOG_ID, SEQUENCE_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE DCS_CATEGORY
     [exec]   2  	     MODIFY (DESCRIPTION VARCHAR2(300));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_LEGACY_URL (
     [exec]   2  	     ID 				     VARCHAR2(40)    NOT NULL,
     [exec]   3  	     URI			     VARCHAR2(400)   NOT NULL UNIQUE,
     [exec]   4  	     CATEGORY_ID	     VARCHAR2(40)    NOT NULL REFERENCES DCS_CATEGORY(CATEGORY_ID),
     [exec]   5  	     PRIMARY KEY (ID)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_STAGE (
     [exec]   2  	     ID 		 VARCHAR2(40) NOT NULL,
     [exec]   3  	     NOM		 VARCHAR2(100),
     [exec]   4  	     descriptif 	 VARCHAR2(800),
     [exec]   5  	     datestage		 DATE,
     [exec]   6  	     horaires		 VARCHAR2(100),
     [exec]   7  	     VIDEO_URL			     VARCHAR2(400),
     [exec]   8  	     PRIMARY KEY(ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_CATALOGUE (
     [exec]   2  	     ID 				     VARCHAR2(40)    NOT NULL,
     [exec]   3  	     TITLE			     VARCHAR2(100)   NOT NULL,
     [exec]   4  	     DESCRIPTION		     VARCHAR2(300)   NOT NULL,
     [exec]   5  	     PROMO_MESSAGE	     VARCHAR2(300)   NULL,
     [exec]   6  	     ACTIVE			     NUMBER(1,0)	     default 0 not null,
     [exec]   7  	     FEATURED			     NUMBER(1,0)	     default 0 not null,
     [exec]   8  	     BOOKABLE			     NUMBER(1,0)	     default 0 not null,
     [exec]   9  	     IMAGE			     VARCHAR2(40)    NOT NULL,
     [exec]  10  	     BROWSE_URL 		     VARCHAR2(300)	     NULL,
     [exec]  11  	     DISPLAY_ORDER	     NUMBER(*,0)	     default 0,
     [exec]  12  	     RELEASE_DATE	     DATE,
     [exec]  13  	     AVAILABLE_COPIES	     NUMBER(*,0),
     [exec]  14  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_INTEGRATION (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     CYBERCOACH 							     NUMBER(1, 0)	     NULL,
     [exec]   4  	     RATIO								     NUMBER(8, 2)	     NULL,
     [exec]   5  	     BORNES								     NUMBER(1, 0)	     NULL,
     [exec]   6  	     KITCHEN_PLANNER						     NUMBER(1, 0)	     NULL,
     [exec]   7  	     PRIMARY KEY (SKU_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_SKU_INSTRUCTIONS (
     [exec]   2  	 SKU_ID 				 VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU(SKU_ID),
     [exec]   3  	 MEDIA_ID				 VARCHAR2(40)	     NOT NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   4  	 INSTRUCTION_NAME			 VARCHAR2(100)	     NOT NULL,
     [exec]   5  	 PRIMARY KEY(SKU_ID, MEDIA_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU_MAGASIN ADD FOREIGN KEY (SKU_ID) REFERENCES DCS_SKU (SKU_ID) ON DELETE CASCADE;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_GROUPED_ASSEMBLY_OPTIONS (
     [exec]   2  	 SEQUENCE_NUM				 INTEGER	     NOT NULL,
     [exec]   3  	 GROUPED_PRODUCT_ID			 VARCHAR2(40)	     NOT NULL REFERENCES DCS_PRODUCT(PRODUCT_ID),
     [exec]   4  	 SKU_LINK_ID				 VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU_LINK(SKU_LINK_ID),
     [exec]   5  	 PRIMARY KEY (GROUPED_PRODUCT_ID, SKU_LINK_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD HTMLURL VARCHAR2(255) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_STYLE ADD LIST_VIEW NUMBER DEFAULT 0 NOT NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION MODIFY TITLE VARCHAR2 (200);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION MODIFY DESCRIPTION VARCHAR2 (500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD WRAPPAGE NUMBER(1,0) DEFAULT 0 NOT NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_GROUPED_PRODUCT ADD PROMOTEMPLATE VARCHAR2(100) NULL REFERENCES CAST_PROMO_TEMPLATE(PROMO_TEMPLATE_ID);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_SKU ADD ON_SALE_DISCOUNT_DISPLAY NUMBER(1,0) DEFAULT 0 NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY FLASH_PRODUIT VARCHAR2(255);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_DOCUMENT ADD PROMOTEMPLATE VARCHAR2(100)	NULL REFERENCES CAST_PROMO_TEMPLATE(PROMO_TEMPLATE_ID);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD FLAG_IMAGE VARCHAR2(100)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD FLAG_TEXT	VARCHAR2(200)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD KITCHEN_CONTENT_HTML	     VARCHAR2(200)   NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD video_aux_url VARCHAR2(2000) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD video_full_size NUMBER(1, 0) DEFAULT 0;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> alter table CAST_CATEGORY modify info_text varchar2(1000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> alter table CAST_CATEGORY modify commerce_text varchar2(1000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU RENAME COLUMN URL_PAGE TO EAN;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_START_DATE DATE NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_END_DATE DATE NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> update CASTO_SKU set EAN = substr(EAN, 1, 13);
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY EAN VARCHAR2(13);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Castorama iPhone
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/castIphone/sql/install/oracle/cast_iphone_catalog.sql
     [exec] SQL> CREATE TABLE CAST_IPHONE_CATALOG (
     [exec]   2  	     CATALOG_ID 			     VARCHAR2(40)	 NOT NULL REFERENCES DCS_CATALOG(CATALOG_ID),
     [exec]   3  	     CATEGORY_ID			     VARCHAR2(40)	 NULL,
     [exec]   4  	     PRIMARY KEY (CATALOG_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_IPHONE_SKU_IMAGES (
     [exec]   2  	 SKU_ID 				 VARCHAR2(40) NOT NULL REFERENCES DCS_SKU(SKU_ID),
     [exec]   3  	 AUG_TRANSP_IMAGE_ID			 VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   4  	 AUG_CAROUSEL_IMAGE_ID			 VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   5  	     PRIMARY KEY (SKU_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_IPHONE_SKU_IMAGES ADD (AUG_RETINA_IMAGE_ID VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_STORE_GEOLOCATION (
     [exec]   2  	     ID 						     VARCHAR2(40)	     NOT NULL REFERENCES CASTO_MAGASIN(ID),
     [exec]   3  	     LONGITUDE					     NUMBER(12,7)	     NULL,
     [exec]   4  	     LATITUDE					     NUMBER(12,7)	     NULL,
     [exec]   5  	     CONSTRAINT CAST_STORE_GEOLOCATION_P PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/castIphone/sql/install/oracle/cast_iphone_catalog_retina.sql
     [exec] SQL> ALTER TABLE CAST_IPHONE_SKU_IMAGES ADD (AUG_RETINA_IMAGE_ID VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID));
     [exec] ALTER TABLE CAST_IPHONE_SKU_IMAGES ADD (AUG_RETINA_IMAGE_ID VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID))
     [exec]                                         *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/castIphone/sql/install/oracle/cast_iphone_R7_catalog.sql
     [exec] SQL> CREATE TABLE IPH_CAT_DISPLAY_IMAGE (
     [exec]   2  	 CATEGORY_ID				 VARCHAR2(40) NOT NULL REFERENCES DCS_CATEGORY(CATEGORY_ID),
     [exec]   3  	 CAT_DISPLAY_IMAGE			     VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   4  	     PRIMARY KEY (CATEGORY_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE IPHONE_AUG_AUX_IMAGE(
     [exec]   2  	     AUGM_AUX_ID						     VARCHAR2(40) NOT NULL,
     [exec]   3  	     DISPLAY_NAME						     VARCHAR2(100) NOT NULL,
     [exec]   4  	     AUG_CAR_IMAGE_ID						     VARCHAR2(40) NOT NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   5  	     AUG_TR_IMAGE_ID						     VARCHAR2(40) NOT NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   6  	     CONSTRAINT IPHONE_AUG_AUX_IMAGE_P PRIMARY KEY (AUGM_AUX_ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE IPHONE_VIDEO(
     [exec]   2  	     IPHONE_VIDEO_ID						     VARCHAR2(40) NOT NULL,
     [exec]   3  	     DISPLAY_NAME						     VARCHAR2(100) NOT NULL,
     [exec]   4  	     SHORT_URL								     VARCHAR2(100) NOT NULL,
     [exec]   5  	     LONG_URL								     VARCHAR2(250) NOT NULL,
     [exec]   6  	     CONSTRAINT IPHONE_VIDEO_P PRIMARY KEY (IPHONE_VIDEO_ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE IPHONE_SKU_AUG_IMAGES (
     [exec]   2  	     SEQ_NUM							     INTEGER		 NOT NULL,
     [exec]   3  	     SKU_ID					     VARCHAR2(40)	 NOT NULL REFERENCES DCS_SKU(SKU_ID),
     [exec]   4  	     AUGM_AUX_ID				     VARCHAR2(40)	 NOT NULL REFERENCES IPHONE_AUG_AUX_IMAGE(AUGM_AUX_ID),
     [exec]   5  	     PRIMARY KEY (SKU_ID, AUGM_AUX_ID)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/castIphone/sql/install/oracle/cast_iphone_store.sql
     [exec] SQL> CREATE TABLE CAST_STORE_GEOLOCATION (
     [exec]   2  	     ID 						     VARCHAR2(40)	     NOT NULL REFERENCES CASTO_MAGASIN(ID),
     [exec]   3  	     LONGITUDE					     NUMBER(12,7)	     NULL,
     [exec]   4  	     LATITUDE					     NUMBER(12,7)	     NULL,
     [exec]   5  	     CONSTRAINT CAST_STORE_GEOLOCATION_P PRIMARY KEY (ID));
     [exec] CREATE TABLE CAST_STORE_GEOLOCATION (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Patch
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p19/cast_catalog.sql
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY FLASH_PRODUIT VARCHAR2(500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY FLASH_ZOOM VARCHAR2(500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_SKU ADD ON_SALE_DISCOUNT_DISPLAY NUMBER(1,0) DEFAULT 0 NULL;
     [exec] ALTER TABLE CAST_SKU ADD ON_SALE_DISCOUNT_DISPLAY NUMBER(1,0) DEFAULT 0 NULL
     [exec]                          *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p20/cast_catalog.sql
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD CAST_PRIORITY NUMBER(*,0);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_CATALOG_ADDITION_PROP (
     [exec]   2    CATALOG_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   3    SEARCH_BY_PRODUCT NUMBER(1,0) DEFAULT 1,
     [exec]   4    SEARCH_BY_PIVOT NUMBER(1,0) DEFAULT 1,
     [exec]   5    SEARCH_BY_REGULAR NUMBER(1,0) DEFAULT 1,
     [exec]   6    BODYSTYLE VARCHAR2(500),
     [exec]   7    PRIMARY KEY (CATALOG_ID),
     [exec]   8    FOREIGN KEY (CATALOG_ID)  REFERENCES DCS_CATALOG (CATALOG_ID) ENABLE
     [exec]   9  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_CATEGORY ADD FREE_TEXT VARCHAR2(1000 BYTE);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p21/cast_catalog.sql
     [exec] SQL> ALTER TABLE CAST_DOCUMENT ADD PAGE_TITLE_PATTERN	     VARCHAR2(300)   NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_DOCUMENT ADD META_KEYWORDS_PATTERN	VARCHAR2(300)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_DOCUMENT ADD META_DESCRIPTION_PATTERN	VARCHAR2(300)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD STORE_ID VARCHAR2(40) DEFAULT '0';
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD PAGE_TITLE_PATTERN	     VARCHAR2(300)   NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_DOCUMENT ADD PAGE_TITLE_PATTERN	     VARCHAR2(300)   NULL;
     [exec] ALTER TABLE CAST_DOCUMENT ADD PAGE_TITLE_PATTERN	VARCHAR2(300)	NULL
     [exec]                               *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD FLAG_IMAGE VARCHAR2(100)	NULL;
     [exec] ALTER TABLE CAST_PRODUCT ADD FLAG_IMAGE	VARCHAR2(100)	NULL
     [exec]                              *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD FLAG_TEXT	VARCHAR2(200)	NULL;
     [exec] ALTER TABLE CAST_PRODUCT ADD FLAG_TEXT	VARCHAR2(200)	NULL
     [exec]                              *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> UPDATE CAST_DOCUMENT
     [exec]   2  SET PAGE_TITLE_PATTERN = '{title} - CASTORAMA';
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> 
     [exec] SQL> UPDATE CAST_DOCUMENT
     [exec]   2  SET META_KEYWORDS_PATTERN = '{keywords,sep=,}';
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> 
     [exec] SQL> UPDATE CAST_DOCUMENT
     [exec]   2  SET META_DESCRIPTION_PATTERN = '{description}';
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> 
     [exec] SQL> UPDATE CAST_PROMO_INFORMATION
     [exec]   2  SET PAGE_TITLE_PATTERN = '{title} - CASTORAMA';
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p22/cast_catalog.sql
     [exec] SQL> UPDATE CAST_PROMO_INFORMATION
     [exec]   2  SET PAGE_TITLE_PATTERN = '{title} - CASTORAMA' WHERE PAGE_TITLE_PATTERN IS NULL;
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD KITCHEN_CONTENT_HTML	     VARCHAR2(200)   NULL;
     [exec] ALTER TABLE CAST_PRODUCT ADD KITCHEN_CONTENT_HTML	VARCHAR2(200)	NULL
     [exec]                              *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE DCS_PROMOTION MODIFY DISPLAY_NAME VARCHAR2(200);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY CONTRAINTESUTILISATION VARCHAR2(1500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY MENTIONSLEGALESOBLIGATOIRES VARCHAR2(1500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY PLUSDUPRODUIT VARCHAR2(1500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY LIBELLECLIENTLONG VARCHAR2(1500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/ik/cast_catalog.sql
     [exec] SQL> ALTER TABLE CASTO_CATEGORY ADD IK_CATEGORY_TYPE VARCHAR2(255);
     [exec] ALTER TABLE CASTO_CATEGORY ADD IK_CATEGORY_TYPE	VARCHAR2(255)
     [exec]                                *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_CATEGORY ADD IK_CATEGORY_TYPE_NAV NUMBER(2) DEFAULT 0;
     [exec] ALTER TABLE CASTO_CATEGORY ADD IK_CATEGORY_TYPE_NAV NUMBER(2) DEFAULT 0
     [exec]                                *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_IK_CS_ASSOC (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU (SKU_ID),
     [exec]   3  	     SEQUENCE_NUM						     INTEGER			     NOT NULL,
     [exec]   4  	     CROSS_ID								     VARCHAR2(40)	     NULL REFERENCES CASTO_SKU_CROSS_SELLING (CROSS_ID),
     [exec]   5  	     PRIMARY KEY (SKU_ID, SEQUENCE_NUM));
     [exec] CREATE TABLE CASTO_SKU_IK_CS_ASSOC (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_IK_CATEGORY_TYPE (
     [exec]   2  	     TYPE_NAME								     VARCHAR2(255)	     NOT NULL,
     [exec]   3  	     PRIMARY KEY (TYPE_NAME));
     [exec] CREATE TABLE CASTO_IK_CATEGORY_TYPE (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/mth/cast_catalog.sql
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_THEMATIQUE"
     [exec]   2  	(
     [exec]   3  	 "THEMATIQUE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]   5  	     "DESCRIPTION" VARCHAR2(2048 BYTE),
     [exec]   6  	 "S_IMAGE" VARCHAR2(40 BYTE),
     [exec]   7  	 "B_IMAGE" VARCHAR2(40 BYTE),
     [exec]   8  	 "BG_COLOR" VARCHAR2(25 BYTE),
     [exec]   9  	 "CHAPTER" VARCHAR2(40 BYTE),
     [exec]  10  	 "FONT_COLOR" VARCHAR2(10 BYTE),
     [exec]  11  	     "TOP_DOC_TITLE" VARCHAR2(254 BYTE),
     [exec]  12  	     "TOP_DOC_DESCRIPTION" VARCHAR2(2048 BYTE),
     [exec]  13  	     "BOTTOM_DOC_TITLE" VARCHAR2(254 BYTE),
     [exec]  14  	     "BOTTOM_DOC_DESCRIPTION" VARCHAR2(2048 BYTE),
     [exec]  15  	      CONSTRAINT "CAST_THEMATIQUE_P" PRIMARY KEY ("THEMATIQUE_ID")
     [exec]  16    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  17    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  18    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  19    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  20  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  21    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  22    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  23    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_THEMATIQUE_DOCS_TOP"
     [exec]   2  	(    "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   3  	     "DOCUMENT_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "THEMATIQUE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	      CONSTRAINT "CAST_THEMATIQUE_DOCS_TOP_P" PRIMARY KEY ("THEMATIQUE_ID", "SEQUENCE_NUM")
     [exec]   6    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   7    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   8    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]   9    TABLESPACE "CAST_USERS"	ENABLE,
     [exec]  10  	      CONSTRAINT "CAST_THEMATIQUE_DOCS_TOP_C_F" FOREIGN KEY ("THEMATIQUE_ID")
     [exec]  11  	       REFERENCES "CAST_THEMATIQUE" ("THEMATIQUE_ID") ENABLE,
     [exec]  12  	      CONSTRAINT "CAST_THEMATIQUE_DOCS_TOP_D_F" FOREIGN KEY ("DOCUMENT_ID")
     [exec]  13  	       REFERENCES "CAST_DOCUMENT" ("DOCUMENT_ID") ENABLE
     [exec]  14  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  15    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  16    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  17    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_THEMATIQUE_DOCS_BOTTOM"
     [exec]   2  	(    "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   3  	     "DOCUMENT_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "THEMATIQUE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	      CONSTRAINT "CAST_THEMATIQUE_DOCS_BOTTOM_P" PRIMARY KEY ("THEMATIQUE_ID", "SEQUENCE_NUM")
     [exec]   6    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   7    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   8    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]   9    TABLESPACE "CAST_USERS"	ENABLE,
     [exec]  10  	      CONSTRAINT "CAST_THEMATIQUE_DOCS_BOT_C_F" FOREIGN KEY ("THEMATIQUE_ID")
     [exec]  11  	       REFERENCES "CAST_THEMATIQUE" ("THEMATIQUE_ID") ENABLE,
     [exec]  12  	      CONSTRAINT "CAST_THEMATIQUE_DOCS_BOT_D_F" FOREIGN KEY ("DOCUMENT_ID")
     [exec]  13  	       REFERENCES "CAST_DOCUMENT" ("DOCUMENT_ID") ENABLE
     [exec]  14  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  15    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  16    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  17    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_CHAPTERTHEM"
     [exec]   2  	(
     [exec]   3  	 "CHAPTER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]   5  	 "COLOR" VARCHAR2(25 BYTE),
     [exec]   6  	      CONSTRAINT "CAST_CHAPTERTHEM_P" PRIMARY KEY ("CHAPTER_ID")
     [exec]   7    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   8    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   9    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  10    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  11  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  12    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  13    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  14    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_CONTTHEM"
     [exec]   2  	(
     [exec]   3  	 "CONTAINER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]   5  	      CONSTRAINT "CAST_CONTTHEM_P" PRIMARY KEY ("CONTAINER_ID")
     [exec]   6    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   7    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   8    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]   9    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  10  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  11    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  12    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  13    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_CONT_THEM"
     [exec]   2  	(
     [exec]   3  	 "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     "CONTAINER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "THEMATIQUE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	      CONSTRAINT "CAST_CONT_THEM_P" PRIMARY KEY ("CONTAINER_ID", "SEQUENCE_NUM")
     [exec]   7    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   8    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   9    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  10    TABLESPACE "CAST_USERS"	ENABLE,
     [exec]  11  	      CONSTRAINT "CAST_CONT_THEM_C_F" FOREIGN KEY ("CONTAINER_ID")
     [exec]  12  	       REFERENCES "CAST_CONTTHEM" ("CONTAINER_ID") ENABLE,
     [exec]  13  	      CONSTRAINT "CAST_CONT_THEM_D_F" FOREIGN KEY ("THEMATIQUE_ID")
     [exec]  14  	       REFERENCES "CAST_THEMATIQUE" ("THEMATIQUE_ID") ENABLE
     [exec]  15  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  16    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  17    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  18    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE "CAST_CONT_CHAPT"
     [exec]   2  	(
     [exec]   3  	 "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     "CONTAINER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "CHAPTER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	      CONSTRAINT "CAST_CONT_CHAPT_P" PRIMARY KEY ("CONTAINER_ID", "SEQUENCE_NUM")
     [exec]   7    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   8    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   9    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  10    TABLESPACE "CAST_USERS"	ENABLE,
     [exec]  11  	      CONSTRAINT "CAST_CONT_CHAPT_C_F" FOREIGN KEY ("CONTAINER_ID")
     [exec]  12  	       REFERENCES "CAST_CONTTHEM" ("CONTAINER_ID") ENABLE,
     [exec]  13  	      CONSTRAINT "CAST_CONT_CHAPT_D_F" FOREIGN KEY ("CHAPTER_ID")
     [exec]  14  	       REFERENCES "CAST_CHAPTERTHEM" ("CHAPTER_ID") ENABLE
     [exec]  15  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  16    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  17    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  18    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   ALTER TABLE "CAST_CHAPTERTHEM" ADD "H_IMAGE" VARCHAR2(40 BYTE);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_GUIMENU"
     [exec]   2  	(
     [exec]   3  	 "MENU_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	 "TITLE" VARCHAR2(254 BYTE),
     [exec]   5  	 "IMAGE" VARCHAR2(40 BYTE),
     [exec]   6  	 "CATEGORY" VARCHAR2(40) NULL REFERENCES DCS_CATEGORY(CATEGORY_ID),
     [exec]   7  	 "VERSION" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   8  	 "TEMPLATE" VARCHAR2(254 BYTE),
     [exec]   9  	  CONSTRAINT "CAST_GUIMENU_P" PRIMARY KEY ("MENU_ID")
     [exec]  10    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  11    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  12    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  13    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  14  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  15    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  16    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  17    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_MENUITEM"
     [exec]   2  	(
     [exec]   3  	 "ITEM_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	 "TITLE" VARCHAR2(254 BYTE),
     [exec]   5  	 "IMAGE" VARCHAR2(40 BYTE),
     [exec]   6  	 "MENU" VARCHAR2(40) NULL REFERENCES CAST_GUIMENU(MENU_ID),
     [exec]   7  	 "VERSION" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   8  	 "TEMPLATE" VARCHAR2(254 BYTE),
     [exec]   9  	  CONSTRAINT "CAST_MENUITEM_P" PRIMARY KEY ("ITEM_ID")
     [exec]  10    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  11    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  12    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  13    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  14  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  15    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  16    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  17    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "CAST_MENUITEM" ADD "URL" VARCHAR2(2048 BYTE);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE "CAST_MENUITEM" ADD "NEW_TAB" NUMBER(1,0) DEFAULT 0 NOT NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_GUIMENU_ITEMS"
     [exec]   2  	(
     [exec]   3  	 "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	 "MENU_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	 "ITEM_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	  CONSTRAINT "CAST_GUIMENU_ITEMS_P" PRIMARY KEY ("ITEM_ID", "SEQUENCE_NUM")
     [exec]   7    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   8    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   9    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  10    TABLESPACE "CAST_USERS"	ENABLE,
     [exec]  11  	  CONSTRAINT "CAST_GUIMENU_ITEMS_C_F" FOREIGN KEY ("ITEM_ID")
     [exec]  12  	   REFERENCES "CAST_MENUITEM" ("ITEM_ID") ENABLE,
     [exec]  13  	  CONSTRAINT "CAST_GUIMENU_ITEMS_D_F" FOREIGN KEY ("MENU_ID")
     [exec]  14  	   REFERENCES "CAST_GUIMENU" ("MENU_ID") ENABLE
     [exec]  15  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  16    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  17    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  18    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_THEMATIQUE_CHAPT"
     [exec]   2  	(
     [exec]   3  	 "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     "THEMATIQUE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "CHAPTER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	      CONSTRAINT "CAST_THEMATIQUE_CHAPT_P" PRIMARY KEY ("THEMATIQUE_ID", "SEQUENCE_NUM")
     [exec]   7    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   8    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   9    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  10    TABLESPACE "CAST_USERS"	ENABLE,
     [exec]  11  	      CONSTRAINT "CAST_THEMATIQUE_CHAPT_C_F" FOREIGN KEY ("THEMATIQUE_ID")
     [exec]  12  	       REFERENCES "CAST_THEMATIQUE" ("THEMATIQUE_ID") ENABLE,
     [exec]  13  	      CONSTRAINT "CAST_THEMATIQUE_CHAPT_D_F" FOREIGN KEY ("CHAPTER_ID")
     [exec]  14  	       REFERENCES "CAST_CHAPTERTHEM" ("CHAPTER_ID") ENABLE
     [exec]  15  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  16    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  17    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  18    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "CAST_DOCUMENT" ADD "EXTERNAL_URL"	VARCHAR2(2048 BYTE)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE  "CAST_THEMATIQUE" DROP COLUMN "CHAPTER";
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "CAST_THEMATIQUE" MODIFY
     [exec]   2  	     (
     [exec]   3  	     "TITLE" VARCHAR2(510 BYTE),
     [exec]   4  	     "DESCRIPTION" VARCHAR2(3000 BYTE),
     [exec]   5  	     "TOP_DOC_TITLE" VARCHAR2(510 BYTE),
     [exec]   6  	     "TOP_DOC_DESCRIPTION" VARCHAR2(3000 BYTE),
     [exec]   7  	     "BOTTOM_DOC_TITLE" VARCHAR2(510 BYTE),
     [exec]   8  	     "BOTTOM_DOC_DESCRIPTION" VARCHAR2(3000 BYTE)
     [exec]   9  	     );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/iphone_r8/cast_catalog.sql
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD product_localization NUMBER(1,0) DEFAULT 0 NOT NULL ENABLE;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p23/cast_catalog.sql
     [exec] SQL> ALTER TABLE CASTO_SKU ADD video_aux_url VARCHAR2(2000) NULL;
     [exec] ALTER TABLE CASTO_SKU ADD video_aux_url	VARCHAR2(2000) NULL
     [exec]                           *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD video_full_size NUMBER(1, 0) DEFAULT 0;
     [exec] ALTER TABLE CASTO_SKU ADD video_full_size NUMBER(1, 0) DEFAULT 0
     [exec]                           *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> alter table CAST_CATEGORY modify info_text varchar2(1000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> alter table CAST_CATEGORY modify commerce_text varchar2(1000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/s2/cast_catalog.sql
     [exec] SQL> echo on
     [exec] SP2-0042: unknown command "echo on" - rest of line ignored.
     [exec] SQL> REM !!!==
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_START_DATE DATE NULL;
     [exec] ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_START_DATE DATE NULL
     [exec]                           *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_END_DATE DATE NULL;
     [exec] ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_END_DATE DATE NULL
     [exec]                           *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD SHOW_M2_FIRST NUMBER(1,0) DEFAULT 1;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD SHOW_CARD_PRICE NUMBER(1,0);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD EMISSION_LEVEL VARCHAR2(40);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> update CASTO_SKU set EAN = substr(EAN, 1, 13);
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY EAN VARCHAR2(13);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p27/cast_catalog.sql
     [exec] SQL> ALTER TABLE cast_grouped_product ADD IMPLANTA_MESSAGE VARCHAR2(50) DEFAULT 'Selon implantation type';
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE casto_category ADD custom_page_link VARCHAR2(250) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE casto_category ADD products_number_content VARCHAR2(50) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE casto_category ADD subcategories_content VARCHAR2(500) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE casto_sku ADD CUSTOM_DELIVERY_TERM NUMBER NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE casto_sku ADD CD_START_DATE DATE NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE casto_sku ADD CD_END_DATE DATE NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_CATALOGUE ADD CATALOG_WRAP_ID VARCHAR2(250) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p28/cast_catalog.sql
     [exec] SQL> ALTER TABLE CASTO_SKU ADD external_app_url	VARCHAR2(2000) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/fl/cast_catalog.sql
     [exec] SQL> CREATE TABLE casto_doc_filter_tag_cats (
     [exec]   2  	     tag_cat_id VARCHAR2(40) NOT NULL,
     [exec]   3  	     tag_cat_title VARCHAR2(255) NOT NULL,
     [exec]   4  	     tag_cat_image VARCHAR2(40),
     [exec]   5  	     tag_cat_number NUMBER,
     [exec]   6  	     PRIMARY KEY (tag_cat_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE casto_doc_filter_tags (
     [exec]   2  	     tag_id VARCHAR2(40) NOT NULL,
     [exec]   3  	     tag_title VARCHAR2(255) NOT NULL,
     [exec]   4  	     tag_category VARCHAR2(40),
     [exec]   5  	     tag_promo VARCHAR2(40),
     [exec]   6  	     tag_number NUMBER,
     [exec]   7  	     PRIMARY KEY (tag_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE cast_tag_docs (
     [exec]   2  	     tag_id VARCHAR2(40) NOT NULL REFERENCES casto_doc_filter_tags(tag_id),
     [exec]   3  	     document_id VARCHAR2(40) NOT NULL REFERENCES cast_document(document_id),
     [exec]   4  	     sequence_num INTEGER NOT NULL ENABLE,
     [exec]   5  	     PRIMARY KEY (tag_id,sequence_num));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE casto_doc_types (
     [exec]   2  	     type_id VARCHAR2(40) NOT NULL,
     [exec]   3  	     type_title VARCHAR2(255) NOT NULL,
     [exec]   4  	     type_descr VARCHAR2(500),
     [exec]   5  	     type_number NUMBER,
     [exec]   6  	     type_def_promo VARCHAR2(40),
     [exec]   7  	     PRIMARY KEY (type_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE casto_doc_subcats (
     [exec]   2  	     subcat_id VARCHAR2(40) NOT NULL,
     [exec]   3  	     subcat_title VARCHAR2(255) NOT NULL,
     [exec]   4  	     PRIMARY KEY (subcat_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE casto_fast_lab_configs (
     [exec]   2  	     id VARCHAR2(40) NOT NULL,
     [exec]   3  	     fb_link_title VARCHAR2(255),
     [exec]   4  	     fb_link_value VARCHAR2(255),
     [exec]   5  	     fd_link_title VARCHAR2(255),
     [exec]   6  	     fd_link_value VARCHAR2(255),
     [exec]   7  	     eg_link_title VARCHAR2(255),
     [exec]   8  	     eg_link_value VARCHAR2(255),
     [exec]   9  	     dis_def_doc VARCHAR2(40),
     [exec]  10  	     prod_dis_fb_link_title VARCHAR2(255),
     [exec]  11  	     prod_dis_fd_link_title VARCHAR2(255),
     [exec]  12  	     prod_dis_eg_link_title VARCHAR2(255),
     [exec]  13  	     cf_enable_new NUMBER(1,0),
     [exec]  14  	     cf_page_title VARCHAR2(255),
     [exec]  15  	     cf_page_descr VARCHAR2(500),
     [exec]  16  	     cf_def_bottom_banner VARCHAR2(40),
     [exec]  17  	     cf_get_help_title VARCHAR2(255),
     [exec]  18  	     cf_get_help_descr VARCHAR2(500),
     [exec]  19  	     cf_get_help_home VARCHAR2(40),
     [exec]  20  	     cf_get_help_filtered VARCHAR2(40),
     [exec]  21  	     reinsurance_section VARCHAR2(40),
     [exec]  22  	     reinsurance_section_flap VARCHAR2(40),
     [exec]  23  	     PRIMARY KEY (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE cast_document ADD sub_type_id VARCHAR2(40);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_document ADD subcat_id VARCHAR2(40);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_document ADD cf_description VARCHAR2(2000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_document ADD cf_r_col_dis_link_name VARCHAR2(255);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE cast_category ADD dp_promo VARCHAR2(40);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_category ADD dp_promo_width NUMBER;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_category ADD dp_promo_height NUMBER;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_category ADD min_cat_number_per_col NUMBER;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE cast_product ADD flag_bg VARCHAR2(30);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p29/cast_catalog.sql
     [exec] SQL> ALTER TABLE CASTO_SKU ADD (
     [exec]   2  	     COLOR_LIBELLE_CONTENU VARCHAR2(2000 BYTE),
     [exec]   3  	     COLOR_LIBELLE_COMMERCE VARCHAR2(2000 BYTE),
     [exec]   4  	     PROMOTION_COMMERCE CLOB,
     [exec]   5  	     PROMOTION_CONTENU CLOB,
     [exec]   6  	     START_PROM_COMMERCE DATE,
     [exec]   7  	     END_PROM_COMMERCE DATE,
     [exec]   8  	     START_PROM_CONTENU DATE,
     [exec]   9  	     END_PROM_CONTENU DATE,
     [exec]  10  	     SOUMISAREP NUMBER(1, 0) NULL,
     [exec]  11  	     TAXREP NUMBER(14, 2) NULL
     [exec]  12  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p30/cast_catalog.sql
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY PLUSDUPRODUIT VARCHAR2(2000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY LIBELLECLIENTLONG VARCHAR2(2000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/cc/cast_catalog.sql
     [exec] SQL> ALTER TABLE CAST_CATALOG_ADDITION_PROP ADD (
     [exec]   2    DISPLAY_BANNER NUMBER(1,0) DEFAULT 1,
     [exec]   3    DISPLAY_STORES NUMBER(1,0) DEFAULT 1,
     [exec]   4    COOKIE_AGE NUMBER(*,0) DEFAULT 180 NOT NULL,
     [exec]   5    POPUP_TITLE VARCHAR2(1000) DEFAULT UNISTR('S\00e9lectionnez votre magasin pour visualiser le prix et la disponibilit\00e9 de vos produits :'),
     [exec]   6    HEADER_TEXT VARCHAR2(1000) DEFAULT UNISTR('Consulter le prix et la disponibilit\00e9 de mes produits'),
     [exec]   7    CC_PROMO_INFO VARCHAR2(40) DEFAULT 'prin200000');
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    CC_DELAY_PERIOD_UNIT NUMBER(*,0) DEFAULT 0 NOT NULL,
     [exec]   3    CC_DELAY_PERIOD NUMBER(*,0) DEFAULT 2 NOT NULL,
     [exec]   4    CC_PROMO_INFO VARCHAR2(40),
     [exec]   5    CC_TOP_PROMO_INFO VARCHAR2(40),
     [exec]   6    LOCAL_LIST_PRICE_LIST VARCHAR2(40) NULL,
     [exec]   7    LOCAL_SALE_PRICE_LIST VARCHAR2(40) NULL,
     [exec]   8    RETRAIT_MAGASIN NUMBER(1,0) DEFAULT 0,
     [exec]   9    LOCAL_PRIX NUMBER(1,0) DEFAULT 0);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_CATALOG_ADDITION_PROP ADD (
     [exec]   2    DELIVERY_TOOLTIP VARCHAR2(1000),
     [exec]   3    CC_TOOLTIP VARCHAR2(1000));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    CC_PHONE VARCHAR2(1000));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_CATALOG_ADDITION_PROP ADD (
     [exec]   2    PROCESSING_FEE_NICE_WORD VARCHAR2(1000));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    CC_DELIVERY_MESSAGE VARCHAR2(1000));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_CATALOG_ADDITION_PROP ADD (
     [exec]   2    SHOPPING_CART_D2H_BANNER VARCHAR2(40) DEFAULT '1400037',
     [exec]   3    SHOPPING_CART_CC_BANNER VARCHAR2(40) DEFAULT '1400038');
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    PBX_SITE VARCHAR2(20),
     [exec]   3    PBX_RANG VARCHAR2(20),
     [exec]   4    PBX_IDENTIFIANT VARCHAR2(20));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    LOCAL_PRICE_LIST VARCHAR2(40) NULL);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN DROP (
     [exec]   2    LOCAL_LIST_PRICE_LIST,
     [exec]   3    LOCAL_SALE_PRICE_LIST
     [exec]   4  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX PERF_DCS_PROMOTION_IDX ON DCS_PROMOTION (PROMOTION_TYPE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX PERF_DCS_PROMOTION_IDX1 ON DCS_PROMOTION (PROMOTION_ID, PROMOTION_TYPE, GLOBAL, ENABLED, START_DATE, END_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    PBX_SITE_SOFINCO VARCHAR2(20),
     [exec]   3    PBX_RANG_SOFINCO VARCHAR2(20));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    PBX_IDENTIFIANT_SOFINCO VARCHAR2(20));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p31/cast_catalog.sql
     [exec] SQL> ALTER TABLE CAST_CATEGORY ADD (
     [exec]   2  	     DEFAULT_TYPE_SORT NUMBER(1, 0) NULL
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE casto_fast_lab_configs ADD (
     [exec]   2  card_castorama_block VARCHAR2(40)
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/hmacImpl/cast_catalog.sql
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD
     [exec]   2  (
     [exec]   3    PBX_SECRET_KEY VARCHAR2(255),
     [exec]   4    PBX_SECRET_KEY_SOFINCO VARCHAR2(255),
     [exec]   5    PBX_DIRECT_PLUS_KEY VARCHAR2(255)
     [exec]   6  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/inventoryCheck/cast_catalog.sql
     [exec] SP2-0310: unable to open file "D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/inventoryCheck/cast_catalog.sql"
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/lc/cast_catalog.sql
     [exec] SP2-0310: unable to open file "D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/lc/cast_catalog.sql"
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/ds/cast_catalog.sql
     [exec] SP2-0310: unable to open file "D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/ds/cast_catalog.sql"
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/tablets/cast_catalog.sql
     [exec] SQL> CREATE TABLE "CAST_FOOTER_ITEM"
     [exec]   2  	(
     [exec]   3  	 "LINK_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]   5  	 "VERSION" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     "URL" VARCHAR2(2048 BYTE),
     [exec]   7  	     "IS_ACTIVE" NUMBER(1,0) DEFAULT 0 NOT NULL,
     [exec]   8  	     "POSITION" NUMBER(30) NULL,
     [exec]   9  	 CONSTRAINT "CAST_FOOTER_ITEM_P" PRIMARY KEY ("LINK_ID")
     [exec]  10    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  11    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  12    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  13    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  14  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  15    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  16    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  17    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE "CAST_NOS_SERVICES_ITEM"
     [exec]   2  	(
     [exec]   3  	 "LINK_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]   5  	 "VERSION" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     "URL" VARCHAR2(2048 BYTE),
     [exec]   7  	     "IS_ACTIVE" NUMBER(1,0) DEFAULT 0 NOT NULL,
     [exec]   8  	     "POSITION" NUMBER(30) NULL,
     [exec]   9  	     CONSTRAINT "CAST_NOS_SERVICES_ITEM_P" PRIMARY KEY ("LINK_ID")
     [exec]  10    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  11    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  12    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  13    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  14  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  15    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  16    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  17    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU
     [exec]   2  MODIFY GARANTIE VARCHAR2(2000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/sl/cast_catalog.sql
     [exec] SQL> alter table CASTO_FAST_LAB_CONFIGS add (
     [exec]   2  "CHOOSE_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]   3  "CHOOSE_STORE_DESCR" VARCHAR2(300 BYTE),
     [exec]   4  "SEARCH_INPUT_TITLE" VARCHAR2(300 BYTE),
     [exec]   5  "LEADFORMANCE_LINK_VALUE" VARCHAR2(75 BYTE),
     [exec]   6  "BEST_OFFERS" VARCHAR2(75 BYTE),
     [exec]   7  "CC_STORE_MESSAGE_LONG" VARCHAR2(75 BYTE),
     [exec]   8  "CC_STORE_MESSAGE_SHORT" VARCHAR2(75 BYTE),
     [exec]   9  "CHANGE_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]  10  "CHOOSE_OTHER_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]  11  "CHOOSE_THIS_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]  12  "YOUR_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]  13  "SEARCH_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]  14  "CATALOG_PAGE_LINK" VARCHAR2(150 BYTE),
     [exec]  15  "CLOSE_BUTTON_ENABLED" NUMBER(1,0) DEFAULT 0);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD META_KEYWORDS_PATTERN	VARCHAR2(300)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD META_DESCRIPTION_PATTERN VARCHAR2(300)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD SHORT_DESCRIPTION	     VARCHAR2(300)   NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_PROMO_INFO_KEYWRDS (
     [exec]   2  	     ID VARCHAR2(40) NOT NULL REFERENCES CAST_PROMO_INFORMATION(PROMO_INFORMATION_ID),
     [exec]   3  	     SEQUENCE_NUM INTEGER NOT NULL,
     [exec]   4  	     KEYWORDS VARCHAR2(254) NULL,
     [exec]   5  	     PRIMARY KEY(ID, SEQUENCE_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> exit;
     [exec] Disconnected from Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production

-performsql:
     [echo] about to execute sql/sql_run/create_catalog_tables.sql using CAST_CATB/CAST_CATB@XE
     [exec] 
     [exec] SQL*Plus: Release 11.2.0.2.0 Production on Mon May 2 18:50:06 2016
     [exec] 
     [exec] Copyright (c) 1982, 2014, Oracle.  All rights reserved.
     [exec] 
     [exec] 
     [exec] Connected to:
     [exec] Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production
     [exec] 
     [exec] SQL> REM !!! create_catalog_tables.sql
     [exec] SQL> 
     [exec] SQL> -- DCS
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/sql/db_components/oracle/priceLists_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/sql/priceLists_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> 
     [exec] SQL> create table dcs_price_list (
     [exec]   2  	     price_list_id   varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     display_name    varchar2(254)   null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     creation_date   date    null,
     [exec]   7  	     last_mod_date   date    null,
     [exec]   8  	     start_date      date    null,
     [exec]   9  	     end_date	     date    null,
     [exec]  10  	     locale  number(10)      null,
     [exec]  11  	     base_price_list varchar2(40)    null,
     [exec]  12  	     item_acl	     varchar2(1024)  null
     [exec]  13  ,constraint dcs_price_list_p primary key (price_list_id)
     [exec]  14  ,constraint dcs_pricbas_prcl_f foreign key (base_price_list) references dcs_price_list (price_list_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_pricelstbase_i on dcs_price_list (base_price_list);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_complex_price (
     [exec]   2  	     complex_price_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null
     [exec]   4  ,constraint dcs_complex_pric_p primary key (complex_price_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_price (
     [exec]   2  	     price_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     price_list      varchar2(40)    not null,
     [exec]   5  	     product_id      varchar2(40)    null,
     [exec]   6  	     sku_id  varchar2(40)    null,
     [exec]   7  	     parent_sku_id   varchar2(40)    null,
     [exec]   8  	     pricing_scheme  integer not null,
     [exec]   9  	     list_price      number(19,7)    null,
     [exec]  10  	     complex_price   varchar2(40)    null
     [exec]  11  ,constraint dcs_price_p primary key (price_id)
     [exec]  12  ,constraint dcs_priccomplx_p_f foreign key (complex_price) references dcs_complex_price (complex_price_id)
     [exec]  13  ,constraint dcs_pricpric_lst_f foreign key (price_list) references dcs_price_list (price_list_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_cmplx_prc_idx on dcs_price (complex_price);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_price_idx1 on dcs_price (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_price_idx2 on dcs_price (price_list,sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_price_levels (
     [exec]   2  	     complex_price_id	     varchar2(40)    not null,
     [exec]   3  	     price_levels    varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcs_price_levels_p primary key (complex_price_id,sequence_num)
     [exec]   6  ,constraint dcs_lvlscomplx_p_f foreign key (complex_price_id) references dcs_complex_price (complex_price_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_price_level (
     [exec]   2  	     price_level_id  varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     quantity	     integer not null,
     [exec]   5  	     price   number(19,7)    not null
     [exec]   6  ,constraint dcs_price_level_p primary key (price_level_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_gen_fol_pl (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     name    varchar2(40)    not null,
     [exec]   5  	     parent  varchar2(40)    null,
     [exec]   6  	     description     varchar2(254)   null,
     [exec]   7  	     item_acl	     varchar2(1024)  null
     [exec]   8  ,constraint dcs_gen_fol_pl_p primary key (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_child_fol_pl (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     child_folder_id varchar2(40)    not null
     [exec]   5  ,constraint dcs_child_fol_pl_p primary key (folder_id,sequence_num)
     [exec]   6  ,constraint dcs_chilfoldr_d_f foreign key (folder_id) references dcs_gen_fol_pl (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_plfol_chld (
     [exec]   2  	     plfol_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     price_list_id   varchar2(40)    not null
     [exec]   5  ,constraint dcs_plfol_chld_p primary key (plfol_id,sequence_num)
     [exec]   6  ,constraint dcs_plfoplfol_d_f foreign key (plfol_id) references dcs_gen_fol_pl (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/sql/db_components/oracle/product_catalog_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/sql/product_catalog_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> 
     [exec] SQL> create table dcs_folder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     description     varchar2(254)   null,
     [exec]   8  	     name    varchar2(254)   not null,
     [exec]   9  	     path    varchar2(254)   not null,
     [exec]  10  	     parent_folder_id	     varchar2(40)    null
     [exec]  11  ,constraint dcs_folder_p primary key (folder_id)
     [exec]  12  ,constraint dcs_foldparnt_fl_f foreign key (parent_folder_id) references dcs_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index fldr_pfldrid_idx on dcs_folder (parent_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index fldr_end_dte_idx on dcs_folder (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index fldr_path_idx on dcs_folder (path);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index fldr_strt_dte_idx on dcs_folder (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_media (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     description     varchar2(254)   null,
     [exec]   8  	     name    varchar2(254)   not null,
     [exec]   9  	     path    varchar2(254)   not null,
     [exec]  10  	     parent_folder_id	     varchar2(40)    not null,
     [exec]  11  	     media_type      integer null
     [exec]  12  ,constraint dcs_media_p primary key (media_id)
     [exec]  13  ,constraint dcs_medparnt_fl_f foreign key (parent_folder_id) references dcs_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index med_pfldrid_idx on dcs_media (parent_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index med_end_dte_idx on dcs_media (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index med_path_idx on dcs_media (path);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index med_strt_dte_idx on dcs_media (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index med_type_idx on dcs_media (media_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_media_ext (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     url     varchar2(254)   not null
     [exec]   4  ,constraint dcs_media_ext_p primary key (media_id)
     [exec]   5  ,constraint dcs_medxtmed_d_f foreign key (media_id) references dcs_media (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_media_bin (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     length  integer not null,
     [exec]   4  	     last_modified   date    not null,
     [exec]   5  	     data    blob    not null
     [exec]   6  ,constraint dcs_media_bin_p primary key (media_id)
     [exec]   7  ,constraint dcs_medbnmed_d_f foreign key (media_id) references dcs_media (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_media_txt (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     length  integer not null,
     [exec]   4  	     last_modified   date    not null,
     [exec]   5  	     data    clob    not null
     [exec]   6  ,constraint dcs_media_txt_p primary key (media_id)
     [exec]   7  ,constraint dcs_medtxtmed_d_f foreign key (media_id) references dcs_media (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_category (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     catalog_id      varchar2(40)    null,
     [exec]   5  	     creation_date   date    null,
     [exec]   6  	     start_date      date    null,
     [exec]   7  	     end_date	     date    null,
     [exec]   8  	     display_name    varchar2(254)   null,
     [exec]   9  	     description     varchar2(254)   null,
     [exec]  10  	     long_description	     clob    null,
     [exec]  11  	     parent_cat_id   varchar2(40)    null,
     [exec]  12  	     category_type   integer null,
     [exec]  13  	     root_category   number(1,0)     null
     [exec]  14  ,constraint dcs_category_p primary key (category_id)
     [exec]  15  ,constraint dcs_category_c check (root_category in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index cat_end_dte_idx on dcs_category (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index cat_pcatid_idx on dcs_category (parent_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index cat_strt_dte_idx on dcs_category (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index cat_type_idx on dcs_category (category_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_category_acl (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     item_acl	     varchar2(1024)  null
     [exec]   4  ,constraint dcs_category_acl_p primary key (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_product (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     display_name    varchar2(254)   null,
     [exec]   8  	     description     varchar2(254)   null,
     [exec]   9  	     long_description	     clob    null,
     [exec]  10  	     parent_cat_id   varchar2(40)    null,
     [exec]  11  	     product_type    integer null,
     [exec]  12  	     admin_display   varchar2(254)   null,
     [exec]  13  	     nonreturnable   number(1,0)     null,
     [exec]  14  	     brand   varchar2(254)   null,
     [exec]  15  	     disallow_recommend      number(1,0)     null
     [exec]  16  ,constraint dcs_product_p primary key (product_id)
     [exec]  17  ,constraint dcs_product_c check (nonreturnable in (0,1))
     [exec]  18  ,constraint dcs_product1_c check (disallow_recommend in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index prd_end_dte_idx on dcs_product (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prd_pcatid_idx on dcs_product (parent_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prd_strt_dte_idx on dcs_product (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prd_type_idx on dcs_product (product_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_product_acl (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     item_acl	     varchar2(1024)  null
     [exec]   4  ,constraint dcs_product_acl_p primary key (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     display_name    varchar2(254)   null,
     [exec]   8  	     description     varchar2(254)   null,
     [exec]   9  	     sku_type	     integer null,
     [exec]  10  	     wholesale_price number(19,7)    null,
     [exec]  11  	     list_price      number(19,7)    null,
     [exec]  12  	     sale_price      number(19,7)    null,
     [exec]  13  	     on_sale number(1,0)     null,
     [exec]  14  	     tax_status      integer null,
     [exec]  15  	     fulfiller	     integer null,
     [exec]  16  	     item_acl	     varchar2(1024)  null,
     [exec]  17  	     nonreturnable   number(1,0)     null
     [exec]  18  ,constraint dcs_sku_p primary key (sku_id)
     [exec]  19  ,constraint dcs_sku_c check (on_sale in (0,1))
     [exec]  20  ,constraint dcs_sku1_c check (nonreturnable in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sku_end_dte_idx on dcs_sku (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sku_lstprice_idx on dcs_sku (list_price);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sku_sleprice_idx on dcs_sku (sale_price);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sku_strt_dte_idx on dcs_sku (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sku_type_idx on dcs_sku (sku_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_groups (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     child_prd_group varchar2(254)   null,
     [exec]   4  	     child_cat_group varchar2(254)   null,
     [exec]   5  	     related_cat_group	     varchar2(254)   null
     [exec]   6  ,constraint dcs_cat_groups_p primary key (category_id)
     [exec]   7  ,constraint dcs_catgcatgry_d_f foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_chldprd (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     child_prd_id    varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_chldprd_p primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_catccatgry_d_f foreign key (category_id) references dcs_category (category_id)
     [exec]   7  ,constraint dcs_catcchild_pr_f foreign key (child_prd_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_chldprd_cpi_idx on dcs_cat_chldprd (child_prd_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_chldprd_cid_idx on dcs_cat_chldprd (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_chldcat (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     child_cat_id    varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_chldcat_p primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_catcchild_ct_f foreign key (child_cat_id) references dcs_category (category_id)
     [exec]   7  ,constraint dcs_chlccatgry_d_f foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_chldcat_cci_idx on dcs_cat_chldcat (child_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_chldcat_cid_idx on dcs_cat_chldcat (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_ancestors (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     anc_cat_id      varchar2(40)    not null
     [exec]   4  ,constraint dcs_cat_ancestor_p primary key (category_id,anc_cat_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_ct_anc_cat_id on dcs_cat_ancestors (anc_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_ct_cat_id on dcs_cat_ancestors (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_rltdcat (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     related_cat_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_rltdcat_p primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_catrcatgry_d_f foreign key (category_id) references dcs_category (category_id)
     [exec]   7  ,constraint dcs_catrreltd_ct_f foreign key (related_cat_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_rltdcat_rci_idx on dcs_cat_rltdcat (related_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_rltdcat_cid_idx on dcs_cat_rltdcat (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_keywrds (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     keyword varchar2(254)   not null
     [exec]   5  ,constraint dcs_cat_keywrds_p primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_catkcatgry_d_f foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index cat_keywrds_idx on dcs_cat_keywrds (keyword);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_keywrds_cid_idx on dcs_cat_keywrds (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_media (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     template_id     varchar2(40)    null,
     [exec]   4  	     thumbnail_image_id      varchar2(40)    null,
     [exec]   5  	     small_image_id  varchar2(40)    null,
     [exec]   6  	     large_image_id  varchar2(40)    null
     [exec]   7  ,constraint dcs_cat_media_p primary key (category_id)
     [exec]   8  ,constraint dcs_catmcatgry_d_f foreign key (category_id) references dcs_category (category_id)
     [exec]   9  ,constraint dcs_catmlarg_mgd_f foreign key (large_image_id) references dcs_media (media_id)
     [exec]  10  ,constraint dcs_catmsmall_mg_f foreign key (small_image_id) references dcs_media (media_id)
     [exec]  11  ,constraint dcs_catmtemplt_d_f foreign key (template_id) references dcs_media (media_id)
     [exec]  12  ,constraint dcs_catmthumbnl__f foreign key (thumbnail_image_id) references dcs_media (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_mdia_lrimid_idx on dcs_cat_media (large_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_mdia_smimid_idx on dcs_cat_media (small_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_mdia_tmplid_idx on dcs_cat_media (template_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_mdia_thimid_idx on dcs_cat_media (thumbnail_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_aux_media (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     media_id	     varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_aux_medi_p primary key (category_id,tag)
     [exec]   6  ,constraint dcs_catxcatgry_d_f foreign key (category_id) references dcs_category (category_id)
     [exec]   7  ,constraint dcs_catxmdmed_d_f foreign key (media_id) references dcs_media (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_aux_mdia_mi_idx on dcs_cat_aux_media (media_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_aux_mdia_ci_idx on dcs_cat_aux_media (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_keywrds (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     keyword varchar2(254)   not null
     [exec]   5  ,constraint dcs_prd_keywrds_p primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prdkprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index prd_keywrds_idx on dcs_prd_keywrds (keyword);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_keywrds_pid_idx on dcs_prd_keywrds (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_media (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     template_id     varchar2(40)    null,
     [exec]   4  	     thumbnail_image_id      varchar2(40)    null,
     [exec]   5  	     small_image_id  varchar2(40)    null,
     [exec]   6  	     large_image_id  varchar2(40)    null
     [exec]   7  ,constraint dcs_prd_media_p primary key (product_id)
     [exec]   8  ,constraint dcs_prdmlarg_mgd_f foreign key (large_image_id) references dcs_media (media_id)
     [exec]   9  ,constraint dcs_prdmsmall_mg_f foreign key (small_image_id) references dcs_media (media_id)
     [exec]  10  ,constraint dcs_prdmtemplt_d_f foreign key (template_id) references dcs_media (media_id)
     [exec]  11  ,constraint dcs_prdmthumbnl__f foreign key (thumbnail_image_id) references dcs_media (media_id)
     [exec]  12  ,constraint dcs_prdmprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_mdia_lrimid_idx on dcs_prd_media (large_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_mdia_smimid_idx on dcs_prd_media (small_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_mdia_tmplid_idx on dcs_prd_media (template_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_mdia_thimid_idx on dcs_prd_media (thumbnail_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_aux_media (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     media_id	     varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_aux_medi_p primary key (product_id,tag)
     [exec]   6  ,constraint dcs_prdaxmdmed_d_f foreign key (media_id) references dcs_media (media_id)
     [exec]   7  ,constraint dcs_prdaprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_aux_mdia_mi_idx on dcs_prd_aux_media (media_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_aux_mdia_pi_idx on dcs_prd_aux_media (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_chldsku (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     sku_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_chldsku_p primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prdcprodct_d_f foreign key (product_id) references dcs_product (product_id)
     [exec]   7  ,constraint dcs_prdcsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_chldsku_sid_idx on dcs_prd_chldsku (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_chldsku_pid_idx on dcs_prd_chldsku (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_skuattr (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     attribute_name  varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_skuattr_p primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prdsprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_skuattr_pid_idx on dcs_prd_skuattr (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_groups (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     related_prd_group	     varchar2(254)   null,
     [exec]   4  	     upsl_prd_group  varchar2(254)   null
     [exec]   5  ,constraint dcs_prd_groups_p primary key (product_id)
     [exec]   6  ,constraint dcs_prdgprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_rltdprd (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     related_prd_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_rltdprd_p primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prdrprodct_d_f foreign key (product_id) references dcs_product (product_id)
     [exec]   7  ,constraint dcs_prdrreltd_pr_f foreign key (related_prd_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_rltdprd_rpi_idx on dcs_prd_rltdprd (related_prd_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_rltdprd_pid_idx on dcs_prd_rltdprd (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_upslprd (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     upsell_prd_id   varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_upslprd_p primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prduprodct_d_f foreign key (product_id) references dcs_product (product_id)
     [exec]   7  ,constraint dcs_prdureltd_pr_f foreign key (upsell_prd_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_upslprd_upi_idx on dcs_prd_upslprd (upsell_prd_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_ancestors (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     anc_cat_id      varchar2(40)    not null
     [exec]   4  ,constraint dcs_prd_ancestor_p primary key (product_id,anc_cat_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_prd_anc_cat_id on dcs_prd_ancestors (anc_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_prd_prd_id on dcs_prd_ancestors (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_attr (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     attribute_name  varchar2(42)    not null,
     [exec]   4  	     attribute_value varchar2(254)   not null
     [exec]   5  ,constraint dcs_sku_attr_p primary key (sku_id,attribute_name)
     [exec]   6  ,constraint dcs_skuttrsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sku_attr_skuid_idx on dcs_sku_attr (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_link (
     [exec]   2  	     sku_link_id     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     display_name    varchar2(254)   null,
     [exec]   8  	     description     varchar2(254)   null,
     [exec]   9  	     quantity	     integer not null,
     [exec]  10  	     bundle_item     varchar2(40)    not null,
     [exec]  11  	     item_acl	     varchar2(1024)  null
     [exec]  12  ,constraint dcs_sku_link_p primary key (sku_link_id)
     [exec]  13  ,constraint dcs_skulbundl_tm_f foreign key (bundle_item) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_link_bndlid_idx on dcs_sku_link (bundle_item);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index skl_end_dte_idx on dcs_sku_link (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index skl_strt_dte_idx on dcs_sku_link (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_bndllnk (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     sku_link_id     varchar2(40)    not null
     [exec]   5  ,constraint dcs_sku_bndllnk_p primary key (sku_id,sequence_num)
     [exec]   6  ,constraint dcs_skubsku_d_f foreign key (sku_id) references dcs_sku (sku_id)
     [exec]   7  ,constraint dcs_skubsku_lnkd_f foreign key (sku_link_id) references dcs_sku_link (sku_link_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_bndllnk_sli_idx on dcs_sku_bndllnk (sku_link_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sk_bndllnk_sid_idx on dcs_sku_bndllnk (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_media (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     template_id     varchar2(40)    null,
     [exec]   4  	     thumbnail_image_id      varchar2(40)    null,
     [exec]   5  	     small_image_id  varchar2(40)    null,
     [exec]   6  	     large_image_id  varchar2(40)    null
     [exec]   7  ,constraint dcs_sku_media_p primary key (sku_id)
     [exec]   8  ,constraint dcs_skumlarg_mgd_f foreign key (large_image_id) references dcs_media (media_id)
     [exec]   9  ,constraint dcs_skumsmall_mg_f foreign key (small_image_id) references dcs_media (media_id)
     [exec]  10  ,constraint dcs_skumtemplt_d_f foreign key (template_id) references dcs_media (media_id)
     [exec]  11  ,constraint dcs_skumthumbnl__f foreign key (thumbnail_image_id) references dcs_media (media_id)
     [exec]  12  ,constraint dcs_skumdsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_mdia_lrimid_idx on dcs_sku_media (large_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sk_mdia_smimid_idx on dcs_sku_media (small_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sk_mdia_tmplid_idx on dcs_sku_media (template_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sk_mdia_thimid_idx on dcs_sku_media (thumbnail_image_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_aux_media (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     media_id	     varchar2(40)    not null
     [exec]   5  ,constraint dcs_sku_aux_medi_p primary key (sku_id,tag)
     [exec]   6  ,constraint dcs_skuxmdmed_d_f foreign key (media_id) references dcs_media (media_id)
     [exec]   7  ,constraint dcs_skuxmdsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_aux_mdia_mi_idx on dcs_sku_aux_media (media_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sk_aux_mdia_si_idx on dcs_sku_aux_media (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_replace (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     replacement     varchar2(40)    not null
     [exec]   5  ,constraint dcs_sku_replace_p primary key (sku_id,sequence_num)
     [exec]   6  ,constraint dcs_skurplcsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_replace_sid_idx on dcs_sku_replace (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_conf (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     config_props    varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcs_sku_conf_p primary key (sku_id,sequence_num)
     [exec]   6  ,constraint dcs_skucnfsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_config_prop (
     [exec]   2  	     config_prop_id  varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     display_name    varchar2(40)    null,
     [exec]   5  	     description     varchar2(255)   null,
     [exec]   6  	     item_acl	     varchar2(1024)  null
     [exec]   7  ,constraint dcs_config_prop_p primary key (config_prop_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_conf_options (
     [exec]   2  	     config_prop_id  varchar2(40)    not null,
     [exec]   3  	     config_options  varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcs_conf_options_p primary key (config_prop_id,sequence_num)
     [exec]   6  ,constraint dcs_confconfg_pr_f foreign key (config_prop_id) references dcs_config_prop (config_prop_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_config_opt (
     [exec]   2  	     config_opt_id   varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     display_name    varchar2(40)    null,
     [exec]   5  	     description     varchar2(255)   null,
     [exec]   6  	     sku     varchar2(40)    null,
     [exec]   7  	     product varchar2(40)    null,
     [exec]   8  	     price   number(19,7)    null,
     [exec]   9  	     item_acl	     varchar2(1024)  null
     [exec]  10  ,constraint dcs_config_opt_p primary key (config_opt_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_conf_prod_idx on dcs_config_opt (product);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_conf_sku_idx on dcs_config_opt (sku);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_foreign_cat (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     name    varchar2(100)   null,
     [exec]   6  	     description     varchar2(255)   null,
     [exec]   7  	     host    varchar2(100)   null,
     [exec]   8  	     port    integer null,
     [exec]   9  	     base_url	     varchar2(255)   null,
     [exec]  10  	     return_url      varchar2(255)   null,
     [exec]  11  	     item_acl	     varchar2(1024)  null
     [exec]  12  ,constraint dcs_foreign_cat_p primary key (catalog_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/sql/db_components/oracle/promotion_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/sql/promotion_ddl.xml#2 $$Change: 660996 $
     [exec] SQL> 
     [exec] SQL> create table dcs_promotion (
     [exec]   2  	     promotion_id    varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     start_date      date    null,
     [exec]   6  	     end_date	     date    null,
     [exec]   7  	     display_name    varchar2(254)   null,
     [exec]   8  	     description     varchar2(254)   null,
     [exec]   9  	     promotion_type  integer null,
     [exec]  10  	     enabled number(1,0)     null,
     [exec]  11  	     begin_usable    date    null,
     [exec]  12  	     end_usable      date    null,
     [exec]  13  	     priority	     integer null,
     [exec]  14  	     global  number(1,0)     null,
     [exec]  15  	     anon_profile    number(1,0)     null,
     [exec]  16  	     allow_multiple  number(1,0)     null,
     [exec]  17  	     uses    integer null,
     [exec]  18  	     rel_expiration  number(1,0)     null,
     [exec]  19  	     time_until_expire	     integer null
     [exec]  20  ,constraint dcs_promotion_p primary key (promotion_id)
     [exec]  21  ,constraint dcs_promotion1_c check (enabled in (0,1))
     [exec]  22  ,constraint dcs_promotion2_c check (global in (0,1))
     [exec]  23  ,constraint dcs_promotion3_c check (anon_profile in (0,1))
     [exec]  24  ,constraint dcs_promotion4_c check (allow_multiple in (0,1))
     [exec]  25  ,constraint dcs_promotion5_c check (rel_expiration in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index prmo_bgin_use_idx on dcs_promotion (begin_usable);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prmo_end_dte_idx on dcs_promotion (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prmo_end_use_idx on dcs_promotion (end_usable);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prmo_strt_dte_idx on dcs_promotion (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_promo_media (
     [exec]   2  	     promotion_id    varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     media_id	     varchar2(40)    not null
     [exec]   5  ,constraint dcs_promo_media_p primary key (promotion_id,tag)
     [exec]   6  ,constraint dcs_prommdmed_d_f foreign key (media_id) references dcs_media (media_id)
     [exec]   7  ,constraint dcs_prompromtn_d_f foreign key (promotion_id) references dcs_promotion (promotion_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index promo_mdia_mid_idx on dcs_promo_media (media_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index promo_mdia_pid_idx on dcs_promo_media (promotion_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_discount_promo (
     [exec]   2  	     promotion_id    varchar2(40)    not null,
     [exec]   3  	     calculator      varchar2(254)   not null,
     [exec]   4  	     adjuster	     number(19,7)    not null,
     [exec]   5  	     pmdl_rule	     clob    not null,
     [exec]   6  	     one_use number(1,0)     null
     [exec]   7  ,constraint dcs_discount_pro_p primary key (promotion_id)
     [exec]   8  ,constraint dcs_discpromtn_d_f foreign key (promotion_id) references dcs_promotion (promotion_id)
     [exec]   9  ,constraint dcs_discount_pro_c check (one_use in (0, 1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_promo_upsell (
     [exec]   2  	     promotion_id    varchar2(40)    not null,
     [exec]   3  	     upsell  number(1,0)     null
     [exec]   4  ,constraint dcs_promo_upsell_p primary key (promotion_id)
     [exec]   5  ,constraint dcs_proupsell_d_f foreign key (promotion_id) references dcs_promotion (promotion_id)
     [exec]   6  ,constraint dcs_promo_upsell_c check (upsell in (0, 1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_upsell_action (
     [exec]   2  	     action_id	     varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     name    varchar2(40)    not null,
     [exec]   5  	     upsell_prd_grp  clob    null
     [exec]   6  ,constraint dcs_upsell_actn_p primary key (action_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_close_qualif (
     [exec]   2  	     close_qualif_id varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     name    varchar2(40)    not null,
     [exec]   5  	     priority	     number(10)      null,
     [exec]   6  	     qualifier	     clob    null,
     [exec]   7  	     upsell_media    varchar2(40)    null,
     [exec]   8  	     upsell_action   varchar2(40)    null
     [exec]   9  ,constraint dcs_close_qualif_p primary key (close_qualif_id)
     [exec]  10  ,constraint dcs_cq_media_d_f foreign key (upsell_media) references dcs_media (media_id)
     [exec]  11  ,constraint dcs_cq_action_d_f foreign key (upsell_action) references dcs_upsell_action (action_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_closequalif2_x on dcs_close_qualif (upsell_media);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_closequalif1_x on dcs_close_qualif (upsell_action);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prm_cls_qlf (
     [exec]   2  	     promotion_id    varchar2(40)    not null,
     [exec]   3  	     closeness_qualif	     varchar2(40)    not null
     [exec]   4  ,constraint dcs_promo_cq_d_f foreign key (promotion_id) references dcs_promotion (promotion_id)
     [exec]   5  ,constraint dcs_prmclsqlf_d_f foreign key (closeness_qualif) references dcs_close_qualif (close_qualif_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_prm_cls_qlf2_x on dcs_prm_cls_qlf (promotion_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_prm_cls_qlf1_x on dcs_prm_cls_qlf (closeness_qualif);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_upsell_prods (
     [exec]   2  	     action_id	     varchar2(40)    not null,
     [exec]   3  	     product_id      varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null
     [exec]   5  ,constraint dcs_upsell_prods_p primary key (action_id,product_id)
     [exec]   6  ,constraint dcs_ups_prod_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_upsellprods1_x on dcs_upsell_prods (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Custom Catalogs
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/CustomCatalogs/sql/db_components/oracle/custom_catalog_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/CustomCatalogs/sql/custom_catalog_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> 
     [exec] SQL> create table dcs_catalog (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     display_name    varchar2(254)   null,
     [exec]   5  	     creation_date   date    null,
     [exec]   6  	     last_mod_date   date    null,
     [exec]   7  	     migration_status	     number(3,0)     null,
     [exec]   8  	     migration_index number(10)      null,
     [exec]   9  	     item_acl	     varchar2(1024)  null
     [exec]  10  ,constraint dcs_catalog_p primary key (catalog_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_root_cats (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     root_cat_id     varchar2(40)    not null
     [exec]   4  ,constraint dcs_root_cats_p primary key (catalog_id,root_cat_id)
     [exec]   5  ,constraint dcs_rotccatlg_d_f foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   6  ,constraint dcs_rotcrot_ctd_f foreign key (root_cat_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_rootcatscat_id on dcs_root_cats (root_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_allroot_cats (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     root_cat_id     varchar2(40)    not null
     [exec]   4  ,constraint dcs_allroot_cats_p primary key (catalog_id,root_cat_id)
     [exec]   5  ,constraint dcs_allrcatlg_d_f foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   6  ,constraint dcs_allrrot_ctd_f foreign key (root_cat_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_allrt_cats_id on dcs_allroot_cats (root_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_root_subcats (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     sub_catalog_id  varchar2(40)    not null
     [exec]   4  ,constraint dcs_root_subcats_p primary key (catalog_id,sub_catalog_id)
     [exec]   5  ,constraint dcs_rotscatlg_d_f foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   6  ,constraint dcs_rotssub_ctlg_f foreign key (sub_catalog_id) references dcs_catalog (catalog_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_rtsubcats_id on dcs_root_subcats (sub_catalog_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sub_catalogs (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     sub_catalog_id  varchar2(40)    not null
     [exec]   4  ,constraint dcs_sub_catalogs_p primary key (catalog_id,sub_catalog_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_category_info (
     [exec]   2  	     category_info_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     item_acl	     varchar2(1024)  null
     [exec]   5  ,constraint dcs_category_inf_p primary key (category_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_product_info (
     [exec]   2  	     product_info_id varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     parent_cat_id   varchar2(40)    null,
     [exec]   5  	     item_acl	     varchar2(1024)  null
     [exec]   6  ,constraint dcs_product_info_p primary key (product_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_info (
     [exec]   2  	     sku_info_id     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     item_acl	     varchar2(1024)  null
     [exec]   5  ,constraint dcs_sku_info_p primary key (sku_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_subcats (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     catalog_id      varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_subcats_p primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_catscatlg_d_f foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   7  ,constraint dcs_catscatgry_d_f foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_catsubcatlogid on dcs_cat_subcats (catalog_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_subroots (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     sub_category_id varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_subroots_p primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_subrtscatgry_f foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_catinfo (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null,
     [exec]   4  	     category_info_id	     varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_catinfo_p primary key (category_id,catalog_id)
     [exec]   6  ,constraint dcs_infocatgry_d_f foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_catinfo_anc (
     [exec]   2  	     category_info_id	     varchar2(40)    not null,
     [exec]   3  	     anc_cat_id      varchar2(40)    not null
     [exec]   4  ,constraint dcs_catinfo_anc_p primary key (category_info_id,anc_cat_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_prdinfo (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null,
     [exec]   4  	     product_info_id varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_prdinfo_p primary key (product_id,catalog_id)
     [exec]   6  ,constraint dcs_prdpprodct_d_f foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prdinfo_rdprd (
     [exec]   2  	     product_info_id varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     related_prd_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_prdinfo_rdpr_p primary key (product_info_id,sequence_num)
     [exec]   6  ,constraint dcs_prdireltd_pr_f foreign key (related_prd_id) references dcs_product (product_id)
     [exec]   7  ,constraint dcs_prdiprodct_n_f foreign key (product_info_id) references dcs_product_info (product_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_prdrelatedinfo on dcs_prdinfo_rdprd (related_prd_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prdinfo_anc (
     [exec]   2  	     product_info_id varchar2(40)    not null,
     [exec]   3  	     anc_cat_id      varchar2(40)    not null
     [exec]   4  ,constraint dcs_prdinfo_anc_p primary key (product_info_id,anc_cat_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_skuinfo (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null,
     [exec]   4  	     sku_info_id     varchar2(40)    not null
     [exec]   5  ,constraint dcs_sku_skuinfo_p primary key (sku_id,catalog_id)
     [exec]   6  ,constraint dcs_skusknfsku_d_f foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_skuinfo_rplc (
     [exec]   2  	     sku_info_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     replacement     varchar2(40)    not null
     [exec]   5  ,constraint dcs_skuinfo_rplc_p primary key (sku_info_id,sequence_num)
     [exec]   6  ,constraint dcs_skunsku_nfd_f foreign key (sku_info_id) references dcs_sku_info (sku_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_gen_fol_cat (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     name    varchar2(40)    not null,
     [exec]   5  	     parent  varchar2(40)    null,
     [exec]   6  	     description     varchar2(254)   null,
     [exec]   7  	     item_acl	     varchar2(1024)  null
     [exec]   8  ,constraint dcs_gen_fol_cat_p primary key (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_child_fol_cat (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     child_folder_id varchar2(40)    not null
     [exec]   5  ,constraint dcs_child_fol_ca_p primary key (folder_id,sequence_num)
     [exec]   6  ,constraint dcs_catlfoldr_d_f foreign key (folder_id) references dcs_gen_fol_cat (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_catfol_chld (
     [exec]   2  	     catfol_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     catalog_id      varchar2(40)    not null
     [exec]   5  ,constraint dcs_catfol_chld_p primary key (catfol_id,sequence_num)
     [exec]   6  ,constraint dcs_catfcatfl_d_f foreign key (catfol_id) references dcs_gen_fol_cat (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_dir_anc_ctlgs (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     anc_catalog_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_dirancctlgs_pk primary key (catalog_id,sequence_num)
     [exec]   6  ,constraint dcs_dirancctlgs_f1 foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   7  ,constraint dcs_dirancctlgs_f2 foreign key (anc_catalog_id) references dcs_catalog (catalog_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_dirancctlg_idx on dcs_dir_anc_ctlgs (anc_catalog_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_ind_anc_ctlgs (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     anc_catalog_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_indancctlgs_pk primary key (catalog_id,sequence_num)
     [exec]   6  ,constraint dcs_indancctlgs_f1 foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   7  ,constraint dcs_indancctlgs_f2 foreign key (anc_catalog_id) references dcs_catalog (catalog_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_indanctlg_idx on dcs_ind_anc_ctlgs (anc_catalog_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_ctlg_anc_cats (
     [exec]   2  	     catalog_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     category_id     varchar2(40)    not null
     [exec]   5  ,constraint dcs_ctlganccats_pk primary key (catalog_id,sequence_num)
     [exec]   6  ,constraint dcs_ctlganccats_f1 foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   7  ,constraint dcs_ctlganccats_f2 foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_ctlgancat_idx on dcs_ctlg_anc_cats (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_prnt_ctlg (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     parent_ctlg_id  varchar2(40)    not null
     [exec]   4  ,constraint dcs_catprntctlg_pk primary key (category_id)
     [exec]   5  ,constraint dcs_catprntctlg_f2 foreign key (parent_ctlg_id) references dcs_catalog (catalog_id)
     [exec]   6  ,constraint dcs_catprntctlg_f1 foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index cat_pctlgid_idx on dcs_cat_prnt_ctlg (parent_ctlg_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_anc_cats (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     anc_category_id varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_anccats_pk primary key (category_id,sequence_num)
     [exec]   6  ,constraint dcs_cat_anccats_f1 foreign key (category_id) references dcs_category (category_id)
     [exec]   7  ,constraint dcs_cat_anccats_f2 foreign key (anc_category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_catanccat_idx on dcs_cat_anc_cats (anc_category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_prnt_cats (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null,
     [exec]   4  	     category_id     varchar2(40)    not null
     [exec]   5  ,constraint dcs_prdprntcats_pk primary key (product_id,catalog_id)
     [exec]   6  ,constraint dcs_prdprntcats_f2 foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   7  ,constraint dcs_prdprntcats_f3 foreign key (category_id) references dcs_category (category_id)
     [exec]   8  ,constraint dcs_prdprntcats_f1 foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_prnt_cat_pi_idx on dcs_prd_prnt_cats (catalog_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_prnt_cat_ci_idx on dcs_prd_prnt_cats (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_anc_cats (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     category_id     varchar2(40)    not null
     [exec]   5  ,constraint dcs_prdanc_cats_pk primary key (product_id,sequence_num)
     [exec]   6  ,constraint dcs_prdanc_cats_f2 foreign key (category_id) references dcs_category (category_id)
     [exec]   7  ,constraint dcs_prdanc_cats_f1 foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_prdanccat_idx on dcs_prd_anc_cats (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_catalogs (
     [exec]   2  	     category_id     varchar2(40)    not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null
     [exec]   4  ,constraint dcs_cat_catalgs_pk primary key (category_id,catalog_id)
     [exec]   5  ,constraint dcs_cat_catalgs_f2 foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   6  ,constraint dcs_cat_catalgs_f1 foreign key (category_id) references dcs_category (category_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_catctlgs_idx on dcs_cat_catalogs (catalog_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_catalogs (
     [exec]   2  	     product_id      varchar2(40)    not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null
     [exec]   4  ,constraint dcs_prd_catalgs_pk primary key (product_id,catalog_id)
     [exec]   5  ,constraint dcs_prd_catalgs_f2 foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   6  ,constraint dcs_prd_catalgs_f1 foreign key (product_id) references dcs_product (product_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_prd_ctlgs_idx on dcs_prd_catalogs (catalog_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_catalogs (
     [exec]   2  	     sku_id  varchar2(40)    not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null
     [exec]   4  ,constraint dcs_sku_catalgs_pk primary key (sku_id,catalog_id)
     [exec]   5  ,constraint dcs_sku_catalgs_f2 foreign key (catalog_id) references dcs_catalog (catalog_id)
     [exec]   6  ,constraint dcs_sku_catalgs_f1 foreign key (sku_id) references dcs_sku (sku_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_sku_ctlgs_idx on dcs_sku_catalogs (catalog_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Search
     [exec] SQL> @D:\ATG\ATG9.4\home/../DAF/Search/common/sql/db_components/oracle/refinement_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DAF/version/9.4/Search/common/src/sql/refinement_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new refinement repository
     [exec] SQL> -- Add the SRCH_REFINE_ELEMS table, which lists refine elements
     [exec] SQL> 
     [exec] SQL> create table srch_refine_elems (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     type    number(10)      null,
     [exec]   4  	     label   varchar2(254)   not null,
     [exec]   5  	     property	     varchar2(254)   not null,
     [exec]   6  	     property_type   number(10)      not null,
     [exec]   7  	     range_type      number(10)      not null,
     [exec]   8  	     desired number(10)      null,
     [exec]   9  	     minimum number(10)      null,
     [exec]  10  	     incr    number(10)      null,
     [exec]  11  	     sort_type	     number(10)      null,
     [exec]  12  	     levels  number(10)      null,
     [exec]  13  	     parent_refine_elem      varchar2(40)    null,
     [exec]  14  	     priority	     number(10)      null,
     [exec]  15  	     remove_when_used	     number(3)	     not null,
     [exec]  16  	     display_fragment	     varchar2(254)   null,
     [exec]  17  	     max_values      number(10)      null,
     [exec]  18  	     round_free_range	     number(10)      null
     [exec]  19  ,constraint srch_refine_elem_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFINE_SUBELS table, which lists any child refine elementsfor a refine element.
     [exec] SQL> 
     [exec] SQL> create table srch_refine_subels (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     refine_element  varchar2(40)    null
     [exec]   5  ,constraint srch_refine_subl_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFEL_ORDER table which lists the explicit order values for a refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refel_order (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     order_value     varchar2(254)   not null
     [exec]   5  ,constraint srch_refel_order_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFEL_RANGE table which lists the explicit range values for a refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refel_range (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     range_value     varchar2(254)   not null
     [exec]   5  ,constraint srch_refel_range_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFEL_SELECT table which lists the select values for a refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refel_select (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     select_value    varchar2(254)   not null
     [exec]   5  ,constraint srch_refel_selct_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFEL_EXCLUDE table which lists the excluded values for a refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refel_exclude (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     exclude_value   varchar2(254)   not null
     [exec]   4  ,constraint srch_refel_excl_p primary key (id,exclude_value));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_SORT_OPTIONS table which lists available sort options
     [exec] SQL> 
     [exec] SQL> create table srch_sort_options (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     label   varchar2(254)   not null,
     [exec]   4  	     property	     varchar2(254)   not null,
     [exec]   5  	     property_type   number(10)      not null,
     [exec]   6  	     ascending	     number(3)	     not null
     [exec]   7  ,constraint srch_sort_opts_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- The SRCH_REFINE_CONFIG table, which lists the generated refinement configurations.
     [exec] SQL> 
     [exec] SQL> create table srch_refine_config (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     type    number(10)      not null,
     [exec]   4  	     refine_cfg_name varchar2(80)    null
     [exec]   5  ,constraint srch_refine_cfg_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- List of refine elements that belong to a refine config
     [exec] SQL> 
     [exec] SQL> create table srch_refcfg_elems (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     refine_element  varchar2(40)    null
     [exec]   5  ,constraint srch_refcfg_els_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the list of sort options per refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refine_sort (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     sort_option     varchar2(40)    not null
     [exec]   4  ,constraint srch_refine_sort_p primary key (id,sort_option));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- ============================================= Search Merchandising==================================
     [exec] SQL> -- Add the SRCH_CFG_DIM table, dimensionNode
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_dimnode (
     [exec]   2  	     dim_id  varchar2(40)    not null,
     [exec]   3  	     dim_type	     number(10)      not null,
     [exec]   4  	     dim_name	     varchar2(254)   not null,
     [exec]   5  	     dim_desc	     varchar2(254)   null,
     [exec]   6  	     dim_value	     varchar2(254)   null,
     [exec]   7  	     dim_service     varchar2(254)   null
     [exec]   8  ,constraint srch_cfg_dim_p primary key (dim_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_DTINFO table, dimensionTreeInfo
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_dtinfo (
     [exec]   2  	     dti_id  varchar2(40)    not null,
     [exec]   3  	     dti_name	     varchar2(254)   not null,
     [exec]   4  	     dti_desc	     varchar2(254)   null,
     [exec]   5  	     dti_app number(10)      not null,
     [exec]   6  	     dti_root_id     varchar2(40)    null
     [exec]   7  ,constraint srch_cfg_dti_p primary key (dti_id)
     [exec]   8  ,constraint srch_cfg_dim1_f foreign key (dti_root_id) references srch_cfg_dimnode (dim_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_dim1_x on srch_cfg_dtinfo (dti_root_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_FOL table, dimensionFolder
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_fol (
     [exec]   2  	     fol_id  varchar2(40)    not null,
     [exec]   3  	     fol_dim_svc     varchar2(40)    null
     [exec]   4  ,constraint srch_cfg_fol_p primary key (fol_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_RULE table, searchRule
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rule (
     [exec]   2  	     r_id    varchar2(40)    not null,
     [exec]   3  	     r_type  number(10)      not null,
     [exec]   4  	     r_display_name  varchar2(254)   null,
     [exec]   5  	     r_enabled	     number(3)	     not null,
     [exec]   6  	     r_rule_type     number(10)      null,
     [exec]   7  	     r_rule  clob    not null,
     [exec]   8  	     r_action	     clob    not null,
     [exec]   9  	     r_desc  varchar2(254)   null
     [exec]  10  ,constraint srch_cfg_rule_p primary key (r_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_SYNSET table, synset
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_synset (
     [exec]   2  	     syn_id  varchar2(40)    not null,
     [exec]   3  	     syn_base_term   varchar2(254)   not null,
     [exec]   4  	     syn_reciprocal  number(3)	     not null
     [exec]   5  ,constraint srch_cfg_synset_p primary key (syn_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_APROP table, availableRankingProperty
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_aprop (
     [exec]   2  	     arp_id  varchar2(40)    not null,
     [exec]   3  	     arp_name	     varchar2(254)   not null,
     [exec]   4  	     arp_data_type   number(10)      not null,
     [exec]   5  	     arp_value_type  number(10)      not null,
     [exec]   6  	     arp_app number(10)      not null
     [exec]   7  ,constraint srch_cfg_aprop_p primary key (arp_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_RPROP table, rankingProperty
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rprop (
     [exec]   2  	     rp_id   varchar2(40)    not null,
     [exec]   3  	     rp_arp  varchar2(40)    not null,
     [exec]   4  	     rp_def_rank     number(10)      not null,
     [exec]   5  	     rp_weighting    number(5,2)     not null,
     [exec]   6  	     rp_rng_met      number(10)      null
     [exec]   7  ,constraint srch_cfg_rprop_p primary key (rp_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_CFG table, genericSearchConfig
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_cfg (
     [exec]   2  	     cfg_id  varchar2(40)    not null,
     [exec]   3  	     cfg_app number(10)      not null,
     [exec]   4  	     cfg_locale      varchar2(40)    null,
     [exec]   5  	     cfg_rm  varchar2(40)    null,
     [exec]   6  	     cfg_base_id     varchar2(40)    null,
     [exec]   7  	     use_base_rankprps	     number(3)	     not null
     [exec]   8  ,constraint srch_cfg_cfg_p primary key (cfg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_CFG table, genericSearchConfig.baseSearchConfig & derivedSearchConfigs
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_base (
     [exec]   2  	     cfg_id  varchar2(40)    not null,
     [exec]   3  	     cfg_base_id     varchar2(40)    not null
     [exec]   4  ,constraint srch_cfg_base_p primary key (cfg_id)
     [exec]   5  ,constraint srch_cfg_base1_f foreign key (cfg_id) references srch_cfg_dimnode (dim_id)
     [exec]   6  ,constraint srch_cfg_base2_f foreign key (cfg_base_id) references srch_cfg_dimnode (dim_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_base1_x on srch_cfg_base (cfg_base_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_FOL_CHLDCFGS table, dimensionFolder.searchConfigs (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_fol_chldcfgs (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     srch_cfg_id     varchar2(40)    not null,
     [exec]   4  	     chldcfgs_seq    number(10)      not null
     [exec]   5  ,constraint srch_cfg_ccfgs_p primary key (folder_id,chldcfgs_seq)
     [exec]   6  ,constraint srch_cfg_cfg1_f foreign key (folder_id) references srch_cfg_dimnode (dim_id)
     [exec]   7  ,constraint srch_cfg_cfg2_f foreign key (srch_cfg_id) references srch_cfg_dimnode (dim_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cffolchld1_x on srch_cfg_fol_chldcfgs (srch_cfg_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_FOL_CHLDFOL table, dimensionFolder.childDimensionFolders (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_fol_chldfol (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     chldfol_seq     number(10)      not null,
     [exec]   4  	     chld_fol_id     varchar2(40)    not null
     [exec]   5  ,constraint srch_cfg_chldfol_p primary key (folder_id,chldfol_seq)
     [exec]   6  ,constraint srch_cfg_fol_f foreign key (folder_id) references srch_cfg_dimnode (dim_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_RPSET table, genericSearchConfig.rankingProperties (set)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rpset (
     [exec]   2  	     rpset_cfg_id    varchar2(40)    not null,
     [exec]   3  	     rpset_rp_id     varchar2(40)    not null
     [exec]   4  ,constraint srch_cfg_rpset_p primary key (rpset_cfg_id,rpset_rp_id)
     [exec]   5  ,constraint srch_cfg_rpset1_f foreign key (rpset_cfg_id) references srch_cfg_cfg (cfg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_VRPSET table, genericSearchConfig.variableRankingProperties (set)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_vrpset (
     [exec]   2  	     vrpset_cfg_id   varchar2(40)    not null,
     [exec]   3  	     vrpset_rp_id    varchar2(40)    not null
     [exec]   4  ,constraint srch_cfg_vrpset_p primary key (vrpset_cfg_id,vrpset_rp_id)
     [exec]   5  ,constraint srch_cfg_vrpset1_f foreign key (vrpset_cfg_id) references srch_cfg_cfg (cfg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_SYNLNK table, genericSearchConfig.synsets (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_synlnk (
     [exec]   2  	     slnk_cfg_id     varchar2(40)    not null,
     [exec]   3  	     slnk_syn_id     varchar2(40)    not null,
     [exec]   4  	     slnk_seq	     number(10)      not null
     [exec]   5  ,constraint srch_cfg_synlnk_p primary key (slnk_cfg_id,slnk_seq)
     [exec]   6  ,constraint srch_cfg_synlnk1_f foreign key (slnk_cfg_id) references srch_cfg_cfg (cfg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_DRULE table, genericSearchConfig.disabledBaseRules (set)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_drule (
     [exec]   2  	     dr_cfg_id	     varchar2(40)    not null,
     [exec]   3  	     dr_id   varchar2(40)    not null
     [exec]   4  ,constraint srch_cfg_drule_p primary key (dr_cfg_id,dr_id)
     [exec]   5  ,constraint srch_cfg_drule1_f foreign key (dr_cfg_id) references srch_cfg_cfg (cfg_id)
     [exec]   6  ,constraint srch_cfg_drule2_f foreign key (dr_id) references srch_cfg_rule (r_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_drule1_x on srch_cfg_drule (dr_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_DSYN table, genericSearchConfig.disabledBaseSynsets (set)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_dsyn (
     [exec]   2  	     ds_cfg_id	     varchar2(40)    not null,
     [exec]   3  	     ds_id   varchar2(40)    not null
     [exec]   4  ,constraint srch_cfg_dsyn_p primary key (ds_cfg_id)
     [exec]   5  ,constraint srch_cfg_dsyn1_f foreign key (ds_cfg_id) references srch_cfg_cfg (cfg_id)
     [exec]   6  ,constraint srch_cfg_dsyn2_f foreign key (ds_id) references srch_cfg_synset (syn_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_dsyn1_x on srch_cfg_dsyn (ds_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_ERULE table, genericSearchConfig.exclusionRules (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_erule (
     [exec]   2  	     er_cfg_id	     varchar2(40)    not null,
     [exec]   3  	     er_id   varchar2(40)    not null,
     [exec]   4  	     er_seq  number(10)      not null
     [exec]   5  ,constraint srch_cfg_erule_p primary key (er_id,er_seq)
     [exec]   6  ,constraint srch_cfg_erule1_f foreign key (er_cfg_id) references srch_cfg_cfg (cfg_id)
     [exec]   7  ,constraint srch_cfg_erule2_f foreign key (er_id) references srch_cfg_rule (r_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_erule1_x on srch_cfg_erule (er_cfg_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_RRULE table, genericSearchConfig.redirectionRules (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rrule (
     [exec]   2  	     rr_cfg_id	     varchar2(40)    not null,
     [exec]   3  	     rr_id   varchar2(40)    not null,
     [exec]   4  	     rr_seq  number(10)      not null
     [exec]   5  ,constraint srch_cfg_rrule_p primary key (rr_id,rr_seq)
     [exec]   6  ,constraint srch_cfg_rrule1_f foreign key (rr_cfg_id) references srch_cfg_cfg (cfg_id)
     [exec]   7  ,constraint srch_cfg_rrule2_f foreign key (rr_id) references srch_cfg_rule (r_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_rrule1_x on srch_cfg_rrule (rr_cfg_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_PRULE table, genericSearchConfig.positioningRules (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_prule (
     [exec]   2  	     pr_cfg_id	     varchar2(40)    not null,
     [exec]   3  	     pr_id   varchar2(40)    not null,
     [exec]   4  	     pr_seq  number(10)      not null
     [exec]   5  ,constraint srch_cfg_prule_p primary key (pr_id,pr_seq)
     [exec]   6  ,constraint srch_cfg_prule1_f foreign key (pr_cfg_id) references srch_cfg_cfg (cfg_id)
     [exec]   7  ,constraint srch_cfg_prule2_f foreign key (pr_id) references srch_cfg_rule (r_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_prule1_x on srch_cfg_prule (pr_cfg_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_TERM table, synset.terms
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_term (
     [exec]   2  	     trm_syn_id      varchar2(40)    not null,
     [exec]   3  	     trm_term	     varchar2(254)   not null
     [exec]   4  ,constraint srch_cfg_term_p primary key (trm_syn_id,trm_term)
     [exec]   5  ,constraint srch_cfg_term_f foreign key (trm_syn_id) references srch_cfg_synset (syn_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_RANK table, rankingProperty.valueRanks
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rank (
     [exec]   2  	     rank_rp_id      varchar2(40)    not null,
     [exec]   3  	     rank_value      varchar2(254)   not null,
     [exec]   4  	     rank_rank	     number(10)      not null
     [exec]   5  ,constraint srch_cfg_rank_p primary key (rank_rp_id,rank_value)
     [exec]   6  ,constraint srch_cfg_rank_f foreign key (rank_rp_id) references srch_cfg_rprop (rp_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DAF/Search/Index/sql/db_components/oracle/search_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DAF/version/9.4/Search/Index/src/sql/search_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new search schema.
     [exec] SQL> -- Add the search_config... used to track which generation is the currentgeneration.
     [exec] SQL> 
     [exec] SQL> create table srch_config (
     [exec]   2  	     config_path     varchar2(254)   not null,
     [exec]   3  	     generation      number(10)      not null,
     [exec]   4  	     claimed_generation      number(10)      null,
     [exec]   5  	     nxt_inc_generation      number(10)      null,
     [exec]   6  	     uniq_server_id  varchar2(254)   null,
     [exec]   7  	     last_activity   date    null,
     [exec]   8  	     last_full_index date    null,
     [exec]   9  	     last_incr_index date    null
     [exec]  10  ,constraint srch_config_p primary key (config_path));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Holds an association of a config path and repository name. Usedto reduce the length of the primary key for srch_update_queue
     [exec] SQL> 
     [exec] SQL> create table srch_config_repo (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     config_path     varchar2(254)   not null,
     [exec]   4  	     repository_path varchar2(254)   not null
     [exec]   5  ,constraint srch_config_repo_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the search_update_queue... used by the IncrementalLoader to trackrepository changes.
     [exec] SQL> 
     [exec] SQL> create table srch_update_queue (
     [exec]   2  	     repository_id   varchar2(254)   not null,
     [exec]   3  	     config_repo_id  varchar2(40)    not null,
     [exec]   4  	     generation      number(10)      not null,
     [exec]   5  	     item_desc_name  varchar2(64)    not null,
     [exec]   6  	     change_type     number(10)      not null
     [exec]   7  ,constraint srch_up_queue_p primary key (repository_id,config_repo_id,generation,item_desc_name)
     [exec]   8  ,constraint srch_upq_cfrp_f1 foreign key (config_repo_id) references srch_config_repo (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_updateque1_x on srch_update_queue (config_repo_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the search_update_queue... used by the IncrementalLoader to trackrepository changes.
     [exec] SQL> 
     [exec] SQL> create table srch_update_vqueue (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     config_path     varchar2(254)   not null,
     [exec]   4  	     generation      number(10)      not null,
     [exec]   5  	     repository_path varchar2(254)   not null,
     [exec]   6  	     item_desc_name  varchar2(64)    not null,
     [exec]   7  	     repository_id   varchar2(254)   not null,
     [exec]   8  	     change_type     number(10)      not null,
     [exec]   9  	     dev_line_id     varchar2(40)    not null,
     [exec]  10  	     asset_version   number(10)      not null
     [exec]  11  ,constraint srch_up_vqueue_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_up_vqueue on srch_update_vqueue (config_path,generation,repository_path,item_desc_name,repository_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/Search/common/sql/db_components/oracle/commerce_refinement_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/Search/common/sql/commerce_refinement_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new catalog-extended refinement repository
     [exec] SQL> 
     [exec] SQL> create table dcs_refine_config (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     inherit_global  number(3)	     not null,
     [exec]   4  	     inherit_category	     number(3)	     not null,
     [exec]   5  	     can_child_inherit	     number(3)	     not null,
     [exec]   6  	     is_global	     number(3)	     not null
     [exec]   7  ,constraint dcs_refine_cfg_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_refcfg_genels (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq     number(10)      not null,
     [exec]   4  	     refine_element  varchar2(40)    not null
     [exec]   5  ,constraint dcs_rfcfg_genels_p primary key (id,seq));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_refcfg (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     refine_config_id	     varchar2(40)    null
     [exec]   4  ,constraint dcs_cat_refcfg_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/Search/CustomCatalogs/common/sql/db_components/oracle/custom_catalog_refinement_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/Search/CustomCatalogs/common/sql/custom_catalog_refinement_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new catalog-extended refinement repository
     [exec] SQL> 
     [exec] SQL> create table dcs_refcfg_custom (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     inherit_catalog number(3)	     not null
     [exec]   4  ,constraint dcs_rfcf_custom_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_catinfo_refcfg (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     refine_config_id	     varchar2(40)    not null
     [exec]   4  ,constraint dcs_catinf_rfcfg_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_catalog_refcfg (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     refine_config_id	     varchar2(40)    null
     [exec]   4  ,constraint dcs_cata_rfcfg_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Castorama
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_magasin.sql
     [exec] SQL> CREATE TABLE CASTO_REGION_MESSAGES (
     [exec]   2  	     MESSAGE_ID 						     VARCHAR2(40),
     [exec]   3  	     REGION_ID							     VARCHAR2(40),
     [exec]   4  	     SEQ							     INTEGER,
     [exec]   5  	     PRIMARY KEY (MESSAGE_ID, REGION_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MESSAGES (
     [exec]   2  	     MESSAGE_ID 						     VARCHAR2(40),
     [exec]   3  	     MESSAGE_NOM						     VARCHAR2(50),
     [exec]   4  	     MESSAGE_TEXTE						     VARCHAR2(4000),
     [exec]   5  	     PRIMARY KEY (MESSAGE_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_DEPARTEMENT_OLD (
     [exec]   2  	     ID 								     VARCHAR2(40)	       NOT NULL,
     [exec]   3  	     NUMERO								     VARCHAR2(40)	       NOT NULL,
     [exec]   4  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_DEPARTEMENT(
     [exec]   2  	     ID 								     VARCHAR2(40)			  NOT NULL,
     [exec]   3  	     NUMERO								     VARCHAR2(40)			  NOT NULL,
     [exec]   4  	     NOM								     VARCHAR2(100),
     [exec]   5  	     REGION_ID								     VARCHAR2(40),
     [exec]   6  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ADRESSE (
     [exec]   2  	     ID 	    VARCHAR2(40)		     NOT NULL,
     [exec]   3  	     DEPARTEMENTID  VARCHAR2(40)		     NOT NULL,
     [exec]   4  	     VILLE	    VARCHAR2(128)			     NOT NULL,
     [exec]   5  	     CP 	    VARCHAR2(10),
     [exec]   6  	     RUE	    VARCHAR2(128),
     [exec]   7  	     TEL	    VARCHAR2(32),
     [exec]   8  	     FAX	    VARCHAR2(32),
     [exec]   9  	     COMMENTAIRE    VARCHAR2(500),
     [exec]  10  	     PRIMARY KEY (ID),
     [exec]  11  	     --FOREIGN KEY (DEPARTEMENTID) REFERENCES CASTO_DEPARTEMENT_OLD (ID),
     [exec]  12  	     CONSTRAINT FK_DEPARTEMENT FOREIGN KEY (DEPARTEMENTID) REFERENCES CASTO_DEPARTEMENT (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ENTITE (
     [exec]   2  	     ID 	  VARCHAR2(40)		     NOT NULL,
     [exec]   3  	     ADRESSEID	  VARCHAR2(40)		     NOT NULL,
     [exec]   4  	     NOM	  VARCHAR2(64)		     NOT NULL,
     [exec]   5  	     LOGIN_ADMIN  VARCHAR2(64)		     NOT NULL,
     [exec]   6  	     PASS_ADMIN   VARCHAR2(64)		     NOT NULL,
     [exec]   7  	     EMAIL	  VARCHAR2(255),
     [exec]   8  	     PRIMARY KEY (ID),
     [exec]   9  	     CONSTRAINT FK_ADRESSE FOREIGN KEY (ADRESSEID) REFERENCES CASTO_ADRESSE (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_COMMANDE_SERVICE (
     [exec]   2  	     ID_SERVICE 					     VARCHAR2(40)	       NOT NULL,
     [exec]   3  	     LIBELLE						     VARCHAR2(255)	  NOT NULL,
     [exec]   4  	     URL_BOUTON 					     VARCHAR2(255)	  NOT NULL,
     [exec]   5  	     SHIPPING_GROUP_NAME				     VARCHAR2(255)	  NOT NULL,
     [exec]   6  	     PRIMARY KEY (ID_SERVICE));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN (
     [exec]   2  	     ID 						     VARCHAR2(40)	   NOT NULL,
     [exec]   3  	     ENTITE_ID						     VARCHAR2(40)	   NOT NULL,
     [exec]   4  	     NOM						     VARCHAR2(64),
     [exec]   5  	     URL_IMG_PLAN					     VARCHAR2(128)	       DEFAULT 0		     NOT NULL,
     [exec]   6  	     URL_PDF_PLAN					     VARCHAR2(128)	       DEFAULT 0		     NOT NULL,
     [exec]   7  	     ACCES_ROUTE					     VARCHAR2(500),
     [exec]   8  	     ACCES_ROUTE2					     VARCHAR2(500),
     [exec]   9  	     ACCES_AUTOROUTE					     VARCHAR2(500),
     [exec]  10  	     ACCES_TRANSPORT_COMMUN				     VARCHAR2(500),
     [exec]  11  	     HORAIRES						     VARCHAR2(500),
     [exec]  12  	     NOM_SECONDAIRE					     VARCHAR2(64),
     [exec]  13  	     URL_IMG_PLAN_MASSE 				     VARCHAR2(128)	       DEFAULT 0		     NOT NULL,
     [exec]  14  	     URL_PDF_PLAN_MASSE 				     VARCHAR2(128)	       DEFAULT 0		     NOT NULL,
     [exec]  15  	     URL_PHOTO						     VARCHAR2(128)	       DEFAULT 0		     NOT NULL,
     [exec]  16  	     POSITION_TOP					     INTEGER		 DEFAULT 0		       NOT NULL,
     [exec]  17  	     POSITION_LEFT					     INTEGER		 DEFAULT 0		       NOT NULL,
     [exec]  18  	     KEYWORDS						     VARCHAR2(254),
     [exec]  19  	     DESCRIPTION					     VARCHAR2(254),
     [exec]  20  	     STORE_URL								     VARCHAR2(254),
     [exec]  21  	     DELAI_PREPARATION					     NUMBER(14),
     [exec]  22  	     DELAI_LIVRAISON					     NUMBER(14),
     [exec]  23  	     PRIMARY KEY (ID),
     [exec]  24  	     CONSTRAINT FK_ENTITE FOREIGN KEY (ENTITE_ID) REFERENCES CASTO_ENTITE (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGAS_COUPLE_SERVICE (
     [exec]   2  	     ID_SERVICE 						     VARCHAR2(40)	      NOT NULL,
     [exec]   3  	     ID_MAGASIN 						     VARCHAR2(40)	      NOT NULL,
     [exec]   4  	     ID_COUPLE							     VARCHAR2(40)	      NOT NULL,
     [exec]   5  	     PRIMARY KEY (ID_COUPLE));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_REGION (
     [exec]   2  	     ID 							     VARCHAR2(40)	 NOT NULL,
     [exec]   3  	     NOM							     VARCHAR2(64)	     NOT NULL,
     [exec]   4  	     URL_IMG_REGION						     VARCHAR2(128),
     [exec]   5  	     ORDRE_AFFICHAGE						     VARCHAR2(10),
     [exec]   6  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SERVICE (
     [exec]   2  	     ID 								     VARCHAR2(40)	 NOT NULL,
     [exec]   3  	     NOM								     VARCHAR2(64)	     NOT NULL,
     [exec]   4  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN_COMM_SERVICE (
     [exec]   2  	     ID_SERVICE 						     VARCHAR2(40)	 NOT NULL REFERENCES CASTO_COMMANDE_SERVICE (ID_SERVICE),
     [exec]   3  	     ID_MAGASIN 						     VARCHAR2(40)	 NOT NULL REFERENCES CASTO_MAGASIN (ID),
     [exec]   4  	     PRIMARY KEY (ID_SERVICE, ID_MAGASIN));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN_SERVICE (
     [exec]   2  	     MAGASIN_ID 						     VARCHAR2(40)	 NOT NULL,
     [exec]   3  	     SEQ							     INTEGER		 NOT NULL,
     [exec]   4  	     SERVICE_ID 						     VARCHAR2(40)	 NOT NULL,
     [exec]   5  	     PRIMARY KEY (MAGASIN_ID, SERVICE_ID),
     [exec]   6  	     FOREIGN KEY (MAGASIN_ID) REFERENCES CASTO_MAGASIN (ID),
     [exec]   7  	     FOREIGN KEY (SERVICE_ID) REFERENCES CASTO_SERVICE (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OFFRE (
     [exec]   2  	     ID 							     VARCHAR2(40)		 NOT NULL,
     [exec]   3  	     REFERENCE							     VARCHAR2(16)		 NOT NULL,
     [exec]   4  	     TITRE							     VARCHAR2(128),
     [exec]   5  	     DATEMIN							     DATE,
     [exec]   6  	     DATEMAX							     DATE,
     [exec]   7  	     ACTIVATE							     NUMBER(1),
     [exec]   8  	     DESCRIPTION						     LONG,
     [exec]   9  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ACTUALITE (
     [exec]   2  	     ID 								     VARCHAR2(40)		 NOT NULL,
     [exec]   3  	     TITRE								     VARCHAR2(128),
     [exec]   4  	     DATEMIN								     DATE,
     [exec]   5  	     DATEMAX								     DATE,
     [exec]   6  	     CONTENU								     VARCHAR2(1000),
     [exec]   7  	     ACTIVATE								     NUMBER(1),
     [exec]   8  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OPERATION_SPECIALE (
     [exec]   2  	     ID 							     VARCHAR2(40)		     NOT NULL,
     [exec]   3  	     TITRE_HP							     VARCHAR2(255)			     NOT NULL,
     [exec]   4  	     LIBELLE_LIEN						     VARCHAR2(255)			     NOT NULL,
     [exec]   5  	     TITRE							     VARCHAR2(255)			     NOT NULL,
     [exec]   6  	     INTRODUCTION						     VARCHAR2(2000)			     NOT NULL,
     [exec]   7  	     DATE_DEBUT 						     DATE			     NOT NULL,
     [exec]   8  	     DATE_FIN							     DATE			     NOT NULL,
     [exec]   9  	     ACTIVATE							     NUMBER			     DEFAULT 0			   NOT NULL,
     [exec]  10  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OPERATION_MAGASIN (
     [exec]   2  	     ID 								     VARCHAR2(40)		       NOT NULL,
     [exec]   3  	     SEQ							     NUMBER			       NOT NULL,
     [exec]   4  	     MAGASIN_ID 						     VARCHAR2(40)		       NOT NULL,
     [exec]   5  	     PRIMARY KEY (ID, SEQ),
     [exec]   6  	     FOREIGN KEY (ID) REFERENCES CASTO_OPERATION_SPECIALE (ID),
     [exec]   7  	     FOREIGN KEY (MAGASIN_ID) REFERENCES CASTO_MAGASIN (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_IMAGE_AUX (
     [exec]   2  	     IMAGE_AUX_ID						     VARCHAR2(40)		 NOT NULL,
     [exec]   3  	     MAGASIN_ID 						     VARCHAR2(40)		 NOT NULL,
     [exec]   4  	     SMALL_IMAGE_URL						     VARCHAR2(128)		     NOT NULL,
     [exec]   5  	     LARGE_IMAGE_URL						     VARCHAR2(128)		     NOT NULL,
     [exec]   6  	     PRIMARY KEY  (IMAGE_AUX_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OUVERTURE_EXCEP (
     [exec]   2  	     ID 							     VARCHAR2(40)		NOT NULL,
     [exec]   3  	     MAGASIN_ID 						     VARCHAR2(40)		NOT NULL,
     [exec]   4  	     LIBELLE							     VARCHAR2(100),
     [exec]   5  	     DATE_FIN_VALIDITE						     DATE			NOT NULL,
     [exec]   6  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OFFRE_MAGASIN (
     [exec]   2  	     OFFRE_ID							     VARCHAR2(40)		       NOT NULL,
     [exec]   3  	     SEQ							     INTEGER			       NOT NULL,
     [exec]   4  	     MAGASIN_ID 						     VARCHAR2(40)		       NOT NULL,
     [exec]   5  	     PRIMARY KEY (OFFRE_ID, MAGASIN_ID),
     [exec]   6  	     FOREIGN KEY (OFFRE_ID) REFERENCES CASTO_OFFRE (ID),
     [exec]   7  	     FOREIGN KEY (MAGASIN_ID) REFERENCES CASTO_MAGASIN (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASINS_ACTU (
     [exec]   2  	     MAGASIN_ID 						     VARCHAR2(40)		       NOT NULL,
     [exec]   3  	     SEQ							     INTEGER			    NOT NULL,
     [exec]   4  	     ACTU_ID							     VARCHAR2(40)		       NOT NULL,
     [exec]   5  	     PRIMARY KEY (MAGASIN_ID, ACTU_ID),
     [exec]   6  	     FOREIGN KEY (ACTU_ID) REFERENCES CASTO_ACTUALITE (ID),
     [exec]   7  	     FOREIGN KEY (MAGASIN_ID) REFERENCES CASTO_MAGASIN (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN_IMAGE_AUX (
     [exec]   2  	     MAGASIN_ID 						     VARCHAR2(40)		     NOT NULL,
     [exec]   3  	     SEQ							     INTEGER			     NOT NULL,
     [exec]   4  	     IMAGE_AUX_ID						     VARCHAR2(40)		     NOT NULL,
     [exec]   5  	     PRIMARY KEY (MAGASIN_ID, IMAGE_AUX_ID),
     [exec]   6  	     FOREIGN KEY (MAGASIN_ID) REFERENCES CASTO_MAGASIN (ID),
     [exec]   7  	     FOREIGN KEY (IMAGE_AUX_ID) REFERENCES CASTO_IMAGE_AUX (IMAGE_AUX_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN_OUVERTURE_EXCEP (
     [exec]   2  	     MAGASIN_ID 						     VARCHAR2(40)		       NOT NULL,
     [exec]   3  	     SEQ							     INTEGER			       NOT NULL,
     [exec]   4  	     ID 							     VARCHAR2(40)		       NOT NULL,
     [exec]   5  	     PRIMARY KEY  (MAGASIN_ID, ID),
     [exec]   6  	     FOREIGN KEY (MAGASIN_ID) REFERENCES CASTO_MAGASIN (ID),
     [exec]   7  	     FOREIGN KEY (ID) REFERENCES CASTO_OUVERTURE_EXCEP (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN_PROCHE (
     [exec]   2  	     MAGASIN_REF						     VARCHAR2(40)		   NOT NULL,
     [exec]   3  	     SEQ							     INTEGER			   NOT NULL,
     [exec]   4  	     MAGASIN_PROCHE						     VARCHAR2(40)		   NOT NULL,
     [exec]   5  	     PRIMARY KEY  (MAGASIN_REF, MAGASIN_PROCHE),
     [exec]   6  	     FOREIGN KEY (MAGASIN_REF) REFERENCES CASTO_MAGASIN (ID),
     [exec]   7  	     FOREIGN KEY (MAGASIN_PROCHE) REFERENCES CASTO_MAGASIN (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_catalog.sql
     [exec] SQL> CREATE TABLE CAST_DOCUMENT (
     [exec]   2  	 DOCUMENT_ID							      VARCHAR2(40)   NOT NULL,
     [exec]   3  	     DOCUMENT_TYPE						      INTEGER		 NULL,
     [exec]   4  	     TITLE								      VARCHAR2(254)  NULL,
     [exec]   5  	     IMAGE								      VARCHAR2(40)   NULL,
     [exec]   6  	     DESCRIPTION							      VARCHAR2(2048) NULL,
     [exec]   7  	     RELATIVE_URL						      VARCHAR2(2048) NULL,
     [exec]   8  	     RATING				      NUMBER(19,3)   NULL,
     [exec]   9  	     TEMPLATE_ID							      VARCHAR2(40)   NULL
     [exec]  10  ,	 CONSTRAINT CAST_DOCUMENT_P PRIMARY KEY (DOCUMENT_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_CAT_DOCUMENT (
     [exec]   2  	 SEQUENCE_NUM						     INTEGER	    NOT NULL,
     [exec]   3  	     DOCUMENT_ID						     VARCHAR2(40)   NOT NULL,
     [exec]   4  	     CATEGORY_ID						     VARCHAR2(40)   NOT NULL,
     [exec]   5  	     CONSTRAINT CAST_CAT_DOCUMENT_P PRIMARY KEY (CATEGORY_ID, SEQUENCE_NUM),
     [exec]   6  	 CONSTRAINT CAST_CAT_DOCUMENT_C_F FOREIGN KEY (CATEGORY_ID) REFERENCES DCS_CATEGORY (CATEGORY_ID),
     [exec]   7  	 CONSTRAINT CAST_CAT_DOCUMENT_D_F FOREIGN KEY (DOCUMENT_ID) REFERENCES CAST_DOCUMENT(DOCUMENT_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_DOC_KEYWRDS (
     [exec]   2  	     ID 									     VARCHAR2(40) NOT NULL REFERENCES CAST_DOCUMENT(DOCUMENT_ID),
     [exec]   3  	     SEQ_NUM								     INTEGER NOT NULL,
     [exec]   4  	     KEYWORDS								     VARCHAR2(254) NULL,
     [exec]   5  	     PRIMARY KEY(ID, SEQ_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE cast_style (
     [exec]   2  	 style_id VARCHAR2 (40) NOT NULL PRIMARY KEY,
     [exec]   3  	 color VARCHAR2 (7) DEFAULT '#000000',
     [exec]   4  	 foreground VARCHAR2 (7) DEFAULT '#FFFFFF',
     [exec]   5  	 dropdown_color VARCHAR2 (7),
     [exec]   6  	 font_name VARCHAR2 (30),
     [exec]   7  	 font_size VARCHAR2 (5),
     [exec]   8  	 font_weight NUMBER DEFAULT 0 NOT NULL,
     [exec]   9  	     tab_style VARCHAR2 (30),
     [exec]  10  	     bg_style VARCHAR2 (30),
     [exec]  11  	     link_style VARCHAR2 (30),
     [exec]  12  	     facet_style VARCHAR2 (30),
     [exec]  13  	     breadcrumbs_style VARCHAR2 (30),
     [exec]  14  	     product_promo_style VARCHAR2 (30),
     [exec]  15  	     paging_style VARCHAR2 (30),
     [exec]  16  	     cloud_style VARCHAR2 (30),
     [exec]  17  	     right_menu_style VARCHAR2 (30),
     [exec]  18  	     list_style VARCHAR2 (30),
     [exec]  19  	     border_style  VARCHAR2 (30)
     [exec]  20  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE cast_category_style (
     [exec]   2  	 category_id VARCHAR2 (40) NOT NULL REFERENCES dcs_category(category_id),
     [exec]   3  	 style_id VARCHAR2 (40) NOT NULL REFERENCES cast_style(style_id),
     [exec]   4  	 PRIMARY KEY (category_id)
     [exec]   5  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_PROMO_TEMPLATE (
     [exec]   2  	     PROMO_TEMPLATE_ID			     VARCHAR2(40)	 NOT NULL,
     [exec]   3  	     LAYOUTTYPE 			     INTEGER		 NOT NULL,
     [exec]   4  	     PRIMARY KEY (PROMO_TEMPLATE_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_PROMO_INFORMATION (
     [exec]   2  	     PROMO_INFORMATION_ID		     VARCHAR2(40)	 NOT NULL,
     [exec]   3  	     IMAGE				     VARCHAR2(40)	 NULL,
     [exec]   4  	     FLASH				     VARCHAR2(40)	 NULL,
     [exec]   5  	     DESCRIPTION			     VARCHAR2(400)	 NULL,
     [exec]   6  	     URL				     VARCHAR2(255)	  NULL,
     [exec]   7  	     VIDEOURL				     VARCHAR2(500)	 NULL,
     [exec]   8  	     TITLE								     VARCHAR2(100)	     NULL,
     [exec]   9  	     DOCUMENT_ID							     VARCHAR2(40)	     NULL REFERENCES CAST_DOCUMENT(DOCUMENT_ID),
     [exec]  10  	     PRODUCT_ID 							     VARCHAR2(40)	     NULL REFERENCES DCS_PRODUCT (PRODUCT_ID),
     [exec]  11  	     CATEGORY_ID							     VARCHAR2(40)	     NULL REFERENCES DCS_CATEGORY(CATEGORY_ID),
     [exec]  12  	     PRIMARY KEY (PROMO_INFORMATION_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_TEMPLATE_INFORMATION (
     [exec]   2  	     PROMO_TEMPLATE_ID			     VARCHAR2(40)	 NOT NULL REFERENCES CAST_PROMO_TEMPLATE(PROMO_TEMPLATE_ID),
     [exec]   3  	     PROMO_INFORMATION_ID		     VARCHAR2(40)	 NOT NULL REFERENCES CAST_PROMO_INFORMATION(PROMO_INFORMATION_ID),
     [exec]   4  	     PROMO_KEY				    INTEGER		NOT NULL,
     [exec]   5  	     PRIMARY KEY (PROMO_TEMPLATE_ID, PROMO_INFORMATION_ID, PROMO_KEY));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_COULEUR (
     [exec]   2  	     ID 								     VARCHAR2(32)   NOT NULL,
     [exec]   3  	     COULEUR								     VARCHAR2(32)   NOT NULL,
     [exec]   4  	     NOM								     VARCHAR2(100)  NOT NULL,
     [exec]   5  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU(SKU_ID),
     [exec]   3  	     CODEARTICLE						     INTEGER			     NULL,
     [exec]   4  	     MODELE								     VARCHAR2(45)	     NULL,
     [exec]   5  	     MARQUECOMMERCIAL						     VARCHAR2(100)	     NULL,
     [exec]   6  	     RESTRICTIONSUSAGE						     VARCHAR2(300)	     NULL,
     [exec]   7  	     MENTIONSLEGALESOBLIGATOIRES		     VARCHAR2(1200)	     NULL,
     [exec]   8  	     CONTRAINTESUTILISATION				     VARCHAR2(1200),
     [exec]   9  	     PLUSDUPRODUIT						     VARCHAR2(1200)	     NULL,
     [exec]  10  	     LIBELLECLIENTCOURT 					     VARCHAR2(2200)	     NULL,
     [exec]  11  	     GENERALEMENTLIVREENHEURES				     NUMBER(2, 0)	     NULL,
     [exec]  12  	     LIVRAISONDIRECTEFOURNISSEUR		     NUMBER(1, 0),
     [exec]  13  	     CHAMPSDYNAMIQUE						     NUMBER(1, 0)	     NULL,
     [exec]  14  	     ENVENTE								     NUMBER(1, 0)	     NULL,
     [exec]  15  	     HORSNORMES 							     NUMBER(1, 0)	     NULL,
     [exec]  16  	     CODEFOURNISSEUR						     INTEGER			     NULL,
     [exec]  17  	     NOMFOURNISSEUR						     VARCHAR2(45)	     NULL,
     [exec]  18  	     POIDSUV								     INTEGER			     NULL,
     [exec]  19  	     CODERAYON								     INTEGER			     NULL,
     [exec]  20  	     CODEFAMILLE						     INTEGER			     NULL,
     [exec]  21  	     CODEMODULE 							     INTEGER			     NULL,
     [exec]  22  	     TAUXTVA								     NUMBER(12, 2)	     NULL,
     [exec]  23  	     PRIXVENTETTCFRANCS 					     NUMBER(12, 2)	     NULL,
     [exec]  24  	     PRIXVENTETTCEURO						     NUMBER(12, 2)	     NULL,
     [exec]  25  	     PRIXVENTEHTFRANCS						     NUMBER(12, 2)	     NULL,
     [exec]  26  	     PRIXVENTEHTEURO						     NUMBER(12, 2)	     NULL,
     [exec]  27  	     HAUTEURUV								     INTEGER			     NULL,
     [exec]  28  	     LARGEURUV								     INTEGER			     NULL,
     [exec]  29  	     PROFONDEURUV						     INTEGER			     NULL,
     [exec]  30  	     DATECREATIONCODEARTICLE				     DATE			     NULL,
     [exec]  31  	     DATEFINVIE 							     DATE			     NULL,
     [exec]  32  	     FRAISEXCEPTIONNEL						     NUMBER(12, 2)	     NULL,
     [exec]  33  	     GARANTIE								     VARCHAR2(70)	     NULL,
     [exec]  34  	     LIBELLEDESCRIPTIFARTICLE				     VARCHAR2(300)	     NULL,
     [exec]  35  	     LIBELLECLIENTLONG						     VARCHAR2(1200)	     NULL,
     [exec]  36  	     UNITEUV								     VARCHAR2(30)	     NULL,
     [exec]  37  	     NORMESTEXT 							     VARCHAR2(400)	     NULL,
     [exec]  38  	     CADEAU								     NUMBER(1, 0)	     NULL,
     [exec]  39  	     VENTEENMAGASINSEULEMENT				     NUMBER(1, 0)	     NULL,
     [exec]  40  	     COULEUR								     VARCHAR2(32)	     NULL REFERENCES CASTO_COULEUR (ID),
     [exec]  41  	     COEFFICIENTDESATISFACTION				     NUMBER(10, 2)	     NULL,
     [exec]  42  	     TYPE_DE_TRANSPORT						     INTEGER			     NULL,  --unused
     [exec]  43  	     EXONERATION_PFE						     NUMBER(1, 0)	     NULL,
     [exec]  44  	     LIBELLEPROMOTIONNEL				     VARCHAR2(80)	     NULL,
     [exec]  45  	     URLGRANDPICTOREMISE				     VARCHAR2(80)	     NULL,
     [exec]  46  	     URLPETITPICTOREMISE				     VARCHAR2(80)	     NULL,
     [exec]  47  	     DATEDEBUTFONCTIONNELLE				     DATE			     NULL,
     [exec]  48  	     DATEFINFONCTIONNELLE				     DATE			     NULL,
     [exec]  49  	     DATEDEBUTAFFICHAGE 					     DATE			     NULL,
     [exec]  50  	     UNIQUEMENTSURLESITE				     NUMBER(1, 0)	     NULL,
     [exec]  51  	     LISTPRICEXLS						     NUMBER(19, 7)	     NULL,
     [exec]  52  	     TYPEEXPEDITION						     NUMBER(8, 0)	     NULL,
     [exec]  53  	     TYPEARTICLE						     NUMBER(8, 0)	     NULL,
     [exec]  54  	     TRANSPORTEUR						     VARCHAR2(40)	     NULL,
     [exec]  55  	     EXONERATIONPFT						     NUMBER(1, 0)	     NULL,
     [exec]  56  	     RETRAITMOMENTANEDATEDEBUT				     DATE			     NULL,
     [exec]  57  	     RETRAITMOMENTANEDATEFIN				     DATE			     NULL,
     [exec]  58  	     RETRAITMOMENTANEMOTIFSCODIFIES		     NUMBER(8, 0)	     NULL,
     [exec]  59  	     RETRAITMOMENTANEUTILISATEUR		     VARCHAR2(60)	     NULL,
     [exec]  60  	     DELAIEXPEDITIONBO						     NUMBER(8, 0)	     NULL, --unused
     [exec]  61  	     ECOTAXEENEURO						     NUMBER(14, 2)	     NULL,
     [exec]  62  	     VIDEO_URL								     VARCHAR2(50)	     NULL,
     [exec]  63  	     BAROMETRE								     NUMBER			     NULL,
     [exec]  64  	     CHAPO_CONTENU						     VARCHAR2(100)	     NULL,
     [exec]  65  	     CHAPO_STYLE						     NUMBER			     NULL,
     [exec]  66  	     PROMOTIONSEXCLUES						     NUMBER(1, 0)	     NULL,
     [exec]  67  	     PRIXDETAIL 							     NUMBER(12, 0)	     NULL,
     [exec]  68  	     PRIXTYPEDETAIL						     NUMBER			     NULL,
     [exec]  69  	     FIABILITESTOCK						     NUMBER(3, 0)	     NULL,
     [exec]  70  	     CACHESKUCOMPTEUR						     NUMBER(11, 2)	     NULL,
     [exec]  71  	     CODENEWMODULE						     VARCHAR2(100)	     NULL,
     [exec]  72  	     SOUMISAD3E 							     NUMBER(1, 0)	     NULL,
     [exec]  73  	     PRMP								     NUMBER(12, 2)	     NULL,
     [exec]  74  	     DELAIAPPROFOURNISSEUR				     NUMBER(12, 2)	     NULL,
     [exec]  75  	     PROMOTIONCARTEATOUT				     NUMBER(1, 0)	     NULL,
     [exec]  76  	     PURCENTPROMOCARTEATOUT				     INTEGER			     NULL,
     [exec]  77  	     ISPURCENT								     INTEGER			     NULL,
     [exec]  78  	     QUANTITE_LIMITEE						     NUMBER(1, 0)	     NULL,
     [exec]  79  	     THEME_SKU								     VARCHAR2(70)	     NULL,
     [exec]  80  	     URL_PAGE								     VARCHAR2(260)	     NULL,
     [exec]  81  	     CONDITIONSPARTICULIERES				     NUMBER			     NULL,
     [exec]  82  	     EXCLUSIONLIVRAISONCORSE				     NUMBER			     NULL,
     [exec]  83  	     SOMMEFORFAITAIRE						     NUMBER(19, 7)	     NULL,
     [exec]  84  	     FLASH_PRODUIT						     VARCHAR2(100)	     NULL,
     [exec]  85  	     FLASH_ZOOM 							     VARCHAR2(100)	     NULL,
     [exec]  86  	     DATE_DEB_DESTOCK						     DATE			     NULL,
     [exec]  87  	     DATE_FIN_DESTOCK						     DATE			     NULL,
     [exec]  88  	     DATE_INIT_DESTOCK						     DATE			     NULL,
     [exec]  89  	     VAL_STOCK_DESTOCK						     NUMBER(6, 0)	     NULL,
     [exec]  90  	     CUV								     VARCHAR2(2)		     NULL,
     [exec]  91  	     CUP								     VARCHAR2(2)		     NULL,
     [exec]  92  	     PUPUV								     NUMBER(10, 6)	     NULL,
     [exec]  93  	     PRIX_REF								     NUMBER(12, 2)	     NULL,
     [exec]  94  	     PRIX_SOLDE 							     NUMBER(12, 2)	     NULL,
     [exec]  95  	     F_SOLDE								     NUMBER(1, 0)	     NULL,
     [exec]  96  	     DATE_FIN_SOLDE						     DATE			     NULL,
     [exec]  97  	     PRIMARY KEY (SKU_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_SKU_CODEARTICLE_IDX ON CASTO_SKU (CODEARTICLE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_SKU_MARQUECOMMERCIAL_IDX ON CASTO_SKU (MARQUECOMMERCIAL) ;
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_PICTO (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL REFERENCES CASTO_SKU(SKU_ID),
     [exec]   3  	     SEQ_NUM								     INTEGER			     NOT NULL,
     [exec]   4  	     URL_PICTO								     VARCHAR2(100)	     NULL,
     [exec]   5  	     PRIMARY KEY (SKU_ID, SEQ_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_RELATED (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL REFERENCES CASTO_SKU(SKU_ID),
     [exec]   3  	     AUX_ID								     VARCHAR2(40)	     NOT NULL REFERENCES CASTO_SKU(SKU_ID),
     [exec]   4  	     PRIMARY KEY (SKU_ID, AUX_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_CROSS_SELLING (
     [exec]   2  	     CROSS_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     SKU_ID								     VARCHAR2(40)	     NULL REFERENCES DCS_SKU (SKU_ID),
     [exec]   4  	     PRODUCT_ID 							     VARCHAR2(40)	     NULL REFERENCES DCS_PRODUCT (PRODUCT_ID),
     [exec]   5  	     PRIMARY KEY (CROSS_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_CROSS_SELLING_ASSOC (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU (SKU_ID),
     [exec]   3  	     SEQUENCE_NUM						     INTEGER			     NOT NULL,
     [exec]   4  	     CROSS_ID								     VARCHAR2(40)	     NULL REFERENCES CASTO_SKU_CROSS_SELLING (CROSS_ID),
     [exec]   5  	     PRIMARY KEY (SKU_ID, SEQUENCE_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_IK_CS_ASSOC (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU (SKU_ID),
     [exec]   3  	     SEQUENCE_NUM						     INTEGER			     NOT NULL,
     [exec]   4  	     CROSS_ID								     VARCHAR2(40)	     NULL REFERENCES CASTO_SKU_CROSS_SELLING (CROSS_ID),
     [exec]   5  	     PRIMARY KEY (SKU_ID, SEQUENCE_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_ATTR_VALUE (
     [exec]   2  	     ATTRIBUTE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     ATTRIBUTE_NAME						     VARCHAR2(42)	     NULL,
     [exec]   4  	     DISPLAYNAME						     VARCHAR2(50)	     NULL,
     [exec]   5  	     VALUEINTEGER						     INTEGER			     NULL,
     [exec]   6  	     VALUESTRING						     VARCHAR2(255)	     NULL,
     [exec]   7  	     VALUEFLOAT 							     NUMBER(12, 2)	     NULL,
     [exec]   8  	     VALUEDATE								     DATE			     NULL,
     [exec]   9  	     VALUEBOOLEAN						     NUMBER(1, 0)	     NULL,
     [exec]  10  	     UNIT								     VARCHAR2(10)	     NULL,
     [exec]  11  	     TYPE								     INTEGER			     NULL,
     [exec]  12  	     PRIMARY KEY (ATTRIBUTE_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_ATTR (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL REFERENCES CASTO_SKU(SKU_ID),
     [exec]   3  	     SEQUENCE_NUM						     INTEGER			     NOT NULL,
     [exec]   4  	     ATTRIBUTE_ID						     VARCHAR2(40)	     NULL REFERENCES CASTO_SKU_ATTR_VALUE(ATTRIBUTE_ID),
     [exec]   5  	     PRIMARY KEY (SKU_ID, SEQUENCE_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_ATTR_SKUID_IDX ON CASTO_SKU_ATTR (ATTRIBUTE_ID DESC);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_NORMES (
     [exec]   2  	     NORMES_ID								     VARCHAR2(40) NOT NULL,
     [exec]   3  	     URLPICTOGRAMME						     VARCHAR2(254),
     [exec]   4  	     URLPAGE								     VARCHAR2(254),
     [exec]   5  	     DESCRIPTION						     LONG,
     [exec]   6  	     NOMCOURT								     VARCHAR2(20),
     [exec]   7  	     PRIMARY KEY (NORMES_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_NORMES (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	      NOT NULL REFERENCES CASTO_SKU(SKU_ID),
     [exec]   3  	     SEQUENCE_NUM						     INTEGER			      NOT NULL,
     [exec]   4  	     NORMES_ID								     VARCHAR2(40)	      NOT NULL REFERENCES CASTO_NORMES(NORMES_ID),
     [exec]   5  	     PRIMARY KEY (SKU_ID, SEQUENCE_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_SERVICE_MAGASIN (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU(SKU_ID),
     [exec]   3  	     ID_COUPLE								     VARCHAR2(40)	     NOT NULL REFERENCES CASTO_MAGAS_COUPLE_SERVICE(ID_COUPLE),
     [exec]   4  	     PRIMARY KEY (SKU_ID, ID_COUPLE));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_MEDIA (
     [exec]   2  	     QUAL_ID								     VARCHAR2(1)	     NOT NULL ENABLE,
     [exec]   3  	     MEDIA_ID								     VARCHAR2(40)	     NOT NULL ENABLE,
     [exec]   4  	     PRIMARY KEY (MEDIA_ID, QUAL_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_AFFINAGE_QUESTION (
     [exec]   2  	     ID 									     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     LIBELLE								     VARCHAR2(500),
     [exec]   4  	     CONTENTGROUP						     VARCHAR2(500),
     [exec]   5  	     MULTIVALUE 							     NUMBER			     DEFAULT 0	     NOT NULL,
     [exec]   6  	     MEDIA_ID VARCHAR2(40)				     NULL CONSTRAINT MEDIA REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   7  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_AFFINAGE_REPONSE (
     [exec]   2  	     ID 							     VARCHAR2(32)		NOT NULL,
     [exec]   3  	     LIBELLE							     VARCHAR2(32)		NOT NULL,
     [exec]   4  	     CONTENTGROUP						     VARCHAR2(32),
     [exec]   5  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_AFFINAGE_QUEST_REP (
     [exec]   2  	     QUESTION_ID						     VARCHAR2(32)	 NOT NULL REFERENCES CASTO_AFFINAGE_QUESTION (ID),
     [exec]   3  	     SEQUENCE_NUM						     INTEGER		 NOT NULL,
     [exec]   4  	     REPONSE_ID 						     VARCHAR2(32)	     NULL REFERENCES CASTO_AFFINAGE_REPONSE (ID),
     [exec]   5  	     PRIMARY KEY (QUESTION_ID, SEQUENCE_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_DATA_MAGASIN (
     [exec]   2  	     ID_COUPLE								     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     DELAI_APPRO_FOURNISSEUR				     NUMBER(12, 2)	     NULL,
     [exec]   4  	     ECO_TAXE								     NUMBER(19, 7)	     NULL,
     [exec]   5  	     SOUMISAD3E 							     NUMBER(1, 0)	     NULL,
     [exec]   6  	     COEFFICIENTDESATISFACTION				     NUMBER(10, 2)	     NULL,
     [exec]   7  	     PRMP								     NUMBER(10, 2)	     NULL,
     [exec]   8  	     PROMCORDRE 							     NUMBER(4, 0)	     NULL,
     [exec]   9  	     PROMFNAT								     NUMBER(2, 0)	     NULL,
     [exec]  10  	     PRIXLIVRE								     NUMBER(1, 0)	     NULL,
     [exec]  11  	     DDEBPROMO								     DATE			     NULL,
     [exec]  12  	     DFINPROMO								     DATE			     NULL,
     [exec]  13  	     PRODUITDETENU						     NUMBER(1, 0)	     NULL,
     [exec]  14  	     PRIXVENTETTCEURO						     NUMBER(10, 2)	     NULL,
     [exec]  15  	     PRIXVENTEHTEURO						     NUMBER(10, 2)	     NULL,
     [exec]  16  	     PRIMARY KEY (ID_COUPLE));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_MAGASIN (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     ID_MAGASIN 							     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     ID_COUPLE								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     PRIMARY KEY (SKU_ID,ID_MAGASIN,ID_COUPLE));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PRODUCT (
     [exec]   2  	     PRODUCT_ID 							     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     BOUTIQUEMARQUES						     NUMBER(1, 0)	     NULL,
     [exec]   4  	     PRODUCT_TETEDEGONDOLE				     VARCHAR2(40)	     NULL,
     [exec]   5  	     PRODUCT_FIXEDRELATEDPRODUCTUP		     VARCHAR2(40)	     NULL,
     [exec]   6  	     COULEUR								     VARCHAR2(32)	     NULL,
     [exec]   7  	     AFFICHAGE_ARTICLECOMPARABLE			     NUMBER(1, 0)	     NULL,
     [exec]   8  	     MARQUECOMMERCIAL						     VARCHAR2(100)	     NULL,
     [exec]   9  	     URL_FICHE_TECHNIQUE					     VARCHAR2(50)	     NULL,
     [exec]  10  	     URL_MODE_EMPLOI						     VARCHAR2(50)	     NULL,
     [exec]  11  	     CHAPO_CONTENU						     VARCHAR2(100)	     NULL,
     [exec]  12  	     CHAPO_STYLE							     NUMBER			     NULL,
     [exec]  13  	     NATURE_TETE_GONDOLE					     NUMBER(1, 0)	     NULL,
     [exec]  14  	     TYPE_AFFICHAGE_PROMO				     NUMBER(1, 0)	     NULL,
     [exec]  15  	     VIDEO_URL								     VARCHAR2(50)	     NULL,
     [exec]  16  	     URL_PAGE								     VARCHAR2(260)	     NULL,
     [exec]  17  	     PRIMARY KEY (PRODUCT_ID),
     [exec]  18  	     FOREIGN KEY (PRODUCT_ID) REFERENCES DCS_PRODUCT (PRODUCT_ID),
     [exec]  19  	     FOREIGN KEY (COULEUR) REFERENCES CASTO_COULEUR (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PRODUCT_QUESTION (
     [exec]   2  	     PRODUCT_ID 							     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     SEQ								     INTEGER			     NOT NULL,
     [exec]   4  	     QUESTION_ID							     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     PRIMARY KEY (PRODUCT_ID, SEQ),
     [exec]   6  	     FOREIGN KEY (PRODUCT_ID) REFERENCES DCS_PRODUCT (PRODUCT_ID),
     [exec]   7  	     FOREIGN KEY (QUESTION_ID) REFERENCES CASTO_AFFINAGE_QUESTION (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PRODUCT_AFFINAGE (
     [exec]   2  	     PRODUCT_ID 							     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     AFFINAGE								     INTEGER			     NULL,
     [exec]   4  	     PRIMARY KEY (PRODUCT_ID),
     [exec]   5  	     FOREIGN KEY (PRODUCT_ID) REFERENCES DCS_PRODUCT (PRODUCT_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PRODUCT_LISTE_MULTISKU (
     [exec]   2  	     PRODUCT_ID 							     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     LIBELLE_LISTE_ID						     VARCHAR2(40)	     NULL,
     [exec]   4  	     CONSTRAINT CASTO_PRODUCT_LISTE_MULTI_PK PRIMARY KEY (PRODUCT_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_IK_CATEGORY_TYPE (
     [exec]   2  	     TYPE_NAME								     VARCHAR2(255)	     NOT NULL,
     [exec]   3  	     PRIMARY KEY (TYPE_NAME));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CATEGORY (
     [exec]   2  	     CATEGORY_ID			     VARCHAR2(40)	 NOT NULL REFERENCES DCS_CATEGORY(CATEGORY_ID),
     [exec]   3  	     DROPDOWNTEMPLATE			     VARCHAR2(100)	 NULL,
     [exec]   4  	 PIVOT					     NUMBER(1,0)	     NULL,
     [exec]   5  	     PROMOTEMPLATE			     VARCHAR2(100)	 NULL REFERENCES CAST_PROMO_TEMPLATE(PROMO_TEMPLATE_ID),
     [exec]   6  	 PRODUCTS_COUNT 			     INTEGER		     NULL,
     [exec]   7  	     BOUTIQUEMARQUES				     NUMBER(1),
     [exec]   8  	     REDACTIONNELFAMILLEMARQUE1 		     VARCHAR2(255),
     [exec]   9  	     TITREBOUTIQUEMARQUE			     VARCHAR2(254),
     [exec]  10  	     COULEUR					     VARCHAR2(32)	     REFERENCES CASTO_COULEUR (ID),
     [exec]  11  	     HEADER_PAGE_LISTE				     NUMBER(1),
     [exec]  12  	     TYPE_TETE_GONDOLE					     NUMBER(1),
     [exec]  13  	     BOUTIQUE_EVENT					     NUMBER(1)		     DEFAULT 0,
     [exec]  14  	     IMAGE_URL					     VARCHAR2(255),
     [exec]  15  	     URL_EDITO					     VARCHAR2(255),
     [exec]  16  	     DESCRIPTIF_CATEGORIE			     VARCHAR2(255),
     [exec]  17  	     URL_INSPIRATION				     VARCHAR2(255),
     [exec]  18  	     URL_AIDE_AU_CHOIX				     VARCHAR2(255),
     [exec]  19  	     ACTIVATION_COMPARATEUR			     NUMBER(1)		     DEFAULT 1,
     [exec]  20  	     REDACTIONNELFAMILLEMARQUE3 		     VARCHAR2(100),
     [exec]  21  	     STYLECATEGORIE				     NUMBER(2)		     DEFAULT 0,
     [exec]  22  	     REDACTIONNELFAMILLEMARQUE2 		     NUMBER(2)		     DEFAULT 0,
     [exec]  23  	     TITRE_REFERENCEMENT			     VARCHAR2(200),
     [exec]  24  	     DESTOCKAGE 				     INTEGER,
     [exec]  25  	     BONNES_AFFAIRES				     NUMBER(1,0),
     [exec]  26  	     FOOTER					     CLOB,
     [exec]  27  	     COEFFIABILITE					     NUMBER(14,2),
     [exec]  28  	     URL_PAGE					     VARCHAR2(260),
     [exec]  29  	     IK_CATEGORY_TYPE						     VARCHAR2(255),
     [exec]  30  	     IK_CATEGORY_TYPE_NAV				     NUMBER(2)		     DEFAULT 0,
     [exec]  31  	     NE_PAS_AFFICHER				     INTEGER,
     [exec]  32  	     PRIMARY KEY (CATEGORY_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_INSPI (
     [exec]   2  	     INSPI_ID								     VARCHAR2(100)		   NOT NULL,
     [exec]   3  	     PRIMARY KEY (INSPI_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CATEGORY_ESPRIT(
     [exec]   2  	     ESPRIT_ID								     VARCHAR2(100)		   NOT NULL,
     [exec]   3  	     SEQ								     INTEGER			   NOT NULL,
     [exec]   4  	     INSPI_ID								     VARCHAR2(100)		   NOT NULL,
     [exec]   5  	     PRIMARY KEY  (ESPRIT_ID, INSPI_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_INSPI_NUANCIER(
     [exec]   2  	     INSPI_ID								     VARCHAR2(100 )		   NOT NULL,
     [exec]   3  	     SEQ								     INTEGER			   NOT NULL,
     [exec]   4  	     ID 								     VARCHAR2(100)		       NOT NULL,
     [exec]   5  	     PRIMARY KEY  (INSPI_ID, ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_NUANCIER(
     [exec]   2  	     ID 							     VARCHAR2(100)		   NOT NULL,
     [exec]   3  	     LIBELLE							     VARCHAR2(255)		   NOT NULL,
     [exec]   4  	     CODE_COULEUR						     VARCHAR2(500)		   NOT NULL,
     [exec]   5  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CATEGORY_INSPI(
     [exec]   2  	     CATEGORY_ID						     VARCHAR2(100)		       NOT NULL,
     [exec]   3  	     SEQ							     INTEGER			   NOT NULL,
     [exec]   4  	     INSPI_ID							     VARCHAR2(100)			   NOT NULL,
     [exec]   5  	     PRIMARY KEY (CATEGORY_ID, INSPI_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CATEGORY_SEQUENCE(
     [exec]   2  	     CAT_ID								     VARCHAR2(40)		       NOT NULL,
     [exec]   3  	     SEQ_NUM								     INTEGER			   NOT NULL,
     [exec]   4  	     SEQ_ID								     VARCHAR2(50),
     [exec]   5  	     PRIMARY KEY (CAT_ID, SEQ_NUM),
     [exec]   6  	     FOREIGN KEY (CAT_ID) REFERENCES CASTO_CATEGORY (CATEGORY_ID) ON DELETE CASCADE);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CATEGORY_BOUTIQUE_MAG(
     [exec]   2  	     ID_CATEGORY						     VARCHAR2(40)		   NOT NULL,
     [exec]   3  	     ID_MAGASIN 						     VARCHAR2(40)		   NOT NULL,
     [exec]   4  	     PRIMARY KEY (ID_CATEGORY, ID_MAGASIN),
     [exec]   5  	     FOREIGN KEY (ID_MAGASIN) REFERENCES CASTO_MAGASIN (ID),
     [exec]   6  	     FOREIGN KEY (ID_CATEGORY) REFERENCES CASTO_CATEGORY (CATEGORY_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_THEMES_NORMES (
     [exec]   2  	     THEME_ID	  VARCHAR2(40 BYTE)	     NOT NULL,
     [exec]   3  	     NAME	  VARCHAR2(254 BYTE),
     [exec]   4  	     DESCRIPTION  LONG,
     [exec]   5  	     PRIMARY KEY (THEME_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_THEMES_NORMES_ASSOC (
     [exec]   2  	     THEME_ID	   VARCHAR2(40 BYTE)	     NOT NULL,
     [exec]   3  	     SEQUENCE_NUM  INTEGER		     NOT NULL,
     [exec]   4  	     NORMES_ID	   VARCHAR2(40 BYTE)	     NOT NULL,
     [exec]   5  	     PRIMARY KEY (THEME_ID, SEQUENCE_NUM),
     [exec]   6  	     FOREIGN KEY (THEME_ID) REFERENCES CASTO_THEMES_NORMES (THEME_ID),
     [exec]   7  	     FOREIGN KEY (NORMES_ID) REFERENCES CASTO_NORMES (NORMES_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MARQUE (
     [exec]   2  	     MARQUE_ID		  VARCHAR2(40)	      NOT NULL,
     [exec]   3  	     NOMMARQUE		  VARCHAR2(254)       NOT NULL,
     [exec]   4  	     DESCRIPTION	  LONG,
     [exec]   5  	     LOGOMARQUE 	  VARCHAR2(40),
     [exec]   6  	     PREMIER_PRIX	  VARCHAR2(20),
     [exec]   7  	     QUALITE_PRIX	  VARCHAR2(20),
     [exec]   8  	     SELECTION_EXCLUSIVE  VARCHAR2(20),
     [exec]   9  	     GRANDE_MARQUE	  VARCHAR2(20),
     [exec]  10  	     URL			      VARCHAR2(254),
     [exec]  11  	     PRIMARY KEY (MARQUE_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CODES_UNITE (
     [exec]   2    CODE_UNITE	     VARCHAR2(2 BYTE),
     [exec]   3    DESIGNATION	     VARCHAR2(50 BYTE),
     [exec]   4    FLAG_AFFICHAGE_UP	VARCHAR2(1 BYTE),
     [exec]   5    LIBELLE_AFFICHAGE_UP	VARCHAR2(10 BYTE),
     [exec]   6    PRIMARY KEY (CODE_UNITE));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ------------------------- EPAM ----------------------------------------
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_SKU (
     [exec]   2  	 SKU_ID 				 VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU(SKU_ID),
     [exec]   3  	 TEST					 VARCHAR2(40),
     [exec]   4  	     MESSAGE_INFORMATION				     VARCHAR2(500));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_CATEGORY (
     [exec]   2  	     CATEGORY_ID			     VARCHAR2(40)	 NOT NULL REFERENCES DCS_CATEGORY(CATEGORY_ID),
     [exec]   3  	     DROPDOWNTEMPLATE			     VARCHAR2(100)	 NULL,
     [exec]   4  	 PIVOT					     NUMBER(1,0)	     NULL,
     [exec]   5  	     FEATUREDPRODUCT			     VARCHAR2(60)	 NULL REFERENCES DCS_PRODUCT(PRODUCT_ID),
     [exec]   6  	     PROMOTEMPLATE			     VARCHAR2(100)	 NULL REFERENCES CAST_PROMO_TEMPLATE(PROMO_TEMPLATE_ID),
     [exec]   7  	 PRODUCTS_COUNT 			     integer		     NULL,
     [exec]   8  	     META_KEYWORDS_PATTERN				     VARCHAR2(300)	     NULL,
     [exec]   9  	     META_DESCRIPTION_PATTERN				     VARCHAR2(300)	     NULL,
     [exec]  10  	     PAGE_TITLE_PATTERN 					     VARCHAR2(300)	     NULL,
     [exec]  11  	 INFO_TEXT				 VARCHAR2(500)	     NULL,
     [exec]  12  	 COMMERCE_TEXT				 VARCHAR2(500)	     NULL,
     [exec]  13  	     PRIMARY KEY (CATEGORY_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_CATALOG_CATEGORY (
     [exec]   2  	     SEQUENCE_NUM					     INTEGER		 NOT NULL,
     [exec]   3  	     CATEGORY_ID			     VARCHAR2(40)	 NOT NULL REFERENCES DCS_CATEGORY(CATEGORY_ID),
     [exec]   4  	     CATALOG_ID 			     VARCHAR2(40)	 NOT NULL REFERENCES DCS_CATALOG(CATALOG_ID),
     [exec]   5  	     PRIMARY KEY (CATEGORY_ID, CATALOG_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_GROUPED_PRODUCT (
     [exec]   2  	     GROUPED_PRODUCT_ID 		     VARCHAR2(40)	 NOT NULL REFERENCES DCS_PRODUCT(PRODUCT_ID),
     [exec]   3  	     GROUPINGTYPE						     INTEGER		 NOT NULL,
     [exec]   4  	     PRIMARY KEY (GROUPED_PRODUCT_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_SKU_LINK (
     [exec]   2  	 SKU_LINK_ID				 VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU_LINK(SKU_LINK_ID),
     [exec]   3  	 TABNAME								     VARCHAR2(60)	 NULL,
     [exec]   4  	     PRIMARY KEY (SKU_LINK_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_SKU_PACKS (
     [exec]   2  	     SKU_ID				     VARCHAR2(40)	 NOT NULL REFERENCES DCS_SKU(SKU_ID),
     [exec]   3  	     PACKS_ID				     VARCHAR2(40)	 NOT NULL REFERENCES DCS_PRODUCT(PRODUCT_ID),
     [exec]   4  	     PRIMARY KEY (SKU_ID, PACKS_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_PRODUCT (
     [exec]   2  	     PRODUCT_ID 				  VARCHAR2(40)	     NOT NULL REFERENCES DCS_PRODUCT (PRODUCT_ID),
     [exec]   3  	     RATING				      NUMBER(19,3)   NULL,
     [exec]   4  	     PRODUCT_BENEFIT			      VARCHAR2(80)   NULL,
     [exec]   5  	     PRODUCT_PROMO_DESCRIPTION		      VARCHAR2(80)   NULL,
     [exec]   6  	     PROMO_BACKGROUND_COLOR				      VARCHAR2(40)   NULL,
     [exec]   7  	     PROMO_FONT_COLOR						      VARCHAR2(40)   NULL,
     [exec]   8  	     PROMO_START_DATE						      DATE	     NULL,
     [exec]   9  	     PROMO_EXPIRATION_DATE				      DATE	     NULL,
     [exec]  10  	     META_KEYWORDS_PATTERN				      VARCHAR2(300)  NULL,
     [exec]  11  	     META_DESCRIPTION_PATTERN				      VARCHAR2(300)  NULL,
     [exec]  12  	     PAGE_TITLE_PATTERN 					      VARCHAR2(300)  NULL,
     [exec]  13  	     SHOW_BRAND_LINK_PDP					      NUMBER(1, 0)   NULL,
     [exec]  14  	     PRIMARY KEY (PRODUCT_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_SKU_IMAGES (
     [exec]   2  	 SKU_ID 				 VARCHAR2(40) NOT NULL REFERENCES DCS_SKU(SKU_ID),
     [exec]   3  	 MINIATURE_IMAGE_ID			 VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   4  	 CAROUSEL_IMAGE_ID			 VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   5  	     SUPPORTING_IMAGE_ID		     VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   6  	     COMPARATOR_IMAGE_ID					     VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   7  	     PRIMARY KEY (SKU_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_GESTPROMO_ACTIONCO (
     [exec]   2  	     ACTIONCO_ID VARCHAR2(50) NOT NULL,
     [exec]   3  	     ACTIONCO_NOM VARCHAR2(50),
     [exec]   4  	     ACTIONCO_DESCRIPTION VARCHAR2(100),
     [exec]   5  	     NOTICE VARCHAR2(100),
     [exec]   6  	     PRIMARY KEY (ACTIONCO_ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_GESTPROMO_OPECO (
     [exec]   2  	     PROMOTION_ID		     VARCHAR2(50) NOT NULL REFERENCES DCS_PROMOTION(PROMOTION_ID),
     [exec]   3  	     CREATEUR				     VARCHAR2(50),
     [exec]   4  	     CONDITIONAPPLICATION    VARCHAR2(2000),
     [exec]   5  	     MESSAGECOUPON		     VARCHAR2(2000),
     [exec]   6  	     TYPEAFFICHAGE		     NUMBER(*,0),
     [exec]   7  	     APPLICATIONMAGASIN 	     NUMBER(*,0),
     [exec]   8  	     ACTIONCO_ID		     VARCHAR2(50) NULL REFERENCES CASTO_GESTPROMO_ACTIONCO(ACTIONCO_ID),
     [exec]   9  	     CHAPO				     VARCHAR2(255),
     [exec]  10  	     USAGEUNIQUE		     NUMBER(*,0),
     [exec]  11  	     OPECO_NC_ALL		     NUMBER(*,0),
     [exec]  12  	     PRIMARY KEY (PROMOTION_ID)
     [exec]  13  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_GESTPROMO_ELEMENT (
     [exec]   2  	     PROMOTION_ID VARCHAR2(50) NOT NULL REFERENCES DCS_PROMOTION(PROMOTION_ID),
     [exec]   3  	     SEQUENCE_NUM NUMBER(*,0) NOT NULL,
     [exec]   4  	     ELEMENT VARCHAR2(100),
     [exec]   5  	     PRIMARY KEY (PROMOTION_ID, SEQUENCE_NUM)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_GESTPROMO_OPECO_NC (
     [exec]   2  	     PROMOTION_ID VARCHAR2(50) NOT NULL REFERENCES DCS_PROMOTION(PROMOTION_ID),
     [exec]   3  	     SEQUENCE_NUM NUMBER(*,0) NOT NULL,
     [exec]   4  	     PROMOTIONNC_ID VARCHAR2(50),
     [exec]   5  	     PRIMARY KEY (PROMOTION_ID, SEQUENCE_NUM)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PROMOTION (
     [exec]   2  	     PROMOTION_ID VARCHAR2(50) NOT NULL REFERENCES DCS_PROMOTION(PROMOTION_ID),
     [exec]   3  	     TYPAGE_PROMOTION NUMBER(*,0),
     [exec]   4  	     PRIMARY KEY (PROMOTION_ID)
     [exec]   5  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_PRODUCT_CHARACTERISTICS (
     [exec]   2  	     CATALOG_ID 			     VARCHAR2(40)	 NOT NULL REFERENCES DCS_CATALOG(CATALOG_ID),
     [exec]   3  	     SEQUENCE_NUM						     INTEGER NOT NULL,
     [exec]   4  	     CHARACTERISTIC_PROPERTY				     VARCHAR2(50)    NULL,
     [exec]   5  	     PRIMARY KEY(CATALOG_ID, SEQUENCE_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE DCS_CATEGORY
     [exec]   2  	     MODIFY (DESCRIPTION VARCHAR2(300));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_LEGACY_URL (
     [exec]   2  	     ID 				     VARCHAR2(40)    NOT NULL,
     [exec]   3  	     URI			     VARCHAR2(400)   NOT NULL UNIQUE,
     [exec]   4  	     CATEGORY_ID	     VARCHAR2(40)    NOT NULL REFERENCES DCS_CATEGORY(CATEGORY_ID),
     [exec]   5  	     PRIMARY KEY (ID)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_STAGE (
     [exec]   2  	     ID 		 VARCHAR2(40) NOT NULL,
     [exec]   3  	     NOM		 VARCHAR2(100),
     [exec]   4  	     descriptif 	 VARCHAR2(800),
     [exec]   5  	     datestage		 DATE,
     [exec]   6  	     horaires		 VARCHAR2(100),
     [exec]   7  	     VIDEO_URL			     VARCHAR2(400),
     [exec]   8  	     PRIMARY KEY(ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_CATALOGUE (
     [exec]   2  	     ID 				     VARCHAR2(40)    NOT NULL,
     [exec]   3  	     TITLE			     VARCHAR2(100)   NOT NULL,
     [exec]   4  	     DESCRIPTION		     VARCHAR2(300)   NOT NULL,
     [exec]   5  	     PROMO_MESSAGE	     VARCHAR2(300)   NULL,
     [exec]   6  	     ACTIVE			     NUMBER(1,0)	     default 0 not null,
     [exec]   7  	     FEATURED			     NUMBER(1,0)	     default 0 not null,
     [exec]   8  	     BOOKABLE			     NUMBER(1,0)	     default 0 not null,
     [exec]   9  	     IMAGE			     VARCHAR2(40)    NOT NULL,
     [exec]  10  	     BROWSE_URL 		     VARCHAR2(300)	     NULL,
     [exec]  11  	     DISPLAY_ORDER	     NUMBER(*,0)	     default 0,
     [exec]  12  	     RELEASE_DATE	     DATE,
     [exec]  13  	     AVAILABLE_COPIES	     NUMBER(*,0),
     [exec]  14  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_INTEGRATION (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     CYBERCOACH 							     NUMBER(1, 0)	     NULL,
     [exec]   4  	     RATIO								     NUMBER(8, 2)	     NULL,
     [exec]   5  	     BORNES								     NUMBER(1, 0)	     NULL,
     [exec]   6  	     KITCHEN_PLANNER						     NUMBER(1, 0)	     NULL,
     [exec]   7  	     PRIMARY KEY (SKU_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_SKU_INSTRUCTIONS (
     [exec]   2  	 SKU_ID 				 VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU(SKU_ID),
     [exec]   3  	 MEDIA_ID				 VARCHAR2(40)	     NOT NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   4  	 INSTRUCTION_NAME			 VARCHAR2(100)	     NOT NULL,
     [exec]   5  	 PRIMARY KEY(SKU_ID, MEDIA_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU_MAGASIN ADD FOREIGN KEY (SKU_ID) REFERENCES DCS_SKU (SKU_ID) ON DELETE CASCADE;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_GROUPED_ASSEMBLY_OPTIONS (
     [exec]   2  	 SEQUENCE_NUM				 INTEGER	     NOT NULL,
     [exec]   3  	 GROUPED_PRODUCT_ID			 VARCHAR2(40)	     NOT NULL REFERENCES DCS_PRODUCT(PRODUCT_ID),
     [exec]   4  	 SKU_LINK_ID				 VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU_LINK(SKU_LINK_ID),
     [exec]   5  	 PRIMARY KEY (GROUPED_PRODUCT_ID, SKU_LINK_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD HTMLURL VARCHAR2(255) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_STYLE ADD LIST_VIEW NUMBER DEFAULT 0 NOT NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION MODIFY TITLE VARCHAR2 (200);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION MODIFY DESCRIPTION VARCHAR2 (500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD WRAPPAGE NUMBER(1,0) DEFAULT 0 NOT NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_GROUPED_PRODUCT ADD PROMOTEMPLATE VARCHAR2(100) NULL REFERENCES CAST_PROMO_TEMPLATE(PROMO_TEMPLATE_ID);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_SKU ADD ON_SALE_DISCOUNT_DISPLAY NUMBER(1,0) DEFAULT 0 NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY FLASH_PRODUIT VARCHAR2(255);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_DOCUMENT ADD PROMOTEMPLATE VARCHAR2(100)	NULL REFERENCES CAST_PROMO_TEMPLATE(PROMO_TEMPLATE_ID);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD FLAG_IMAGE VARCHAR2(100)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD FLAG_TEXT	VARCHAR2(200)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD KITCHEN_CONTENT_HTML	     VARCHAR2(200)   NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD video_aux_url VARCHAR2(2000) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD video_full_size NUMBER(1, 0) DEFAULT 0;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> alter table CAST_CATEGORY modify info_text varchar2(1000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> alter table CAST_CATEGORY modify commerce_text varchar2(1000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU RENAME COLUMN URL_PAGE TO EAN;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_START_DATE DATE NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_END_DATE DATE NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> update CASTO_SKU set EAN = substr(EAN, 1, 13);
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY EAN VARCHAR2(13);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Castorama iPhone
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/castIphone/sql/install/oracle/cast_iphone_catalog.sql
     [exec] SQL> CREATE TABLE CAST_IPHONE_CATALOG (
     [exec]   2  	     CATALOG_ID 			     VARCHAR2(40)	 NOT NULL REFERENCES DCS_CATALOG(CATALOG_ID),
     [exec]   3  	     CATEGORY_ID			     VARCHAR2(40)	 NULL,
     [exec]   4  	     PRIMARY KEY (CATALOG_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_IPHONE_SKU_IMAGES (
     [exec]   2  	 SKU_ID 				 VARCHAR2(40) NOT NULL REFERENCES DCS_SKU(SKU_ID),
     [exec]   3  	 AUG_TRANSP_IMAGE_ID			 VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   4  	 AUG_CAROUSEL_IMAGE_ID			 VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   5  	     PRIMARY KEY (SKU_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_IPHONE_SKU_IMAGES ADD (AUG_RETINA_IMAGE_ID VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_STORE_GEOLOCATION (
     [exec]   2  	     ID 						     VARCHAR2(40)	     NOT NULL REFERENCES CASTO_MAGASIN(ID),
     [exec]   3  	     LONGITUDE					     NUMBER(12,7)	     NULL,
     [exec]   4  	     LATITUDE					     NUMBER(12,7)	     NULL,
     [exec]   5  	     CONSTRAINT CAST_STORE_GEOLOCATION_P PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/castIphone/sql/install/oracle/cast_iphone_catalog_retina.sql
     [exec] SQL> ALTER TABLE CAST_IPHONE_SKU_IMAGES ADD (AUG_RETINA_IMAGE_ID VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID));
     [exec] ALTER TABLE CAST_IPHONE_SKU_IMAGES ADD (AUG_RETINA_IMAGE_ID VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID))
     [exec]                                         *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/castIphone/sql/install/oracle/cast_iphone_R7_catalog.sql
     [exec] SQL> CREATE TABLE IPH_CAT_DISPLAY_IMAGE (
     [exec]   2  	 CATEGORY_ID				 VARCHAR2(40) NOT NULL REFERENCES DCS_CATEGORY(CATEGORY_ID),
     [exec]   3  	 CAT_DISPLAY_IMAGE			     VARCHAR2(40) NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   4  	     PRIMARY KEY (CATEGORY_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE IPHONE_AUG_AUX_IMAGE(
     [exec]   2  	     AUGM_AUX_ID						     VARCHAR2(40) NOT NULL,
     [exec]   3  	     DISPLAY_NAME						     VARCHAR2(100) NOT NULL,
     [exec]   4  	     AUG_CAR_IMAGE_ID						     VARCHAR2(40) NOT NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   5  	     AUG_TR_IMAGE_ID						     VARCHAR2(40) NOT NULL REFERENCES DCS_MEDIA(MEDIA_ID),
     [exec]   6  	     CONSTRAINT IPHONE_AUG_AUX_IMAGE_P PRIMARY KEY (AUGM_AUX_ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE IPHONE_VIDEO(
     [exec]   2  	     IPHONE_VIDEO_ID						     VARCHAR2(40) NOT NULL,
     [exec]   3  	     DISPLAY_NAME						     VARCHAR2(100) NOT NULL,
     [exec]   4  	     SHORT_URL								     VARCHAR2(100) NOT NULL,
     [exec]   5  	     LONG_URL								     VARCHAR2(250) NOT NULL,
     [exec]   6  	     CONSTRAINT IPHONE_VIDEO_P PRIMARY KEY (IPHONE_VIDEO_ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE IPHONE_SKU_AUG_IMAGES (
     [exec]   2  	     SEQ_NUM							     INTEGER		 NOT NULL,
     [exec]   3  	     SKU_ID					     VARCHAR2(40)	 NOT NULL REFERENCES DCS_SKU(SKU_ID),
     [exec]   4  	     AUGM_AUX_ID				     VARCHAR2(40)	 NOT NULL REFERENCES IPHONE_AUG_AUX_IMAGE(AUGM_AUX_ID),
     [exec]   5  	     PRIMARY KEY (SKU_ID, AUGM_AUX_ID)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/castIphone/sql/install/oracle/cast_iphone_store.sql
     [exec] SQL> CREATE TABLE CAST_STORE_GEOLOCATION (
     [exec]   2  	     ID 						     VARCHAR2(40)	     NOT NULL REFERENCES CASTO_MAGASIN(ID),
     [exec]   3  	     LONGITUDE					     NUMBER(12,7)	     NULL,
     [exec]   4  	     LATITUDE					     NUMBER(12,7)	     NULL,
     [exec]   5  	     CONSTRAINT CAST_STORE_GEOLOCATION_P PRIMARY KEY (ID));
     [exec] CREATE TABLE CAST_STORE_GEOLOCATION (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Patch
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p19/cast_catalog.sql
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY FLASH_PRODUIT VARCHAR2(500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY FLASH_ZOOM VARCHAR2(500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_SKU ADD ON_SALE_DISCOUNT_DISPLAY NUMBER(1,0) DEFAULT 0 NULL;
     [exec] ALTER TABLE CAST_SKU ADD ON_SALE_DISCOUNT_DISPLAY NUMBER(1,0) DEFAULT 0 NULL
     [exec]                          *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p20/cast_catalog.sql
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD CAST_PRIORITY NUMBER(*,0);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_CATALOG_ADDITION_PROP (
     [exec]   2    CATALOG_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   3    SEARCH_BY_PRODUCT NUMBER(1,0) DEFAULT 1,
     [exec]   4    SEARCH_BY_PIVOT NUMBER(1,0) DEFAULT 1,
     [exec]   5    SEARCH_BY_REGULAR NUMBER(1,0) DEFAULT 1,
     [exec]   6    BODYSTYLE VARCHAR2(500),
     [exec]   7    PRIMARY KEY (CATALOG_ID),
     [exec]   8    FOREIGN KEY (CATALOG_ID)  REFERENCES DCS_CATALOG (CATALOG_ID) ENABLE
     [exec]   9  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_CATEGORY ADD FREE_TEXT VARCHAR2(1000 BYTE);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p21/cast_catalog.sql
     [exec] SQL> ALTER TABLE CAST_DOCUMENT ADD PAGE_TITLE_PATTERN	     VARCHAR2(300)   NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_DOCUMENT ADD META_KEYWORDS_PATTERN	VARCHAR2(300)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_DOCUMENT ADD META_DESCRIPTION_PATTERN	VARCHAR2(300)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD STORE_ID VARCHAR2(40) DEFAULT '0';
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD PAGE_TITLE_PATTERN	     VARCHAR2(300)   NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_DOCUMENT ADD PAGE_TITLE_PATTERN	     VARCHAR2(300)   NULL;
     [exec] ALTER TABLE CAST_DOCUMENT ADD PAGE_TITLE_PATTERN	VARCHAR2(300)	NULL
     [exec]                               *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD FLAG_IMAGE VARCHAR2(100)	NULL;
     [exec] ALTER TABLE CAST_PRODUCT ADD FLAG_IMAGE	VARCHAR2(100)	NULL
     [exec]                              *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD FLAG_TEXT	VARCHAR2(200)	NULL;
     [exec] ALTER TABLE CAST_PRODUCT ADD FLAG_TEXT	VARCHAR2(200)	NULL
     [exec]                              *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> UPDATE CAST_DOCUMENT
     [exec]   2  SET PAGE_TITLE_PATTERN = '{title} - CASTORAMA';
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> 
     [exec] SQL> UPDATE CAST_DOCUMENT
     [exec]   2  SET META_KEYWORDS_PATTERN = '{keywords,sep=,}';
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> 
     [exec] SQL> UPDATE CAST_DOCUMENT
     [exec]   2  SET META_DESCRIPTION_PATTERN = '{description}';
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> 
     [exec] SQL> UPDATE CAST_PROMO_INFORMATION
     [exec]   2  SET PAGE_TITLE_PATTERN = '{title} - CASTORAMA';
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p22/cast_catalog.sql
     [exec] SQL> UPDATE CAST_PROMO_INFORMATION
     [exec]   2  SET PAGE_TITLE_PATTERN = '{title} - CASTORAMA' WHERE PAGE_TITLE_PATTERN IS NULL;
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD KITCHEN_CONTENT_HTML	     VARCHAR2(200)   NULL;
     [exec] ALTER TABLE CAST_PRODUCT ADD KITCHEN_CONTENT_HTML	VARCHAR2(200)	NULL
     [exec]                              *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE DCS_PROMOTION MODIFY DISPLAY_NAME VARCHAR2(200);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY CONTRAINTESUTILISATION VARCHAR2(1500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY MENTIONSLEGALESOBLIGATOIRES VARCHAR2(1500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY PLUSDUPRODUIT VARCHAR2(1500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY LIBELLECLIENTLONG VARCHAR2(1500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/ik/cast_catalog.sql
     [exec] SQL> ALTER TABLE CASTO_CATEGORY ADD IK_CATEGORY_TYPE VARCHAR2(255);
     [exec] ALTER TABLE CASTO_CATEGORY ADD IK_CATEGORY_TYPE	VARCHAR2(255)
     [exec]                                *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_CATEGORY ADD IK_CATEGORY_TYPE_NAV NUMBER(2) DEFAULT 0;
     [exec] ALTER TABLE CASTO_CATEGORY ADD IK_CATEGORY_TYPE_NAV NUMBER(2) DEFAULT 0
     [exec]                                *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_IK_CS_ASSOC (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL REFERENCES DCS_SKU (SKU_ID),
     [exec]   3  	     SEQUENCE_NUM						     INTEGER			     NOT NULL,
     [exec]   4  	     CROSS_ID								     VARCHAR2(40)	     NULL REFERENCES CASTO_SKU_CROSS_SELLING (CROSS_ID),
     [exec]   5  	     PRIMARY KEY (SKU_ID, SEQUENCE_NUM));
     [exec] CREATE TABLE CASTO_SKU_IK_CS_ASSOC (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_IK_CATEGORY_TYPE (
     [exec]   2  	     TYPE_NAME								     VARCHAR2(255)	     NOT NULL,
     [exec]   3  	     PRIMARY KEY (TYPE_NAME));
     [exec] CREATE TABLE CASTO_IK_CATEGORY_TYPE (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/mth/cast_catalog.sql
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_THEMATIQUE"
     [exec]   2  	(
     [exec]   3  	 "THEMATIQUE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]   5  	     "DESCRIPTION" VARCHAR2(2048 BYTE),
     [exec]   6  	 "S_IMAGE" VARCHAR2(40 BYTE),
     [exec]   7  	 "B_IMAGE" VARCHAR2(40 BYTE),
     [exec]   8  	 "BG_COLOR" VARCHAR2(25 BYTE),
     [exec]   9  	 "CHAPTER" VARCHAR2(40 BYTE),
     [exec]  10  	 "FONT_COLOR" VARCHAR2(10 BYTE),
     [exec]  11  	     "TOP_DOC_TITLE" VARCHAR2(254 BYTE),
     [exec]  12  	     "TOP_DOC_DESCRIPTION" VARCHAR2(2048 BYTE),
     [exec]  13  	     "BOTTOM_DOC_TITLE" VARCHAR2(254 BYTE),
     [exec]  14  	     "BOTTOM_DOC_DESCRIPTION" VARCHAR2(2048 BYTE),
     [exec]  15  	      CONSTRAINT "CAST_THEMATIQUE_P" PRIMARY KEY ("THEMATIQUE_ID")
     [exec]  16    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  17    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  18    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  19    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  20  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  21    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  22    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  23    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_THEMATIQUE_DOCS_TOP"
     [exec]   2  	(    "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   3  	     "DOCUMENT_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "THEMATIQUE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	      CONSTRAINT "CAST_THEMATIQUE_DOCS_TOP_P" PRIMARY KEY ("THEMATIQUE_ID", "SEQUENCE_NUM")
     [exec]   6    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   7    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   8    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]   9    TABLESPACE "CAST_USERS"	ENABLE,
     [exec]  10  	      CONSTRAINT "CAST_THEMATIQUE_DOCS_TOP_C_F" FOREIGN KEY ("THEMATIQUE_ID")
     [exec]  11  	       REFERENCES "CAST_THEMATIQUE" ("THEMATIQUE_ID") ENABLE,
     [exec]  12  	      CONSTRAINT "CAST_THEMATIQUE_DOCS_TOP_D_F" FOREIGN KEY ("DOCUMENT_ID")
     [exec]  13  	       REFERENCES "CAST_DOCUMENT" ("DOCUMENT_ID") ENABLE
     [exec]  14  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  15    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  16    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  17    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_THEMATIQUE_DOCS_BOTTOM"
     [exec]   2  	(    "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   3  	     "DOCUMENT_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "THEMATIQUE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	      CONSTRAINT "CAST_THEMATIQUE_DOCS_BOTTOM_P" PRIMARY KEY ("THEMATIQUE_ID", "SEQUENCE_NUM")
     [exec]   6    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   7    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   8    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]   9    TABLESPACE "CAST_USERS"	ENABLE,
     [exec]  10  	      CONSTRAINT "CAST_THEMATIQUE_DOCS_BOT_C_F" FOREIGN KEY ("THEMATIQUE_ID")
     [exec]  11  	       REFERENCES "CAST_THEMATIQUE" ("THEMATIQUE_ID") ENABLE,
     [exec]  12  	      CONSTRAINT "CAST_THEMATIQUE_DOCS_BOT_D_F" FOREIGN KEY ("DOCUMENT_ID")
     [exec]  13  	       REFERENCES "CAST_DOCUMENT" ("DOCUMENT_ID") ENABLE
     [exec]  14  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  15    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  16    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  17    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_CHAPTERTHEM"
     [exec]   2  	(
     [exec]   3  	 "CHAPTER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]   5  	 "COLOR" VARCHAR2(25 BYTE),
     [exec]   6  	      CONSTRAINT "CAST_CHAPTERTHEM_P" PRIMARY KEY ("CHAPTER_ID")
     [exec]   7    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   8    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   9    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  10    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  11  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  12    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  13    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  14    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_CONTTHEM"
     [exec]   2  	(
     [exec]   3  	 "CONTAINER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]   5  	      CONSTRAINT "CAST_CONTTHEM_P" PRIMARY KEY ("CONTAINER_ID")
     [exec]   6    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   7    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   8    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]   9    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  10  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  11    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  12    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  13    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_CONT_THEM"
     [exec]   2  	(
     [exec]   3  	 "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     "CONTAINER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "THEMATIQUE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	      CONSTRAINT "CAST_CONT_THEM_P" PRIMARY KEY ("CONTAINER_ID", "SEQUENCE_NUM")
     [exec]   7    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   8    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   9    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  10    TABLESPACE "CAST_USERS"	ENABLE,
     [exec]  11  	      CONSTRAINT "CAST_CONT_THEM_C_F" FOREIGN KEY ("CONTAINER_ID")
     [exec]  12  	       REFERENCES "CAST_CONTTHEM" ("CONTAINER_ID") ENABLE,
     [exec]  13  	      CONSTRAINT "CAST_CONT_THEM_D_F" FOREIGN KEY ("THEMATIQUE_ID")
     [exec]  14  	       REFERENCES "CAST_THEMATIQUE" ("THEMATIQUE_ID") ENABLE
     [exec]  15  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  16    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  17    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  18    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE "CAST_CONT_CHAPT"
     [exec]   2  	(
     [exec]   3  	 "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     "CONTAINER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "CHAPTER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	      CONSTRAINT "CAST_CONT_CHAPT_P" PRIMARY KEY ("CONTAINER_ID", "SEQUENCE_NUM")
     [exec]   7    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   8    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   9    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  10    TABLESPACE "CAST_USERS"	ENABLE,
     [exec]  11  	      CONSTRAINT "CAST_CONT_CHAPT_C_F" FOREIGN KEY ("CONTAINER_ID")
     [exec]  12  	       REFERENCES "CAST_CONTTHEM" ("CONTAINER_ID") ENABLE,
     [exec]  13  	      CONSTRAINT "CAST_CONT_CHAPT_D_F" FOREIGN KEY ("CHAPTER_ID")
     [exec]  14  	       REFERENCES "CAST_CHAPTERTHEM" ("CHAPTER_ID") ENABLE
     [exec]  15  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  16    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  17    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  18    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   ALTER TABLE "CAST_CHAPTERTHEM" ADD "H_IMAGE" VARCHAR2(40 BYTE);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_GUIMENU"
     [exec]   2  	(
     [exec]   3  	 "MENU_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	 "TITLE" VARCHAR2(254 BYTE),
     [exec]   5  	 "IMAGE" VARCHAR2(40 BYTE),
     [exec]   6  	 "CATEGORY" VARCHAR2(40) NULL REFERENCES DCS_CATEGORY(CATEGORY_ID),
     [exec]   7  	 "VERSION" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   8  	 "TEMPLATE" VARCHAR2(254 BYTE),
     [exec]   9  	  CONSTRAINT "CAST_GUIMENU_P" PRIMARY KEY ("MENU_ID")
     [exec]  10    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  11    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  12    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  13    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  14  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  15    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  16    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  17    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_MENUITEM"
     [exec]   2  	(
     [exec]   3  	 "ITEM_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	 "TITLE" VARCHAR2(254 BYTE),
     [exec]   5  	 "IMAGE" VARCHAR2(40 BYTE),
     [exec]   6  	 "MENU" VARCHAR2(40) NULL REFERENCES CAST_GUIMENU(MENU_ID),
     [exec]   7  	 "VERSION" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   8  	 "TEMPLATE" VARCHAR2(254 BYTE),
     [exec]   9  	  CONSTRAINT "CAST_MENUITEM_P" PRIMARY KEY ("ITEM_ID")
     [exec]  10    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  11    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  12    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  13    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  14  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  15    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  16    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  17    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "CAST_MENUITEM" ADD "URL" VARCHAR2(2048 BYTE);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE "CAST_MENUITEM" ADD "NEW_TAB" NUMBER(1,0) DEFAULT 0 NOT NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_GUIMENU_ITEMS"
     [exec]   2  	(
     [exec]   3  	 "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	 "MENU_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	 "ITEM_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	  CONSTRAINT "CAST_GUIMENU_ITEMS_P" PRIMARY KEY ("ITEM_ID", "SEQUENCE_NUM")
     [exec]   7    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   8    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   9    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  10    TABLESPACE "CAST_USERS"	ENABLE,
     [exec]  11  	  CONSTRAINT "CAST_GUIMENU_ITEMS_C_F" FOREIGN KEY ("ITEM_ID")
     [exec]  12  	   REFERENCES "CAST_MENUITEM" ("ITEM_ID") ENABLE,
     [exec]  13  	  CONSTRAINT "CAST_GUIMENU_ITEMS_D_F" FOREIGN KEY ("MENU_ID")
     [exec]  14  	   REFERENCES "CAST_GUIMENU" ("MENU_ID") ENABLE
     [exec]  15  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  16    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  17    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  18    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_THEMATIQUE_CHAPT"
     [exec]   2  	(
     [exec]   3  	 "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     "THEMATIQUE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "CHAPTER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	      CONSTRAINT "CAST_THEMATIQUE_CHAPT_P" PRIMARY KEY ("THEMATIQUE_ID", "SEQUENCE_NUM")
     [exec]   7    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   8    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   9    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  10    TABLESPACE "CAST_USERS"	ENABLE,
     [exec]  11  	      CONSTRAINT "CAST_THEMATIQUE_CHAPT_C_F" FOREIGN KEY ("THEMATIQUE_ID")
     [exec]  12  	       REFERENCES "CAST_THEMATIQUE" ("THEMATIQUE_ID") ENABLE,
     [exec]  13  	      CONSTRAINT "CAST_THEMATIQUE_CHAPT_D_F" FOREIGN KEY ("CHAPTER_ID")
     [exec]  14  	       REFERENCES "CAST_CHAPTERTHEM" ("CHAPTER_ID") ENABLE
     [exec]  15  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  16    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  17    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  18    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "CAST_DOCUMENT" ADD "EXTERNAL_URL"	VARCHAR2(2048 BYTE)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE  "CAST_THEMATIQUE" DROP COLUMN "CHAPTER";
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "CAST_THEMATIQUE" MODIFY
     [exec]   2  	     (
     [exec]   3  	     "TITLE" VARCHAR2(510 BYTE),
     [exec]   4  	     "DESCRIPTION" VARCHAR2(3000 BYTE),
     [exec]   5  	     "TOP_DOC_TITLE" VARCHAR2(510 BYTE),
     [exec]   6  	     "TOP_DOC_DESCRIPTION" VARCHAR2(3000 BYTE),
     [exec]   7  	     "BOTTOM_DOC_TITLE" VARCHAR2(510 BYTE),
     [exec]   8  	     "BOTTOM_DOC_DESCRIPTION" VARCHAR2(3000 BYTE)
     [exec]   9  	     );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/iphone_r8/cast_catalog.sql
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD product_localization NUMBER(1,0) DEFAULT 0 NOT NULL ENABLE;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p23/cast_catalog.sql
     [exec] SQL> ALTER TABLE CASTO_SKU ADD video_aux_url VARCHAR2(2000) NULL;
     [exec] ALTER TABLE CASTO_SKU ADD video_aux_url	VARCHAR2(2000) NULL
     [exec]                           *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD video_full_size NUMBER(1, 0) DEFAULT 0;
     [exec] ALTER TABLE CASTO_SKU ADD video_full_size NUMBER(1, 0) DEFAULT 0
     [exec]                           *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> alter table CAST_CATEGORY modify info_text varchar2(1000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> alter table CAST_CATEGORY modify commerce_text varchar2(1000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/s2/cast_catalog.sql
     [exec] SQL> echo on
     [exec] SP2-0042: unknown command "echo on" - rest of line ignored.
     [exec] SQL> REM !!!==
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_START_DATE DATE NULL;
     [exec] ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_START_DATE DATE NULL
     [exec]                           *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_END_DATE DATE NULL;
     [exec] ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_END_DATE DATE NULL
     [exec]                           *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD SHOW_M2_FIRST NUMBER(1,0) DEFAULT 1;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD SHOW_CARD_PRICE NUMBER(1,0);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD EMISSION_LEVEL VARCHAR2(40);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> update CASTO_SKU set EAN = substr(EAN, 1, 13);
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY EAN VARCHAR2(13);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p27/cast_catalog.sql
     [exec] SQL> ALTER TABLE cast_grouped_product ADD IMPLANTA_MESSAGE VARCHAR2(50) DEFAULT 'Selon implantation type';
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE casto_category ADD custom_page_link VARCHAR2(250) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE casto_category ADD products_number_content VARCHAR2(50) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE casto_category ADD subcategories_content VARCHAR2(500) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE casto_sku ADD CUSTOM_DELIVERY_TERM NUMBER NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE casto_sku ADD CD_START_DATE DATE NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE casto_sku ADD CD_END_DATE DATE NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_CATALOGUE ADD CATALOG_WRAP_ID VARCHAR2(250) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p28/cast_catalog.sql
     [exec] SQL> ALTER TABLE CASTO_SKU ADD external_app_url	VARCHAR2(2000) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/fl/cast_catalog.sql
     [exec] SQL> CREATE TABLE casto_doc_filter_tag_cats (
     [exec]   2  	     tag_cat_id VARCHAR2(40) NOT NULL,
     [exec]   3  	     tag_cat_title VARCHAR2(255) NOT NULL,
     [exec]   4  	     tag_cat_image VARCHAR2(40),
     [exec]   5  	     tag_cat_number NUMBER,
     [exec]   6  	     PRIMARY KEY (tag_cat_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE casto_doc_filter_tags (
     [exec]   2  	     tag_id VARCHAR2(40) NOT NULL,
     [exec]   3  	     tag_title VARCHAR2(255) NOT NULL,
     [exec]   4  	     tag_category VARCHAR2(40),
     [exec]   5  	     tag_promo VARCHAR2(40),
     [exec]   6  	     tag_number NUMBER,
     [exec]   7  	     PRIMARY KEY (tag_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE cast_tag_docs (
     [exec]   2  	     tag_id VARCHAR2(40) NOT NULL REFERENCES casto_doc_filter_tags(tag_id),
     [exec]   3  	     document_id VARCHAR2(40) NOT NULL REFERENCES cast_document(document_id),
     [exec]   4  	     sequence_num INTEGER NOT NULL ENABLE,
     [exec]   5  	     PRIMARY KEY (tag_id,sequence_num));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE casto_doc_types (
     [exec]   2  	     type_id VARCHAR2(40) NOT NULL,
     [exec]   3  	     type_title VARCHAR2(255) NOT NULL,
     [exec]   4  	     type_descr VARCHAR2(500),
     [exec]   5  	     type_number NUMBER,
     [exec]   6  	     type_def_promo VARCHAR2(40),
     [exec]   7  	     PRIMARY KEY (type_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE casto_doc_subcats (
     [exec]   2  	     subcat_id VARCHAR2(40) NOT NULL,
     [exec]   3  	     subcat_title VARCHAR2(255) NOT NULL,
     [exec]   4  	     PRIMARY KEY (subcat_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE casto_fast_lab_configs (
     [exec]   2  	     id VARCHAR2(40) NOT NULL,
     [exec]   3  	     fb_link_title VARCHAR2(255),
     [exec]   4  	     fb_link_value VARCHAR2(255),
     [exec]   5  	     fd_link_title VARCHAR2(255),
     [exec]   6  	     fd_link_value VARCHAR2(255),
     [exec]   7  	     eg_link_title VARCHAR2(255),
     [exec]   8  	     eg_link_value VARCHAR2(255),
     [exec]   9  	     dis_def_doc VARCHAR2(40),
     [exec]  10  	     prod_dis_fb_link_title VARCHAR2(255),
     [exec]  11  	     prod_dis_fd_link_title VARCHAR2(255),
     [exec]  12  	     prod_dis_eg_link_title VARCHAR2(255),
     [exec]  13  	     cf_enable_new NUMBER(1,0),
     [exec]  14  	     cf_page_title VARCHAR2(255),
     [exec]  15  	     cf_page_descr VARCHAR2(500),
     [exec]  16  	     cf_def_bottom_banner VARCHAR2(40),
     [exec]  17  	     cf_get_help_title VARCHAR2(255),
     [exec]  18  	     cf_get_help_descr VARCHAR2(500),
     [exec]  19  	     cf_get_help_home VARCHAR2(40),
     [exec]  20  	     cf_get_help_filtered VARCHAR2(40),
     [exec]  21  	     reinsurance_section VARCHAR2(40),
     [exec]  22  	     reinsurance_section_flap VARCHAR2(40),
     [exec]  23  	     PRIMARY KEY (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE cast_document ADD sub_type_id VARCHAR2(40);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_document ADD subcat_id VARCHAR2(40);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_document ADD cf_description VARCHAR2(2000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_document ADD cf_r_col_dis_link_name VARCHAR2(255);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE cast_category ADD dp_promo VARCHAR2(40);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_category ADD dp_promo_width NUMBER;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_category ADD dp_promo_height NUMBER;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_category ADD min_cat_number_per_col NUMBER;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE cast_product ADD flag_bg VARCHAR2(30);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p29/cast_catalog.sql
     [exec] SQL> ALTER TABLE CASTO_SKU ADD (
     [exec]   2  	     COLOR_LIBELLE_CONTENU VARCHAR2(2000 BYTE),
     [exec]   3  	     COLOR_LIBELLE_COMMERCE VARCHAR2(2000 BYTE),
     [exec]   4  	     PROMOTION_COMMERCE CLOB,
     [exec]   5  	     PROMOTION_CONTENU CLOB,
     [exec]   6  	     START_PROM_COMMERCE DATE,
     [exec]   7  	     END_PROM_COMMERCE DATE,
     [exec]   8  	     START_PROM_CONTENU DATE,
     [exec]   9  	     END_PROM_CONTENU DATE,
     [exec]  10  	     SOUMISAREP NUMBER(1, 0) NULL,
     [exec]  11  	     TAXREP NUMBER(14, 2) NULL
     [exec]  12  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p30/cast_catalog.sql
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY PLUSDUPRODUIT VARCHAR2(2000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY LIBELLECLIENTLONG VARCHAR2(2000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/cc/cast_catalog.sql
     [exec] SQL> ALTER TABLE CAST_CATALOG_ADDITION_PROP ADD (
     [exec]   2    DISPLAY_BANNER NUMBER(1,0) DEFAULT 1,
     [exec]   3    DISPLAY_STORES NUMBER(1,0) DEFAULT 1,
     [exec]   4    COOKIE_AGE NUMBER(*,0) DEFAULT 180 NOT NULL,
     [exec]   5    POPUP_TITLE VARCHAR2(1000) DEFAULT UNISTR('S\00e9lectionnez votre magasin pour visualiser le prix et la disponibilit\00e9 de vos produits :'),
     [exec]   6    HEADER_TEXT VARCHAR2(1000) DEFAULT UNISTR('Consulter le prix et la disponibilit\00e9 de mes produits'),
     [exec]   7    CC_PROMO_INFO VARCHAR2(40) DEFAULT 'prin200000');
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    CC_DELAY_PERIOD_UNIT NUMBER(*,0) DEFAULT 0 NOT NULL,
     [exec]   3    CC_DELAY_PERIOD NUMBER(*,0) DEFAULT 2 NOT NULL,
     [exec]   4    CC_PROMO_INFO VARCHAR2(40),
     [exec]   5    CC_TOP_PROMO_INFO VARCHAR2(40),
     [exec]   6    LOCAL_LIST_PRICE_LIST VARCHAR2(40) NULL,
     [exec]   7    LOCAL_SALE_PRICE_LIST VARCHAR2(40) NULL,
     [exec]   8    RETRAIT_MAGASIN NUMBER(1,0) DEFAULT 0,
     [exec]   9    LOCAL_PRIX NUMBER(1,0) DEFAULT 0);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_CATALOG_ADDITION_PROP ADD (
     [exec]   2    DELIVERY_TOOLTIP VARCHAR2(1000),
     [exec]   3    CC_TOOLTIP VARCHAR2(1000));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    CC_PHONE VARCHAR2(1000));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_CATALOG_ADDITION_PROP ADD (
     [exec]   2    PROCESSING_FEE_NICE_WORD VARCHAR2(1000));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    CC_DELIVERY_MESSAGE VARCHAR2(1000));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_CATALOG_ADDITION_PROP ADD (
     [exec]   2    SHOPPING_CART_D2H_BANNER VARCHAR2(40) DEFAULT '1400037',
     [exec]   3    SHOPPING_CART_CC_BANNER VARCHAR2(40) DEFAULT '1400038');
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    PBX_SITE VARCHAR2(20),
     [exec]   3    PBX_RANG VARCHAR2(20),
     [exec]   4    PBX_IDENTIFIANT VARCHAR2(20));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    LOCAL_PRICE_LIST VARCHAR2(40) NULL);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN DROP (
     [exec]   2    LOCAL_LIST_PRICE_LIST,
     [exec]   3    LOCAL_SALE_PRICE_LIST
     [exec]   4  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX PERF_DCS_PROMOTION_IDX ON DCS_PROMOTION (PROMOTION_TYPE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX PERF_DCS_PROMOTION_IDX1 ON DCS_PROMOTION (PROMOTION_ID, PROMOTION_TYPE, GLOBAL, ENABLED, START_DATE, END_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    PBX_SITE_SOFINCO VARCHAR2(20),
     [exec]   3    PBX_RANG_SOFINCO VARCHAR2(20));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    PBX_IDENTIFIANT_SOFINCO VARCHAR2(20));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p31/cast_catalog.sql
     [exec] SQL> ALTER TABLE CAST_CATEGORY ADD (
     [exec]   2  	     DEFAULT_TYPE_SORT NUMBER(1, 0) NULL
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE casto_fast_lab_configs ADD (
     [exec]   2  card_castorama_block VARCHAR2(40)
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/hmacImpl/cast_catalog.sql
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD
     [exec]   2  (
     [exec]   3    PBX_SECRET_KEY VARCHAR2(255),
     [exec]   4    PBX_SECRET_KEY_SOFINCO VARCHAR2(255),
     [exec]   5    PBX_DIRECT_PLUS_KEY VARCHAR2(255)
     [exec]   6  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/inventoryCheck/cast_catalog.sql
     [exec] SP2-0310: unable to open file "D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/inventoryCheck/cast_catalog.sql"
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/lc/cast_catalog.sql
     [exec] SP2-0310: unable to open file "D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/lc/cast_catalog.sql"
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/ds/cast_catalog.sql
     [exec] SP2-0310: unable to open file "D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/ds/cast_catalog.sql"
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/tablets/cast_catalog.sql
     [exec] SQL> CREATE TABLE "CAST_FOOTER_ITEM"
     [exec]   2  	(
     [exec]   3  	 "LINK_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]   5  	 "VERSION" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     "URL" VARCHAR2(2048 BYTE),
     [exec]   7  	     "IS_ACTIVE" NUMBER(1,0) DEFAULT 0 NOT NULL,
     [exec]   8  	     "POSITION" NUMBER(30) NULL,
     [exec]   9  	 CONSTRAINT "CAST_FOOTER_ITEM_P" PRIMARY KEY ("LINK_ID")
     [exec]  10    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  11    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  12    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  13    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  14  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  15    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  16    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  17    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE "CAST_NOS_SERVICES_ITEM"
     [exec]   2  	(
     [exec]   3  	 "LINK_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]   5  	 "VERSION" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     "URL" VARCHAR2(2048 BYTE),
     [exec]   7  	     "IS_ACTIVE" NUMBER(1,0) DEFAULT 0 NOT NULL,
     [exec]   8  	     "POSITION" NUMBER(30) NULL,
     [exec]   9  	     CONSTRAINT "CAST_NOS_SERVICES_ITEM_P" PRIMARY KEY ("LINK_ID")
     [exec]  10    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  11    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  12    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  13    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  14  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  15    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  16    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  17    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU
     [exec]   2  MODIFY GARANTIE VARCHAR2(2000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/sl/cast_catalog.sql
     [exec] SQL> alter table CASTO_FAST_LAB_CONFIGS add (
     [exec]   2  "CHOOSE_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]   3  "CHOOSE_STORE_DESCR" VARCHAR2(300 BYTE),
     [exec]   4  "SEARCH_INPUT_TITLE" VARCHAR2(300 BYTE),
     [exec]   5  "LEADFORMANCE_LINK_VALUE" VARCHAR2(75 BYTE),
     [exec]   6  "BEST_OFFERS" VARCHAR2(75 BYTE),
     [exec]   7  "CC_STORE_MESSAGE_LONG" VARCHAR2(75 BYTE),
     [exec]   8  "CC_STORE_MESSAGE_SHORT" VARCHAR2(75 BYTE),
     [exec]   9  "CHANGE_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]  10  "CHOOSE_OTHER_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]  11  "CHOOSE_THIS_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]  12  "YOUR_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]  13  "SEARCH_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]  14  "CATALOG_PAGE_LINK" VARCHAR2(150 BYTE),
     [exec]  15  "CLOSE_BUTTON_ENABLED" NUMBER(1,0) DEFAULT 0);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD META_KEYWORDS_PATTERN	VARCHAR2(300)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD META_DESCRIPTION_PATTERN VARCHAR2(300)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD SHORT_DESCRIPTION	     VARCHAR2(300)   NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_PROMO_INFO_KEYWRDS (
     [exec]   2  	     ID VARCHAR2(40) NOT NULL REFERENCES CAST_PROMO_INFORMATION(PROMO_INFORMATION_ID),
     [exec]   3  	     SEQUENCE_NUM INTEGER NOT NULL,
     [exec]   4  	     KEYWORDS VARCHAR2(254) NULL,
     [exec]   5  	     PRIMARY KEY(ID, SEQUENCE_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> exit;
     [exec] Disconnected from Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production

-copysql:

createpubtables:

-performpubsql:

-performsql:
     [echo] about to execute sql/sql_run/create_pub_tables.sql using CAST_PUB/CAST_PUB@XE
     [exec] 
     [exec] SQL*Plus: Release 11.2.0.2.0 Production on Mon May 2 18:50:36 2016
     [exec] 
     [exec] Copyright (c) 1982, 2014, Oracle.  All rights reserved.
     [exec] 
     [exec] 
     [exec] Connected to:
     [exec] Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production
     [exec] 
     [exec] SQL> REM !!! create_pub_tables.sql
     [exec] SQL> -- BIZUI
     [exec] SQL> @D:\ATG\ATG9.4\home/../BIZUI/sql/install/oracle/bizui_all_ddl.sql
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- id_generator.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_id_generator (
     [exec]   2  	     id_space_name   varchar2(60)    not null,
     [exec]   3  	     seed    number(19,0)    not null,
     [exec]   4  	     batch_size      integer not null,
     [exec]   5  	     prefix  varchar2(10)    null,
     [exec]   6  	     suffix  varchar2(10)    null
     [exec]   7  ,constraint das_id_generator_p primary key (id_space_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_secure_id_gen (
     [exec]   2  	     id_space_name   varchar2(60)    not null,
     [exec]   3  	     seed    number(19,0)    not null,
     [exec]   4  	     batch_size      integer not null,
     [exec]   5  	     ids_per_batch   integer null,
     [exec]   6  	     prefix  varchar2(10)    null,
     [exec]   7  	     suffix  varchar2(10)    null
     [exec]   8  ,constraint das_secure_id_ge_p primary key (id_space_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- cluster_name_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_cluster_name (
     [exec]   2  	     cluster_name    varchar2(255)   not null,
     [exec]   3  	     saved_date      number(19)      not null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- dms_limbo_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- This table is where limbo instance/clients identify themselves. --There should only be one entry in this table for each Dynamo running PatchBay with message delays enabled.
     [exec] SQL> 
     [exec] SQL> create table dms_limbo (
     [exec]   2  	     limbo_name      varchar2(250)   not null,
     [exec]   3  	     limbo_id	     number(19,0)    not null
     [exec]   4  ,constraint limbo_pk primary key (limbo_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- The following four tables comprise the parts of the stored messages.
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_msg (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     limbo_id	     number(19,0)    not null,
     [exec]   4  	     delivery_date   number(19,0)    not null,
     [exec]   5  	     delivery_count  number(2,0)     not null,
     [exec]   6  	     msg_src_name    varchar2(250)   not null,
     [exec]   7  	     port_name	     varchar2(250)   not null,
     [exec]   8  	     msg_class	     varchar2(250)   not null,
     [exec]   9  	     msg_class_type  number(1,0)     not null,
     [exec]  10  	     jms_type	     varchar2(250)   null,
     [exec]  11  	     jms_expiration  number(19,0)    null,
     [exec]  12  	     jms_correlationid	     varchar2(250)   null
     [exec]  13  ,constraint limbo_msg_pk primary key (msg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dms_limbo_read_idx on dms_limbo_msg (limbo_id,delivery_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- If serialized reply-to destinations are known to be small enough, this binary column's size can be reduced for efficiency.  The size here has been chosen to work with local dms and SQL-JMS.
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_replyto (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     jms_replyto     blob    null
     [exec]   4  ,constraint limbo_replyto_pk primary key (msg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- If serialized message bodies are known to be small enough, this binary column's size can be reduced for efficiency.	The size here has been chosen to work with almost all types of messages but may be larger than necessary.	Actual usage analysis is recommended for finding the optimal binary column size.
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_body (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     msg_body	     blob    null
     [exec]   4  ,constraint limbo_body_pk primary key (msg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- This table represents a map of properties for messages stored above, i.e.  there can be multiple rows in this table for a single row in the preceeding tables.
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_props (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     prop_name	     varchar2(250)   not null,
     [exec]   4  	     prop_value      varchar2(250)   not null
     [exec]   5  ,constraint limbo_props_pk primary key (msg_id,prop_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_ptypes (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     prop_name	     varchar2(250)   not null,
     [exec]   4  	     prop_type	     number(1,0)     not null
     [exec]   5  ,constraint dms_limbo_ptypes_p primary key (msg_id,prop_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_delay (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     delay   number(19,0)    not null,
     [exec]   4  	     max_attempts    number(2,0)     not null,
     [exec]   5  	     failure_port    varchar2(250)   not null,
     [exec]   6  	     jms_timestamp   number(19,0)    null,
     [exec]   7  	     jms_deliverymode	     number(10,0)    null,
     [exec]   8  	     jms_priority    number(10,0)    null,
     [exec]   9  	     jms_messageid   varchar2(250)   null,
     [exec]  10  	     jms_redelivered number(1,0)     null,
     [exec]  11  	     jms_destination blob    null
     [exec]  12  ,constraint limbo_delay_pk primary key (msg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- create_sql_jms_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_client (
     [exec]   2  	     client_name     varchar2(250)   not null,
     [exec]   3  	     client_id	     number(19,0)    null
     [exec]   4  ,constraint dms_client_p primary key (client_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_queue (
     [exec]   2  	     queue_name      varchar2(250)   null,
     [exec]   3  	     queue_id	     number(19,0)    not null,
     [exec]   4  	     temp_id number(19,0)    null
     [exec]   5  ,constraint dms_queue_p primary key (queue_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_queue_recv (
     [exec]   2  	     client_id	     number(19,0)    null,
     [exec]   3  	     receiver_id     number(19,0)    not null,
     [exec]   4  	     queue_id	     number(19,0)    null
     [exec]   5  ,constraint dms_queue_recv_p primary key (receiver_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_queue_entry (
     [exec]   2  	     queue_id	     number(19,0)    not null,
     [exec]   3  	     msg_id  number(19,0)    not null,
     [exec]   4  	     delivery_date   number(19,0)    null,
     [exec]   5  	     handling_client_id      number(19,0)    null,
     [exec]   6  	     read_state      number(19,0)    null
     [exec]   7  ,constraint dms_queue_entry_p primary key (queue_id,msg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_topic (
     [exec]   2  	     topic_name      varchar2(250)   null,
     [exec]   3  	     topic_id	     number(19,0)    not null,
     [exec]   4  	     temp_id number(19,0)    null
     [exec]   5  ,constraint dms_topic_p primary key (topic_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_topic_sub (
     [exec]   2  	     client_id	     number(19,0)    null,
     [exec]   3  	     subscriber_name varchar2(250)   null,
     [exec]   4  	     subscriber_id   number(19,0)    not null,
     [exec]   5  	     topic_id	     number(19,0)    null,
     [exec]   6  	     durable number(1,0)     null,
     [exec]   7  	     active  number(1,0)     null
     [exec]   8  ,constraint dms_topic_sub_p primary key (subscriber_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_topic_entry (
     [exec]   2  	     subscriber_id   number(19,0)    not null,
     [exec]   3  	     msg_id  number(19,0)    not null,
     [exec]   4  	     delivery_date   number(19,0)    null,
     [exec]   5  	     read_state      number(19,0)    null
     [exec]   6  ,constraint dms_topic_entry_p primary key (subscriber_id,msg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dms_topic_msg_idx on dms_topic_entry (msg_id,subscriber_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dms_topic_read_idx on dms_topic_entry (read_state,delivery_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dms_msg (
     [exec]   2  	     msg_class	     varchar2(250)   null,
     [exec]   3  	     has_properties  number(1,0)     null,
     [exec]   4  	     reference_count number(10,0)    null,
     [exec]   5  	     msg_id  number(19,0)    not null,
     [exec]   6  	     timestamp	     number(19,0)    null,
     [exec]   7  	     correlation_id  varchar2(250)   null,
     [exec]   8  	     reply_to	     number(19,0)    null,
     [exec]   9  	     destination     number(19,0)    null,
     [exec]  10  	     delivery_mode   number(1,0)     null,
     [exec]  11  	     redelivered     number(1,0)     null,
     [exec]  12  	     type    varchar2(250)   null,
     [exec]  13  	     expiration      number(19,0)    null,
     [exec]  14  	     priority	     number(1,0)     null,
     [exec]  15  	     small_body      blob    null,
     [exec]  16  	     large_body      blob    null
     [exec]  17  ,constraint dms_msg_p primary key (msg_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_msg_properties (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     data_type	     number(1,0)     null,
     [exec]   4  	     name    varchar2(250)   not null,
     [exec]   5  	     value   varchar2(250)   null
     [exec]   6  ,constraint dms_msg_properti_p primary key (msg_id,name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create or replace procedure dms_queue_flag
     [exec]   2  (Pbatch_size	IN NUMBER
     [exec]   3  ,Pread_lock	IN NUMBER
     [exec]   4  ,Pdelivery_date IN NUMBER
     [exec]   5  ,Pclient_id	IN NUMBER
     [exec]   6  ,Pqueue_id	IN NUMBER
     [exec]   7  ,Pupdate_count	OUT NUMBER)
     [exec]   8  as
     [exec]   9  		  Begin
     [exec]  10  	 UPDATE dms_queue_entry qe
     [exec]  11  	 SET qe.handling_client_id = Pclient_id,
     [exec]  12  	     qe.read_state = Pread_lock
     [exec]  13  	 WHERE ROWNUM < Pbatch_size
     [exec]  14  	   AND qe.handling_client_id < 0
     [exec]  15  	   AND qe.delivery_date < Pdelivery_date
     [exec]  16  	   AND qe.queue_id = Pqueue_id;
     [exec]  17  	 Pupdate_count := SQL%ROWCOUNT;
     [exec]  18    END;
     [exec]  19  
     [exec]  20  /
     [exec] 
     [exec] Procedure created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create or replace procedure dms_topic_flag
     [exec]   2  (Pbatch_size	IN NUMBER
     [exec]   3  ,Pread_lock	IN NUMBER
     [exec]   4  ,Pdelivery_date IN NUMBER
     [exec]   5  ,Psubscriber_id IN NUMBER
     [exec]   6  ,Pupdate_count	OUT NUMBER)
     [exec]   7  as
     [exec]   8  		  Begin
     [exec]   9  	 UPDATE dms_topic_entry te
     [exec]  10  	 SET te.read_state = Pread_lock
     [exec]  11  	 WHERE ROWNUM < Pbatch_size
     [exec]  12  	   AND te.delivery_date < Pdelivery_date
     [exec]  13  	   AND te.read_state = 0
     [exec]  14  	   AND te.subscriber_id = Psubscriber_id;
     [exec]  15  	 Pupdate_count := SQL%ROWCOUNT;
     [exec]  16    END;
     [exec]  17  
     [exec]  18  /
     [exec] 
     [exec] Procedure created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- create_staff_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- SQL for creating the Dynamo Staff Repository for the GSA
     [exec] SQL> -- Primary account table.
     [exec] SQL> --  Type=1 is a login account.	The first_name, last_name, and password	     fields are valid for this type of account.
     [exec] SQL> -- Type=2 is a group account.  The description field is valid for	      this type of account.
     [exec] SQL> -- Type=4 is a privilege account.	The description field is valid for	  this type of account.
     [exec] SQL> 
     [exec] SQL> create table das_account (
     [exec]   2  	     account_name    varchar2(254)   not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     first_name      varchar2(254)   null,
     [exec]   5  	     last_name	     varchar2(254)   null,
     [exec]   6  	     password	     varchar2(254)   null,
     [exec]   7  	     description     varchar2(254)   null,
     [exec]   8  	     lastpwdupdate   date    null
     [exec]   9  ,constraint das_account_p primary key (account_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_group_assoc (
     [exec]   2  	     account_name    varchar2(254)   not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     group_name      varchar2(254)   not null
     [exec]   5  ,constraint das_grp_asc_p primary key (account_name,sequence_num));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Adding the previous password information
     [exec] SQL> 
     [exec] SQL> create table das_acct_prevpwd (
     [exec]   2  	     account_name    varchar2(254)   not null,
     [exec]   3  	     seq_num number(10)      not null,
     [exec]   4  	     prevpwd varchar2(35)    null
     [exec]   5  ,constraint das_prevpwd_p primary key (account_name,seq_num)
     [exec]   6  ,constraint das_prvpwd_d_f foreign key (account_name) references das_account (account_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- create_gsa_subscribers_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_gsa_subscriber (
     [exec]   2  	     id      integer not null,
     [exec]   3  	     address varchar2(50)    not null,
     [exec]   4  	     port    integer not null,
     [exec]   5  	     repository      varchar2(256)   not null,
     [exec]   6  	     itemdescriptor  varchar2(256)   not null
     [exec]   7  ,constraint das_gsa_subscrib_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- create_sds.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_sds (
     [exec]   2  	     sds_name	     varchar2(50)    not null,
     [exec]   3  	     curr_ds_name    varchar2(50)    null,
     [exec]   4  	     dynamo_server   varchar2(80)    null,
     [exec]   5  	     last_modified   date    null
     [exec]   6  ,constraint das_sds_p primary key (sds_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- integration_data_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table if_integ_data (
     [exec]   2  	     item_id varchar2(40)    not null,
     [exec]   3  	     descriptor      varchar2(64)    not null,
     [exec]   4  	     repository      varchar2(255)   not null,
     [exec]   5  	     state   number(10)      not null,
     [exec]   6  	     last_import     date    null,
     [exec]   7  	     version number(10)      not null
     [exec]   8  ,constraint if_int_data_p primary key (item_id,descriptor,repository));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- nucleus_security_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_nucl_sec (
     [exec]   2  	     func_name	     varchar2(254)   not null,
     [exec]   3  	     policy  varchar2(254)   not null
     [exec]   4  ,constraint func_name_pk primary key (func_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_ns_acls (
     [exec]   2  	     id      varchar2(254)   not null,
     [exec]   3  	     index_num	     number(10)      not null,
     [exec]   4  	     acl     varchar2(254)   not null
     [exec]   5  ,constraint id_index_pk primary key (id,index_num));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- media_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --     media content repository tables.
     [exec] SQL> 
     [exec] SQL> create table media_folder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     name    varchar2(254)   not null,
     [exec]   7  	     path    varchar2(254)   not null,
     [exec]   8  	     parent_folder_id	     varchar2(40)    null
     [exec]   9  ,constraint md_folder_p primary key (folder_id)
     [exec]  10  ,constraint md_foldparnt_fl_f foreign key (parent_folder_id) references media_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index fldr_mfldrid_idx on media_folder (parent_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index md_fldr_path_idx on media_folder (path);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table media_base (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     name    varchar2(254)   not null,
     [exec]   7  	     path    varchar2(254)   not null,
     [exec]   8  	     parent_folder_id	     varchar2(40)    not null,
     [exec]   9  	     media_type      integer null
     [exec]  10  ,constraint media_p primary key (media_id)
     [exec]  11  ,constraint medparnt_fl_f foreign key (parent_folder_id) references media_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index med_mfldrid_idx on media_base (parent_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index media_path_idx on media_base (path);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index media_type_idx on media_base (media_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table media_ext (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     url     varchar2(254)   not null
     [exec]   4  ,constraint media_ext_p primary key (media_id)
     [exec]   5  ,constraint medxtmed_d_f foreign key (media_id) references media_base (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table media_bin (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     length  integer not null,
     [exec]   4  	     last_modified   date    not null,
     [exec]   5  	     data    blob    not null
     [exec]   6  ,constraint media_bin_p primary key (media_id)
     [exec]   7  ,constraint medbnmed_d_f foreign key (media_id) references media_base (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table media_txt (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     length  integer not null,
     [exec]   4  	     last_modified   date    not null,
     [exec]   5  	     data    clob    not null
     [exec]   6  ,constraint media_txt_p primary key (media_id)
     [exec]   7  ,constraint medtxtmed_d_f foreign key (media_id) references media_base (media_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- deployment_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --     These tables are for the daf deployment system
     [exec] SQL> 
     [exec] SQL> create table das_deployment (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     start_time      date    null,
     [exec]   5  	     end_time	     date    null,
     [exec]   6  	     failure_time    date    null,
     [exec]   7  	     status  number(10)      null,
     [exec]   8  	     prev_status     number(10)      null,
     [exec]   9  	     status_detail   varchar2(255)   null,
     [exec]  10  	     current_phase   number(10)      null,
     [exec]  11  	     rep_high_mark   number(10)      null,
     [exec]  12  	     rep_marks_avail number(10)      null,
     [exec]  13  	     file_high_mark  number(10)      null,
     [exec]  14  	     file_marks_avail	     number(10)      null,
     [exec]  15  	     thread_batch_size	     number(10)      null,
     [exec]  16  	     failure_count   number(10)      null,
     [exec]  17  	     purge_deploy_data	     number(1)	     null
     [exec]  18  ,constraint daf_depl_pk primary key (deployment_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index das_dpl_start_idx on das_deployment (start_time);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_depl_progress (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     work_completed  number(10)      null,
     [exec]   5  	     total_work      number(10)      null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_thread_batch (
     [exec]   2  	     thread_batch_id varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     deployment      varchar2(40)    null,
     [exec]   5  	     type    number(10)      null,
     [exec]   6  	     owner   varchar2(255)   null,
     [exec]   7  	     thread_name     varchar2(255)   null,
     [exec]   8  	     lower_bound     number(10)      null,
     [exec]   9  	     upper_bound     number(10)      null,
     [exec]  10  	     last_update_time	     timestamp	     null,
     [exec]  11  	     running number(1,0)     not null
     [exec]  12  ,constraint das_dpl_tb_pk primary key (thread_batch_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index das_tb_deployment on das_thread_batch (deployment);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index das_tb_owner on das_thread_batch (owner);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index das_tb_thread_nam on das_thread_batch (thread_name);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_deploy_data (
     [exec]   2  	     deploy_data_id  varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     type    number(10)      null,
     [exec]   5  	     source  varchar2(255)   null,
     [exec]   6  	     destination     varchar2(255)   null,
     [exec]   7  	     dest_server     varchar2(255)   null,
     [exec]   8  	     deployment      varchar2(40)    null
     [exec]   9  ,constraint deploy_data_pk primary key (deploy_data_id)
     [exec]  10  ,constraint dd_deployment_fk foreign key (deployment) references das_deployment (deployment_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dd_deployment_idx on das_deploy_data (deployment);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_deploy_mark (
     [exec]   2  	     marker_id	     varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     type    number(10)      null,
     [exec]   5  	     status  number(10)      null,
     [exec]   6  	     index_number    number(10)      null,
     [exec]   7  	     marker_action   number(10)      null,
     [exec]   8  	     f_src_devline_id	     varchar2(40)    null,
     [exec]   9  	     r_src_devline_id	     varchar2(40)    null,
     [exec]  10  	     deployment_id   varchar2(40)    null,
     [exec]  11  	     deployment_data varchar2(40)    null
     [exec]  12  ,constraint marker_pk primary key (marker_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index marker_index_idx on das_deploy_mark (index_number);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_rep_mark (
     [exec]   2  	     rep_marker_id   varchar2(40)    not null,
     [exec]   3  	     item_desc_name  varchar2(255)   null,
     [exec]   4  	     item_id varchar2(255)   null
     [exec]   5  ,constraint rep_marker_pk primary key (rep_marker_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_file_mark (
     [exec]   2  	     file_marker_id  varchar2(40)    not null,
     [exec]   3  	     file_path	     varchar2(1000)  null
     [exec]   4  ,constraint file_marker_pk primary key (file_marker_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_depl_depldat (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     deployment_data varchar2(40)    null
     [exec]   5  ,constraint das_dpl_depdat_pk primary key (deployment_id,sequence_num));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_depl_options (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(255)   not null,
     [exec]   4  	     optionValue     varchar2(255)   null
     [exec]   5  ,constraint das_dpl_depopt_pk primary key (deployment_id,tag));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_depl_repmaps (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     source  varchar2(255)   not null,
     [exec]   4  	     destination     varchar2(255)   null
     [exec]   5  ,constraint das_dpl_repmap_pk primary key (deployment_id,source));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_depl_item_ref (
     [exec]   2  	     item_ref_id     varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     deployment_id   varchar2(40)    null,
     [exec]   5  	     repository      varchar2(255)   null,
     [exec]   6  	     item_desc_name  varchar2(255)   null,
     [exec]   7  	     item_id varchar2(255)   null,
     [exec]   8  	     item_index      number(10)      null
     [exec]   9  ,constraint das_dpl_itmref_pk primary key (item_ref_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index das_dpl_itmx_idx on das_depl_item_ref (item_index);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index das_dpl_dplid_idx on das_depl_item_ref (deployment_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_dd_markers (
     [exec]   2  	     deploy_data_id  varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     marker  varchar2(40)    null
     [exec]   5  ,constraint das_dpl_dd_mrk_pk primary key (deploy_data_id,sequence_num)
     [exec]   6  ,constraint marker_fk foreign key (marker) references das_deploy_mark (marker_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index marker_idx on das_dd_markers (marker);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_dep_fail_info (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     deployment_id   varchar2(40)    not null,
     [exec]   4  	     marker_id	     varchar2(40)    null,
     [exec]   5  	     severity	     varchar2(40)    null,
     [exec]   6  	     failure_message varchar2(255)   null,
     [exec]   7  	     failure_time    timestamp	     null,
     [exec]   8  	     error_code      varchar2(40)    null,
     [exec]   9  	     cause   clob    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- sitemap_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Table for siteindex repository item
     [exec] SQL> 
     [exec] SQL> create table das_siteindex (
     [exec]   2  	     siteindex_id    varchar2(40)    not null,
     [exec]   3  	     lastmod date    null,
     [exec]   4  	     filename	     varchar2(100)   null,
     [exec]   5  	     xml     clob    null
     [exec]   6  ,constraint siteindex_pk primary key (siteindex_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Table for sitemap repository item
     [exec] SQL> 
     [exec] SQL> create table das_sitemap (
     [exec]   2  	     sitemap_id      varchar2(40)    not null,
     [exec]   3  	     lastmod date    null,
     [exec]   4  	     filename	     varchar2(100)   null,
     [exec]   5  	     xml     clob    null
     [exec]   6  ,constraint sitemap_pk primary key (sitemap_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- versioned_seo_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Table for seo-tag repository item
     [exec] SQL> 
     [exec] SQL> create table das_seo_tag (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     seo_tag_id      varchar2(40)    not null,
     [exec]  11  	     display_name    varchar2(100)   null,
     [exec]  12  	     title   varchar2(254)   null,
     [exec]  13  	     description     varchar2(254)   null,
     [exec]  14  	     keywords	     varchar2(254)   null,
     [exec]  15  	     content_key     varchar2(100)   null
     [exec]  16  ,constraint das_seo_tag_pk primary key (seo_tag_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index das_seo_tag_wsx on das_seo_tag (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index das_seo_tag_cix on das_seo_tag (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- user_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new DPS schema.
     [exec] SQL> -- Add the organization definition.  It's out of place, but since dps_user references it, it's got to be defined up here
     [exec] SQL> 
     [exec] SQL> create table dps_organization (
     [exec]   2  	     org_id  varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     description     varchar2(254)   null,
     [exec]   5  	     parent_org      varchar2(40)    null
     [exec]   6  ,constraint dps_organization_p primary key (org_id)
     [exec]   7  ,constraint dps_orgnparnt_rg_f foreign key (parent_org) references dps_organization (org_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_orgparent_org on dps_organization (parent_org);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Default Profile User Template
     [exec] SQL> -- Basic user info.  note: the password field size must be at a minimum 35 characters	 if DPS stores a hash of the password and not the actual value.
     [exec] SQL> 
     [exec] SQL> create table dps_user (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     login   varchar2(40)    not null,
     [exec]   4  	     auto_login      number(1,0)     null,
     [exec]   5  	     password	     varchar2(35)    null,
     [exec]   6  	     member  number(1,0)     null,
     [exec]   7  	     first_name      varchar2(40)    null,
     [exec]   8  	     middle_name     varchar2(40)    null,
     [exec]   9  	     last_name	     varchar2(40)    null,
     [exec]  10  	     user_type	     integer null,
     [exec]  11  	     locale  integer null,
     [exec]  12  	     lastactivity_date	     date    null,
     [exec]  13  	     lastpwdupdate   date    null,
     [exec]  14  	     generatedpwd    number(1)	     null,
     [exec]  15  	     registration_date	     date    null,
     [exec]  16  	     email   varchar2(255)   null,
     [exec]  17  	     email_status    integer null,
     [exec]  18  	     receive_email   integer null,
     [exec]  19  	     last_emailed    date    null,
     [exec]  20  	     gender  integer null,
     [exec]  21  	     date_of_birth   date    null,
     [exec]  22  	     securityStatus  integer null,
     [exec]  23  	     description     varchar2(254)   null
     [exec]  24  ,constraint dps_user_p primary key (id)
     [exec]  25  ,constraint dps_user_u unique (login)
     [exec]  26  ,constraint dps_user1_c check (auto_login in (0,1))
     [exec]  27  ,constraint dps_user2_c check (member in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_contact_info (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     user_id varchar2(40)    null,
     [exec]   4  	     prefix  varchar2(40)    null,
     [exec]   5  	     first_name      varchar2(100)   null,
     [exec]   6  	     middle_name     varchar2(100)   null,
     [exec]   7  	     last_name	     varchar2(100)   null,
     [exec]   8  	     suffix  varchar2(40)    null,
     [exec]   9  	     job_title	     varchar2(100)   null,
     [exec]  10  	     company_name    varchar2(40)    null,
     [exec]  11  	     address1	     varchar2(50)    null,
     [exec]  12  	     address2	     varchar2(50)    null,
     [exec]  13  	     address3	     varchar2(50)    null,
     [exec]  14  	     city    varchar2(30)    null,
     [exec]  15  	     state   varchar2(20)    null,
     [exec]  16  	     postal_code     varchar2(10)    null,
     [exec]  17  	     county  varchar2(40)    null,
     [exec]  18  	     country varchar2(40)    null,
     [exec]  19  	     phone_number    varchar2(15)    null,
     [exec]  20  	     fax_number      varchar2(15)    null
     [exec]  21  ,constraint dps_contact_info_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_user_address (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     home_addr_id    varchar2(40)    null,
     [exec]   4  	     billing_addr_id varchar2(40)    null,
     [exec]   5  	     shipping_addr_id	     varchar2(40)    null
     [exec]   6  ,constraint dps_user_address_p primary key (id)
     [exec]   7  ,constraint dps_usrddrssid_f foreign key (id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_usr_adr_shp_id on dps_user_address (shipping_addr_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dps_usr_blng_ad_id on dps_user_address (billing_addr_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dps_usr_home_ad_id on dps_user_address (home_addr_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_other_addr (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     address_id      varchar2(40)    not null
     [exec]   5  ,constraint dps_other_addr_p primary key (user_id,tag)
     [exec]   6  ,constraint dps_othrddrusr_d_f foreign key (user_id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_mailing (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(255)   null,
     [exec]   4  	     subject varchar2(80)    null,
     [exec]   5  	     uniq_server_id  varchar2(255)   null,
     [exec]   6  	     from_address    varchar2(255)   null,
     [exec]   7  	     replyto varchar2(255)   null,
     [exec]   8  	     template_URL    varchar2(255)   null,
     [exec]   9  	     alt_template_URL	     varchar2(255)   null,
     [exec]  10  	     batch_exec_id   varchar2(40)    null,
     [exec]  11  	     cc      varchar2(4000)  null,
     [exec]  12  	     bcc     varchar2(4000)  null,
     [exec]  13  	     send_as_html    integer null,
     [exec]  14  	     send_as_text    integer null,
     [exec]  15  	     params  blob    null,
     [exec]  16  	     start_time      date    null,
     [exec]  17  	     end_time	     date    null,
     [exec]  18  	     status  integer null,
     [exec]  19  	     num_profiles    integer null,
     [exec]  20  	     num_sent	     integer null,
     [exec]  21  	     num_bounces     integer null,
     [exec]  22  	     num_soft_bounces	     integer null,
     [exec]  23  	     num_errors      integer null,
     [exec]  24  	     num_skipped     number(10)      null,
     [exec]  25  	     fill_from_templ number(1,0)     null,
     [exec]  26  	     is_batched      number(1)	     null,
     [exec]  27  	     ignore_fatigue  number(1)	     null,
     [exec]  28  	     batch_size      number(10)      null
     [exec]  29  ,constraint dps_mailing_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_mail_trackdata (
     [exec]   2  	     mailing_id      varchar2(40)    not null,
     [exec]   3  	     map_key varchar2(254)   not null,
     [exec]   4  	     map_value	     varchar2(254)   null
     [exec]   5  ,constraint dps_mail_trackd_p primary key (mailing_id,map_key)
     [exec]   6  ,constraint dps_mail_trackd_f foreign key (mailing_id) references dps_mailing (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_mail_batch (
     [exec]   2  	     mailing_id      varchar2(40)    not null,
     [exec]   3  	     start_idx	     number(10)      not null,
     [exec]   4  	     uniq_server_id  varchar2(254)   null,
     [exec]   5  	     start_time      date    null,
     [exec]   6  	     end_time	     date    null,
     [exec]   7  	     status  number(10)      null,
     [exec]   8  	     num_profiles    number(10)      null,
     [exec]   9  	     num_sent	     number(10)      null,
     [exec]  10  	     num_bounces     number(10)      null,
     [exec]  11  	     num_errors      number(10)      null,
     [exec]  12  	     num_skipped     number(10)      null,
     [exec]  13  	     is_summarized   number(1)	     null
     [exec]  14  ,constraint dps_mail_batch_p primary key (mailing_id,start_idx)
     [exec]  15  ,constraint dps_mailbatch_d_f foreign key (mailing_id) references dps_mailing (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_mail_server (
     [exec]   2  	     uniq_server_id  varchar2(254)   not null,
     [exec]   3  	     last_updated    date    null
     [exec]   4  ,constraint dps_mail_server_p primary key (uniq_server_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_user_mailing (
     [exec]   2  	     mailing_id      varchar2(40)    not null,
     [exec]   3  	     user_id varchar2(40)    not null,
     [exec]   4  	     idx     integer not null
     [exec]   5  ,constraint dps_user_mailing_p primary key (mailing_id,user_id)
     [exec]   6  ,constraint dps_usrmmalng_d_f foreign key (mailing_id) references dps_mailing (id)
     [exec]   7  ,constraint dps_usrmlngusr_d_f foreign key (user_id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_u_mail_uid on dps_user_mailing (user_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_email_address (
     [exec]   2  	     mailing_id      varchar2(40)    not null,
     [exec]   3  	     email_address   varchar2(255)   not null,
     [exec]   4  	     idx     integer not null
     [exec]   5  ,constraint dps_email_addres_p primary key (mailing_id,idx)
     [exec]   6  ,constraint dps_emldmalng_d_f foreign key (mailing_id) references dps_mailing (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Organizations/roles
     [exec] SQL> 
     [exec] SQL> create table dps_role (
     [exec]   2  	     role_id varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     name    varchar2(254)   not null,
     [exec]   6  	     description     varchar2(254)   null
     [exec]   7  ,constraint dps_role_p primary key (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Extending the user profile to include references to the roles that are assigned to this user
     [exec] SQL> 
     [exec] SQL> create table dps_user_roles (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     atg_role	     varchar2(40)    not null
     [exec]   4  ,constraint dps_user_roles_p primary key (user_id,atg_role)
     [exec]   5  ,constraint dps_usrrlsatg_rl_f foreign key (atg_role) references dps_role (role_id)
     [exec]   6  ,constraint dps_usrrlsusr_d_f foreign key (user_id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_usr_roles_id on dps_user_roles (atg_role);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_org_role (
     [exec]   2  	     org_id  varchar2(40)    not null,
     [exec]   3  	     atg_role	     varchar2(40)    not null
     [exec]   4  ,constraint dps_org_role_p primary key (org_id,atg_role)
     [exec]   5  ,constraint dps_orgrlorg_d_f foreign key (org_id) references dps_organization (org_id)
     [exec]   6  ,constraint dps_orgrlatg_rl_f foreign key (atg_role) references dps_role (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_org_rolerole on dps_org_role (atg_role);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_role_rel_org (
     [exec]   2  	     organization    varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     role_id varchar2(40)    not null
     [exec]   5  ,constraint dps_role_rel_org_p primary key (organization,sequence_num)
     [exec]   6  ,constraint dps_rolrorgnztn_f foreign key (organization) references dps_organization (org_id)
     [exec]   7  ,constraint dps_rolrlrgrol_d_f foreign key (role_id) references dps_role (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_role_rel_org on dps_role_rel_org (role_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_relativerole (
     [exec]   2  	     role_id varchar2(40)    not null,
     [exec]   3  	     dps_function    varchar2(40)    not null,
     [exec]   4  	     relative_to     varchar2(40)    not null
     [exec]   5  ,constraint dps_relativerole_p primary key (role_id)
     [exec]   6  ,constraint dps_reltreltv_t_f foreign key (relative_to) references dps_organization (org_id)
     [exec]   7  ,constraint dps_reltvrlrol_d_f foreign key (role_id) references dps_role (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_relativerole on dps_relativerole (relative_to);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_user_org (
     [exec]   2  	     organization    varchar2(40)    not null,
     [exec]   3  	     user_id varchar2(40)    not null
     [exec]   4  ,constraint dps_user_org_p primary key (organization,user_id)
     [exec]   5  ,constraint dps_usrrgorgnztn_f foreign key (organization) references dps_organization (org_id)
     [exec]   6  ,constraint dps_usrrgusr_d_f foreign key (user_id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_usr_orgusr_id on dps_user_org (user_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_user_org_anc (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     anc_org varchar2(40)    not null
     [exec]   5  ,constraint dps_user_org_anc_p primary key (user_id,sequence_num)
     [exec]   6  ,constraint dps_usrranc_rg_f foreign key (anc_org) references dps_organization (org_id)
     [exec]   7  ,constraint dps_usrrgncusr_d_f foreign key (user_id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_usr_org_ancanc on dps_user_org_anc (anc_org);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_org_chldorg (
     [exec]   2  	     org_id  varchar2(40)    not null,
     [exec]   3  	     child_org_id    varchar2(40)    not null
     [exec]   4  ,constraint dps_org_chldorg_p primary key (org_id,child_org_id)
     [exec]   5  ,constraint dps_orgcchild_rg_f foreign key (child_org_id) references dps_organization (org_id)
     [exec]   6  ,constraint dps_orgcorg_d_f foreign key (org_id) references dps_organization (org_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_org_chldorg_id on dps_org_chldorg (child_org_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_org_ancestors (
     [exec]   2  	     org_id  varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     anc_org varchar2(40)    not null
     [exec]   5  ,constraint dps_org_ancestor_p primary key (org_id,sequence_num)
     [exec]   6  ,constraint dps_orgnanc_rg_f foreign key (anc_org) references dps_organization (org_id)
     [exec]   7  ,constraint dps_orgnorg_d_f foreign key (org_id) references dps_organization (org_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_org_ancanc_org on dps_org_ancestors (anc_org);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Adding the folder information
     [exec] SQL> 
     [exec] SQL> create table dps_folder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     name    varchar2(254)   not null,
     [exec]   5  	     parent  varchar2(40)    null,
     [exec]   6  	     description     varchar2(254)   null
     [exec]   7  ,constraint dps_folder_p primary key (folder_id)
     [exec]   8  ,constraint dps_foldrparnt_f foreign key (parent) references dps_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_folderparent on dps_folder (parent);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_child_folder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     child_folder_id varchar2(40)    not null
     [exec]   4  ,constraint dps_child_folder_p primary key (folder_id,child_folder_id)
     [exec]   5  ,constraint dps_chilchild_fl_f foreign key (child_folder_id) references dps_folder (folder_id)
     [exec]   6  ,constraint dps_chilfoldr_d_f foreign key (folder_id) references dps_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_chld_fldr_fld on dps_child_folder (child_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_rolefold_chld (
     [exec]   2  	     rolefold_id     varchar2(40)    not null,
     [exec]   3  	     role_id varchar2(40)    not null
     [exec]   4  ,constraint dps_rolefold_chl_p primary key (rolefold_id,role_id)
     [exec]   5  ,constraint dps_rolfrolfld_d_f foreign key (rolefold_id) references dps_folder (folder_id)
     [exec]   6  ,constraint dps_rolfrol_d_f foreign key (role_id) references dps_role (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_rolfldchldrole on dps_rolefold_chld (role_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Adding the previous password information
     [exec] SQL> 
     [exec] SQL> create table dps_user_prevpwd (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq_num number(10)      not null,
     [exec]   4  	     prevpwd varchar2(35)    null
     [exec]   5  ,constraint dps_prevpwd_p primary key (id,seq_num)
     [exec]   6  ,constraint dps_prvpwd_d_f foreign key (id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- logging_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- This file contains create table statements needed to configure your database for use with the DPS logging/reporting subsystem.This script will create tables and indexes associated with the newlogging and reporting subsystem. To initialize these tables run thelogging_init.sql script.
     [exec] SQL> -- Tables for storing logging data for reports
     [exec] SQL> 
     [exec] SQL> create table dps_event_type (
     [exec]   2  	     id      integer not null,
     [exec]   3  	     name    varchar2(32)    not null
     [exec]   4  ,constraint dps_event_type_p primary key (id)
     [exec]   5  ,constraint dps_event_type_u unique (name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_user_event (
     [exec]   2  	     id      number(19,0)    not null,
     [exec]   3  	     timestamp	     date    not null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     eventtype	     integer not null,
     [exec]   7  	     profileid	     varchar2(25)    null,
     [exec]   8  	     member  number(1,0)     default 0 not null
     [exec]   9  ,constraint dps_user_event_p primary key (id)
     [exec]  10  ,constraint dps_usrvevnttyp_f foreign key (eventtype) references dps_event_type (id)
     [exec]  11  ,constraint dps_user_event_c check (member in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_user_event_ix on dps_user_event (eventtype);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dps_ue_ts on dps_user_event (timestamp);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_user_event_sum (
     [exec]   2  	     eventtype	     integer not null,
     [exec]   3  	     summarycount    integer not null,
     [exec]   4  	     fromtime	     date    not null,
     [exec]   5  	     totime  date    not null
     [exec]   6  ,constraint dps_usrsuevnttyp_f foreign key (eventtype) references dps_event_type (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_user_ev_sum_ix on dps_user_event_sum (eventtype);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dps_ues_ft on dps_user_event_sum (fromtime,totime,eventtype);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_request (
     [exec]   2  	     id      number(19,0)    not null,
     [exec]   3  	     timestamp	     date    not null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     name    varchar2(255)   not null,
     [exec]   7  	     member  number(1,0)     default 0 not null
     [exec]   8  ,constraint dps_request_p primary key (id)
     [exec]   9  ,constraint dps_request_c check (member in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_r_ts on dps_request (timestamp);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_reqname_sum (
     [exec]   2  	     name    varchar2(255)   not null,
     [exec]   3  	     member  number(1,0)     default 0 not null,
     [exec]   4  	     summarycount    integer not null,
     [exec]   5  	     fromtime	     date    not null,
     [exec]   6  	     totime  date    not null
     [exec]   7  ,constraint dps_reqname_sum_c check (member in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_rns_ft on dps_reqname_sum (fromtime,totime);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_session_sum (
     [exec]   2  	     sessionid	     varchar2(100)   null,
     [exec]   3  	     parentsessionid varchar2(100)   null,
     [exec]   4  	     member  number(1,0)     default 0 not null,
     [exec]   5  	     summarycount    integer not null,
     [exec]   6  	     fromtime	     date    not null,
     [exec]   7  	     totime  date    not null
     [exec]   8  ,constraint dps_session_sum_c check (member in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_rss_ft on dps_session_sum (fromtime,totime,sessionid);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_con_req (
     [exec]   2  	     id      number(19,0)    not null,
     [exec]   3  	     timestamp	     date    not null,
     [exec]   4  	     requestid	     number(19,0)    null,
     [exec]   5  	     contentid	     varchar2(255)   not null
     [exec]   6  ,constraint dps_con_req_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_cr_ts on dps_con_req (timestamp);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_con_req_sum (
     [exec]   2  	     contentid	     varchar2(255)   not null,
     [exec]   3  	     member  number(1,0)     default 0 not null,
     [exec]   4  	     summarycount    integer not null,
     [exec]   5  	     fromtime	     date    not null,
     [exec]   6  	     totime  date    not null
     [exec]   7  ,constraint dps_con_req_sum_c check (member in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_crs_ft on dps_con_req_sum (fromtime,totime);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_pgrp_req_sum (
     [exec]   2  	     groupname	     varchar2(64)    not null,
     [exec]   3  	     contentname     varchar2(255)   not null,
     [exec]   4  	     summarycount    integer not null,
     [exec]   5  	     fromtime	     date    not null,
     [exec]   6  	     totime  date    not null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_prs_ft on dps_pgrp_req_sum (fromtime,totime);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_pgrp_con_sum (
     [exec]   2  	     groupname	     varchar2(64)    not null,
     [exec]   3  	     contentname     varchar2(64)    not null,
     [exec]   4  	     summarycount    integer not null,
     [exec]   5  	     fromtime	     date    not null,
     [exec]   6  	     totime  date    not null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_pcs_ft on dps_pgrp_con_sum (fromtime,totime);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_log_id (
     [exec]   2  	     tablename	     varchar2(30)    not null,
     [exec]   3  	     nextid  number(19,0)    not null
     [exec]   4  ,constraint dps_log_id_p primary key (tablename));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- logging_init.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- This file contains SQL statements which will initialize theDPS logging/reporting tables.
     [exec] SQL> -- Set names of the default user event types, and initialize the log entry id counters
     [exec] SQL> 
     [exec] SQL> 	     INSERT INTO dps_event_type (id, name) VALUES (0, 'newsession');
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 	     INSERT INTO dps_event_type (id, name) VALUES (1, 'sessionexpiration');
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 	     INSERT INTO dps_event_type (id, name) VALUES (2, 'login');
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 	     INSERT INTO dps_event_type (id, name) VALUES (3, 'registration');
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 	     INSERT INTO dps_event_type (id, name) VALUES (4, 'logout');
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 	     INSERT INTO dps_log_id (tablename, nextid)
     [exec]   2  	     VALUES ('dps_user_event', 0);
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 	     INSERT INTO dps_log_id (tablename, nextid)
     [exec]   2  	     VALUES ('dps_request', 0);
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 	     INSERT INTO dps_log_id (tablename, nextid)
     [exec]   2  	     VALUES ('dps_con_req', 0);
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 	     COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- versioned_personalization_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- This file contains create table statements needed to configure your database for personzalization assets.This script will create tables and indexes associated with the user segment list manager.
     [exec] SQL> 
     [exec] SQL> create table dps_seg_list (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     segment_list_id varchar2(40)    not null,
     [exec]  11  	     display_name    varchar2(256)   null,
     [exec]  12  	     description     varchar2(1024)  null,
     [exec]  13  	     folder_id	     varchar2(40)    null
     [exec]  14  ,constraint dps_seg_list_p primary key (segment_list_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_seg_list_wsx on dps_seg_list (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dps_seg_list_cix on dps_seg_list (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_seg_list_name (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     segment_list_id varchar2(40)    not null,
     [exec]   4  	     seq     number(10)      not null,
     [exec]   5  	     group_name      varchar2(256)   not null
     [exec]   6  ,constraint dps_s_l_n_p primary key (segment_list_id,seq,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_seg_list_folder (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     folder_id	     varchar2(40)    not null,
     [exec]  11  	     display_name    varchar2(256)   null,
     [exec]  12  	     description     varchar2(1024)  null,
     [exec]  13  	     parent_folder_id	     varchar2(40)    null
     [exec]  14  ,constraint dps_s_l_f_p primary key (folder_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_seg_list_f_wsx on dps_seg_list_folder (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dps_seg_list_f_cix on dps_seg_list_folder (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- internal_user_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new DPS schema.
     [exec] SQL> -- Add the organization definition.  It's out of place, but since dpi_user references it, it's got to be defined up here
     [exec] SQL> 
     [exec] SQL> create table dpi_organization (
     [exec]   2  	     org_id  varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     description     varchar2(254)   null,
     [exec]   5  	     parent_org      varchar2(40)    null
     [exec]   6  ,constraint dpi_organization_p primary key (org_id)
     [exec]   7  ,constraint dpi_orgnparnt_rg_f foreign key (parent_org) references dpi_organization (org_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_orgparent_org on dpi_organization (parent_org);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Default Profile User Template
     [exec] SQL> -- Basic user info.  note: the password field size must be at a minimum 35 characters	 if DPS stores a hash of the password and not the actual value.
     [exec] SQL> 
     [exec] SQL> create table dpi_user (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     login   varchar2(40)    not null,
     [exec]   4  	     auto_login      number(1,0)     null,
     [exec]   5  	     password	     varchar2(35)    null,
     [exec]   6  	     member  number(1,0)     null,
     [exec]   7  	     first_name      varchar2(40)    null,
     [exec]   8  	     middle_name     varchar2(40)    null,
     [exec]   9  	     last_name	     varchar2(40)    null,
     [exec]  10  	     user_type	     integer null,
     [exec]  11  	     locale  integer null,
     [exec]  12  	     lastactivity_date	     date    null,
     [exec]  13  	     lastpwdupdate   date    null,
     [exec]  14  	     generatedpwd    number(1)	     null,
     [exec]  15  	     registration_date	     date    null,
     [exec]  16  	     email   varchar2(255)   null,
     [exec]  17  	     email_status    integer null,
     [exec]  18  	     receive_email   integer null,
     [exec]  19  	     last_emailed    date    null,
     [exec]  20  	     gender  integer null,
     [exec]  21  	     date_of_birth   date    null,
     [exec]  22  	     securityStatus  integer null,
     [exec]  23  	     description     varchar2(254)   null
     [exec]  24  ,constraint dpi_user_p primary key (id)
     [exec]  25  ,constraint dpi_user_u unique (login)
     [exec]  26  ,constraint dpi_user1_c check (auto_login in (0,1))
     [exec]  27  ,constraint dpi_user2_c check (member in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dpi_contact_info (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     user_id varchar2(40)    null,
     [exec]   4  	     prefix  varchar2(40)    null,
     [exec]   5  	     first_name      varchar2(100)   null,
     [exec]   6  	     middle_name     varchar2(100)   null,
     [exec]   7  	     last_name	     varchar2(100)   null,
     [exec]   8  	     suffix  varchar2(40)    null,
     [exec]   9  	     job_title	     varchar2(100)   null,
     [exec]  10  	     company_name    varchar2(40)    null,
     [exec]  11  	     address1	     varchar2(50)    null,
     [exec]  12  	     address2	     varchar2(50)    null,
     [exec]  13  	     address3	     varchar2(50)    null,
     [exec]  14  	     city    varchar2(30)    null,
     [exec]  15  	     state   varchar2(20)    null,
     [exec]  16  	     postal_code     varchar2(10)    null,
     [exec]  17  	     county  varchar2(40)    null,
     [exec]  18  	     country varchar2(40)    null,
     [exec]  19  	     phone_number    varchar2(15)    null,
     [exec]  20  	     fax_number      varchar2(15)    null
     [exec]  21  ,constraint dpi_contact_info_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dpi_user_address (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     home_addr_id    varchar2(40)    null,
     [exec]   4  	     billing_addr_id varchar2(40)    null,
     [exec]   5  	     shipping_addr_id	     varchar2(40)    null
     [exec]   6  ,constraint dpi_user_address_p primary key (id)
     [exec]   7  ,constraint dpi_usrddrssid_f foreign key (id) references dpi_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_usr_adr_shp_id on dpi_user_address (shipping_addr_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dpi_usr_blng_ad_id on dpi_user_address (billing_addr_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dpi_usr_home_ad_id on dpi_user_address (home_addr_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dpi_other_addr (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     address_id      varchar2(40)    not null
     [exec]   5  ,constraint dpi_other_addr_p primary key (user_id,tag)
     [exec]   6  ,constraint dpi_othrddrusr_d_f foreign key (user_id) references dpi_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dpi_mailing (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(255)   null,
     [exec]   4  	     subject varchar2(80)    null,
     [exec]   5  	     uniq_server_id  varchar2(255)   null,
     [exec]   6  	     from_address    varchar2(255)   null,
     [exec]   7  	     replyto varchar2(255)   null,
     [exec]   8  	     template_URL    varchar2(255)   null,
     [exec]   9  	     alt_template_URL	     varchar2(255)   null,
     [exec]  10  	     batch_exec_id   varchar2(40)    null,
     [exec]  11  	     cc      varchar2(4000)  null,
     [exec]  12  	     bcc     varchar2(4000)  null,
     [exec]  13  	     send_as_html    integer null,
     [exec]  14  	     send_as_text    integer null,
     [exec]  15  	     params  blob    null,
     [exec]  16  	     start_time      date    null,
     [exec]  17  	     end_time	     date    null,
     [exec]  18  	     status  integer null,
     [exec]  19  	     num_profiles    integer null,
     [exec]  20  	     num_sent	     integer null,
     [exec]  21  	     num_bounces     integer null,
     [exec]  22  	     num_soft_bounces	     integer null,
     [exec]  23  	     num_errors      integer null,
     [exec]  24  	     num_skipped     number(10)      null,
     [exec]  25  	     fill_from_templ number(1,0)     null,
     [exec]  26  	     is_batched      number(1)	     null,
     [exec]  27  	     ignore_fatigue  number(1)	     null,
     [exec]  28  	     batch_size      number(10)      null
     [exec]  29  ,constraint dpi_mailing_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dpi_mail_trackdata (
     [exec]   2  	     mailing_id      varchar2(40)    not null,
     [exec]   3  	     map_key varchar2(254)   not null,
     [exec]   4  	     map_value	     varchar2(254)   null
     [exec]   5  ,constraint dpi_mail_trackd_p primary key (mailing_id,map_key)
     [exec]   6  ,constraint dpi_mail_trackd_f foreign key (mailing_id) references dpi_mailing (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dpi_mail_batch (
     [exec]   2  	     mailing_id      varchar2(40)    not null,
     [exec]   3  	     start_idx	     number(10)      not null,
     [exec]   4  	     uniq_server_id  varchar2(254)   null,
     [exec]   5  	     start_time      date    null,
     [exec]   6  	     end_time	     date    null,
     [exec]   7  	     status  number(10)      null,
     [exec]   8  	     num_profiles    number(10)      null,
     [exec]   9  	     num_sent	     number(10)      null,
     [exec]  10  	     num_bounces     number(10)      null,
     [exec]  11  	     num_errors      number(10)      null,
     [exec]  12  	     num_skipped     number(10)      null,
     [exec]  13  	     is_summarized   number(1)	     null
     [exec]  14  ,constraint dpi_mail_batch_p primary key (mailing_id,start_idx)
     [exec]  15  ,constraint dpi_mailbatch_d_f foreign key (mailing_id) references dpi_mailing (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dpi_mail_server (
     [exec]   2  	     uniq_server_id  varchar2(254)   not null,
     [exec]   3  	     last_updated    date    null
     [exec]   4  ,constraint dpi_mail_server_p primary key (uniq_server_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dpi_user_mailing (
     [exec]   2  	     mailing_id      varchar2(40)    not null,
     [exec]   3  	     user_id varchar2(40)    not null,
     [exec]   4  	     idx     integer not null
     [exec]   5  ,constraint dpi_user_mailing_p primary key (mailing_id,user_id)
     [exec]   6  ,constraint dpi_usrmmalng_d_f foreign key (mailing_id) references dpi_mailing (id)
     [exec]   7  ,constraint dpi_usrmlngusr_d_f foreign key (user_id) references dpi_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_u_mail_uid on dpi_user_mailing (user_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dpi_email_address (
     [exec]   2  	     mailing_id      varchar2(40)    not null,
     [exec]   3  	     email_address   varchar2(255)   not null,
     [exec]   4  	     idx     integer not null
     [exec]   5  ,constraint dpi_email_addres_p primary key (mailing_id,idx)
     [exec]   6  ,constraint dpi_emldmalng_d_f foreign key (mailing_id) references dpi_mailing (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Organizations/roles
     [exec] SQL> 
     [exec] SQL> create table dpi_role (
     [exec]   2  	     role_id varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     name    varchar2(254)   not null,
     [exec]   6  	     description     varchar2(254)   null
     [exec]   7  ,constraint dpi_role_p primary key (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dpi_template_role (
     [exec]   2  	     role_id varchar2(40)    not null,
     [exec]   3  	     template_role_id	     varchar2(40)    not null
     [exec]   4  ,constraint dpi_tmplate_role_p primary key (role_id,template_role_id)
     [exec]   5  ,constraint dpi_tpltrlrl_rl_f foreign key (template_role_id) references dpi_role (role_id)
     [exec]   6  ,constraint dpi_tpltrltpl_d_f foreign key (role_id) references dpi_role (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_tmplt_role_id on dpi_template_role (template_role_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dpi_access_right (
     [exec]   2  	     access_right_id varchar2(40)    not null,
     [exec]   3  	     right_type      integer not null,
     [exec]   4  	     right_scope     integer not null,
     [exec]   5  	     version integer not null,
     [exec]   6  	     name    varchar2(254)   not null,
     [exec]   7  	     description     varchar2(254)   null
     [exec]   8  ,constraint dpi_access_right_p primary key (access_right_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dpi_role_right (
     [exec]   2  	     role_id varchar2(40)    not null,
     [exec]   3  	     access_right_id varchar2(40)    not null
     [exec]   4  ,constraint dpi_role_right_p primary key (role_id,access_right_id)
     [exec]   5  ,constraint dpi_rlrightrt_rl_f foreign key (access_right_id) references dpi_access_right (access_right_id)
     [exec]   6  ,constraint dpi_rlrightrl_d_f foreign key (role_id) references dpi_role (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_access_rt_id on dpi_role_right (access_right_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Extending the user profile to include references to the roles that are assigned to this user
     [exec] SQL> 
     [exec] SQL> create table dpi_user_roles (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     atg_role	     varchar2(40)    not null
     [exec]   4  ,constraint dpi_user_roles_p primary key (user_id,atg_role)
     [exec]   5  ,constraint dpi_usrrlsatg_rl_f foreign key (atg_role) references dpi_role (role_id)
     [exec]   6  ,constraint dpi_usrrlsusr_d_f foreign key (user_id) references dpi_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_usr_roles_id on dpi_user_roles (atg_role);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dpi_org_role (
     [exec]   2  	     org_id  varchar2(40)    not null,
     [exec]   3  	     atg_role	     varchar2(40)    not null
     [exec]   4  ,constraint dpi_org_role_p primary key (org_id,atg_role)
     [exec]   5  ,constraint dpi_orgrlorg_d_f foreign key (org_id) references dpi_organization (org_id)
     [exec]   6  ,constraint dpi_orgrlatg_rl_f foreign key (atg_role) references dpi_role (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_org_rolerole on dpi_org_role (atg_role);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dpi_role_rel_org (
     [exec]   2  	     organization    varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     role_id varchar2(40)    not null
     [exec]   5  ,constraint dpi_role_rel_org_p primary key (organization,sequence_num)
     [exec]   6  ,constraint dpi_rolrorgnztn_f foreign key (organization) references dpi_organization (org_id)
     [exec]   7  ,constraint dpi_rolrlrgrol_d_f foreign key (role_id) references dpi_role (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_role_rel_org on dpi_role_rel_org (role_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dpi_relativerole (
     [exec]   2  	     role_id varchar2(40)    not null,
     [exec]   3  	     dps_function    varchar2(40)    not null,
     [exec]   4  	     relative_to     varchar2(40)    not null
     [exec]   5  ,constraint dpi_relativerole_p primary key (role_id)
     [exec]   6  ,constraint dpi_reltreltv_t_f foreign key (relative_to) references dpi_organization (org_id)
     [exec]   7  ,constraint dpi_reltvrlrol_d_f foreign key (role_id) references dpi_role (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_relativerole on dpi_relativerole (relative_to);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dpi_user_org (
     [exec]   2  	     organization    varchar2(40)    not null,
     [exec]   3  	     user_id varchar2(40)    not null
     [exec]   4  ,constraint dpi_user_org_p primary key (organization,user_id)
     [exec]   5  ,constraint dpi_usrrgorgnztn_f foreign key (organization) references dpi_organization (org_id)
     [exec]   6  ,constraint dpi_usrrgusr_d_f foreign key (user_id) references dpi_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_usr_orgusr_id on dpi_user_org (user_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dpi_user_sec_orgs (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     secondary_org_id	     varchar2(40)    not null
     [exec]   4  ,constraint dpi_usr_sec_orgs_p primary key (user_id,secondary_org_id)
     [exec]   5  ,constraint dpi_usrsecorg_rl_f foreign key (secondary_org_id) references dpi_organization (org_id)
     [exec]   6  ,constraint dpi_usrsorgusr_d_f foreign key (user_id) references dpi_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_usr_sec_org_id on dpi_user_sec_orgs (secondary_org_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dpi_user_org_anc (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     anc_org varchar2(40)    not null
     [exec]   5  ,constraint dpi_user_org_anc_p primary key (user_id,sequence_num)
     [exec]   6  ,constraint dpi_usrranc_rg_f foreign key (anc_org) references dpi_organization (org_id)
     [exec]   7  ,constraint dpi_usrrgncusr_d_f foreign key (user_id) references dpi_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_usr_org_ancanc on dpi_user_org_anc (anc_org);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dpi_org_chldorg (
     [exec]   2  	     org_id  varchar2(40)    not null,
     [exec]   3  	     child_org_id    varchar2(40)    not null
     [exec]   4  ,constraint dpi_org_chldorg_p primary key (org_id,child_org_id)
     [exec]   5  ,constraint dpi_orgcchild_rg_f foreign key (child_org_id) references dpi_organization (org_id)
     [exec]   6  ,constraint dpi_orgcorg_d_f foreign key (org_id) references dpi_organization (org_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_org_chldorg_id on dpi_org_chldorg (child_org_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dpi_org_ancestors (
     [exec]   2  	     org_id  varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     anc_org varchar2(40)    not null
     [exec]   5  ,constraint dpi_org_ancestor_p primary key (org_id,sequence_num)
     [exec]   6  ,constraint dpi_orgnanc_rg_f foreign key (anc_org) references dpi_organization (org_id)
     [exec]   7  ,constraint dpi_orgnorg_d_f foreign key (org_id) references dpi_organization (org_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_org_ancanc_org on dpi_org_ancestors (anc_org);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Adding the folder information
     [exec] SQL> 
     [exec] SQL> create table dpi_folder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     name    varchar2(254)   not null,
     [exec]   5  	     parent  varchar2(40)    null,
     [exec]   6  	     description     varchar2(254)   null
     [exec]   7  ,constraint dpi_folder_p primary key (folder_id)
     [exec]   8  ,constraint dpi_foldrparnt_f foreign key (parent) references dpi_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_folderparent on dpi_folder (parent);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dpi_child_folder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     child_folder_id varchar2(40)    not null
     [exec]   4  ,constraint dpi_child_folder_p primary key (folder_id,child_folder_id)
     [exec]   5  ,constraint dpi_chilchild_fl_f foreign key (child_folder_id) references dpi_folder (folder_id)
     [exec]   6  ,constraint dpi_chilfoldr_d_f foreign key (folder_id) references dpi_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_chld_fldr_fld on dpi_child_folder (child_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dpi_rolefold_chld (
     [exec]   2  	     rolefold_id     varchar2(40)    not null,
     [exec]   3  	     role_id varchar2(40)    not null
     [exec]   4  ,constraint dpi_rolefold_chl_p primary key (rolefold_id,role_id)
     [exec]   5  ,constraint dpi_rolfrolfld_d_f foreign key (rolefold_id) references dpi_folder (folder_id)
     [exec]   6  ,constraint dpi_rolfrol_d_f foreign key (role_id) references dpi_role (role_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_rolfldchldrole on dpi_rolefold_chld (role_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Adding the previous password information
     [exec] SQL> 
     [exec] SQL> create table dpi_user_prevpwd (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     seq_num number(10)      not null,
     [exec]   4  	     prevpwd varchar2(35)    null
     [exec]   5  ,constraint dpi_prevpwd_p primary key (id,seq_num)
     [exec]   6  ,constraint dpi_prvpwd_d_f foreign key (id) references dpi_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- das_mappers.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_das_event (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_das_form (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     formname	     varchar2(254)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- dps_mappers.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_event (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     profileid	     varchar2(25)    null,
     [exec]   7  	     scenarioPathInfo	     varchar2(254)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_page_visit (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     path    varchar2(255)   null,
     [exec]   7  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_view_item (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     repositoryname  varchar2(255)   null,
     [exec]   7  	     folder  varchar2(255)   null,
     [exec]   8  	     itemtype	     varchar2(255)   null,
     [exec]   9  	     repositoryid    varchar2(255)   null,
     [exec]  10  	     itemdescriptor  varchar2(255)   null,
     [exec]  11  	     page    varchar2(255)   null,
     [exec]  12  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_click (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     destinationpath varchar2(255)   null,
     [exec]   7  	     sourcenames     varchar2(255)   null,
     [exec]   8  	     sourcepath      varchar2(255)   null,
     [exec]   9  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_referrer (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     referrerpath    varchar2(255)   null,
     [exec]   7  	     referrersite    varchar2(255)   null,
     [exec]   8  	     referrerpage    varchar2(255)   null,
     [exec]   9  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_inbound (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     messagesubject  varchar2(255)   null,
     [exec]   5  	     originalsubject varchar2(255)   null,
     [exec]   6  	     messagefrom     varchar2(64)    null,
     [exec]   7  	     messageto	     varchar2(255)   null,
     [exec]   8  	     messagecc	     varchar2(255)   null,
     [exec]   9  	     messagereplyto  varchar2(64)    null,
     [exec]  10  	     receiveddate    number(19,0)    null,
     [exec]  11  	     bounced varchar2(6)     null,
     [exec]  12  	     bounceemailaddr varchar2(255)   null,
     [exec]  13  	     bouncereplycode varchar2(10)    null,
     [exec]  14  	     bounceerrormess varchar2(255)   null,
     [exec]  15  	     bouncestatuscode	     varchar2(10)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_admin_reg (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     adminprofileid  varchar2(25)    null,
     [exec]   7  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_property (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     propertypath    varchar2(254)   null,
     [exec]   7  	     oldvalue	     varchar2(254)   null,
     [exec]   8  	     newvalue	     varchar2(254)   null,
     [exec]   9  	     changesign      varchar2(16)    null,
     [exec]  10  	     changeamount    number(19,7)    null,
     [exec]  11  	     changepercentage	     number(19,7)    null,
     [exec]  12  	     elementsadded   varchar2(254)   null,
     [exec]  13  	     elementsremoved varchar2(254)   null,
     [exec]  14  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_admin_prop (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     propertypath    varchar2(254)   null,
     [exec]   7  	     oldvalue	     varchar2(254)   null,
     [exec]   8  	     newvalue	     varchar2(254)   null,
     [exec]   9  	     changesign      varchar2(16)    null,
     [exec]  10  	     changeamount    number(19,7)    null,
     [exec]  11  	     changepercentage	     number(19,7)    null,
     [exec]  12  	     elementsadded   varchar2(254)   null,
     [exec]  13  	     elementsremoved varchar2(254)   null,
     [exec]  14  	     adminprofileid  varchar2(25)    null,
     [exec]  15  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_update (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     changedproperties	     varchar2(4000)  null,
     [exec]   7  	     oldvalues	     varchar2(4000)  null,
     [exec]   8  	     newvalues	     varchar2(4000)  null,
     [exec]   9  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_dps_admin_up (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     sessionid	     varchar2(100)   null,
     [exec]   5  	     parentsessionid varchar2(100)   null,
     [exec]   6  	     changedproperties	     varchar2(4000)  null,
     [exec]   7  	     oldvalues	     varchar2(4000)  null,
     [exec]   8  	     newvalues	     varchar2(4000)  null,
     [exec]   9  	     adminprofileid  varchar2(25)    null,
     [exec]  10  	     profileid	     varchar2(25)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_scenario_value (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     scenario_value  varchar2(100)   null
     [exec]   5  ,constraint dps_scenario_val_p primary key (id,tag)
     [exec]   6  ,constraint dps_scenrvlid_f foreign key (id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_scenval_id on dps_scenario_value (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- dss_mappers.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_audit_trail (
     [exec]   2  	     id      varchar2(32)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     label   varchar2(255)   null,
     [exec]   5  	     profileid	     varchar2(25)    null,
     [exec]   6  	     segmentName     varchar2(254)   null,
     [exec]   7  	     processName     varchar2(254)   null,
     [exec]   8  	     sessionid	     varchar2(100)   null,
     [exec]   9  	     parentsessionid varchar2(100)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- scenario_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_coll_scenario (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null,
     [exec]   5  	     segment_name    varchar2(255)   null,
     [exec]   6  	     creator_id      varchar2(25)    null,
     [exec]   7  	     state   varchar2(16)    null
     [exec]   8  ,constraint dss_coll_scenari_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- user_id references the user table but because it is a backwards referencewe cannot have a REFERENCES(dps_user) here.
     [exec] SQL> 
     [exec] SQL> create table dss_ind_scenario (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null,
     [exec]   5  	     segment_name    varchar2(255)   null,
     [exec]   6  	     creator_id      varchar2(25)    null,
     [exec]   7  	     state   varchar2(16)    null,
     [exec]   8  	     user_id varchar2(25)    not null
     [exec]   9  ,constraint dss_ind_scenario_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dss_indscenario1_x on dss_ind_scenario (modification_time);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_scenario_strs (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_str     varchar2(255)   null
     [exec]   5  ,constraint dss_scenario_str_p primary key (id,tag)
     [exec]   6  ,constraint dss_scenrstrsid_f foreign key (id) references dss_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dss_scn_st_idx on dss_scenario_strs (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_scenario_bools (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_bool    number(1,0)     null
     [exec]   5  ,constraint dss_scenario_boo_p primary key (id,tag)
     [exec]   6  ,constraint dss_scenrblsid_f foreign key (id) references dss_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dss_scn_bo_idx on dss_scenario_bools (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_scenario_longs (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_long    number(19,0)    null
     [exec]   5  ,constraint dss_scenario_lon_p primary key (id,tag)
     [exec]   6  ,constraint dss_scenrlngsid_f foreign key (id) references dss_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dss_scn_lg_idx on dss_scenario_longs (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_scenario_dbls (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_dbl     number(15,4)    null
     [exec]   5  ,constraint dss_scenario_dbl_p primary key (id,tag)
     [exec]   6  ,constraint dss_scenrdblsid_f foreign key (id) references dss_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dss_scn_db_idx on dss_scenario_dbls (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_scenario_dates (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_date    date    null
     [exec]   5  ,constraint dss_scenario_dat_p primary key (id,tag)
     [exec]   6  ,constraint dss_scenrdtsid_f foreign key (id) references dss_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dss_scn_dt_idx on dss_scenario_dates (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_user_scenario (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     ind_scenario_id varchar2(25)    not null
     [exec]   4  ,constraint dps_user_scenari_p primary key (ind_scenario_id)
     [exec]   5  ,constraint dps_usrscnrid_f foreign key (id) references dps_user (id)
     [exec]   6  ,constraint dps_usrsind_scnr_f foreign key (ind_scenario_id) references dss_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_uscn_u_idx on dps_user_scenario (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_scenario_info (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     scenario_status integer null,
     [exec]   5  	     modification_time	     number(19,0)    null,
     [exec]   6  	     creation_time   number(19,0)    null,
     [exec]   7  	     author  varchar2(25)    null,
     [exec]   8  	     last_modified_by	     varchar2(25)    null,
     [exec]   9  	     sdl     blob    null,
     [exec]  10  	     psm_version     number(10)      null
     [exec]  11  ,constraint dss_scenario_inf_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_scen_mig_info (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_info_id	     varchar2(25)    not null,
     [exec]   4  	     scenario_name   varchar2(255)   null,
     [exec]   5  	     modification_time	     number(19,0)    null,
     [exec]   6  	     psm_version     number(10)      null,
     [exec]   7  	     sdl     blob    null,
     [exec]   8  	     migration_status	     number(10)      null
     [exec]   9  ,constraint dss_scenmiginfo_pk primary key (id)
     [exec]  10  ,constraint dss_scenmiginfo_fk foreign key (scenario_info_id) references dss_scenario_info (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dss_scenmiginfo_id on dss_scen_mig_info (scenario_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_mig_info_seg (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     idx     integer not null,
     [exec]   4  	     segment_name    varchar2(255)   null
     [exec]   5  ,constraint dss_mig_infoseg_pk primary key (id,idx)
     [exec]   6  ,constraint dss_mig_infoseg_fk foreign key (id) references dss_scen_mig_info (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_template_info (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     template_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null,
     [exec]   5  	     creation_time   number(19,0)    null,
     [exec]   6  	     author  varchar2(25)    null,
     [exec]   7  	     last_modified_by	     varchar2(25)    null,
     [exec]   8  	     sdl     blob    null
     [exec]   9  ,constraint dss_template_inf_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_coll_trans (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null,
     [exec]   5  	     server_id	     varchar2(40)    null,
     [exec]   6  	     message_bean    blob    null,
     [exec]   7  	     event_type      varchar2(255)   null,
     [exec]   8  	     segment_name    varchar2(255)   null,
     [exec]   9  	     state   varchar2(16)    null,
     [exec]  10  	     coll_scenario_id	     varchar2(25)    null,
     [exec]  11  	     step    integer null,
     [exec]  12  	     current_count   integer null,
     [exec]  13  	     last_query_id   varchar2(25)    null
     [exec]  14  ,constraint dss_coll_trans_p primary key (id)
     [exec]  15  ,constraint dss_collcoll_scn_f foreign key (coll_scenario_id) references dss_coll_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dss_ctrcid_idx on dss_coll_trans (coll_scenario_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_ind_trans (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null,
     [exec]   5  	     server_id	     varchar2(40)    null,
     [exec]   6  	     message_bean    blob    null,
     [exec]   7  	     event_type      varchar2(255)   null,
     [exec]   8  	     segment_name    varchar2(255)   null,
     [exec]   9  	     state   varchar2(16)    null,
     [exec]  10  	     last_query_id   varchar2(25)    null
     [exec]  11  ,constraint dss_ind_trans_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_deletion (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null
     [exec]   5  ,constraint dss_deletion_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_server_id (
     [exec]   2  	     server_id	     varchar2(40)    not null,
     [exec]   3  	     server_type     integer not null
     [exec]   4  ,constraint dss_server_id_p primary key (server_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_del_seg_name (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     idx     integer not null,
     [exec]   4  	     segment_name    varchar2(255)   null
     [exec]   5  ,constraint dss_del_seg_name_p primary key (id,idx));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- migration_info_id references the migration info table, but we don't have aREFERENCES dss_scen_mig_info(id) here, because we want to be ableto delete the migration info without deleting this row
     [exec] SQL> 
     [exec] SQL> create table dss_migration (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     old_mod_time    number(19,0)    null,
     [exec]   5  	     new_mod_time    number(19,0)    null,
     [exec]   6  	     migration_info_id	     varchar2(25)    null
     [exec]   7  ,constraint dss_migration_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_mig_seg_name (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     idx     number(10)      not null,
     [exec]   4  	     segment_name    varchar2(255)   null
     [exec]   5  ,constraint dss_mig_segname_pk primary key (id,idx)
     [exec]   6  ,constraint dss_mig_segname_fk foreign key (id) references dss_migration (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_xref (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     reference_type  varchar2(30)    null,
     [exec]   5  	     reference_target	     varchar2(255)   null
     [exec]   6  ,constraint dss_xref_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- user_id references the user table but because it is a backwards referencewe cannot have a REFERENCES(dps_user) here.
     [exec] SQL> 
     [exec] SQL> create table dss_profile_slot (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     slot_name	     varchar2(255)   null,
     [exec]   4  	     item_offset     number(19,0)    null,
     [exec]   5  	     user_id varchar2(25)    not null
     [exec]   6  ,constraint dss_profile_slot_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_user_slot (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     profile_slot_id varchar2(25)    not null
     [exec]   4  ,constraint dps_user_slot_p primary key (id,profile_slot_id)
     [exec]   5  ,constraint dps_usrsltid_f foreign key (id) references dps_user (id)
     [exec]   6  ,constraint dps_usrsprofl_sl_f foreign key (profile_slot_id) references dss_profile_slot (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_usr_sltprfl_id on dps_user_slot (profile_slot_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dss_slot_items (
     [exec]   2  	     slot_id varchar2(25)    not null,
     [exec]   3  	     item_id varchar2(255)   null,
     [exec]   4  	     idx     integer not null
     [exec]   5  ,constraint dss_slot_items_p primary key (slot_id,idx)
     [exec]   6  ,constraint dss_slotslot_d_f foreign key (slot_id) references dss_profile_slot (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_slot_priority (
     [exec]   2  	     slot_id varchar2(25)    not null,
     [exec]   3  	     idx     integer not null,
     [exec]   4  	     priority	     number(19,0)    not null
     [exec]   5  ,constraint dss_slot_priorit_p primary key (slot_id,idx)
     [exec]   6  ,constraint dss_slotpslot_d_f foreign key (slot_id) references dss_profile_slot (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- markers_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_markers (
     [exec]   2  	     marker_id	     varchar2(40)    not null,
     [exec]   3  	     marker_key      varchar2(100)   not null,
     [exec]   4  	     marker_value    varchar2(100)   null,
     [exec]   5  	     marker_data     varchar2(100)   null,
     [exec]   6  	     creation_date   timestamp	     null,
     [exec]   7  	     version number(10)      not null,
     [exec]   8  	     marker_type     number(10)      null
     [exec]   9  ,constraint dps_markers_p primary key (marker_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_usr_markers (
     [exec]   2  	     profile_id      varchar2(40)    not null,
     [exec]   3  	     marker_id	     varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null
     [exec]   5  ,constraint dps_usr_markers_p primary key (profile_id,sequence_num)
     [exec]   6  ,constraint dpsusrmarkers_u_f foreign key (profile_id) references dps_user (id)
     [exec]   7  ,constraint dpsusrmarkers_m_f foreign key (marker_id) references dps_markers (marker_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpsusrmarkers1_ix on dps_usr_markers (marker_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- business_process_rpt_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table drpt_stage_reached (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     owner_id	     varchar2(40)    not null,
     [exec]   4  	     process_start_time      date    not null,
     [exec]   5  	     event_time      date    not null,
     [exec]   6  	     bp_name varchar2(255)   not null,
     [exec]   7  	     bp_stage	     varchar2(255)   null,
     [exec]   8  	     is_transient    number(1,0)     not null,
     [exec]   9  	     bp_stage_sequence	     number(10)      not null
     [exec]  10  ,constraint drpt_bpstage_c check (is_transient in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- profile_bp_markers_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dss_user_bpmarkers (
     [exec]   2  	     marker_id	     varchar2(40)    not null,
     [exec]   3  	     profile_id      varchar2(40)    not null,
     [exec]   4  	     marker_key      varchar2(100)   not null,
     [exec]   5  	     marker_value    varchar2(100)   null,
     [exec]   6  	     marker_data     varchar2(100)   null,
     [exec]   7  	     creation_date   timestamp	     null,
     [exec]   8  	     version number(10)      not null,
     [exec]   9  	     marker_type     number(10)      null
     [exec]  10  ,constraint dssprofilebp_p primary key (marker_id,profile_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- internal_scenario_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dsi_coll_scenario (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null,
     [exec]   5  	     segment_name    varchar2(255)   null,
     [exec]   6  	     creator_id      varchar2(25)    null,
     [exec]   7  	     state   varchar2(16)    null
     [exec]   8  ,constraint dsi_coll_scenari_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- user_id references the user table but because it is a backwards referencewe cannot have a REFERENCES(dps_user) here.
     [exec] SQL> 
     [exec] SQL> create table dsi_ind_scenario (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null,
     [exec]   5  	     segment_name    varchar2(255)   null,
     [exec]   6  	     creator_id      varchar2(25)    null,
     [exec]   7  	     state   varchar2(16)    null,
     [exec]   8  	     user_id varchar2(25)    not null
     [exec]   9  ,constraint dsi_ind_scenario_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dsi_indscenario1_x on dsi_ind_scenario (modification_time);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dsi_scenario_strs (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_str     varchar2(255)   null
     [exec]   5  ,constraint dsi_scenario_str_p primary key (id,tag)
     [exec]   6  ,constraint dsi_scenrstrsid_f foreign key (id) references dsi_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dsi_scenario_bools (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_bool    number(1,0)     null
     [exec]   5  ,constraint dsi_scenario_boo_p primary key (id,tag)
     [exec]   6  ,constraint dsi_scenrblsid_f foreign key (id) references dsi_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dsi_scenario_longs (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_long    number(19,0)    null
     [exec]   5  ,constraint dsi_scenario_lon_p primary key (id,tag)
     [exec]   6  ,constraint dsi_scenrlngsid_f foreign key (id) references dsi_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dsi_scenario_dbls (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_dbl     number(15,4)    null
     [exec]   5  ,constraint dsi_scenario_dbl_p primary key (id,tag)
     [exec]   6  ,constraint dsi_scenrdblsid_f foreign key (id) references dsi_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dsi_scenario_dates (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_date    date    null
     [exec]   5  ,constraint dsi_scenario_dat_p primary key (id,tag)
     [exec]   6  ,constraint dsi_scenrdtsid_f foreign key (id) references dsi_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dpi_user_scenario (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     ind_scenario_id varchar2(25)    not null
     [exec]   4  ,constraint dpi_user_scenari_p primary key (ind_scenario_id)
     [exec]   5  ,constraint dpi_usrscnrid_f foreign key (id) references dpi_user (id)
     [exec]   6  ,constraint dpi_usrsind_scnr_f foreign key (ind_scenario_id) references dsi_ind_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_uscn_u_idx on dpi_user_scenario (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dsi_scenario_info (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     scenario_status integer null,
     [exec]   5  	     modification_time	     number(19,0)    null,
     [exec]   6  	     creation_time   number(19,0)    null,
     [exec]   7  	     author  varchar2(25)    null,
     [exec]   8  	     last_modified_by	     varchar2(25)    null,
     [exec]   9  	     sdl     blob    null,
     [exec]  10  	     psm_version     number(10)      null
     [exec]  11  ,constraint dsi_scenario_inf_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dsi_scen_mig_info (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_info_id	     varchar2(25)    not null,
     [exec]   4  	     scenario_name   varchar2(255)   null,
     [exec]   5  	     modification_time	     number(19,0)    null,
     [exec]   6  	     psm_version     number(10)      null,
     [exec]   7  	     sdl     blob    null,
     [exec]   8  	     migration_status	     number(10)      null
     [exec]   9  ,constraint dsi_scenmiginfo_pk primary key (id)
     [exec]  10  ,constraint dsi_scenmiginfo_fk foreign key (scenario_info_id) references dsi_scenario_info (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dsi_scenmiginfo_id on dsi_scen_mig_info (scenario_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dsi_mig_info_seg (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     idx     integer not null,
     [exec]   4  	     segment_name    varchar2(255)   null
     [exec]   5  ,constraint dsi_mig_infoseg_pk primary key (id,idx)
     [exec]   6  ,constraint dsi_mig_infoseg_fk foreign key (id) references dsi_scen_mig_info (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dsi_template_info (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     template_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null,
     [exec]   5  	     creation_time   number(19,0)    null,
     [exec]   6  	     author  varchar2(25)    null,
     [exec]   7  	     last_modified_by	     varchar2(25)    null,
     [exec]   8  	     sdl     blob    null
     [exec]   9  ,constraint dsi_template_inf_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dsi_coll_trans (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null,
     [exec]   5  	     server_id	     varchar2(40)    null,
     [exec]   6  	     message_bean    blob    null,
     [exec]   7  	     event_type      varchar2(255)   null,
     [exec]   8  	     segment_name    varchar2(255)   null,
     [exec]   9  	     state   varchar2(16)    null,
     [exec]  10  	     coll_scenario_id	     varchar2(25)    null,
     [exec]  11  	     step    integer null,
     [exec]  12  	     current_count   integer null,
     [exec]  13  	     last_query_id   varchar2(25)    null
     [exec]  14  ,constraint dsi_coll_trans_p primary key (id)
     [exec]  15  ,constraint dsi_collcoll_scn_f foreign key (coll_scenario_id) references dsi_coll_scenario (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dsi_ctrcid_idx on dsi_coll_trans (coll_scenario_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dsi_ind_trans (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null,
     [exec]   5  	     server_id	     varchar2(40)    null,
     [exec]   6  	     message_bean    blob    null,
     [exec]   7  	     event_type      varchar2(255)   null,
     [exec]   8  	     segment_name    varchar2(255)   null,
     [exec]   9  	     state   varchar2(16)    null,
     [exec]  10  	     last_query_id   varchar2(25)    null
     [exec]  11  ,constraint dsi_ind_trans_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dsi_deletion (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19,0)    null
     [exec]   5  ,constraint dsi_deletion_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dsi_server_id (
     [exec]   2  	     server_id	     varchar2(40)    not null,
     [exec]   3  	     server_type     integer not null
     [exec]   4  ,constraint dsi_server_id_p primary key (server_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dsi_del_seg_name (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     idx     integer not null,
     [exec]   4  	     segment_name    varchar2(255)   null
     [exec]   5  ,constraint dsi_del_seg_name_p primary key (id,idx));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- migration_info_id references the migration info table, but we don't have aREFERENCES dsi_scen_mig_info(id) here, because we want to be ableto delete the migration info without deleting this row
     [exec] SQL> 
     [exec] SQL> create table dsi_migration (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     old_mod_time    number(19,0)    null,
     [exec]   5  	     new_mod_time    number(19,0)    null,
     [exec]   6  	     migration_info_id	     varchar2(25)    null
     [exec]   7  ,constraint dsi_migration_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dsi_mig_seg_name (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     idx     number(10)      not null,
     [exec]   4  	     segment_name    varchar2(255)   null
     [exec]   5  ,constraint dsi_mig_segname_pk primary key (id,idx)
     [exec]   6  ,constraint dsi_mig_segname_fk foreign key (id) references dsi_migration (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dsi_xref (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     scenario_name   varchar2(255)   null,
     [exec]   4  	     reference_type  varchar2(30)    null,
     [exec]   5  	     reference_target	     varchar2(255)   null
     [exec]   6  ,constraint dsi_xref_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- user_id references the user table but because it is a backwards referencewe cannot have a REFERENCES(dpi_user) here.
     [exec] SQL> 
     [exec] SQL> create table dsi_profile_slot (
     [exec]   2  	     id      varchar2(25)    not null,
     [exec]   3  	     slot_name	     varchar2(255)   null,
     [exec]   4  	     item_offset     number(19,0)    null,
     [exec]   5  	     user_id varchar2(25)    not null
     [exec]   6  ,constraint dsi_profile_slot_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dpi_user_slot (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     profile_slot_id varchar2(25)    not null
     [exec]   4  ,constraint dpi_user_slot_p primary key (id,profile_slot_id)
     [exec]   5  ,constraint dpi_usrsltid_f foreign key (id) references dpi_user (id)
     [exec]   6  ,constraint dpi_usrsprofl_sl_f foreign key (profile_slot_id) references dsi_profile_slot (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_usr_sltprfl_id on dpi_user_slot (profile_slot_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dsi_slot_items (
     [exec]   2  	     slot_id varchar2(25)    not null,
     [exec]   3  	     item_id varchar2(255)   null,
     [exec]   4  	     idx     integer not null
     [exec]   5  ,constraint dsi_slot_items_p primary key (slot_id,idx)
     [exec]   6  ,constraint dsi_slotslot_d_f foreign key (slot_id) references dsi_profile_slot (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dsi_slot_priority (
     [exec]   2  	     slot_id varchar2(25)    not null,
     [exec]   3  	     idx     integer not null,
     [exec]   4  	     priority	     number(19,0)    not null
     [exec]   5  ,constraint dsi_slot_priorit_p primary key (slot_id,idx)
     [exec]   6  ,constraint dsi_slotpslot_d_f foreign key (slot_id) references dsi_profile_slot (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dpi_scenario_value (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     scenario_value  varchar2(100)   null
     [exec]   5  ,constraint dpi_scenario_val_p primary key (id,tag)
     [exec]   6  ,constraint dpi_scenrvlid_f foreign key (id) references dpi_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dpi_scenval_id on dpi_scenario_value (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //app/portal/version/9.4/paf/sql/alert_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> 
     [exec] SQL> create table alt_user (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     version number(10)      default 0 not null,
     [exec]   4  	     target_id	     varchar2(40)    not null,
     [exec]   5  	     target_type     varchar2(40)    not null,
     [exec]   6  	     source_id	     varchar2(40)    null,
     [exec]   7  	     msg_type	     varchar2(255)   null,
     [exec]   8  	     message_bean    blob    null,
     [exec]   9  	     creation_date   date    null,
     [exec]  10  	     end_date	     date    null,
     [exec]  11  	     start_date      date    null,
     [exec]  12  	     delete_flag     number(1,0)     not null
     [exec]  13  ,constraint alt_userpk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index alt_user_idx on alt_user (target_id,target_type,source_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table alt_group (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     target_id	     varchar2(40)    not null,
     [exec]   5  	     target_type     varchar2(40)    not null,
     [exec]   6  	     source_id	     varchar2(40)    null,
     [exec]   7  	     msg_type	     varchar2(255)   null,
     [exec]   8  	     message_bean    blob    null,
     [exec]   9  	     creation_date   date    null,
     [exec]  10  	     end_date	     date    null,
     [exec]  11  	     start_date      date    null,
     [exec]  12  	     delete_flag     number(1,0)     not null
     [exec]  13  ,constraint alt_grouppk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index alt_group_idx on alt_group (target_id,target_type,source_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table alt_user_alert_rel (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     alert_id	     varchar2(40)    not null
     [exec]   4  ,constraint alt_useralertrel_p primary key (id,alert_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table alt_user_pref (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     source_id	     varchar2(40)    not null,
     [exec]   4  	     source_type     varchar2(40)    not null,
     [exec]   5  	     version number(10)      not null,
     [exec]   6  	     event_type      varchar2(255)   null,
     [exec]   7  	     name    varchar2(40)    not null,
     [exec]   8  	     value   varchar2(40)    not null
     [exec]   9  ,constraint alt_user_prefpk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table alt_userpref_rel (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     alert_user_pref_id      varchar2(40)    not null
     [exec]   4  ,constraint alt_user_relpk primary key (id,alert_user_pref_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index alt_userpref_idx on alt_userpref_rel (alert_user_pref_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table alt_gear (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     source_id	     varchar2(40)    not null,
     [exec]   4  	     source_type     varchar2(40)    not null,
     [exec]   5  	     version number(10)      not null,
     [exec]   6  	     message_type    varchar2(255)   not null,
     [exec]   7  	     name    varchar2(40)    not null,
     [exec]   8  	     value   varchar2(40)    not null,
     [exec]   9  	     resource_bundle varchar2(255)   not null
     [exec]  10  ,constraint alt_gearpk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table alt_gear_rel (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(40)    not null,
     [exec]   4  	     gear_id varchar2(40)    not null
     [exec]   5  ,constraint alt_gear_relpk primary key (id,gear_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index alt_gear_idx on alt_gear_rel (gear_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table alt_gear_def (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     message_type    varchar2(255)   not null,
     [exec]   5  	     name    varchar2(40)    not null,
     [exec]   6  	     value   varchar2(40)    not null,
     [exec]   7  	     resource_bundle varchar2(255)   not null
     [exec]   8  ,constraint alt_gear_defpk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table alt_gear_def_rel (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(40)    not null,
     [exec]   4  	     gear_def_id     varchar2(40)    not null
     [exec]   5  ,constraint alt_def_relpk primary key (id,gear_def_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index alt_gear_def_idx on alt_gear_def_rel (gear_def_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table alt_channel (
     [exec]   2  	     channel_id      varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     component_name  varchar2(255)   not null,
     [exec]   5  	     display_name    varchar2(255)   not null
     [exec]   6  ,constraint alt_channel_pk primary key (channel_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table alt_chan_usr_rel (
     [exec]   2  	     alt_user_pref_id	     varchar2(40)    not null,
     [exec]   3  	     channel_id      varchar2(40)    not null
     [exec]   4  ,constraint alt_chnusr_relpk primary key (channel_id,alt_user_pref_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //app/portal/version/9.4/paf/sql/membership_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> 
     [exec] SQL> create table mem_membership_req (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     internal_version	     number(10)      default 0 not null,
     [exec]   4  	     user_id varchar2(40)    not null,
     [exec]   5  	     community_id    varchar2(40)    not null,
     [exec]   6  	     request_type    number(1,0)     not null,
     [exec]   7  	     creation_date   date    not null
     [exec]   8  ,constraint mem_membershiprq_p primary key (id)
     [exec]   9  ,constraint mem_membershiprq_c check (request_type in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //app/portal/version/9.4/paf/sql/paf_mappers_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> 
     [exec] SQL> create table paf_page_visit (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     tstamp  date    null,
     [exec]   4  	     gear_id varchar2(40)    null,
     [exec]   5  	     community_id    varchar2(40)    null,
     [exec]   6  	     user_id varchar2(40)    null,
     [exec]   7  	     page_path	     varchar2(255)   null,
     [exec]   8  	     msg_type	     varchar2(255)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_pgvst_comid on paf_page_visit (community_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_pgvst_gearid on paf_page_visit (gear_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_pgvst_usrid on paf_page_visit (user_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table comm_gear_add (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     tstamp  date    null,
     [exec]   4  	     gear_id varchar2(40)    null,
     [exec]   5  	     community_id    varchar2(40)    null,
     [exec]   6  	     user_id varchar2(40)    null,
     [exec]   7  	     msg_type	     varchar2(255)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index comm_gearaddcom_id on comm_gear_add (community_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index comm_gearaddgearid on comm_gear_add (gear_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index comm_gearaddusr_id on comm_gear_add (user_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table comm_gear_rem (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     tstamp  date    null,
     [exec]   4  	     gear_id varchar2(40)    null,
     [exec]   5  	     community_id    varchar2(40)    null,
     [exec]   6  	     user_id varchar2(40)    null,
     [exec]   7  	     msg_type	     varchar2(255)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index comm_gearremcom_id on comm_gear_rem (community_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index comm_gearremgearid on comm_gear_rem (gear_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index comm_gearremusr_id on comm_gear_rem (user_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table page_gear_add (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     tstamp  date    null,
     [exec]   4  	     gear_id varchar2(40)    null,
     [exec]   5  	     community_id    varchar2(40)    null,
     [exec]   6  	     page_id varchar2(40)    null,
     [exec]   7  	     user_id varchar2(40)    null,
     [exec]   8  	     msg_type	     varchar2(255)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index page_gearaddcom_id on page_gear_add (community_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index page_gearaddgearid on page_gear_add (gear_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index page_gearaddpageid on page_gear_add (page_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index page_gearaddusr_id on page_gear_add (user_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table page_gear_rem (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     tstamp  date    null,
     [exec]   4  	     gear_id varchar2(40)    null,
     [exec]   5  	     community_id    varchar2(40)    null,
     [exec]   6  	     page_id varchar2(40)    null,
     [exec]   7  	     user_id varchar2(40)    null,
     [exec]   8  	     msg_type	     varchar2(255)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index page_gearremcom_id on page_gear_rem (community_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index page_gearremgearid on page_gear_rem (gear_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index page_gearrempageid on page_gear_rem (page_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index page_gearremusr_id on page_gear_rem (user_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //app/portal/version/9.4/paf/sql/portal_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> 
     [exec] SQL> create table paf_folder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     internal_version	     number(10)      default 0 not null,
     [exec]   4  	     name    varchar2(254)   not null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     type    number(1,0)     not null,
     [exec]   7  	     parent  varchar2(40)    null,
     [exec]   8  	     url_name	     varchar2(254)   not null
     [exec]   9  ,constraint paf_folderpk primary key (folder_id)
     [exec]  10  ,constraint paf_folder1_f foreign key (parent) references paf_folder (folder_id)
     [exec]  11  ,constraint type_enum check (type in (0,1,2)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_folderpnidx on paf_folder (parent,name);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_folder_acl (
     [exec]   2  	     id      varchar2(254)   not null,
     [exec]   3  	     indx    number(10)      not null,
     [exec]   4  	     acl     varchar2(254)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_child_folder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     child_folder_id varchar2(40)    not null
     [exec]   5  ,constraint paf_childfolderpk primary key (folder_id,child_folder_id)
     [exec]   6  ,constraint paf_childfolder1_f foreign key (folder_id) references paf_folder (folder_id)
     [exec]   7  ,constraint paf_childfolder2_f foreign key (child_folder_id) references paf_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_cfchldflddlix on paf_child_folder (child_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_fldr_ln_names (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_name  varchar2(255)   not null
     [exec]   5  ,constraint paf_fldr_lnnamespk primary key (folder_id,locale)
     [exec]   6  ,constraint paf_fldrlnnames1_f foreign key (folder_id) references paf_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_fldr_ln_descs (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_desc  varchar2(255)   not null
     [exec]   5  ,constraint paf_fldr_lndescspk primary key (folder_id,locale)
     [exec]   6  ,constraint paf_fldrlndescs1_f foreign key (folder_id) references paf_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_gear_param (
     [exec]   2  	     gear_param_id   varchar2(40)    not null,
     [exec]   3  	     internal_version	     number(10)      default 0 not null,
     [exec]   4  	     description     varchar2(254)   null,
     [exec]   5  	     default_value   varchar2(254)   null,
     [exec]   6  	     required	     number(1,0)     not null,
     [exec]   7  	     isreadonly      number(1,0)     default 0 not null
     [exec]   8  ,constraint paf_gearparampk primary key (gear_param_id)
     [exec]   9  ,constraint required_bool check (required in (0,1))
     [exec]  10  ,constraint isreadonly_bool check (isreadonly in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_gear_prmvals (
     [exec]   2  	     gear_param_id   varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     param_value     varchar2(254)   null
     [exec]   5  ,constraint paf_gprmvalspk primary key (gear_param_id,sequence_num)
     [exec]   6  ,constraint paf_gprmvals1_f foreign key (gear_param_id) references paf_gear_param (gear_param_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_device_outputs (
     [exec]   2  	     device_outputs_id	     varchar2(40)    not null,
     [exec]   3  	     internal_version	     number(10)      default 0 not null
     [exec]   4  ,constraint paf_deviceoutspk primary key (device_outputs_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_device_output (
     [exec]   2  	     device_output_id	     varchar2(40)    not null,
     [exec]   3  	     type    varchar2(10)    not null,
     [exec]   4  	     url     varchar2(254)   null
     [exec]   5  ,constraint paf_deviceoutpk primary key (device_output_id,type)
     [exec]   6  ,constraint paf_device_out1_f foreign key (device_output_id) references paf_device_outputs (device_outputs_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_display_modes (
     [exec]   2  	     display_modes_id	     varchar2(40)    not null,
     [exec]   3  	     internal_version	     number(10)      default 0 not null,
     [exec]   4  	     shared_mode     varchar2(40)    null,
     [exec]   5  	     full_mode	     varchar2(40)    null,
     [exec]   6  	     popup_mode      varchar2(40)    null
     [exec]   7  ,constraint paf_displaymodespk primary key (display_modes_id)
     [exec]   8  ,constraint paf_displaymode1_f foreign key (shared_mode) references paf_device_outputs (device_outputs_id)
     [exec]   9  ,constraint paf_displaymode2_f foreign key (full_mode) references paf_device_outputs (device_outputs_id)
     [exec]  10  ,constraint paf_displaymode3_f foreign key (popup_mode) references paf_device_outputs (device_outputs_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_dmsmdlix on paf_display_modes (shared_mode);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_dmfmdlix on paf_display_modes (full_mode);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_dmpmdlix on paf_display_modes (popup_mode);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_title_template (
     [exec]   2  	     title_template_id	     varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     description     varchar2(254)   null,
     [exec]   5  	     creation_date   date    not null,
     [exec]   6  	     last_modified   date    null,
     [exec]   7  	     internal_version	     number(10)      null,
     [exec]   8  	     author  varchar2(254)   null,
     [exec]   9  	     version varchar2(254)   null,
     [exec]  10  	     servlet_context varchar2(254)   not null,
     [exec]  11  	     template_dm     varchar2(40)    null,
     [exec]  12  	     pre_template_dm varchar2(40)    null,
     [exec]  13  	     post_template_dm	     varchar2(40)    null,
     [exec]  14  	     small_image_url varchar2(254)   null,
     [exec]  15  	     small_image_alt varchar2(254)   null,
     [exec]  16  	     large_image_url varchar2(254)   null,
     [exec]  17  	     large_image_alt varchar2(254)   null
     [exec]  18  ,constraint paf_titletmplpk primary key (title_template_id)
     [exec]  19  ,constraint paf_title_templ1_u unique (name)
     [exec]  20  ,constraint paf_title_templ1_f foreign key (template_dm) references paf_display_modes (display_modes_id)
     [exec]  21  ,constraint paf_title_templ2_f foreign key (pre_template_dm) references paf_display_modes (display_modes_id)
     [exec]  22  ,constraint paf_title_templ3_f foreign key (post_template_dm) references paf_display_modes (display_modes_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_ttmptmpldlix on paf_title_template (template_dm);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_ttmppredlix on paf_title_template (pre_template_dm);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_ttmppstdlix on paf_title_template (post_template_dm);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_gear_modes (
     [exec]   2  	     gear_modes_id   varchar2(40)    not null,
     [exec]   3  	     internal_version	     number(10)      default 0 not null,
     [exec]   4  	     content_mode    varchar2(40)    null,
     [exec]   5  	     help_mode	     varchar2(40)    null,
     [exec]   6  	     about_mode      varchar2(40)    null,
     [exec]   7  	     preview_mode    varchar2(40)    null,
     [exec]   8  	     user_cfg_mode   varchar2(40)    null,
     [exec]   9  	     instance_cfg_mode	     varchar2(40)    null,
     [exec]  10  	     initial_cfg_mode	     varchar2(40)    null,
     [exec]  11  	     install_cfg_mode	     varchar2(40)    null
     [exec]  12  ,constraint paf_gearmodespk primary key (gear_modes_id)
     [exec]  13  ,constraint paf_gear_modes1_f foreign key (content_mode) references paf_display_modes (display_modes_id)
     [exec]  14  ,constraint paf_gear_modes2_f foreign key (help_mode) references paf_display_modes (display_modes_id)
     [exec]  15  ,constraint paf_gear_modes3_f foreign key (about_mode) references paf_display_modes (display_modes_id)
     [exec]  16  ,constraint paf_gear_modes4_f foreign key (preview_mode) references paf_display_modes (display_modes_id)
     [exec]  17  ,constraint paf_gear_modes5_f foreign key (user_cfg_mode) references paf_display_modes (display_modes_id)
     [exec]  18  ,constraint paf_gear_modes6_f foreign key (instance_cfg_mode) references paf_display_modes (display_modes_id)
     [exec]  19  ,constraint paf_gear_modes7_f foreign key (initial_cfg_mode) references paf_display_modes (display_modes_id)
     [exec]  20  ,constraint paf_gear_modes8_f foreign key (install_cfg_mode) references paf_display_modes (display_modes_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_gdcmdlix on paf_gear_modes (content_mode);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_gdhmdlix on paf_gear_modes (help_mode);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_gdamdlix on paf_gear_modes (about_mode);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_gmpredlix on paf_gear_modes (preview_mode);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_gmusercmdlix on paf_gear_modes (user_cfg_mode);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_gmancecmdlix on paf_gear_modes (instance_cfg_mode);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_gminitcmdlix on paf_gear_modes (initial_cfg_mode);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_gminstcmdlix on paf_gear_modes (install_cfg_mode);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_gear_def (
     [exec]   2  	     gear_def_id     varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     description     varchar2(254)   null,
     [exec]   5  	     creation_date   date    not null,
     [exec]   6  	     last_modified   date    null,
     [exec]   7  	     internal_version	     number(10)      null,
     [exec]   8  	     parent_folder   varchar2(40)    not null,
     [exec]   9  	     author  varchar2(254)   null,
     [exec]  10  	     version varchar2(254)   null,
     [exec]  11  	     hide    number(1,0)     not null,
     [exec]  12  	     timeout number(19,0)    not null,
     [exec]  13  	     jsr168  number(1,0)     default 0 not null,
     [exec]  14  	     portlet_guid    varchar2(254)   null,
     [exec]  15  	     render_async    number(1,0)     not null,
     [exec]  16  	     should_cache    number(1,0)     not null,
     [exec]  17  	     cache_timeout   number(19,0)    null,
     [exec]  18  	     intercept_errors	     number(1,0)     not null,
     [exec]  19  	     cover_err_cache number(1,0)     not null,
     [exec]  20  	     servlet_context varchar2(254)   not null,
     [exec]  21  	     sharable	     number(1,0)     not null,
     [exec]  22  	     width   number(1,0)     not null,
     [exec]  23  	     height  number(1,0)     not null,
     [exec]  24  	     small_image_url varchar2(254)   null,
     [exec]  25  	     small_image_alt varchar2(254)   null,
     [exec]  26  	     large_image_url varchar2(254)   null,
     [exec]  27  	     large_image_alt varchar2(254)   null,
     [exec]  28  	     gear_modes      varchar2(40)    null
     [exec]  29  ,constraint paf_geardefpk primary key (gear_def_id)
     [exec]  30  ,constraint paf_gear_def1_f foreign key (parent_folder) references paf_folder (folder_id)
     [exec]  31  ,constraint paf_gear_def2_f foreign key (gear_modes) references paf_gear_modes (gear_modes_id)
     [exec]  32  ,constraint gear_asyncbool check (render_async in (0,1))
     [exec]  33  ,constraint gear_cachebool check (should_cache in (0,1))
     [exec]  34  ,constraint gear_errcachebool check (cover_err_cache in (0,1))
     [exec]  35  ,constraint gear_errorsbool check (intercept_errors in (0,1))
     [exec]  36  ,constraint gear_heightenum check (height in (0,1,2))
     [exec]  37  ,constraint gear_hidebool check (hide in (0,1))
     [exec]  38  ,constraint gear_widthenum check (width in (0,1,2)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_gdpfdlix on paf_gear_def (parent_folder);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_gdgmdlix on paf_gear_def (gear_modes);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_gd_cprops (
     [exec]   2  	     gear_def_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     name    varchar2(254)   not null
     [exec]   5  ,constraint paf_gdcpropspk primary key (gear_def_id,sequence_num)
     [exec]   6  ,constraint paf_gd_cprops1_f foreign key (gear_def_id) references paf_gear_def (gear_def_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_gd_iparams (
     [exec]   2  	     gear_def_id     varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     gear_param_id   varchar2(40)    not null
     [exec]   5  ,constraint paf_gdiparamspk primary key (gear_def_id,gear_param_id)
     [exec]   6  ,constraint paf_gd_iparams1_f foreign key (gear_def_id) references paf_gear_def (gear_def_id)
     [exec]   7  ,constraint paf_gd_iparams2_f foreign key (gear_param_id) references paf_gear_param (gear_param_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_gdipiddlix on paf_gd_iparams (gear_param_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_gd_uparams (
     [exec]   2  	     gear_def_id     varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     gear_param_id   varchar2(40)    not null
     [exec]   5  ,constraint paf_gduparamspk primary key (gear_def_id,gear_param_id)
     [exec]   6  ,constraint paf_gd_uparams1_f foreign key (gear_def_id) references paf_gear_def (gear_def_id)
     [exec]   7  ,constraint paf_gd_uparams2_f foreign key (gear_param_id) references paf_gear_param (gear_param_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_gdupiddlix on paf_gd_uparams (gear_param_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_gd_l10n_names (
     [exec]   2  	     gear_def_id     varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_name  varchar2(255)   not null
     [exec]   5  ,constraint paf_gd_l10nnamespk primary key (gear_def_id,locale)
     [exec]   6  ,constraint paf_gd_l10nname1_f foreign key (gear_def_id) references paf_gear_def (gear_def_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_gd_l10n_descs (
     [exec]   2  	     gear_def_id     varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_desc  varchar2(255)   not null
     [exec]   5  ,constraint paf_gd_l10ndescspk primary key (gear_def_id,locale)
     [exec]   6  ,constraint paf_gd_l10ndesc1_f foreign key (gear_def_id) references paf_gear_def (gear_def_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_gear (
     [exec]   2  	     gear_id varchar2(40)    not null,
     [exec]   3  	     internal_version	     number(10)      default 0 not null,
     [exec]   4  	     name    varchar2(254)   null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     gear_definition varchar2(40)    not null,
     [exec]   7  	     access_level    number(1,0)     not null,
     [exec]   8  	     show_title_bars number(1,0)     not null,
     [exec]   9  	     parent_comm_id  varchar2(40)    not null,
     [exec]  10  	     is_shared	     number(1,0)     not null
     [exec]  11  ,constraint paf_gearpk primary key (gear_id)
     [exec]  12  ,constraint paf_gear1_f foreign key (gear_definition) references paf_gear_def (gear_def_id)
     [exec]  13  ,constraint gear_titlebarsbool check (show_title_bars in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_geargddlix on paf_gear (gear_definition);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_gear_acl (
     [exec]   2  	     id      varchar2(254)   not null,
     [exec]   3  	     indx    number(10)      not null,
     [exec]   4  	     acl     varchar2(254)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_gear_iparams (
     [exec]   2  	     gear_id varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     iparam_value    varchar2(254)   null
     [exec]   5  ,constraint paf_geariparamspk primary key (gear_id,tag)
     [exec]   6  ,constraint paf_geariparams1_f foreign key (gear_id) references paf_gear (gear_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_gear_ln_names (
     [exec]   2  	     gear_id varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_name  varchar2(255)   not null
     [exec]   5  ,constraint paf_gear_lnnamespk primary key (gear_id,locale)
     [exec]   6  ,constraint paf_gearlnnames1_f foreign key (gear_id) references paf_gear (gear_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_gear_ln_descs (
     [exec]   2  	     gear_id varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_desc  varchar2(255)   not null
     [exec]   5  ,constraint paf_gear_lndescspk primary key (gear_id,locale)
     [exec]   6  ,constraint paf_gearlndescs1_f foreign key (gear_id) references paf_gear (gear_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_region_def (
     [exec]   2  	     region_def_id   varchar2(40)    not null,
     [exec]   3  	     internal_version	     number(10)      default 0 not null,
     [exec]   4  	     name    varchar2(254)   not null,
     [exec]   5  	     width   number(1,0)     not null,
     [exec]   6  	     height  number(1,0)     not null
     [exec]   7  ,constraint paf_regiondefpk primary key (region_def_id)
     [exec]   8  ,constraint paf_regiondefuk unique (name)
     [exec]   9  ,constraint paf_regionhtbool check (height in (0,1))
     [exec]  10  ,constraint paf_regionwithbool check (width in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Do not use REFERENCES paf_page(page_id) here because of circular references
     [exec] SQL> 
     [exec] SQL> create table paf_region (
     [exec]   2  	     region_id	     varchar2(40)    not null,
     [exec]   3  	     internal_version	     number(10)      default 0 not null,
     [exec]   4  	     definition      varchar2(40)    not null,
     [exec]   5  	     parent_page_id  varchar2(40)    not null,
     [exec]   6  	     fixed   number(1,0)     not null
     [exec]   7  ,constraint paf_regionpk primary key (region_id)
     [exec]   8  ,constraint paf_region1_f foreign key (definition) references paf_region_def (region_def_id)
     [exec]   9  ,constraint regionfixedbool check (fixed in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_regdefdlix on paf_region (definition);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_region_gears (
     [exec]   2  	     region_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     gear_id varchar2(40)    not null
     [exec]   5  ,constraint paf_regiongearspk primary key (region_id,sequence_num)
     [exec]   6  ,constraint paf_regiongears2_f foreign key (gear_id) references paf_gear (gear_id)
     [exec]   7  ,constraint paf_regiongears1_f foreign key (region_id) references paf_region (region_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_reggriddlix on paf_region_gears (gear_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_style (
     [exec]   2  	     style_id	     varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     description     varchar2(254)   null,
     [exec]   5  	     creation_date   date    not null,
     [exec]   6  	     last_modified   date    null,
     [exec]   7  	     internal_version	     number(10)      null,
     [exec]   8  	     author  varchar2(254)   null,
     [exec]   9  	     version varchar2(254)   null,
     [exec]  10  	     servlet_context varchar2(254)   not null,
     [exec]  11  	     css_url varchar2(254)   not null
     [exec]  12  ,constraint paf_stylepk primary key (style_id)
     [exec]  13  ,constraint paf_style1_u unique (name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_styl_ln_names (
     [exec]   2  	     style_id	     varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_name  varchar2(255)   not null
     [exec]   5  ,constraint paf_styl_lnnamespk primary key (style_id,locale)
     [exec]   6  ,constraint paf_styllnnames1_f foreign key (style_id) references paf_style (style_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_styl_ln_descs (
     [exec]   2  	     style_id	     varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_desc  varchar2(255)   not null
     [exec]   5  ,constraint paf_styl_lndescspk primary key (style_id,locale)
     [exec]   6  ,constraint paf_styllndescs1_f foreign key (style_id) references paf_style (style_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_col_palette (
     [exec]   2  	     palette_id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     description     varchar2(254)   null,
     [exec]   5  	     creation_date   date    not null,
     [exec]   6  	     last_modified   date    null,
     [exec]   7  	     internal_version	     number(10)      null,
     [exec]   8  	     author  varchar2(254)   null,
     [exec]   9  	     version varchar2(254)   null,
     [exec]  10  	     servlet_context varchar2(254)   not null,
     [exec]  11  	     small_image_url varchar2(254)   null,
     [exec]  12  	     small_image_alt varchar2(254)   null,
     [exec]  13  	     large_image_url varchar2(254)   null,
     [exec]  14  	     large_image_alt varchar2(254)   null,
     [exec]  15  	     pg_bg_image_url varchar2(254)   null,
     [exec]  16  	     pg_bg_color     char(6) null,
     [exec]  17  	     pg_text_color   char(6) null,
     [exec]  18  	     pg_link_color   char(6) null,
     [exec]  19  	     pg_alink_color  char(6) null,
     [exec]  20  	     pg_vlink_color  char(6) null,
     [exec]  21  	     gt_bg_color     char(6) null,
     [exec]  22  	     gt_text_color   char(6) null,
     [exec]  23  	     gear_bg_color   char(6) null,
     [exec]  24  	     gear_text_color char(6) null,
     [exec]  25  	     hl_bg_color     char(6) null,
     [exec]  26  	     hl_text_color   char(6) null
     [exec]  27  ,constraint paf_colpalettepk primary key (palette_id)
     [exec]  28  ,constraint paf_col_palette1_u unique (name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_cpal_ln_names (
     [exec]   2  	     palette_id      varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_name  varchar2(255)   not null
     [exec]   5  ,constraint paf_cpal_lnnamespk primary key (palette_id,locale)
     [exec]   6  ,constraint paf_cpallnnames1_f foreign key (palette_id) references paf_col_palette (palette_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_cpal_ln_descs (
     [exec]   2  	     palette_id      varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_desc  varchar2(255)   not null
     [exec]   5  ,constraint paf_cpal_lndescspk primary key (palette_id,locale)
     [exec]   6  ,constraint paf_cpallndescs1_f foreign key (palette_id) references paf_col_palette (palette_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_layout (
     [exec]   2  	     layout_id	     varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     description     varchar2(254)   null,
     [exec]   5  	     creation_date   date    not null,
     [exec]   6  	     last_modified   date    not null,
     [exec]   7  	     internal_version	     number(10)      null,
     [exec]   8  	     author  varchar2(254)   null,
     [exec]   9  	     version varchar2(254)   null,
     [exec]  10  	     small_image_url varchar2(254)   null,
     [exec]  11  	     small_image_alt varchar2(254)   null,
     [exec]  12  	     large_image_url varchar2(254)   null,
     [exec]  13  	     large_image_alt varchar2(254)   null,
     [exec]  14  	     servlet_context varchar2(254)   not null,
     [exec]  15  	     display_modes   varchar2(40)    not null
     [exec]  16  ,constraint paf_layoutpk primary key (layout_id)
     [exec]  17  ,constraint paf_layout1_u unique (name)
     [exec]  18  ,constraint paf_layout1_f foreign key (display_modes) references paf_display_modes (display_modes_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_lytdmdlix on paf_layout (display_modes);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_layout_regdefs (
     [exec]   2  	     layout_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     region_def_id   varchar2(40)    not null
     [exec]   5  ,constraint paf_layoutregdfpk primary key (layout_id,sequence_num)
     [exec]   6  ,constraint paf_layoutregdf1_f foreign key (layout_id) references paf_layout (layout_id)
     [exec]   7  ,constraint paf_layoutregdf2_f foreign key (region_def_id) references paf_region_def (region_def_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_lytregddlix on paf_layout_regdefs (region_def_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_page_template (
     [exec]   2  	     page_template_id	     varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     description     varchar2(254)   null,
     [exec]   5  	     creation_date   date    not null,
     [exec]   6  	     last_modified   date    null,
     [exec]   7  	     internal_version	     number(10)      null,
     [exec]   8  	     author  varchar2(254)   null,
     [exec]   9  	     version varchar2(254)   null,
     [exec]  10  	     small_image_url varchar2(254)   null,
     [exec]  11  	     small_image_alt varchar2(254)   null,
     [exec]  12  	     large_image_url varchar2(254)   null,
     [exec]  13  	     large_image_alt varchar2(254)   null,
     [exec]  14  	     servlet_context varchar2(254)   not null,
     [exec]  15  	     display_modes   varchar2(40)    not null
     [exec]  16  ,constraint paf_pagetmplpk primary key (page_template_id)
     [exec]  17  ,constraint paf_pagetmplate1_u unique (name)
     [exec]  18  ,constraint paf_pagetmplate1_f foreign key (display_modes) references paf_display_modes (display_modes_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_pagetmdmdlix on paf_page_template (display_modes);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_ptpl_ln_names (
     [exec]   2  	     page_template_id	     varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_name  varchar2(255)   not null
     [exec]   5  ,constraint paf_ptpl_lnnamespk primary key (page_template_id,locale)
     [exec]   6  ,constraint paf_ptpllnnames1_f foreign key (page_template_id) references paf_page_template (page_template_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ptpl_ln_descs (
     [exec]   2  	     page_template_id	     varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_desc  varchar2(255)   not null
     [exec]   5  ,constraint paf_ptpl_lndescspk primary key (page_template_id,locale)
     [exec]   6  ,constraint paf_ptpllndescs1_f foreign key (page_template_id) references paf_page_template (page_template_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_template (
     [exec]   2  	     template_id     varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     description     varchar2(254)   null,
     [exec]   5  	     creation_date   date    not null,
     [exec]   6  	     last_modified   date    null,
     [exec]   7  	     internal_version	     number(10)      null,
     [exec]   8  	     author  varchar2(254)   null,
     [exec]   9  	     version varchar2(254)   null,
     [exec]  10  	     small_image_url varchar2(254)   null,
     [exec]  11  	     small_image_alt varchar2(254)   null,
     [exec]  12  	     large_image_url varchar2(254)   null,
     [exec]  13  	     large_image_alt varchar2(254)   null,
     [exec]  14  	     servlet_context varchar2(254)   not null,
     [exec]  15  	     device_outputs  varchar2(40)    not null
     [exec]  16  ,constraint paf_tmplpk primary key (template_id)
     [exec]  17  ,constraint paf_tmplate1_u unique (name)
     [exec]  18  ,constraint paf_tmplate1_f foreign key (device_outputs) references paf_device_outputs (device_outputs_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_tmpdodlix on paf_template (device_outputs);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Cannot have default_page REFERENCES paf_page(page_id) because this is circular
     [exec] SQL> 
     [exec] SQL> create table paf_community (
     [exec]   2  	     community_id    varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     url_name	     varchar2(254)   not null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     creation_date   date    not null,
     [exec]   7  	     last_modified   date    null,
     [exec]   8  	     internal_version	     number(10)      null,
     [exec]   9  	     enabled number(1,0)     not null,
     [exec]  10  	     access_level    number(1,0)     not null,
     [exec]  11  	     parent_folder   varchar2(40)    not null,
     [exec]  12  	     page_folder     varchar2(40)    not null,
     [exec]  13  	     default_page    varchar2(40)    null,
     [exec]  14  	     personalization number(1,0)     not null,
     [exec]  15  	     membership_req  number(1,0)     not null,
     [exec]  16  	     page_template   varchar2(40)    null,
     [exec]  17  	     title_template  varchar2(40)    null,
     [exec]  18  	     li_template     varchar2(40)    null,
     [exec]  19  	     lo_template     varchar2(40)    null,
     [exec]  20  	     ad_template     varchar2(40)    null,
     [exec]  21  	     rg_template     varchar2(40)    null,
     [exec]  22  	     up_template     varchar2(40)    null,
     [exec]  23  	     ia_template     varchar2(40)    null,
     [exec]  24  	     page_style      varchar2(40)    null
     [exec]  25  ,constraint paf_communitypk primary key (community_id)
     [exec]  26  ,constraint paf_community1_f foreign key (parent_folder) references paf_folder (folder_id)
     [exec]  27  ,constraint paf_community2_f foreign key (page_folder) references paf_folder (folder_id)
     [exec]  28  ,constraint paf_community3_f foreign key (page_template) references paf_page_template (page_template_id)
     [exec]  29  ,constraint paf_community5_f foreign key (page_style) references paf_style (style_id)
     [exec]  30  ,constraint paf_community10_f foreign key (up_template) references paf_template (template_id)
     [exec]  31  ,constraint paf_community8_f foreign key (ad_template) references paf_template (template_id)
     [exec]  32  ,constraint paf_community9_f foreign key (rg_template) references paf_template (template_id)
     [exec]  33  ,constraint paf_community7_f foreign key (lo_template) references paf_template (template_id)
     [exec]  34  ,constraint paf_community11_f foreign key (ia_template) references paf_template (template_id)
     [exec]  35  ,constraint paf_community6_f foreign key (li_template) references paf_template (template_id)
     [exec]  36  ,constraint paf_community4_f foreign key (title_template) references paf_title_template (title_template_id)
     [exec]  37  ,constraint commenabledbool check (enabled in (0,1))
     [exec]  38  ,constraint membershipreqenum check (membership_req in (0,1,2))
     [exec]  39  ,constraint pers_enum check (personalization in (0,1,2)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_commpfdlix on paf_community (parent_folder);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_commpgfdlix on paf_community (page_folder);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_commtmpldlix on paf_community (page_template);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_commstydlix on paf_community (page_style);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_comntuptmpl_ix on paf_community (up_template);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_comntadtmpl_ix on paf_community (ad_template);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_comntrgtmpl_ix on paf_community (rg_template);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_comntlotmpl_ix on paf_community (lo_template);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_comntiatmpl_ix on paf_community (ia_template);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_comntlitmpl_ix on paf_community (li_template);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_commttmpldlix on paf_community (title_template);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_comm_gears (
     [exec]   2  	     community_id    varchar2(40)    not null,
     [exec]   3  	     gear_id varchar2(40)    not null
     [exec]   4  ,constraint paf_commgearspk primary key (community_id,gear_id)
     [exec]   5  ,constraint paf_comm_gears1_f foreign key (community_id) references paf_community (community_id)
     [exec]   6  ,constraint paf_comm_gears2_f foreign key (gear_id) references paf_gear (gear_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_commgriddlix on paf_comm_gears (gear_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_comm_gfldrs (
     [exec]   2  	     community_id    varchar2(40)    not null,
     [exec]   3  	     gear_def_fldr_id	     varchar2(40)    not null
     [exec]   4  ,constraint paf_commgfldrpk primary key (community_id,gear_def_fldr_id)
     [exec]   5  ,constraint paf_comm_gfldrs1_f foreign key (community_id) references paf_community (community_id)
     [exec]   6  ,constraint paf_comm_gfldrs2_f foreign key (gear_def_fldr_id) references paf_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_comm_gfldrs1_i on paf_comm_gfldrs (gear_def_fldr_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_comm_roles (
     [exec]   2  	     community_id    varchar2(40)    not null,
     [exec]   3  	     role_name	     varchar2(254)   not null,
     [exec]   4  	     role_id varchar2(40)    not null
     [exec]   5  ,constraint paf_comm_roles_pk primary key (community_id,role_name)
     [exec]   6  ,constraint paf_comm_roles_fk foreign key (community_id) references paf_community (community_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_base_comm_role (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     role_name	     varchar2(254)   not null,
     [exec]   4  	     category	     varchar2(254)   not null
     [exec]   5  ,constraint paf_basecomrole_pk primary key (role_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_gear_roles (
     [exec]   2  	     gear_id varchar2(40)    not null,
     [exec]   3  	     role_name	     varchar2(254)   not null,
     [exec]   4  	     role_id varchar2(40)    not null
     [exec]   5  ,constraint paf_gear_roles_pk primary key (gear_id,role_name)
     [exec]   6  ,constraint paf_gear_roles_fk foreign key (gear_id) references paf_gear (gear_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_base_gear_role (
     [exec]   2  	     gear_def_id     varchar2(40)    not null,
     [exec]   3  	     role_name	     varchar2(254)   not null
     [exec]   4  ,constraint paf_basegearrolepk primary key (gear_def_id,role_name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_community_acl (
     [exec]   2  	     id      varchar2(254)   not null,
     [exec]   3  	     indx    number(10)      not null,
     [exec]   4  	     acl     varchar2(254)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_comm_lnames (
     [exec]   2  	     community_id    varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_name  varchar2(255)   not null
     [exec]   5  ,constraint paf_commlnamespk primary key (community_id,locale)
     [exec]   6  ,constraint paf_comm_lnames1_f foreign key (community_id) references paf_community (community_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_comm_ldescs (
     [exec]   2  	     community_id    varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_desc  varchar2(255)   not null
     [exec]   5  ,constraint paf_commldescspk primary key (community_id,locale)
     [exec]   6  ,constraint paf_comm_ldescs1_f foreign key (community_id) references paf_community (community_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_page (
     [exec]   2  	     page_id varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     url_name	     varchar2(254)   not null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     creation_date   date    not null,
     [exec]   7  	     last_modified   date    not null,
     [exec]   8  	     internal_version	     number(10)      null,
     [exec]   9  	     access_level    number(1,0)     not null,
     [exec]  10  	     parent_folder   varchar2(40)    not null,
     [exec]  11  	     parent_comm_id  varchar2(40)    not null,
     [exec]  12  	     layout_id	     varchar2(40)    not null,
     [exec]  13  	     allow_layout_chgs	     number(1,0)     not null,
     [exec]  14  	     palette_id      varchar2(40)    null,
     [exec]  15  	     fixed   number(1,0)     not null,
     [exec]  16  	     wireless_enabled	     number(1,0)     not null
     [exec]  17  ,constraint paf_pagepk primary key (page_id)
     [exec]  18  ,constraint paf_page3_f foreign key (palette_id) references paf_col_palette (palette_id)
     [exec]  19  ,constraint paf_page2_f foreign key (parent_comm_id) references paf_community (community_id)
     [exec]  20  ,constraint paf_page1_f foreign key (parent_folder) references paf_folder (folder_id)
     [exec]  21  ,constraint paf_page4_f foreign key (layout_id) references paf_layout (layout_id)
     [exec]  22  ,constraint allowchgsbool check (allow_layout_chgs in (0,1))
     [exec]  23  ,constraint fixedisbool check (fixed in (0,1))
     [exec]  24  ,constraint wirelessisbool check (wireless_enabled in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_pagepaldlix on paf_page (palette_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_pagecommdlix on paf_page (parent_comm_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_pagepfdlix on paf_page (parent_folder);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index paf_pagelytdlix on paf_page (layout_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_page_ln_names (
     [exec]   2  	     page_id varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_name  varchar2(255)   not null
     [exec]   5  ,constraint paf_page_lnnamespk primary key (page_id,locale)
     [exec]   6  ,constraint paf_pagelnnames1_f foreign key (page_id) references paf_page (page_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_page_ln_descs (
     [exec]   2  	     page_id varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_desc  varchar2(255)   not null
     [exec]   5  ,constraint paf_page_lndescspk primary key (page_id,locale)
     [exec]   6  ,constraint paf_pagelndescs1_f foreign key (page_id) references paf_page (page_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_page_acl (
     [exec]   2  	     id      varchar2(254)   not null,
     [exec]   3  	     indx    number(10)      not null,
     [exec]   4  	     acl     varchar2(254)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_page_regions (
     [exec]   2  	     page_id varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     region_id	     varchar2(40)    not null
     [exec]   5  ,constraint paf_pageregionspk primary key (page_id,tag)
     [exec]   6  ,constraint paf_pageregions1_f foreign key (page_id) references paf_page (page_id)
     [exec]   7  ,constraint paf_pageregions2_f foreign key (region_id) references paf_region (region_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_pageriddlix on paf_page_regions (region_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_cf_child_item (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     child_item_id   varchar2(40)    not null
     [exec]   5  ,constraint paf_cfchilditempk primary key (folder_id,child_item_id)
     [exec]   6  ,constraint paf_cfchilditem2_f foreign key (child_item_id) references paf_community (community_id)
     [exec]   7  ,constraint paf_cfchilditem1_f foreign key (folder_id) references paf_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_cfchlddlix on paf_cf_child_item (child_item_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_cf_gfldrs (
     [exec]   2  	     comm_folder_id  varchar2(40)    not null,
     [exec]   3  	     gear_def_fldr_id	     varchar2(40)    not null
     [exec]   4  ,constraint paf_cfgfldrspk primary key (comm_folder_id,gear_def_fldr_id)
     [exec]   5  ,constraint paf_cf_gfldrs1_f foreign key (comm_folder_id) references paf_folder (folder_id)
     [exec]   6  ,constraint paf_cf_gfldrs2_f foreign key (gear_def_fldr_id) references paf_folder (folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_cfgfldrs1_i on paf_cf_gfldrs (gear_def_fldr_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_pf_child_item (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     child_item_id   varchar2(40)    not null
     [exec]   5  ,constraint paf_pfchilditempk primary key (folder_id,child_item_id)
     [exec]   6  ,constraint paf_pfchilditem1_f foreign key (folder_id) references paf_folder (folder_id)
     [exec]   7  ,constraint paf_pfchilditem2_f foreign key (child_item_id) references paf_page (page_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_pfcitemiddlix on paf_pf_child_item (child_item_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_gdf_child_item (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     child_item_id   varchar2(40)    not null
     [exec]   5  ,constraint paf_gdfchilditempk primary key (folder_id,child_item_id)
     [exec]   6  ,constraint paf_gdfchlditem1_f foreign key (folder_id) references paf_folder (folder_id)
     [exec]   7  ,constraint paf_gdfchlditem2_f foreign key (child_item_id) references paf_gear_def (gear_def_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_gdfciiddlix on paf_gdf_child_item (child_item_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_comm_template (
     [exec]   2  	     template_id     varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     description     varchar2(254)   null,
     [exec]   5  	     creation_date   date    not null,
     [exec]   6  	     internal_version	     number(10)      null,
     [exec]   7  	     enabled number(1,0)     not null,
     [exec]   8  	     access_level    number(10)      not null,
     [exec]   9  	     parent_folder   varchar2(40)    not null,
     [exec]  10  	     page_folder     varchar2(40)    not null,
     [exec]  11  	     default_page    varchar2(40)    not null,
     [exec]  12  	     personalization number(1,0)     not null,
     [exec]  13  	     membership_req  number(1,0)     not null,
     [exec]  14  	     page_template   varchar2(40)    not null,
     [exec]  15  	     title_template  varchar2(40)    not null,
     [exec]  16  	     style   varchar2(40)    not null
     [exec]  17  ,constraint paf_comtemplate_p primary key (template_id)
     [exec]  18  ,constraint paf_comtemplate_c1 check (enabled in (0,1))
     [exec]  19  ,constraint paf_comtemplate_c2 check (personalization in (0,1,2))
     [exec]  20  ,constraint paf_comtemplate_c3 check (membership_req in (0,1,2)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_folder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     internal_version	     number(10)      not null,
     [exec]   4  	     name    varchar2(254)   not null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     parent  varchar2(40)    null,
     [exec]   7  	     url_name	     varchar2(254)   not null
     [exec]   8  ,constraint paf_ct_folder_p primary key (folder_id)
     [exec]   9  ,constraint paf_ct_folder_u unique (name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index paf_ct_fldrpnidx on paf_ct_folder (parent,name);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_child_fldr (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     child_folder_id varchar2(40)    not null
     [exec]   5  ,constraint paf_ctchild_fldr_p primary key (folder_id,child_folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_pagefolder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     child_item_id   varchar2(40)    not null
     [exec]   5  ,constraint paf_ctpagefolder_p primary key (folder_id,child_item_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_page (
     [exec]   2  	     page_id varchar2(40)    not null,
     [exec]   3  	     name    varchar2(254)   not null,
     [exec]   4  	     url_name	     varchar2(254)   not null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     creation_date   date    not null,
     [exec]   7  	     last_modified   date    not null,
     [exec]   8  	     internal_version	     number(10)      null,
     [exec]   9  	     access_level    number(10)      not null,
     [exec]  10  	     parent_folder   varchar2(40)    not null,
     [exec]  11  	     layout_id	     varchar2(40)    not null,
     [exec]  12  	     allow_layout_chgs	     number(1,0)     not null,
     [exec]  13  	     palette_id      varchar2(40)    null,
     [exec]  14  	     fixed   number(1,0)     not null,
     [exec]  15  	     wireless_enabled	     number(1,0)     not null
     [exec]  16  ,constraint paf_ct_page_p primary key (page_id)
     [exec]  17  ,constraint paf_ct_page_c1 check (allow_layout_chgs in (0,1))
     [exec]  18  ,constraint paf_ct_page_c2 check (fixed in (0,1))
     [exec]  19  ,constraint paf_ct_page_c3 check (wireless_enabled in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_region (
     [exec]   2  	     region_id	     varchar2(40)    not null,
     [exec]   3  	     internal_version	     number(10)      not null,
     [exec]   4  	     definition      varchar2(40)    not null,
     [exec]   5  	     fixed   number(1,0)     not null
     [exec]   6  ,constraint paf_ct_region_p primary key (region_id)
     [exec]   7  ,constraint paf_ct_region_c1 check (fixed in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_pg_regions (
     [exec]   2  	     page_id varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     region_id	     varchar2(40)    not null
     [exec]   5  ,constraint paf_ctpg_regions_p primary key (page_id,tag));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_region_grs (
     [exec]   2  	     region_id	     varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     gear_id varchar2(40)    not null
     [exec]   5  ,constraint paf_ctregion_grs_p primary key (region_id,sequence_num));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_gear (
     [exec]   2  	     gear_id varchar2(40)    not null,
     [exec]   3  	     internal_version	     number(10)      not null,
     [exec]   4  	     name    varchar2(254)   null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     gear_definition varchar2(40)    not null,
     [exec]   7  	     access_level    number(10)      not null,
     [exec]   8  	     show_title_bars number(1,0)     not null,
     [exec]   9  	     is_shared	     number(1,0)     not null,
     [exec]  10  	     orig_gear_id    varchar2(40)    null
     [exec]  11  ,constraint paf_ct_gear_p primary key (gear_id)
     [exec]  12  ,constraint paf_ct_gear_c1 check (show_title_bars in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_gr_iparams (
     [exec]   2  	     gear_id varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     iparam_value    varchar2(254)   not null
     [exec]   5  ,constraint paf_ctgr_iparams_p primary key (gear_id,tag));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_gr_ln_names (
     [exec]   2  	     gear_id varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_name  varchar2(255)   not null
     [exec]   5  ,constraint paf_ctgrln_names_p primary key (gear_id,locale));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_gr_ln_descs (
     [exec]   2  	     gear_id varchar2(40)    not null,
     [exec]   3  	     locale  varchar2(30)    not null,
     [exec]   4  	     localized_desc  varchar2(255)   not null
     [exec]   5  ,constraint paf_ctgrln_descs_p primary key (gear_id,locale));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_gr_fldrs (
     [exec]   2  	     template_id     varchar2(40)    not null,
     [exec]   3  	     gear_def_folder_id      varchar2(40)    not null
     [exec]   4  ,constraint paf_ct_gr_fldrs_p primary key (template_id,gear_def_folder_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_gears (
     [exec]   2  	     template_id     varchar2(40)    not null,
     [exec]   3  	     gear_id varchar2(40)    not null
     [exec]   4  ,constraint paf_ct_gears_p primary key (template_id,gear_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_alt_gear (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     source_id	     varchar2(40)    not null,
     [exec]   4  	     source_type     varchar2(40)    not null,
     [exec]   5  	     version number(10)      not null,
     [exec]   6  	     message_type    varchar2(255)   not null,
     [exec]   7  	     name    varchar2(40)    not null,
     [exec]   8  	     value   varchar2(40)    not null,
     [exec]   9  	     resource_bundle varchar2(255)   not null
     [exec]  10  ,constraint paf_ct_alt_gear_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_alt_gr_rel (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(40)    not null,
     [exec]   4  	     gear_id varchar2(40)    not null
     [exec]   5  ,constraint paf_ctalt_gr_rel_p primary key (id,gear_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_roles (
     [exec]   2  	     template_id     varchar2(40)    not null,
     [exec]   3  	     role_name	     varchar2(254)   not null,
     [exec]   4  	     role_id varchar2(40)    not null
     [exec]   5  ,constraint paf_ct_roles_pk primary key (template_id,role_name)
     [exec]   6  ,constraint paf_ct_roles_fk foreign key (template_id) references paf_comm_template (template_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_gr_acl (
     [exec]   2  	     id      varchar2(254)   not null,
     [exec]   3  	     indx    number(10)      not null,
     [exec]   4  	     acl     varchar2(254)   not null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table paf_ct_gr_roles (
     [exec]   2  	     gear_id varchar2(40)    not null,
     [exec]   3  	     role_name	     varchar2(254)   not null,
     [exec]   4  	     role_id varchar2(40)    not null
     [exec]   5  ,constraint paf_ct_gr_roles_pk primary key (gear_id,role_name)
     [exec]   6  ,constraint paf_ct_gr_roles_fk foreign key (gear_id) references paf_ct_gear (gear_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/Publishing/version/9.4/pws/sql/xml/publishing_ddl.xml#1 $
     [exec] SQL> --     The tables here are for the various parts of the epublishing system.
     [exec] SQL> 
     [exec] SQL> create table epub_history (
     [exec]   2  	     history_id      varchar2(40)    not null,
     [exec]   3  	     profile varchar2(40)    null,
     [exec]   4  	     timestamp	     date    null,
     [exec]   5  	     action  varchar2(255)   null,
     [exec]   6  	     action_type     varchar2(255)   null,
     [exec]   7  	     description     clob    null
     [exec]   8  ,constraint history_pk primary key (history_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index his_profile_idx on epub_history (profile);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index his_timestamp_idx on epub_history (timestamp);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index his_action_idx on epub_history (action);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table epub_his_act_parm (
     [exec]   2  	     history_id      varchar2(40)    not null,
     [exec]   3  	     action_param    varchar2(255)   null,
     [exec]   4  	     sequence_num    number(19)      not null
     [exec]   5  ,constraint epub_his_ac_pk primary key (history_id,sequence_num)
     [exec]   6  ,constraint epub_hisact_id_fk foreign key (history_id) references epub_history (history_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_taskinfo (
     [exec]   2  	     taskinfo_id     varchar2(40)    not null,
     [exec]   3  	     version number(19)      not null,
     [exec]   4  	     process_id      varchar2(40)    not null,
     [exec]   5  	     process_name    varchar2(255)   not null,
     [exec]   6  	     segment_name    varchar2(255)   not null,
     [exec]   7  	     task_element_id varchar2(255)   not null,
     [exec]   8  	     acl     varchar2(2048)  null,
     [exec]   9  	     priority	     number(19)      null,
     [exec]  10  	     owner_name      varchar2(255)   null,
     [exec]  11  	     last_actor_name varchar2(255)   null,
     [exec]  12  	     last_action_date	     date    null,
     [exec]  13  	     last_outcome_id varchar2(255)   null
     [exec]  14  ,constraint taskinfo_pk primary key (taskinfo_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_agent_trnprt (
     [exec]   2  	     transport_id    varchar2(40)    not null,
     [exec]   3  	     version number(19)      not null,
     [exec]   4  	     transport_type  number(1)	     not null,
     [exec]   5  	     jndi_name	     varchar2(255)   null,
     [exec]   6  	     rmi_uri varchar2(255)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_agent (
     [exec]   2  	     agent_id	     varchar2(40)    not null,
     [exec]   3  	     version number(19)      not null,
     [exec]   4  	     creation_time   date    null,
     [exec]   5  	     display_name    varchar2(255)   null,
     [exec]   6  	     description     varchar2(1024)  null,
     [exec]   7  	     main_agent_id   varchar2(40)    null,
     [exec]   8  	     transport	     varchar2(40)    not null
     [exec]   9  ,constraint target_agent_pk primary key (agent_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_target (
     [exec]   2  	     target_id	     varchar2(40)    not null,
     [exec]   3  	     snapshot_name   varchar2(255)   null,
     [exec]   4  	     version number(19)      not null,
     [exec]   5  	     creation_time   date    null,
     [exec]   6  	     main_target_id  varchar2(40)    null,
     [exec]   7  	     display_name    varchar2(255)   null,
     [exec]   8  	     description     varchar2(1024)  null,
     [exec]   9  	     halted  number(1)	     null,
     [exec]  10  	     flag_agents     number(1)	     null,
     [exec]  11  	     target_type     number(1)	     null
     [exec]  12  ,constraint targets_pk primary key (target_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_tr_dest (
     [exec]   2  	     target_id	     varchar2(40)    not null,
     [exec]   3  	     target_source   varchar2(100)   not null,
     [exec]   4  	     target_destination      varchar2(100)   not null
     [exec]   5  ,constraint epub_trd_id_pk primary key (target_id,target_source));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_topology (
     [exec]   2  	     topology_id     varchar2(40)    not null,
     [exec]   3  	     version number(19)      not null,
     [exec]   4  	     primary_tl      number(1)	     null
     [exec]   5  ,constraint topology_pk primary key (topology_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_tl_targets (
     [exec]   2  	     topology_id     varchar2(40)    not null,
     [exec]   3  	     target_id	     varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(19)      not null
     [exec]   5  ,constraint pr_tp_tr_pk primary key (topology_id,target_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_tr_agents (
     [exec]   2  	     target_id	     varchar2(40)    not null,
     [exec]   3  	     agent_id	     varchar2(40)    not null
     [exec]   4  ,constraint pr_ag_pk primary key (target_id,agent_id)
     [exec]   5  ,constraint pt_tr_pr_id_fk foreign key (target_id) references epub_target (target_id)
     [exec]   6  ,constraint pt_ag_ag_id_fk foreign key (agent_id) references epub_agent (agent_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index epub_tr_agents_x on epub_tr_agents (agent_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table epub_princ_asset (
     [exec]   2  	     agent_id	     varchar2(40)    not null,
     [exec]   3  	     principal_assets	     varchar2(40)    not null
     [exec]   4  ,constraint princ_asset_pk primary key (agent_id,principal_assets)
     [exec]   5  ,constraint princ_aset_id_fk foreign key (agent_id) references epub_agent (agent_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_includ_asset (
     [exec]   2  	     agent_id	     varchar2(40)    not null,
     [exec]   3  	     include_assets  varchar2(255)   not null
     [exec]   4  ,constraint includ_asset_pk primary key (agent_id,include_assets)
     [exec]   5  ,constraint includ_aset_id_fk foreign key (agent_id) references epub_agent (agent_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_exclud_asset (
     [exec]   2  	     agent_id	     varchar2(40)    not null,
     [exec]   3  	     exclude_assets  varchar2(255)   not null
     [exec]   4  ,constraint exclud_asset_pk primary key (agent_id,exclude_assets)
     [exec]   5  ,constraint exclud_aset_id_fk foreign key (agent_id) references epub_agent (agent_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_dest_map (
     [exec]   2  	     agent_id	     varchar2(40)    not null,
     [exec]   3  	     source  varchar2(255)   not null,
     [exec]   4  	     destination     varchar2(255)   not null
     [exec]   5  ,constraint dest_map_pk primary key (agent_id,source)
     [exec]   6  ,constraint dest_map_id_fk foreign key (agent_id) references epub_agent (agent_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_project (
     [exec]   2  	     project_id      varchar2(40)    not null,
     [exec]   3  	     version number(19)      not null,
     [exec]   4  	     acl     varchar2(2048)  null,
     [exec]   5  	     display_name    varchar2(255)   null,
     [exec]   6  	     description     varchar2(1024)  null,
     [exec]   7  	     creator varchar2(40)    null,
     [exec]   8  	     workspace	     varchar2(255)   not null,
     [exec]   9  	     workflow_id     varchar2(40)    null,
     [exec]  10  	     checked_in      number(1)	     null,
     [exec]  11  	     locked  number(1)	     null,
     [exec]  12  	     editable	     number(1)	     null,
     [exec]  13  	     status  number(19)      null,
     [exec]  14  	     status_detail   varchar2(255)   null,
     [exec]  15  	     checkin_date    date    null,
     [exec]  16  	     creation_date   date    null,
     [exec]  17  	     completion_date date    null
     [exec]  18  ,constraint project_pk primary key (project_id)
     [exec]  19  ,constraint pr_editable_chk check (editable in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_workspace_idx on epub_project (workspace);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_disp_name_idx on epub_project (display_name);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_creator_idx on epub_project (creator);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_creat_date_idx on epub_project (creation_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_comp_date_idx on epub_project (completion_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table epub_prj_targt_ws (
     [exec]   2  	     project_id      varchar2(40)    not null,
     [exec]   3  	     target_id	     varchar2(40)    not null,
     [exec]   4  	     workspace_id    varchar2(40)    null
     [exec]   5  ,constraint epub_prw_id_pk primary key (project_id,target_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_pr_tg_status (
     [exec]   2  	     project_id      varchar2(40)    not null,
     [exec]   3  	     target_id	     varchar2(40)    not null,
     [exec]   4  	     status_code     number(1)	     null
     [exec]   5  ,constraint epub_pr_ap_id_pk primary key (project_id,target_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_prj_tg_snsht (
     [exec]   2  	     project_id      varchar2(40)    not null,
     [exec]   3  	     target_id	     varchar2(40)    not null,
     [exec]   4  	     snapshot_id     varchar2(40)    null
     [exec]   5  ,constraint epub_prs_id_pk primary key (project_id,target_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_pr_tg_dp_ts (
     [exec]   2  	     project_id      varchar2(40)    not null,
     [exec]   3  	     target_id	     varchar2(40)    not null,
     [exec]   4  	     deployment_time date    null
     [exec]   5  ,constraint epub_pr_dt_id_pk primary key (project_id,target_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_pr_tg_dp_id (
     [exec]   2  	     project_id      varchar2(40)    not null,
     [exec]   3  	     target_id	     varchar2(40)    not null,
     [exec]   4  	     deployment_id   varchar2(40)    null
     [exec]   5  ,constraint epub_pr_dp_id_pk primary key (project_id,target_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_pr_tg_ap_ts (
     [exec]   2  	     project_id      varchar2(40)    not null,
     [exec]   3  	     target_id	     varchar2(40)    not null,
     [exec]   4  	     approval_time   date    null
     [exec]   5  ,constraint epub_ap_ts_id_pk primary key (project_id,target_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_pr_history (
     [exec]   2  	     project_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(19)      not null,
     [exec]   4  	     history varchar2(40)    not null
     [exec]   5  ,constraint pr_hist_pk primary key (project_id,sequence_num)
     [exec]   6  ,constraint pt_hist_id_fk foreign key (project_id) references epub_project (project_id)
     [exec]   7  ,constraint pt_hist_hist_fk foreign key (history) references epub_history (history_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_hist_hist_idx on epub_pr_history (history);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table epub_process (
     [exec]   2  	     process_id      varchar2(40)    not null,
     [exec]   3  	     version number(19)      not null,
     [exec]   4  	     acl     varchar2(2048)  null,
     [exec]   5  	     display_name    varchar2(255)   null,
     [exec]   6  	     description     varchar2(1024)  null,
     [exec]   7  	     creator varchar2(40)    null,
     [exec]   8  	     project varchar2(40)    null,
     [exec]   9  	     process_data    varchar2(40)    null,
     [exec]  10  	     workflow_id     varchar2(40)    null,
     [exec]  11  	     activity	     varchar2(255)   null,
     [exec]  12  	     status  number(19)      null,
     [exec]  13  	     status_detail   varchar2(255)   null,
     [exec]  14  	     creation_date   date    null,
     [exec]  15  	     completion_date date    null
     [exec]  16  ,constraint process_pk primary key (process_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index prc_disp_name_idx on epub_process (display_name);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prc_creator_idx on epub_process (creator);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prc_creat_date_idx on epub_process (creation_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prc_comp_date_idx on epub_process (completion_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prc_project_idx on epub_process (project);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table epub_proc_prv_prj (
     [exec]   2  	     process_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(19)      not null,
     [exec]   4  	     project_id      varchar2(40)    not null
     [exec]   5  ,constraint proc_prv_prj_pk primary key (process_id,sequence_num)
     [exec]   6  ,constraint prc_pvprj_pcid_fk foreign key (process_id) references epub_process (process_id)
     [exec]   7  ,constraint prc_prv_prj_id_fk foreign key (project_id) references epub_project (project_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index epub_prv_prj_id_x on epub_proc_prv_prj (project_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table epub_proc_history (
     [exec]   2  	     process_id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(19)      not null,
     [exec]   4  	     history varchar2(40)    not null
     [exec]   5  ,constraint proc_hist_pk primary key (process_id,sequence_num)
     [exec]   6  ,constraint proc_hist_id_fk foreign key (process_id) references epub_process (process_id)
     [exec]   7  ,constraint proc_hist_hist_fk foreign key (history) references epub_history (history_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index epub_proc_hist_x on epub_proc_history (history);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table epub_proc_taskinfo (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     taskinfo_id     varchar2(40)    not null
     [exec]   4  ,constraint prc_ti_pk primary key (taskinfo_id)
     [exec]   5  ,constraint prc_ti_prc_id_fk foreign key (id) references epub_process (process_id)
     [exec]   6  ,constraint prc_ti_ti_id_fk foreign key (taskinfo_id) references epub_taskinfo (taskinfo_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index epub_prctaskinfo_x on epub_proc_taskinfo (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table epub_deployment (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     version number(19)      not null,
     [exec]   4  	     target_id	     varchar2(255)   null,
     [exec]   5  	     deploy_time     date    not null,
     [exec]   6  	     create_time     date    not null,
     [exec]   7  	     creator varchar2(40)    null,
     [exec]   8  	     uri     varchar2(100)   null,
     [exec]   9  	     next_dep_id     varchar2(40)    null,
     [exec]  10  	     previous_dep_id varchar2(40)    null,
     [exec]  11  	     force_full      number(1)	     null,
     [exec]  12  	     dep_type	     number(1)	     null,
     [exec]  13  	     status  number(3)	     null,
     [exec]  14  	     message_code    varchar2(255)   null,
     [exec]  15  	     strict_file_op  number(3)	     null,
     [exec]  16  	     strict_repo_op  number(3)	     null
     [exec]  17  ,constraint deployment_pk primary key (deployment_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index depl_time_idx on epub_deployment (deploy_time);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table epub_deploy_proj (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     project_id      varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(19)      not null
     [exec]   5  ,constraint epub_dep_proj_pk primary key (deployment_id,project_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_dep_err_parm (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     error_param     varchar2(255)   null,
     [exec]   4  	     sequence_num    number(19)      not null
     [exec]   5  ,constraint epub_dep_er_pk primary key (deployment_id,sequence_num)
     [exec]   6  ,constraint epub_dep_id_fk foreign key (deployment_id) references epub_deployment (deployment_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Log of deployments that have occured. See the epub repository
     [exec] SQL> --     definition file for more details
     [exec] SQL> 
     [exec] SQL> create table epub_dep_log (
     [exec]   2  	     log_id  varchar2(40)    not null,
     [exec]   3  	     dep_id  varchar2(40)    not null,
     [exec]   4  	     target_name     varchar2(255)   not null,
     [exec]   5  	     log_time	     date    not null,
     [exec]   6  	     begin_time      date    not null,
     [exec]   7  	     end_time	     date    not null,
     [exec]   8  	     actor_id	     varchar2(40)    null,
     [exec]   9  	     type    number(10)      not null,
     [exec]  10  	     dep_mode	     number(10)      not null,
     [exec]  11  	     status  number(10)      not null,
     [exec]  12  	     deli_proj_ids   varchar2(255)   null,
     [exec]  13  	     delimiter	     varchar2(5)     not null,
     [exec]  14  	     strict_file_op  number(3)	     null,
     [exec]  15  	     strict_repo_op  number(3)	     null
     [exec]  16  ,constraint dep_log_pk primary key (log_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/Publishing/version/9.4/pws/sql/xml/process_data_ddl.xml#1 $
     [exec] SQL> --     These tables are for the ProcessDataRepository
     [exec] SQL> 
     [exec] SQL> create table epub_process_data (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     process_data_id varchar2(40)    not null,
     [exec]  11  	     type    number(19)      not null
     [exec]  12  ,constraint process_data_pk primary key (process_data_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index epub_process_d_wsx on epub_process_data (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index epub_process_d_cix on epub_process_data (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/Publishing/version/9.4/pws/sql/xml/versionmanager_ddl.xml#1 $
     [exec] SQL> --     These tables are for the version manager
     [exec] SQL> 
     [exec] SQL> create table avm_devline (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     type    number(19)      not null,
     [exec]   4  	     name    varchar2(255)   not null,
     [exec]   5  	     parent  varchar2(40)    null,
     [exec]   6  	     date_created    date    null
     [exec]   7  ,constraint avm_devline_pk primary key (id)
     [exec]   8  ,constraint avm_dl_name_unq unique (name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index avm_devline_pt_idx on avm_devline (parent);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table avm_workspace (
     [exec]   2  	     ws_id   varchar2(40)    not null,
     [exec]   3  	     checked_in      number(1)	     not null,
     [exec]   4  	     ci_time date    null,
     [exec]   5  	     userid  varchar2(255)   null,
     [exec]   6  	     locked  number(1)	     not null,
     [exec]   7  	     editable	     number(1)	     not null,
     [exec]   8  	     change_was      clob    null
     [exec]   9  ,constraint avm_workspace_pk primary key (ws_id)
     [exec]  10  ,constraint avm_workspace_fk foreign key (ws_id) references avm_devline (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table avm_asset_lock (
     [exec]   2  	     repository_name varchar2(255)   not null,
     [exec]   3  	     descriptor_name varchar2(255)   not null,
     [exec]   4  	     repository_id   varchar2(255)   not null,
     [exec]   5  	     workspace_id    varchar2(40)    not null
     [exec]   6  ,constraint avm_lock_pk primary key (repository_name,descriptor_name,repository_id)
     [exec]   7  ,constraint avm_lock_ws_fk foreign key (workspace_id) references avm_workspace (ws_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index avm_asset_lock_x on avm_asset_lock (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/Publishing/version/9.4/pws/sql/xml/file_repository_ddl.xml#1 $
     [exec] SQL> --     These tables are for the storing versioned files for Publishing
     [exec] SQL> 
     [exec] SQL> create table epub_file_folder (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     folder_id	     varchar2(40)    not null,
     [exec]  11  	     acl     varchar2(2048)  null,
     [exec]  12  	     folder_name     varchar2(255)   not null,
     [exec]  13  	     parent_folder   varchar2(40)    null
     [exec]  14  ,constraint content_folder_pk primary key (folder_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ff_folder_name_idx on epub_file_folder (folder_name);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index epub_file_fold_wsx on epub_file_folder (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index epub_file_fold_cix on epub_file_folder (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table epub_file_asset (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     file_asset_id   varchar2(40)    not null,
     [exec]  11  	     type    number(19)      not null,
     [exec]  12  	     acl     varchar2(2048)  null,
     [exec]  13  	     filename	     varchar2(255)   not null,
     [exec]  14  	     last_modified   date    null,
     [exec]  15  	     size_bytes      number(19)      null,
     [exec]  16  	     checksum	     number(19)      null,
     [exec]  17  	     parent_folder   varchar2(40)    null
     [exec]  18  ,constraint file_asset_pk primary key (file_asset_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index fa_folder_name_idx on epub_file_asset (filename);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index fa_parent_fldr_idx on epub_file_asset (parent_folder);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index fa_size_idx on epub_file_asset (size_bytes);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index fa_last_mod_idx on epub_file_asset (last_modified);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index epub_file_asse_wsx on epub_file_asset (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index epub_file_asse_cix on epub_file_asset (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table epub_text_file (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     text_file_id    varchar2(40)    not null,
     [exec]   4  	     text_content    clob    null
     [exec]   5  ,constraint tf_file_id_pk primary key (text_file_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_binary_file (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     binary_file_id  varchar2(40)    not null,
     [exec]   4  	     binary_content  blob    null
     [exec]   5  ,constraint bf_file_id_pk primary key (binary_file_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/Publishing/version/9.4/pws/sql/xml/workflow_ddl.xml#1 $
     [exec] SQL> --     Collective workflow process instances.  These instances represent
     [exec] SQL> --     all subjects (processes) going through the workflow process.
     [exec] SQL> 
     [exec] SQL> create table epub_coll_workflow (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     workflow_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19)      null,
     [exec]   5  	     segment_name    varchar2(255)   null,
     [exec]   6  	     creator_id      varchar2(40)    null,
     [exec]   7  	     state   varchar2(16)    null,
     [exec]   8  	     num_retries     number(10)      null
     [exec]   9  ,constraint epub_coll_wf_pkey primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Individual workflow process instances.  Each of these instances
     [exec] SQL> --     represents a single subject (process) going through the workflow
     [exec] SQL> --     process.
     [exec] SQL> 
     [exec] SQL> create table epub_ind_workflow (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     workflow_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19)      null,
     [exec]   5  	     segment_name    varchar2(255)   null,
     [exec]   6  	     creator_id      varchar2(40)    null,
     [exec]   7  	     state   varchar2(16)    null,
     [exec]   8  	     process_id      varchar2(40)    not null,
     [exec]   9  	     num_retries     number(10)      null
     [exec]  10  ,constraint epub_ind_wf_pkey primary key (id)
     [exec]  11  ,constraint epub_ind_wf_fkey foreign key (process_id) references epub_process (process_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index epub_indworkflow_x on epub_ind_workflow (process_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> --     Indices are needed on these tables to prevent table locks from being
     [exec] SQL> --     acquired.  The primary key indices do not prevent this since they
     [exec] SQL> --     are on multiple keys.
     [exec] SQL> --
     [exec] SQL> --     String context variables associated with individual workflow
     [exec] SQL> --     process instances.
     [exec] SQL> 
     [exec] SQL> create table epub_workflow_strs (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_str     varchar2(255)   null
     [exec]   5  ,constraint epub_wf_str_pkey primary key (id,tag)
     [exec]   6  ,constraint epub_wf_str_fkey foreign key (id) references epub_ind_workflow (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Boolean context variables associated with individual workflow
     [exec] SQL> --     process instances.
     [exec] SQL> 
     [exec] SQL> create table epub_workflow_bls (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_bool    number(1)	     null
     [exec]   5  ,constraint epub_wf_bl_pkey primary key (id,tag)
     [exec]   6  ,constraint epub_wf_bl_fkey foreign key (id) references epub_ind_workflow (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Long context variables associated with individual workflow process
     [exec] SQL> --     instances.
     [exec] SQL> 
     [exec] SQL> create table epub_workflow_lngs (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_long    number(19)      null
     [exec]   5  ,constraint epub_wf_lng_pkey primary key (id,tag)
     [exec]   6  ,constraint epub_wf_lng_fkey foreign key (id) references epub_ind_workflow (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Double context variables associated with individual workflow
     [exec] SQL> --     process instances.
     [exec] SQL> 
     [exec] SQL> create table epub_workflow_dbls (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_dbl     number(15,4)    null
     [exec]   5  ,constraint epub_wf_dbl_pkey primary key (id,tag)
     [exec]   6  ,constraint epub_wf_dbl_fkey foreign key (id) references epub_ind_workflow (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Date context variables associated with individual workflow process
     [exec] SQL> --     instances.
     [exec] SQL> 
     [exec] SQL> create table epub_workflow_dats (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_date    date    null
     [exec]   5  ,constraint epub_wf_dat_pkey primary key (id,tag)
     [exec]   6  ,constraint epub_wf_dat_fkey foreign key (id) references epub_ind_workflow (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Repository item context variables associated with individual
     [exec] SQL> --     workflow process instances.
     [exec] SQL> 
     [exec] SQL> create table epub_workflow_ris (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(255)   not null,
     [exec]   4  	     context_item    varchar2(255)   null
     [exec]   5  ,constraint epub_wf_ri_pkey primary key (id,tag)
     [exec]   6  ,constraint epub_wf_ri_fkey foreign key (id) references epub_ind_workflow (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Virtual file context variables associated with individual
     [exec] SQL> --     workflow process instances.
     [exec] SQL> 
     [exec] SQL> create table epub_workflow_vfs (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(25)    not null,
     [exec]   4  	     context_file    varchar2(255)   null
     [exec]   5  ,constraint epub_wf_vf_pkey primary key (id,tag)
     [exec]   6  ,constraint epub_wf_vf_fkey foreign key (id) references epub_ind_workflow (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Workflow infos.	Each of these infos corresponds to a workflow
     [exec] SQL> --     process definition created via the ACC UI.
     [exec] SQL> 
     [exec] SQL> create table epub_workflow_info (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     workflow_name   varchar2(255)   null,
     [exec]   4  	     workflow_status number(10)      null,
     [exec]   5  	     modification_time	     number(19)      null,
     [exec]   6  	     creation_time   number(19)      null,
     [exec]   7  	     author  varchar2(25)    null,
     [exec]   8  	     last_modified_by	     varchar2(25)    null,
     [exec]   9  	     psm_version     number(10)      null,
     [exec]  10  	     wdl     blob    null
     [exec]  11  ,constraint epub_wf_info_pkey primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_wf_mig_info (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     workflow_info_id	     varchar2(40)    not null,
     [exec]   4  	     workflow_name   varchar2(255)   null,
     [exec]   5  	     modification_time	     number(19)      null,
     [exec]   6  	     psm_version     number(10)      null,
     [exec]   7  	     migration_status	     number(10)      null,
     [exec]   8  	     wdl     blob    null
     [exec]   9  ,constraint epub_wf_mig_inf_pk primary key (id)
     [exec]  10  ,constraint epub_wf_mig_inf_fk foreign key (workflow_info_id) references epub_workflow_info (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index epub_wf_mig_info_x on epub_wf_mig_info (workflow_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table epub_wf_mg_inf_seg (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     idx     number(10)      not null,
     [exec]   4  	     segment_name    varchar2(255)   null
     [exec]   5  ,constraint epub_wf_mginfs_pk primary key (id,idx)
     [exec]   6  ,constraint epub_wf_mginfs_fk foreign key (id) references epub_wf_mig_info (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Workflow template infos.  Each of these infos corresponds to a
     [exec] SQL> --     workflow template process definition created via the ACC UI.
     [exec] SQL> 
     [exec] SQL> create table epub_wf_templ_info (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     template_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19)      null,
     [exec]   5  	     creation_time   number(19)      null,
     [exec]   6  	     author  varchar2(25)    null,
     [exec]   7  	     last_modified_by	     varchar2(25)    null,
     [exec]   8  	     wdl     blob    null
     [exec]   9  ,constraint epub_tl_info_pkey primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Pending collective transitions associated with workflow processes.
     [exec] SQL> 
     [exec] SQL> create table epub_wf_coll_trans (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     workflow_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19)      null,
     [exec]   5  	     server_id	     varchar2(40)    null,
     [exec]   6  	     event_type      varchar2(255)   null,
     [exec]   7  	     segment_name    varchar2(255)   null,
     [exec]   8  	     state   varchar2(16)    null,
     [exec]   9  	     coll_workflow_id	     varchar2(40)    null,
     [exec]  10  	     step    number(10)      null,
     [exec]  11  	     current_count   number(10)      null,
     [exec]  12  	     last_query_id   varchar2(40)    null,
     [exec]  13  	     message_bean    blob    null
     [exec]  14  ,constraint epub_wf_ctran_pkey primary key (id)
     [exec]  15  ,constraint epub_wf_ctran_fkey foreign key (coll_workflow_id) references epub_coll_workflow (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index epub_wfcolltrans_x on epub_wf_coll_trans (coll_workflow_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> --     Pending individual transitions associated with workflow processes.
     [exec] SQL> 
     [exec] SQL> create table epub_wf_ind_trans (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     workflow_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19)      null,
     [exec]   5  	     server_id	     varchar2(40)    null,
     [exec]   6  	     event_type      varchar2(255)   null,
     [exec]   7  	     segment_name    varchar2(255)   null,
     [exec]   8  	     state   varchar2(16)    null,
     [exec]   9  	     last_query_id   varchar2(40)    null,
     [exec]  10  	     message_bean    blob    null
     [exec]  11  ,constraint epub_wf_itran_pkey primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Pending deletions associated with workflow processes.
     [exec] SQL> 
     [exec] SQL> create table epub_wf_deletion (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     workflow_name   varchar2(255)   null,
     [exec]   4  	     modification_time	     number(19)      null
     [exec]   5  ,constraint epub_wf_del_pkey primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_wf_del_segs (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     idx     number(10)      not null,
     [exec]   4  	     segment_name    varchar2(255)   null
     [exec]   5  ,constraint epub_wf_delsg_pkey primary key (id,idx)
     [exec]   6  ,constraint epub_wf_delsg_fkey foreign key (id) references epub_wf_deletion (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Pending migrations associated with workflow processes.
     [exec] SQL> 
     [exec] SQL> create table epub_wf_migration (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     workflow_name   varchar2(255)   null,
     [exec]   4  	     old_mod_time    number(19)      null,
     [exec]   5  	     new_mod_time    number(19)      null,
     [exec]   6  	     migration_info_id	     varchar2(40)    null
     [exec]   7  ,constraint epub_wf_mig_pkey primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_wf_mig_segs (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     idx     number(10)      not null,
     [exec]   4  	     segment_name    varchar2(255)   null
     [exec]   5  ,constraint epub_wf_migsg_pkey primary key (id,idx)
     [exec]   6  ,constraint epub_wf_migsg_fkey foreign key (id) references epub_wf_migration (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Table that keeps track of how the various workflow process manager
     [exec] SQL> --     servers are classified.
     [exec] SQL> 
     [exec] SQL> create table epub_wf_server_id (
     [exec]   2  	     server_id	     varchar2(40)    not null,
     [exec]   3  	     server_type     number(10)      not null
     [exec]   4  ,constraint epub_wf_server_pk primary key (server_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/Publishing/version/9.4/pws/sql/xml/internal_user_profile_ddl.xml#1 $
     [exec] SQL> --     The tables here are for the user profile extensions needed by EPublishing.
     [exec] SQL> 
     [exec] SQL> create table epub_int_user (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     title   varchar2(255)   null,
     [exec]   4  	     expert  number(1)	     null,
     [exec]   5  	     def_listing     number(19)      null,
     [exec]   6  	     def_ip_listing  number(19)      null,
     [exec]   7  	     allow_applets   number(1)	     null
     [exec]   8  ,constraint epub_int_user_pk primary key (user_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table epub_int_prj_hist (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(19)      not null,
     [exec]   4  	     project_id      varchar2(40)    not null
     [exec]   5  ,constraint user_i_prj_hist_pk primary key (user_id,sequence_num)
     [exec]   6  ,constraint user_i_prj_hist_fk foreign key (user_id) references dpi_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- viewmapping_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --     ItemMapping    Mapps a component path + item name to that item's views.
     [exec] SQL> 
     [exec] SQL> create table vmap_im (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(64)    null,
     [exec]   4  	     description     varchar2(1024)  null,
     [exec]   5  	     item_path	     varchar2(255)   not null,
     [exec]   6  	     item_name	     varchar2(64)    not null,
     [exec]   7  	     is_readonly     number(1)	     null,
     [exec]   8  	     form_handler    varchar2(40)    null,
     [exec]   9  	     mode_id varchar2(40)    not null
     [exec]  10  ,constraint vmap_im_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index vmap_im_item on vmap_im (item_path,item_name,name);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> --     FormHandler
     [exec] SQL> 
     [exec] SQL> create table vmap_fh (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(64)    null,
     [exec]   4  	     description     varchar2(2048)  null,
     [exec]   5  	     component_path  varchar2(1024)  null
     [exec]   6  ,constraint vmap_fh_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     MapMode
     [exec] SQL> 
     [exec] SQL> create table vmap_mode (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(64)    not null,
     [exec]   4  	     description     varchar2(1024)  null,
     [exec]   5  	     fallback_id     varchar2(40)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     ItemViewMapping
     [exec] SQL> 
     [exec] SQL> create table vmap_ivm (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(64)    not null,
     [exec]   4  	     display_name    varchar2(64)    not null,
     [exec]   5  	     description     varchar2(1024)  null,
     [exec]   6  	     view_id varchar2(40)    null
     [exec]   7  ,constraint vmap_ivm_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     ItemMapping -> view ItemViewMapping relation
     [exec] SQL> 
     [exec] SQL> create table vmap_im2ivm_rel (
     [exec]   2  	     item_id varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     view_id varchar2(40)    not null
     [exec]   5  ,constraint vmap_im2ivm_pk primary key (item_id,sequence_num));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     ItemView
     [exec] SQL> 
     [exec] SQL> create table vmap_iv (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(64)    not null,
     [exec]   4  	     description     varchar2(1024)  not null,
     [exec]   5  	     uri     varchar2(255)   null,
     [exec]   6  	     app_name	     varchar2(255)   null,
     [exec]   7  	     mode_id varchar2(40)    not null
     [exec]   8  ,constraint vmap_iv_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     PropertyView
     [exec] SQL> 
     [exec] SQL> create table vmap_pv (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     name    varchar2(64)    not null,
     [exec]   4  	     type    varchar2(128)   not null,
     [exec]   5  	     component_type  varchar2(128)   null,
     [exec]   6  	     description     varchar2(1024)  not null,
     [exec]   7  	     uri     varchar2(255)   null,
     [exec]   8  	     app_name	     varchar2(255)   null,
     [exec]   9  	     mode_id varchar2(40)    not null,
     [exec]  10  	     container_family	     varchar2(128)   null,
     [exec]  11  	     is_default      number(1)	     null,
     [exec]  12  	     is_readonly     number(1)	     null,
     [exec]  13  	     is_component    number(1)	     null
     [exec]  14  ,constraint vmap_pv_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index vmap_pv_unique on vmap_pv (type,name,mode_id,is_component);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> --     The relationship between an ItemViewMapping and its    PropertyViewMapping items
     [exec] SQL> 
     [exec] SQL> create table vmap_ivm2pvm_rel (
     [exec]   2  	     ivm_id  varchar2(40)    not null,
     [exec]   3  	     pvm_id  varchar2(40)    not null,
     [exec]   4  	     name    varchar2(64)    not null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     PropertyViewMapping
     [exec] SQL> 
     [exec] SQL> create table vmap_pvm (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     description     varchar2(1024)  null,
     [exec]   4  	     pview_id	     varchar2(40)    null,
     [exec]   5  	     cpview_id	     varchar2(40)    null
     [exec]   6  ,constraint vmap_pvm_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     AttributeValue
     [exec] SQL> 
     [exec] SQL> create table vmap_attrval (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     attr_value      varchar2(2048)  null
     [exec]   4  ,constraint vmap_attrval_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     A table that provides the mapping between mapping items	  and AttributeValue items
     [exec] SQL> 
     [exec] SQL> create table vmap_attrval_rel (
     [exec]   2  	     mapper_id	     varchar2(40)    not null,
     [exec]   3  	     attribute_id    varchar2(40)    not null,
     [exec]   4  	     name    varchar2(64)    not null
     [exec]   5  ,constraint vmap_attvl_rel_pk primary key (mapper_id,attribute_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     A table that provides the mapping between mapping items	  and component AttributeValue items
     [exec] SQL> 
     [exec] SQL> create table vmap_cattrval_rel (
     [exec]   2  	     mapper_id	     varchar2(40)    not null,
     [exec]   3  	     attribute_id    varchar2(40)    not null,
     [exec]   4  	     name    varchar2(64)    not null
     [exec]   5  ,constraint vmap_ctvl_rel_pk primary key (mapper_id,attribute_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     ItemView -> ItemViewAttributeDefinition relation
     [exec] SQL> 
     [exec] SQL> create table vmap_iv2ivad_rel (
     [exec]   2  	     view_id varchar2(40)    not null,
     [exec]   3  	     attr_id varchar2(40)    not null,
     [exec]   4  	     name    varchar2(64)    not null
     [exec]   5  ,constraint vmap_iv2iva_pk primary key (view_id,name));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     ItemViewAttributeDefinition
     [exec] SQL> 
     [exec] SQL> create table vmap_ivattrdef (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     description     varchar2(1024)  null,
     [exec]   4  	     default_value   varchar2(1024)  null
     [exec]   5  ,constraint vmap_ivatdef_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     PropertyView -> PropertyViewAttributeDefinition relation
     [exec] SQL> 
     [exec] SQL> create table vmap_pv2pvad_rel (
     [exec]   2  	     view_id varchar2(40)    not null,
     [exec]   3  	     attr_id varchar2(40)    not null,
     [exec]   4  	     name    varchar2(64)    not null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     PropertyViewAttributeDefinition
     [exec] SQL> 
     [exec] SQL> create table vmap_pvattrdef (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     description     varchar2(1024)  null,
     [exec]   4  	     default_value   varchar2(1024)  null
     [exec]   5  ,constraint vmap_pvatdef_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- DAS
     [exec] SQL> @D:\ATG\ATG9.4\home/../DAS/Versioned/sql/install/oracle/das_versioned_ddl.sql
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- id_generator.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_id_generator (
     [exec]   2  	     id_space_name   varchar2(60)    not null,
     [exec]   3  	     seed    number(19,0)    not null,
     [exec]   4  	     batch_size      integer not null,
     [exec]   5  	     prefix  varchar2(10)    null,
     [exec]   6  	     suffix  varchar2(10)    null
     [exec]   7  ,constraint das_id_generator_p primary key (id_space_name));
     [exec] create table das_id_generator (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_secure_id_gen (
     [exec]   2  	     id_space_name   varchar2(60)    not null,
     [exec]   3  	     seed    number(19,0)    not null,
     [exec]   4  	     batch_size      integer not null,
     [exec]   5  	     ids_per_batch   integer null,
     [exec]   6  	     prefix  varchar2(10)    null,
     [exec]   7  	     suffix  varchar2(10)    null
     [exec]   8  ,constraint das_secure_id_ge_p primary key (id_space_name));
     [exec] create table das_secure_id_gen (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- cluster_name_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_cluster_name (
     [exec]   2  	     cluster_name    varchar2(255)   not null,
     [exec]   3  	     saved_date      number(19)      not null);
     [exec] create table das_cluster_name (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- dms_limbo_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- This table is where limbo instance/clients identify themselves. --There should only be one entry in this table for each Dynamo running PatchBay with message delays enabled.
     [exec] SQL> 
     [exec] SQL> create table dms_limbo (
     [exec]   2  	     limbo_name      varchar2(250)   not null,
     [exec]   3  	     limbo_id	     number(19,0)    not null
     [exec]   4  ,constraint limbo_pk primary key (limbo_name));
     [exec] create table dms_limbo (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- The following four tables comprise the parts of the stored messages.
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_msg (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     limbo_id	     number(19,0)    not null,
     [exec]   4  	     delivery_date   number(19,0)    not null,
     [exec]   5  	     delivery_count  number(2,0)     not null,
     [exec]   6  	     msg_src_name    varchar2(250)   not null,
     [exec]   7  	     port_name	     varchar2(250)   not null,
     [exec]   8  	     msg_class	     varchar2(250)   not null,
     [exec]   9  	     msg_class_type  number(1,0)     not null,
     [exec]  10  	     jms_type	     varchar2(250)   null,
     [exec]  11  	     jms_expiration  number(19,0)    null,
     [exec]  12  	     jms_correlationid	     varchar2(250)   null
     [exec]  13  ,constraint limbo_msg_pk primary key (msg_id));
     [exec] create table dms_limbo_msg (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dms_limbo_read_idx on dms_limbo_msg (limbo_id,delivery_date);
     [exec] create index dms_limbo_read_idx on dms_limbo_msg (limbo_id,delivery_date)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> -- If serialized reply-to destinations are known to be small enough, this binary column's size can be reduced for efficiency.  The size here has been chosen to work with local dms and SQL-JMS.
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_replyto (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     jms_replyto     blob    null
     [exec]   4  ,constraint limbo_replyto_pk primary key (msg_id));
     [exec] create table dms_limbo_replyto (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- If serialized message bodies are known to be small enough, this binary column's size can be reduced for efficiency.	The size here has been chosen to work with almost all types of messages but may be larger than necessary.	Actual usage analysis is recommended for finding the optimal binary column size.
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_body (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     msg_body	     blob    null
     [exec]   4  ,constraint limbo_body_pk primary key (msg_id));
     [exec] create table dms_limbo_body (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- This table represents a map of properties for messages stored above, i.e.  there can be multiple rows in this table for a single row in the preceeding tables.
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_props (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     prop_name	     varchar2(250)   not null,
     [exec]   4  	     prop_value      varchar2(250)   not null
     [exec]   5  ,constraint limbo_props_pk primary key (msg_id,prop_name));
     [exec] create table dms_limbo_props (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_ptypes (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     prop_name	     varchar2(250)   not null,
     [exec]   4  	     prop_type	     number(1,0)     not null
     [exec]   5  ,constraint dms_limbo_ptypes_p primary key (msg_id,prop_name));
     [exec] create table dms_limbo_ptypes (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_limbo_delay (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     delay   number(19,0)    not null,
     [exec]   4  	     max_attempts    number(2,0)     not null,
     [exec]   5  	     failure_port    varchar2(250)   not null,
     [exec]   6  	     jms_timestamp   number(19,0)    null,
     [exec]   7  	     jms_deliverymode	     number(10,0)    null,
     [exec]   8  	     jms_priority    number(10,0)    null,
     [exec]   9  	     jms_messageid   varchar2(250)   null,
     [exec]  10  	     jms_redelivered number(1,0)     null,
     [exec]  11  	     jms_destination blob    null
     [exec]  12  ,constraint limbo_delay_pk primary key (msg_id));
     [exec] create table dms_limbo_delay (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- create_sql_jms_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_client (
     [exec]   2  	     client_name     varchar2(250)   not null,
     [exec]   3  	     client_id	     number(19,0)    null
     [exec]   4  ,constraint dms_client_p primary key (client_name));
     [exec] create table dms_client (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_queue (
     [exec]   2  	     queue_name      varchar2(250)   null,
     [exec]   3  	     queue_id	     number(19,0)    not null,
     [exec]   4  	     temp_id number(19,0)    null
     [exec]   5  ,constraint dms_queue_p primary key (queue_id));
     [exec] create table dms_queue (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_queue_recv (
     [exec]   2  	     client_id	     number(19,0)    null,
     [exec]   3  	     receiver_id     number(19,0)    not null,
     [exec]   4  	     queue_id	     number(19,0)    null
     [exec]   5  ,constraint dms_queue_recv_p primary key (receiver_id));
     [exec] create table dms_queue_recv (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_queue_entry (
     [exec]   2  	     queue_id	     number(19,0)    not null,
     [exec]   3  	     msg_id  number(19,0)    not null,
     [exec]   4  	     delivery_date   number(19,0)    null,
     [exec]   5  	     handling_client_id      number(19,0)    null,
     [exec]   6  	     read_state      number(19,0)    null
     [exec]   7  ,constraint dms_queue_entry_p primary key (queue_id,msg_id));
     [exec] create table dms_queue_entry (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_topic (
     [exec]   2  	     topic_name      varchar2(250)   null,
     [exec]   3  	     topic_id	     number(19,0)    not null,
     [exec]   4  	     temp_id number(19,0)    null
     [exec]   5  ,constraint dms_topic_p primary key (topic_id));
     [exec] create table dms_topic (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_topic_sub (
     [exec]   2  	     client_id	     number(19,0)    null,
     [exec]   3  	     subscriber_name varchar2(250)   null,
     [exec]   4  	     subscriber_id   number(19,0)    not null,
     [exec]   5  	     topic_id	     number(19,0)    null,
     [exec]   6  	     durable number(1,0)     null,
     [exec]   7  	     active  number(1,0)     null
     [exec]   8  ,constraint dms_topic_sub_p primary key (subscriber_id));
     [exec] create table dms_topic_sub (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_topic_entry (
     [exec]   2  	     subscriber_id   number(19,0)    not null,
     [exec]   3  	     msg_id  number(19,0)    not null,
     [exec]   4  	     delivery_date   number(19,0)    null,
     [exec]   5  	     read_state      number(19,0)    null
     [exec]   6  ,constraint dms_topic_entry_p primary key (subscriber_id,msg_id));
     [exec] create table dms_topic_entry (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dms_topic_msg_idx on dms_topic_entry (msg_id,subscriber_id);
     [exec] create index dms_topic_msg_idx on dms_topic_entry (msg_id,subscriber_id)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> create index dms_topic_read_idx on dms_topic_entry (read_state,delivery_date);
     [exec] create index dms_topic_read_idx on dms_topic_entry (read_state,delivery_date)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dms_msg (
     [exec]   2  	     msg_class	     varchar2(250)   null,
     [exec]   3  	     has_properties  number(1,0)     null,
     [exec]   4  	     reference_count number(10,0)    null,
     [exec]   5  	     msg_id  number(19,0)    not null,
     [exec]   6  	     timestamp	     number(19,0)    null,
     [exec]   7  	     correlation_id  varchar2(250)   null,
     [exec]   8  	     reply_to	     number(19,0)    null,
     [exec]   9  	     destination     number(19,0)    null,
     [exec]  10  	     delivery_mode   number(1,0)     null,
     [exec]  11  	     redelivered     number(1,0)     null,
     [exec]  12  	     type    varchar2(250)   null,
     [exec]  13  	     expiration      number(19,0)    null,
     [exec]  14  	     priority	     number(1,0)     null,
     [exec]  15  	     small_body      blob    null,
     [exec]  16  	     large_body      blob    null
     [exec]  17  ,constraint dms_msg_p primary key (msg_id));
     [exec] create table dms_msg (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dms_msg_properties (
     [exec]   2  	     msg_id  number(19,0)    not null,
     [exec]   3  	     data_type	     number(1,0)     null,
     [exec]   4  	     name    varchar2(250)   not null,
     [exec]   5  	     value   varchar2(250)   null
     [exec]   6  ,constraint dms_msg_properti_p primary key (msg_id,name));
     [exec] create table dms_msg_properties (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create or replace procedure dms_queue_flag
     [exec]   2  (Pbatch_size	IN NUMBER
     [exec]   3  ,Pread_lock	IN NUMBER
     [exec]   4  ,Pdelivery_date IN NUMBER
     [exec]   5  ,Pclient_id	IN NUMBER
     [exec]   6  ,Pqueue_id	IN NUMBER
     [exec]   7  ,Pupdate_count	OUT NUMBER)
     [exec]   8  as
     [exec]   9  		  Begin
     [exec]  10  	 UPDATE dms_queue_entry qe
     [exec]  11  	 SET qe.handling_client_id = Pclient_id,
     [exec]  12  	     qe.read_state = Pread_lock
     [exec]  13  	 WHERE ROWNUM < Pbatch_size
     [exec]  14  	   AND qe.handling_client_id < 0
     [exec]  15  	   AND qe.delivery_date < Pdelivery_date
     [exec]  16  	   AND qe.queue_id = Pqueue_id;
     [exec]  17  	 Pupdate_count := SQL%ROWCOUNT;
     [exec]  18    END;
     [exec]  19  
     [exec]  20  /
     [exec] 
     [exec] Procedure created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create or replace procedure dms_topic_flag
     [exec]   2  (Pbatch_size	IN NUMBER
     [exec]   3  ,Pread_lock	IN NUMBER
     [exec]   4  ,Pdelivery_date IN NUMBER
     [exec]   5  ,Psubscriber_id IN NUMBER
     [exec]   6  ,Pupdate_count	OUT NUMBER)
     [exec]   7  as
     [exec]   8  		  Begin
     [exec]   9  	 UPDATE dms_topic_entry te
     [exec]  10  	 SET te.read_state = Pread_lock
     [exec]  11  	 WHERE ROWNUM < Pbatch_size
     [exec]  12  	   AND te.delivery_date < Pdelivery_date
     [exec]  13  	   AND te.read_state = 0
     [exec]  14  	   AND te.subscriber_id = Psubscriber_id;
     [exec]  15  	 Pupdate_count := SQL%ROWCOUNT;
     [exec]  16    END;
     [exec]  17  
     [exec]  18  /
     [exec] 
     [exec] Procedure created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- create_staff_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- SQL for creating the Dynamo Staff Repository for the GSA
     [exec] SQL> -- Primary account table.
     [exec] SQL> --  Type=1 is a login account.	The first_name, last_name, and password	     fields are valid for this type of account.
     [exec] SQL> -- Type=2 is a group account.  The description field is valid for	      this type of account.
     [exec] SQL> -- Type=4 is a privilege account.	The description field is valid for	  this type of account.
     [exec] SQL> 
     [exec] SQL> create table das_account (
     [exec]   2  	     account_name    varchar2(254)   not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     first_name      varchar2(254)   null,
     [exec]   5  	     last_name	     varchar2(254)   null,
     [exec]   6  	     password	     varchar2(254)   null,
     [exec]   7  	     description     varchar2(254)   null,
     [exec]   8  	     lastpwdupdate   date    null
     [exec]   9  ,constraint das_account_p primary key (account_name));
     [exec] create table das_account (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_group_assoc (
     [exec]   2  	     account_name    varchar2(254)   not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     group_name      varchar2(254)   not null
     [exec]   5  ,constraint das_grp_asc_p primary key (account_name,sequence_num));
     [exec] create table das_group_assoc (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Adding the previous password information
     [exec] SQL> 
     [exec] SQL> create table das_acct_prevpwd (
     [exec]   2  	     account_name    varchar2(254)   not null,
     [exec]   3  	     seq_num number(10)      not null,
     [exec]   4  	     prevpwd varchar2(35)    null
     [exec]   5  ,constraint das_prevpwd_p primary key (account_name,seq_num)
     [exec]   6  ,constraint das_prvpwd_d_f foreign key (account_name) references das_account (account_name));
     [exec] create table das_acct_prevpwd (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- create_gsa_subscribers_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_gsa_subscriber (
     [exec]   2  	     id      integer not null,
     [exec]   3  	     address varchar2(50)    not null,
     [exec]   4  	     port    integer not null,
     [exec]   5  	     repository      varchar2(256)   not null,
     [exec]   6  	     itemdescriptor  varchar2(256)   not null
     [exec]   7  ,constraint das_gsa_subscrib_p primary key (id));
     [exec] create table das_gsa_subscriber (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- create_sds.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_sds (
     [exec]   2  	     sds_name	     varchar2(50)    not null,
     [exec]   3  	     curr_ds_name    varchar2(50)    null,
     [exec]   4  	     dynamo_server   varchar2(80)    null,
     [exec]   5  	     last_modified   date    null
     [exec]   6  ,constraint das_sds_p primary key (sds_name));
     [exec] create table das_sds (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- integration_data_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table if_integ_data (
     [exec]   2  	     item_id varchar2(40)    not null,
     [exec]   3  	     descriptor      varchar2(64)    not null,
     [exec]   4  	     repository      varchar2(255)   not null,
     [exec]   5  	     state   number(10)      not null,
     [exec]   6  	     last_import     date    null,
     [exec]   7  	     version number(10)      not null
     [exec]   8  ,constraint if_int_data_p primary key (item_id,descriptor,repository));
     [exec] create table if_integ_data (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- nucleus_security_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_nucl_sec (
     [exec]   2  	     func_name	     varchar2(254)   not null,
     [exec]   3  	     policy  varchar2(254)   not null
     [exec]   4  ,constraint func_name_pk primary key (func_name));
     [exec] create table das_nucl_sec (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_ns_acls (
     [exec]   2  	     id      varchar2(254)   not null,
     [exec]   3  	     index_num	     number(10)      not null,
     [exec]   4  	     acl     varchar2(254)   not null
     [exec]   5  ,constraint id_index_pk primary key (id,index_num));
     [exec] create table das_ns_acls (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- media_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --     media content repository tables.
     [exec] SQL> 
     [exec] SQL> create table media_folder (
     [exec]   2  	     folder_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     name    varchar2(254)   not null,
     [exec]   7  	     path    varchar2(254)   not null,
     [exec]   8  	     parent_folder_id	     varchar2(40)    null
     [exec]   9  ,constraint md_folder_p primary key (folder_id)
     [exec]  10  ,constraint md_foldparnt_fl_f foreign key (parent_folder_id) references media_folder (folder_id));
     [exec] create table media_folder (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index fldr_mfldrid_idx on media_folder (parent_folder_id);
     [exec] create index fldr_mfldrid_idx on media_folder (parent_folder_id)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> create index md_fldr_path_idx on media_folder (path);
     [exec] create index md_fldr_path_idx on media_folder (path)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table media_base (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     creation_date   date    null,
     [exec]   5  	     description     varchar2(254)   null,
     [exec]   6  	     name    varchar2(254)   not null,
     [exec]   7  	     path    varchar2(254)   not null,
     [exec]   8  	     parent_folder_id	     varchar2(40)    not null,
     [exec]   9  	     media_type      integer null
     [exec]  10  ,constraint media_p primary key (media_id)
     [exec]  11  ,constraint medparnt_fl_f foreign key (parent_folder_id) references media_folder (folder_id));
     [exec] create table media_base (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index med_mfldrid_idx on media_base (parent_folder_id);
     [exec] create index med_mfldrid_idx on media_base (parent_folder_id)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> create index media_path_idx on media_base (path);
     [exec] create index media_path_idx on media_base (path)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> create index media_type_idx on media_base (media_type);
     [exec] create index media_type_idx on media_base (media_type)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table media_ext (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     url     varchar2(254)   not null
     [exec]   4  ,constraint media_ext_p primary key (media_id)
     [exec]   5  ,constraint medxtmed_d_f foreign key (media_id) references media_base (media_id));
     [exec] create table media_ext (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table media_bin (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     length  integer not null,
     [exec]   4  	     last_modified   date    not null,
     [exec]   5  	     data    blob    not null
     [exec]   6  ,constraint media_bin_p primary key (media_id)
     [exec]   7  ,constraint medbnmed_d_f foreign key (media_id) references media_base (media_id));
     [exec] create table media_bin (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table media_txt (
     [exec]   2  	     media_id	     varchar2(40)    not null,
     [exec]   3  	     length  integer not null,
     [exec]   4  	     last_modified   date    not null,
     [exec]   5  	     data    clob    not null
     [exec]   6  ,constraint media_txt_p primary key (media_id)
     [exec]   7  ,constraint medtxtmed_d_f foreign key (media_id) references media_base (media_id));
     [exec] create table media_txt (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- deployment_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --     These tables are for the daf deployment system
     [exec] SQL> 
     [exec] SQL> create table das_deployment (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     start_time      date    null,
     [exec]   5  	     end_time	     date    null,
     [exec]   6  	     failure_time    date    null,
     [exec]   7  	     status  number(10)      null,
     [exec]   8  	     prev_status     number(10)      null,
     [exec]   9  	     status_detail   varchar2(255)   null,
     [exec]  10  	     current_phase   number(10)      null,
     [exec]  11  	     rep_high_mark   number(10)      null,
     [exec]  12  	     rep_marks_avail number(10)      null,
     [exec]  13  	     file_high_mark  number(10)      null,
     [exec]  14  	     file_marks_avail	     number(10)      null,
     [exec]  15  	     thread_batch_size	     number(10)      null,
     [exec]  16  	     failure_count   number(10)      null,
     [exec]  17  	     purge_deploy_data	     number(1)	     null
     [exec]  18  ,constraint daf_depl_pk primary key (deployment_id));
     [exec] create table das_deployment (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index das_dpl_start_idx on das_deployment (start_time);
     [exec] create index das_dpl_start_idx on das_deployment (start_time)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_depl_progress (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     work_completed  number(10)      null,
     [exec]   5  	     total_work      number(10)      null);
     [exec] create table das_depl_progress (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_thread_batch (
     [exec]   2  	     thread_batch_id varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     deployment      varchar2(40)    null,
     [exec]   5  	     type    number(10)      null,
     [exec]   6  	     owner   varchar2(255)   null,
     [exec]   7  	     thread_name     varchar2(255)   null,
     [exec]   8  	     lower_bound     number(10)      null,
     [exec]   9  	     upper_bound     number(10)      null,
     [exec]  10  	     last_update_time	     timestamp	     null,
     [exec]  11  	     running number(1,0)     not null
     [exec]  12  ,constraint das_dpl_tb_pk primary key (thread_batch_id));
     [exec] create table das_thread_batch (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index das_tb_deployment on das_thread_batch (deployment);
     [exec] create index das_tb_deployment on das_thread_batch (deployment)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> create index das_tb_owner on das_thread_batch (owner);
     [exec] create index das_tb_owner on das_thread_batch (owner)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> create index das_tb_thread_nam on das_thread_batch (thread_name);
     [exec] create index das_tb_thread_nam on das_thread_batch (thread_name)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_deploy_data (
     [exec]   2  	     deploy_data_id  varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     type    number(10)      null,
     [exec]   5  	     source  varchar2(255)   null,
     [exec]   6  	     destination     varchar2(255)   null,
     [exec]   7  	     dest_server     varchar2(255)   null,
     [exec]   8  	     deployment      varchar2(40)    null
     [exec]   9  ,constraint deploy_data_pk primary key (deploy_data_id)
     [exec]  10  ,constraint dd_deployment_fk foreign key (deployment) references das_deployment (deployment_id));
     [exec] create table das_deploy_data (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dd_deployment_idx on das_deploy_data (deployment);
     [exec] create index dd_deployment_idx on das_deploy_data (deployment)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_deploy_mark (
     [exec]   2  	     marker_id	     varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     type    number(10)      null,
     [exec]   5  	     status  number(10)      null,
     [exec]   6  	     index_number    number(10)      null,
     [exec]   7  	     marker_action   number(10)      null,
     [exec]   8  	     f_src_devline_id	     varchar2(40)    null,
     [exec]   9  	     r_src_devline_id	     varchar2(40)    null,
     [exec]  10  	     deployment_id   varchar2(40)    null,
     [exec]  11  	     deployment_data varchar2(40)    null
     [exec]  12  ,constraint marker_pk primary key (marker_id));
     [exec] create table das_deploy_mark (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index marker_index_idx on das_deploy_mark (index_number);
     [exec] create index marker_index_idx on das_deploy_mark (index_number)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_rep_mark (
     [exec]   2  	     rep_marker_id   varchar2(40)    not null,
     [exec]   3  	     item_desc_name  varchar2(255)   null,
     [exec]   4  	     item_id varchar2(255)   null
     [exec]   5  ,constraint rep_marker_pk primary key (rep_marker_id));
     [exec] create table das_rep_mark (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_file_mark (
     [exec]   2  	     file_marker_id  varchar2(40)    not null,
     [exec]   3  	     file_path	     varchar2(1000)  null
     [exec]   4  ,constraint file_marker_pk primary key (file_marker_id));
     [exec] create table das_file_mark (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_depl_depldat (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     deployment_data varchar2(40)    null
     [exec]   5  ,constraint das_dpl_depdat_pk primary key (deployment_id,sequence_num));
     [exec] create table das_depl_depldat (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_depl_options (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(255)   not null,
     [exec]   4  	     optionValue     varchar2(255)   null
     [exec]   5  ,constraint das_dpl_depopt_pk primary key (deployment_id,tag));
     [exec] create table das_depl_options (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_depl_repmaps (
     [exec]   2  	     deployment_id   varchar2(40)    not null,
     [exec]   3  	     source  varchar2(255)   not null,
     [exec]   4  	     destination     varchar2(255)   null
     [exec]   5  ,constraint das_dpl_repmap_pk primary key (deployment_id,source));
     [exec] create table das_depl_repmaps (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table das_depl_item_ref (
     [exec]   2  	     item_ref_id     varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     deployment_id   varchar2(40)    null,
     [exec]   5  	     repository      varchar2(255)   null,
     [exec]   6  	     item_desc_name  varchar2(255)   null,
     [exec]   7  	     item_id varchar2(255)   null,
     [exec]   8  	     item_index      number(10)      null
     [exec]   9  ,constraint das_dpl_itmref_pk primary key (item_ref_id));
     [exec] create table das_depl_item_ref (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index das_dpl_itmx_idx on das_depl_item_ref (item_index);
     [exec] create index das_dpl_itmx_idx on das_depl_item_ref (item_index)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> create index das_dpl_dplid_idx on das_depl_item_ref (deployment_id);
     [exec] create index das_dpl_dplid_idx on das_depl_item_ref (deployment_id)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_dd_markers (
     [exec]   2  	     deploy_data_id  varchar2(40)    not null,
     [exec]   3  	     sequence_num    number(10)      not null,
     [exec]   4  	     marker  varchar2(40)    null
     [exec]   5  ,constraint das_dpl_dd_mrk_pk primary key (deploy_data_id,sequence_num)
     [exec]   6  ,constraint marker_fk foreign key (marker) references das_deploy_mark (marker_id));
     [exec] create table das_dd_markers (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index marker_idx on das_dd_markers (marker);
     [exec] create index marker_idx on das_dd_markers (marker)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table das_dep_fail_info (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     deployment_id   varchar2(40)    not null,
     [exec]   4  	     marker_id	     varchar2(40)    null,
     [exec]   5  	     severity	     varchar2(40)    null,
     [exec]   6  	     failure_message varchar2(255)   null,
     [exec]   7  	     failure_time    timestamp	     null,
     [exec]   8  	     error_code      varchar2(40)    null,
     [exec]   9  	     cause   clob    null);
     [exec] create table das_dep_fail_info (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- sitemap_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Table for siteindex repository item
     [exec] SQL> 
     [exec] SQL> create table das_siteindex (
     [exec]   2  	     siteindex_id    varchar2(40)    not null,
     [exec]   3  	     lastmod date    null,
     [exec]   4  	     filename	     varchar2(100)   null,
     [exec]   5  	     xml     clob    null
     [exec]   6  ,constraint siteindex_pk primary key (siteindex_id));
     [exec] create table das_siteindex (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Table for sitemap repository item
     [exec] SQL> 
     [exec] SQL> create table das_sitemap (
     [exec]   2  	     sitemap_id      varchar2(40)    not null,
     [exec]   3  	     lastmod date    null,
     [exec]   4  	     filename	     varchar2(100)   null,
     [exec]   5  	     xml     clob    null
     [exec]   6  ,constraint sitemap_pk primary key (sitemap_id));
     [exec] create table das_sitemap (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- versioned_seo_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Table for seo-tag repository item
     [exec] SQL> 
     [exec] SQL> create table das_seo_tag (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     seo_tag_id      varchar2(40)    not null,
     [exec]  11  	     display_name    varchar2(100)   null,
     [exec]  12  	     title   varchar2(254)   null,
     [exec]  13  	     description     varchar2(254)   null,
     [exec]  14  	     keywords	     varchar2(254)   null,
     [exec]  15  	     content_key     varchar2(100)   null
     [exec]  16  ,constraint das_seo_tag_pk primary key (seo_tag_id,asset_version));
     [exec] create table das_seo_tag (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index das_seo_tag_wsx on das_seo_tag (workspace_id);
     [exec] create index das_seo_tag_wsx on das_seo_tag (workspace_id)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> create index das_seo_tag_cix on das_seo_tag (checkin_date);
     [exec] create index das_seo_tag_cix on das_seo_tag (checkin_date)
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- DCS
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/Versioned/sql/install/oracle/dcs_versioned_ddl.sql
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- commerce_user.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dps_credit_card (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     credit_card_number      varchar2(40)    null,
     [exec]   4  	     credit_card_type	     varchar2(40)    null,
     [exec]   5  	     expiration_month	     varchar2(20)    null,
     [exec]   6  	     exp_day_of_month	     varchar2(20)    null,
     [exec]   7  	     expiration_year varchar2(20)    null,
     [exec]   8  	     billing_addr    varchar2(40)    null
     [exec]   9  ,constraint dps_credit_card_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_crcdba_idx on dps_credit_card (billing_addr);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_user (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     allow_partial_ship      number(1,0)     null,
     [exec]   4  	     default_creditcard      varchar2(40)    null,
     [exec]   5  	     daytime_phone_num	     varchar2(20)    null,
     [exec]   6  	     express_checkout	     number(1,0)     null,
     [exec]   7  	     default_carrier varchar2(256)   null
     [exec]   8  ,constraint dcs_user_p primary key (user_id)
     [exec]   9  ,constraint dcs_usrdeflt_cr_f foreign key (default_creditcard) references dps_credit_card (id)
     [exec]  10  ,constraint dcs_user1_c check (allow_partial_ship in (0,1))
     [exec]  11  ,constraint dcs_user2_c check (express_checkout in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_usrdcc_idx on dcs_user (default_creditcard);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dps_usr_creditcard (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     credit_card_id  varchar2(40)    not null
     [exec]   5  ,constraint dps_usr_creditca_p primary key (user_id,tag)
     [exec]   6  ,constraint dps_usrccredt_cr_f foreign key (credit_card_id) references dps_credit_card (id)
     [exec]   7  ,constraint dps_usrcusr_d_f foreign key (user_id) references dps_user (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dps_ucccid_idx on dps_usr_creditcard (credit_card_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dps_uccuid_idx on dps_usr_creditcard (user_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- versioned_product_catalog_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_folder (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     folder_id	     varchar2(40)    not null,
     [exec]  11  	     version integer not null,
     [exec]  12  	     creation_date   date    null,
     [exec]  13  	     start_date      date    null,
     [exec]  14  	     end_date	     date    null,
     [exec]  15  	     description     varchar2(254)   null,
     [exec]  16  	     name    varchar2(254)   not null,
     [exec]  17  	     path    varchar2(254)   not null,
     [exec]  18  	     parent_folder_id	     varchar2(40)    null
     [exec]  19  ,constraint dcs_folder_p primary key (folder_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index fldr_end_dte_idx on dcs_folder (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index fldr_path_idx on dcs_folder (path);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index fldr_strt_dte_idx on dcs_folder (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_folder_wsx on dcs_folder (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_folder_cix on dcs_folder (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_media (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     media_id	     varchar2(40)    not null,
     [exec]  11  	     version integer not null,
     [exec]  12  	     creation_date   date    null,
     [exec]  13  	     start_date      date    null,
     [exec]  14  	     end_date	     date    null,
     [exec]  15  	     description     varchar2(254)   null,
     [exec]  16  	     name    varchar2(254)   not null,
     [exec]  17  	     path    varchar2(254)   not null,
     [exec]  18  	     parent_folder_id	     varchar2(40)    not null,
     [exec]  19  	     media_type      integer null
     [exec]  20  ,constraint dcs_media_p primary key (media_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index med_end_dte_idx on dcs_media (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index med_path_idx on dcs_media (path);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index med_strt_dte_idx on dcs_media (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index med_type_idx on dcs_media (media_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_media_wsx on dcs_media (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_media_cix on dcs_media (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_media_ext (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     media_id	     varchar2(40)    not null,
     [exec]   4  	     url     varchar2(254)   not null
     [exec]   5  ,constraint dcs_media_ext_p primary key (media_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_media_bin (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     media_id	     varchar2(40)    not null,
     [exec]   4  	     length  integer not null,
     [exec]   5  	     last_modified   date    not null,
     [exec]   6  	     data    blob    not null
     [exec]   7  ,constraint dcs_media_bin_p primary key (media_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_media_txt (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     media_id	     varchar2(40)    not null,
     [exec]   4  	     length  integer not null,
     [exec]   5  	     last_modified   date    not null,
     [exec]   6  	     data    clob    not null
     [exec]   7  ,constraint dcs_media_txt_p primary key (media_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_category (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     category_id     varchar2(40)    not null,
     [exec]  11  	     version integer not null,
     [exec]  12  	     catalog_id      varchar2(40)    null,
     [exec]  13  	     creation_date   date    null,
     [exec]  14  	     start_date      date    null,
     [exec]  15  	     end_date	     date    null,
     [exec]  16  	     display_name    varchar2(254)   null,
     [exec]  17  	     description     varchar2(254)   null,
     [exec]  18  	     long_description	     clob    null,
     [exec]  19  	     parent_cat_id   varchar2(40)    null,
     [exec]  20  	     category_type   integer null,
     [exec]  21  	     root_category   number(1,0)     null
     [exec]  22  ,constraint dcs_category_p primary key (category_id,asset_version)
     [exec]  23  ,constraint dcs_category_c check (root_category in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index cat_end_dte_idx on dcs_category (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index cat_pcatid_idx on dcs_category (parent_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index cat_strt_dte_idx on dcs_category (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index cat_type_idx on dcs_category (category_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_category_wsx on dcs_category (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_category_cix on dcs_category (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_category_acl (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     category_id     varchar2(40)    not null,
     [exec]   4  	     item_acl	     varchar2(1024)  null
     [exec]   5  ,constraint dcs_category_acl_p primary key (category_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_product (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     product_id      varchar2(40)    not null,
     [exec]  11  	     version integer not null,
     [exec]  12  	     creation_date   date    null,
     [exec]  13  	     start_date      date    null,
     [exec]  14  	     end_date	     date    null,
     [exec]  15  	     display_name    varchar2(254)   null,
     [exec]  16  	     description     varchar2(254)   null,
     [exec]  17  	     long_description	     clob    null,
     [exec]  18  	     parent_cat_id   varchar2(40)    null,
     [exec]  19  	     product_type    integer null,
     [exec]  20  	     admin_display   varchar2(254)   null,
     [exec]  21  	     nonreturnable   number(1,0)     null,
     [exec]  22  	     brand   varchar2(254)   null,
     [exec]  23  	     disallow_recommend      number(1,0)     null
     [exec]  24  ,constraint dcs_product_p primary key (product_id,asset_version)
     [exec]  25  ,constraint dcs_product_c check (nonreturnable in (0,1))
     [exec]  26  ,constraint dcs_product1_c check (disallow_recommend in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index prd_end_dte_idx on dcs_product (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prd_pcatid_idx on dcs_product (parent_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prd_strt_dte_idx on dcs_product (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prd_type_idx on dcs_product (product_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_product_wsx on dcs_product (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_product_cix on dcs_product (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_product_acl (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     product_id      varchar2(40)    not null,
     [exec]   4  	     item_acl	     varchar2(1024)  null
     [exec]   5  ,constraint dcs_product_acl_p primary key (product_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     sku_id  varchar2(40)    not null,
     [exec]  11  	     version integer not null,
     [exec]  12  	     creation_date   date    null,
     [exec]  13  	     start_date      date    null,
     [exec]  14  	     end_date	     date    null,
     [exec]  15  	     display_name    varchar2(254)   null,
     [exec]  16  	     description     varchar2(254)   null,
     [exec]  17  	     sku_type	     integer null,
     [exec]  18  	     wholesale_price number(19,7)    null,
     [exec]  19  	     list_price      number(19,7)    null,
     [exec]  20  	     sale_price      number(19,7)    null,
     [exec]  21  	     on_sale number(1,0)     null,
     [exec]  22  	     tax_status      integer null,
     [exec]  23  	     fulfiller	     integer null,
     [exec]  24  	     item_acl	     varchar2(1024)  null,
     [exec]  25  	     nonreturnable   number(1,0)     null
     [exec]  26  ,constraint dcs_sku_p primary key (sku_id,asset_version)
     [exec]  27  ,constraint dcs_sku_c check (on_sale in (0,1))
     [exec]  28  ,constraint dcs_sku1_c check (nonreturnable in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sku_end_dte_idx on dcs_sku (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sku_lstprice_idx on dcs_sku (list_price);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sku_sleprice_idx on dcs_sku (sale_price);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sku_strt_dte_idx on dcs_sku (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sku_type_idx on dcs_sku (sku_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_sku_wsx on dcs_sku (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_sku_cix on dcs_sku (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_groups (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     category_id     varchar2(40)    not null,
     [exec]   4  	     child_prd_group varchar2(254)   null,
     [exec]   5  	     child_cat_group varchar2(254)   null,
     [exec]   6  	     related_cat_group	     varchar2(254)   null
     [exec]   7  ,constraint dcs_cat_groups_p primary key (category_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_chldprd (
     [exec]   2  	     sec_asset_version	     number(19)      not null,
     [exec]   3  	     asset_version   number(19)      not null,
     [exec]   4  	     category_id     varchar2(40)    not null,
     [exec]   5  	     sequence_num    integer not null,
     [exec]   6  	     child_prd_id    varchar2(40)    not null
     [exec]   7  ,constraint dcs_cat_chldprd_p primary key (category_id,sequence_num,asset_version,sec_asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_chldprd_cid_idx on dcs_cat_chldprd (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_chldcat (
     [exec]   2  	     sec_asset_version	     number(19)      not null,
     [exec]   3  	     asset_version   number(19)      not null,
     [exec]   4  	     category_id     varchar2(40)    not null,
     [exec]   5  	     sequence_num    integer not null,
     [exec]   6  	     child_cat_id    varchar2(40)    not null
     [exec]   7  ,constraint dcs_cat_chldcat_p primary key (category_id,sequence_num,asset_version,sec_asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_chldcat_cid_idx on dcs_cat_chldcat (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_ancestors (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     category_id     varchar2(40)    not null,
     [exec]   4  	     anc_cat_id      varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_ancestor_p primary key (category_id,anc_cat_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_ct_anc_cat_id on dcs_cat_ancestors (anc_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_ct_cat_id on dcs_cat_ancestors (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_rltdcat (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     category_id     varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null,
     [exec]   5  	     related_cat_id  varchar2(40)    not null
     [exec]   6  ,constraint dcs_cat_rltdcat_p primary key (category_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_rltdcat_cid_idx on dcs_cat_rltdcat (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_keywrds (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     category_id     varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null,
     [exec]   5  	     keyword varchar2(254)   not null
     [exec]   6  ,constraint dcs_cat_keywrds_p primary key (category_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index cat_keywrds_idx on dcs_cat_keywrds (keyword);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_keywrds_cid_idx on dcs_cat_keywrds (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_media (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     category_id     varchar2(40)    not null,
     [exec]   4  	     template_id     varchar2(40)    null,
     [exec]   5  	     thumbnail_image_id      varchar2(40)    null,
     [exec]   6  	     small_image_id  varchar2(40)    null,
     [exec]   7  	     large_image_id  varchar2(40)    null
     [exec]   8  ,constraint dcs_cat_media_p primary key (category_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_aux_media (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     category_id     varchar2(40)    not null,
     [exec]   4  	     tag     varchar2(42)    not null,
     [exec]   5  	     media_id	     varchar2(40)    not null
     [exec]   6  ,constraint dcs_cat_aux_medi_p primary key (category_id,tag,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_aux_mdia_ci_idx on dcs_cat_aux_media (category_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_keywrds (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     product_id      varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null,
     [exec]   5  	     keyword varchar2(254)   not null
     [exec]   6  ,constraint dcs_prd_keywrds_p primary key (product_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index prd_keywrds_idx on dcs_prd_keywrds (keyword);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pr_keywrds_pid_idx on dcs_prd_keywrds (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_media (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     product_id      varchar2(40)    not null,
     [exec]   4  	     template_id     varchar2(40)    null,
     [exec]   5  	     thumbnail_image_id      varchar2(40)    null,
     [exec]   6  	     small_image_id  varchar2(40)    null,
     [exec]   7  	     large_image_id  varchar2(40)    null
     [exec]   8  ,constraint dcs_prd_media_p primary key (product_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_aux_media (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     product_id      varchar2(40)    not null,
     [exec]   4  	     tag     varchar2(42)    not null,
     [exec]   5  	     media_id	     varchar2(40)    not null
     [exec]   6  ,constraint dcs_prd_aux_medi_p primary key (product_id,tag,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_aux_mdia_pi_idx on dcs_prd_aux_media (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_chldsku (
     [exec]   2  	     sec_asset_version	     number(19)      not null,
     [exec]   3  	     asset_version   number(19)      not null,
     [exec]   4  	     product_id      varchar2(40)    not null,
     [exec]   5  	     sequence_num    integer not null,
     [exec]   6  	     sku_id  varchar2(40)    not null
     [exec]   7  ,constraint dcs_prd_chldsku_p primary key (product_id,sequence_num,asset_version,sec_asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_chldsku_pid_idx on dcs_prd_chldsku (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_skuattr (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     product_id      varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null,
     [exec]   5  	     attribute_name  varchar2(40)    not null
     [exec]   6  ,constraint dcs_prd_skuattr_p primary key (product_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_skuattr_pid_idx on dcs_prd_skuattr (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_groups (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     product_id      varchar2(40)    not null,
     [exec]   4  	     related_prd_group	     varchar2(254)   null,
     [exec]   5  	     upsl_prd_group  varchar2(254)   null
     [exec]   6  ,constraint dcs_prd_groups_p primary key (product_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_rltdprd (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     product_id      varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null,
     [exec]   5  	     related_prd_id  varchar2(40)    not null
     [exec]   6  ,constraint dcs_prd_rltdprd_p primary key (product_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pr_rltdprd_pid_idx on dcs_prd_rltdprd (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_upslprd (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     product_id      varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null,
     [exec]   5  	     upsell_prd_id   varchar2(40)    not null
     [exec]   6  ,constraint dcs_prd_upslprd_p primary key (product_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_ancestors (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     product_id      varchar2(40)    not null,
     [exec]   4  	     anc_cat_id      varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_ancestor_p primary key (product_id,anc_cat_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_prd_anc_cat_id on dcs_prd_ancestors (anc_cat_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_prd_prd_id on dcs_prd_ancestors (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_attr (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     sku_id  varchar2(40)    not null,
     [exec]   4  	     attribute_name  varchar2(42)    not null,
     [exec]   5  	     attribute_value varchar2(254)   not null
     [exec]   6  ,constraint dcs_sku_attr_p primary key (sku_id,attribute_name,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sku_attr_skuid_idx on dcs_sku_attr (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_link (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     sku_link_id     varchar2(40)    not null,
     [exec]  11  	     version integer not null,
     [exec]  12  	     creation_date   date    null,
     [exec]  13  	     start_date      date    null,
     [exec]  14  	     end_date	     date    null,
     [exec]  15  	     display_name    varchar2(254)   null,
     [exec]  16  	     description     varchar2(254)   null,
     [exec]  17  	     quantity	     integer not null,
     [exec]  18  	     bundle_item     varchar2(40)    not null,
     [exec]  19  	     item_acl	     varchar2(1024)  null
     [exec]  20  ,constraint dcs_sku_link_p primary key (sku_link_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index skl_end_dte_idx on dcs_sku_link (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index skl_strt_dte_idx on dcs_sku_link (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_sku_link_wsx on dcs_sku_link (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_sku_link_cix on dcs_sku_link (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_bndllnk (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     sku_id  varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null,
     [exec]   5  	     sku_link_id     varchar2(40)    not null
     [exec]   6  ,constraint dcs_sku_bndllnk_p primary key (sku_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_bndllnk_sid_idx on dcs_sku_bndllnk (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_media (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     sku_id  varchar2(40)    not null,
     [exec]   4  	     template_id     varchar2(40)    null,
     [exec]   5  	     thumbnail_image_id      varchar2(40)    null,
     [exec]   6  	     small_image_id  varchar2(40)    null,
     [exec]   7  	     large_image_id  varchar2(40)    null
     [exec]   8  ,constraint dcs_sku_media_p primary key (sku_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_aux_media (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     sku_id  varchar2(40)    not null,
     [exec]   4  	     tag     varchar2(42)    not null,
     [exec]   5  	     media_id	     varchar2(40)    not null
     [exec]   6  ,constraint dcs_sku_aux_medi_p primary key (sku_id,tag,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_aux_mdia_si_idx on dcs_sku_aux_media (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_replace (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     sku_id  varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null,
     [exec]   5  	     replacement     varchar2(40)    not null
     [exec]   6  ,constraint dcs_sku_replace_p primary key (sku_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sk_replace_sid_idx on dcs_sku_replace (sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_conf (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     sku_id  varchar2(40)    not null,
     [exec]   4  	     config_props    varchar2(40)    not null,
     [exec]   5  	     sequence_num    integer not null
     [exec]   6  ,constraint dcs_sku_conf_p primary key (sku_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_config_prop (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     config_prop_id  varchar2(40)    not null,
     [exec]  11  	     version integer not null,
     [exec]  12  	     display_name    varchar2(40)    null,
     [exec]  13  	     description     varchar2(255)   null,
     [exec]  14  	     item_acl	     varchar2(1024)  null
     [exec]  15  ,constraint dcs_config_prop_p primary key (config_prop_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_config_pro_wsx on dcs_config_prop (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_config_pro_cix on dcs_config_prop (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_conf_options (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     config_prop_id  varchar2(40)    not null,
     [exec]   4  	     config_options  varchar2(40)    not null,
     [exec]   5  	     sequence_num    integer not null
     [exec]   6  ,constraint dcs_conf_options_p primary key (config_prop_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_config_opt (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     config_opt_id   varchar2(40)    not null,
     [exec]  11  	     version integer not null,
     [exec]  12  	     display_name    varchar2(40)    null,
     [exec]  13  	     description     varchar2(255)   null,
     [exec]  14  	     sku     varchar2(40)    null,
     [exec]  15  	     product varchar2(40)    null,
     [exec]  16  	     price   number(19,7)    null,
     [exec]  17  	     item_acl	     varchar2(1024)  null
     [exec]  18  ,constraint dcs_config_opt_p primary key (config_opt_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ct_conf_prod_idx on dcs_config_opt (product);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index ct_conf_sku_idx on dcs_config_opt (sku);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_config_opt_wsx on dcs_config_opt (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_config_opt_cix on dcs_config_opt (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_foreign_cat (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     catalog_id      varchar2(40)    not null,
     [exec]  11  	     type    integer not null,
     [exec]  12  	     version integer not null,
     [exec]  13  	     name    varchar2(100)   null,
     [exec]  14  	     description     varchar2(255)   null,
     [exec]  15  	     host    varchar2(100)   null,
     [exec]  16  	     port    integer null,
     [exec]  17  	     base_url	     varchar2(255)   null,
     [exec]  18  	     return_url      varchar2(255)   null,
     [exec]  19  	     item_acl	     varchar2(1024)  null
     [exec]  20  ,constraint dcs_foreign_cat_p primary key (catalog_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_foreign_ca_wsx on dcs_foreign_cat (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_foreign_ca_cix on dcs_foreign_cat (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- inventory_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_inventory (
     [exec]   2  	     inventory_id    varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     inventory_lock  varchar2(20)    null,
     [exec]   5  	     creation_date   date    null,
     [exec]   6  	     start_date      date    null,
     [exec]   7  	     end_date	     date    null,
     [exec]   8  	     display_name    varchar2(254)   null,
     [exec]   9  	     description     varchar2(254)   null,
     [exec]  10  	     catalog_ref_id  varchar2(40)    not null,
     [exec]  11  	     avail_status    integer not null,
     [exec]  12  	     availability_date	     date    null,
     [exec]  13  	     stock_level     integer null,
     [exec]  14  	     backorder_level integer null,
     [exec]  15  	     preorder_level  integer null,
     [exec]  16  	     stock_thresh    integer null,
     [exec]  17  	     backorder_thresh	     integer null,
     [exec]  18  	     preorder_thresh integer null
     [exec]  19  ,constraint dcs_inventory_p primary key (inventory_id)
     [exec]  20  ,constraint inv_catrefid_idx unique (catalog_ref_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index inv_end_dte_idx on dcs_inventory (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index inv_strt_dte_idx on dcs_inventory (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- versioned_promotion_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_promotion (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     promotion_id    varchar2(40)    not null,
     [exec]  11  	     version integer not null,
     [exec]  12  	     creation_date   date    null,
     [exec]  13  	     start_date      date    null,
     [exec]  14  	     end_date	     date    null,
     [exec]  15  	     display_name    varchar2(254)   null,
     [exec]  16  	     description     varchar2(254)   null,
     [exec]  17  	     promotion_type  integer null,
     [exec]  18  	     enabled number(1,0)     null,
     [exec]  19  	     begin_usable    date    null,
     [exec]  20  	     end_usable      date    null,
     [exec]  21  	     priority	     integer null,
     [exec]  22  	     global  number(1,0)     null,
     [exec]  23  	     anon_profile    number(1,0)     null,
     [exec]  24  	     allow_multiple  number(1,0)     null,
     [exec]  25  	     uses    integer null,
     [exec]  26  	     rel_expiration  number(1,0)     null,
     [exec]  27  	     time_until_expire	     integer null
     [exec]  28  ,constraint dcs_promotion_p primary key (promotion_id,asset_version)
     [exec]  29  ,constraint dcs_promotion1_c check (enabled in (0,1))
     [exec]  30  ,constraint dcs_promotion2_c check (global in (0,1))
     [exec]  31  ,constraint dcs_promotion3_c check (anon_profile in (0,1))
     [exec]  32  ,constraint dcs_promotion4_c check (allow_multiple in (0,1))
     [exec]  33  ,constraint dcs_promotion5_c check (rel_expiration in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index prmo_bgin_use_idx on dcs_promotion (begin_usable);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prmo_end_dte_idx on dcs_promotion (end_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prmo_end_use_idx on dcs_promotion (end_usable);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index prmo_strt_dte_idx on dcs_promotion (start_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_promotion_wsx on dcs_promotion (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_promotion_cix on dcs_promotion (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_promo_media (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     promotion_id    varchar2(40)    not null,
     [exec]   4  	     tag     varchar2(42)    not null,
     [exec]   5  	     media_id	     varchar2(40)    not null
     [exec]   6  ,constraint dcs_promo_media_p primary key (promotion_id,tag,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index promo_mdia_pid_idx on dcs_promo_media (promotion_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_discount_promo (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     promotion_id    varchar2(40)    not null,
     [exec]   4  	     calculator      varchar2(254)   not null,
     [exec]   5  	     adjuster	     number(19,7)    not null,
     [exec]   6  	     pmdl_rule	     clob    not null,
     [exec]   7  	     one_use number(1,0)     null
     [exec]   8  ,constraint dcs_discount_pro_p primary key (promotion_id,asset_version)
     [exec]   9  ,constraint dcs_discount_pro_c check (one_use in (0, 1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_promo_upsell (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     promotion_id    varchar2(40)    not null,
     [exec]   4  	     upsell  number(1,0)     null
     [exec]   5  ,constraint dcs_promo_upsell_p primary key (promotion_id,asset_version)
     [exec]   6  ,constraint dcs_promo_upsell_c check (upsell in (0, 1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_upsell_action (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     action_id	     varchar2(40)    not null,
     [exec]  11  	     version number(10)      not null,
     [exec]  12  	     name    varchar2(40)    not null,
     [exec]  13  	     upsell_prd_grp  clob    null
     [exec]  14  ,constraint dcs_upsell_actn_p primary key (action_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_upsell_act_wsx on dcs_upsell_action (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_upsell_act_cix on dcs_upsell_action (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_close_qualif (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     close_qualif_id varchar2(40)    not null,
     [exec]  11  	     version number(10)      not null,
     [exec]  12  	     name    varchar2(40)    not null,
     [exec]  13  	     priority	     number(10)      null,
     [exec]  14  	     qualifier	     clob    null,
     [exec]  15  	     upsell_media    varchar2(40)    null,
     [exec]  16  	     upsell_action   varchar2(40)    null
     [exec]  17  ,constraint dcs_close_qualif_p primary key (close_qualif_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_close_qual_wsx on dcs_close_qualif (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_close_qual_cix on dcs_close_qualif (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_prm_cls_qlf (
     [exec]   2  	     sec_asset_version	     number(19)      not null,
     [exec]   3  	     asset_version   number(19)      not null,
     [exec]   4  	     promotion_id    varchar2(40)    not null,
     [exec]   5  	     closeness_qualif	     varchar2(40)    not null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_upsell_prods (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     action_id	     varchar2(40)    not null,
     [exec]   4  	     product_id      varchar2(40)    not null,
     [exec]   5  	     sequence_num    number(10)      not null
     [exec]   6  ,constraint dcs_upsell_prods_p primary key (action_id,product_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- user_promotion_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- The promotion line was commented out to allow the profile and promotion tables to be delinked. The promotion tables are intended to be used as a "read-only" table on the production servers. The promotion (and product catalog) tables are promoted and made active on the production system through copy-switch. In doing so, the profile tables and the promotion tables cannot be in the same database, and therefore we must remove this referece. However if you are not going to use copy-switch for the promotions, then you can add this reference back in.	  promotion		     VARCHAR(40)	     NOT NULL	     REFERENCES dcs_promotion(promotion_id),
     [exec] SQL> 
     [exec] SQL> create table dcs_usr_promostat (
     [exec]   2  	     status_id	     varchar2(40)    not null,
     [exec]   3  	     profile_id      varchar2(40)    not null,
     [exec]   4  	     promotion	     varchar2(40)    not null,
     [exec]   5  	     num_uses	     integer null,
     [exec]   6  	     expirationDate  date    null
     [exec]   7  ,constraint dcs_usr_promosta_p primary key (status_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index promostat_prof_idx on dcs_usr_promostat (profile_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index usr_prmstat_pr_idx on dcs_usr_promostat (promotion);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_usr_actvpromo (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     promo_status_id varchar2(40)    not null
     [exec]   5  ,constraint dcs_usr_actvprom_p primary key (id,sequence_num));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index usr_actvprm_id_idx on dcs_usr_actvpromo (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- The promotion_id column was commented out to allow the profile and promotion tables to be delinked. The promotion tables are intended to be used as a "read-only" table on the production servers. The promotion (and product catalog) tables are promoted and made active on the production system through copy-switch. In doing so, the profile tables and the promotion tables cannot be in the same database, and therefore we must remove this referece. However if you are not going to use copy-switch for the promotions, then you can add this reference back in.	  promotion_id			  VARCHAR(40)		  NOT NULL	  REFERENCES dcs_promotion(promotion_id),
     [exec] SQL> 
     [exec] SQL> create table dcs_usr_usedpromo (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     promotion_id    varchar2(40)    not null
     [exec]   4  ,constraint dcs_usr_usedprom_p primary key (id,promotion_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index usr_usedprm_id_idx on dcs_usr_usedpromo (id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index usr_usedprm_pi_idx on dcs_usr_usedpromo (promotion_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- user_giftlist_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_giftlist (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     owner_id	     varchar2(40)    null,
     [exec]   4  	     is_public	     number(1,0)     not null,
     [exec]   5  	     is_published    number(1,0)     not null,
     [exec]   6  	     event_name      varchar2(64)    null,
     [exec]   7  	     event_type      integer null,
     [exec]   8  	     event_date      date    null,
     [exec]   9  	     comments	     varchar2(254)   null,
     [exec]  10  	     description     varchar2(254)   null,
     [exec]  11  	     instructions    varchar2(254)   null,
     [exec]  12  	     creation_date   date    null,
     [exec]  13  	     last_modified_date      date    null,
     [exec]  14  	     shipping_addr_id	     varchar2(40)    null
     [exec]  15  ,constraint dcs_giftlist_p primary key (id)
     [exec]  16  ,constraint dcs_giftlist1_c check (is_public in (0,1))
     [exec]  17  ,constraint dcs_giftlist2_c check (is_published in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index gftlst_shpadid_idx on dcs_giftlist (shipping_addr_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index gft_evnt_name_idx on dcs_giftlist (event_name);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index gft_evnt_type_idx on dcs_giftlist (event_type);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index gft_owner_id_idx on dcs_giftlist (owner_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_giftinst (
     [exec]   2  	     giftlist_id     varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     special_inst    varchar2(254)   null
     [exec]   5  ,constraint dcs_giftinst_p primary key (giftlist_id,tag)
     [exec]   6  ,constraint dcs_giftgiftlst__f foreign key (giftlist_id) references dcs_giftlist (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index giftinst_gflid_idx on dcs_giftinst (giftlist_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_giftitem (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     catalog_ref_id  varchar2(40)    null,
     [exec]   4  	     product_id      varchar2(40)    null,
     [exec]   5  	     display_name    varchar2(254)   null,
     [exec]   6  	     description     varchar2(254)   null,
     [exec]   7  	     quantity_desired	     integer null,
     [exec]   8  	     quantity_purchased      integer null
     [exec]   9  ,constraint dcs_giftitem_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index giftitem_cat_idx on dcs_giftitem (catalog_ref_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index giftitem_prod_idx on dcs_giftitem (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_giftlist_item (
     [exec]   2  	     giftlist_id     varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     giftitem_id     varchar2(40)    null
     [exec]   5  ,constraint dcs_giftlist_ite_p primary key (giftlist_id,sequence_num)
     [exec]   6  ,constraint dcs_giftgifttm_d_f foreign key (giftitem_id) references dcs_giftitem (id)
     [exec]   7  ,constraint dcs_gftlstgftlst_f foreign key (giftlist_id) references dcs_giftlist (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index gftlst_itm_gii_idx on dcs_giftlist_item (giftitem_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index gftlst_itm_gli_idx on dcs_giftlist_item (giftlist_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_user_wishlist (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     giftlist_id     varchar2(40)    null
     [exec]   4  ,constraint dcs_user_wishlis_p primary key (user_id)
     [exec]   5  ,constraint dcs_usrwgiftlst__f foreign key (giftlist_id) references dcs_giftlist (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index usr_wshlst_gli_idx on dcs_user_wishlist (giftlist_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_user_giftlist (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     giftlist_id     varchar2(40)    null
     [exec]   5  ,constraint dcs_user_giftlis_p primary key (user_id,sequence_num));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index usr_gftlst_uid_idx on dcs_user_giftlist (user_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_user_otherlist (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     sequence_num    integer not null,
     [exec]   4  	     giftlist_id     varchar2(40)    null
     [exec]   5  ,constraint dcs_user_otherli_p primary key (user_id,sequence_num)
     [exec]   6  ,constraint dcs_usrtgiftlst__f foreign key (giftlist_id) references dcs_giftlist (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index usr_otrlst_gli_idx on dcs_user_otherlist (giftlist_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- order_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_order (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     order_class_type	     varchar2(40)    null,
     [exec]   6  	     profile_id      varchar2(40)    null,
     [exec]   7  	     description     varchar2(64)    null,
     [exec]   8  	     state   varchar2(40)    null,
     [exec]   9  	     state_detail    varchar2(254)   null,
     [exec]  10  	     created_by_order	     varchar2(40)    null,
     [exec]  11  	     origin_of_order number(10)      null,
     [exec]  12  	     creation_date   date    null,
     [exec]  13  	     submitted_date  date    null,
     [exec]  14  	     last_modified_date      date    null,
     [exec]  15  	     completed_date  date    null,
     [exec]  16  	     price_info      varchar2(40)    null,
     [exec]  17  	     tax_price_info  varchar2(40)    null,
     [exec]  18  	     explicitly_saved	     number(1,0)     null,
     [exec]  19  	     agent_id	     varchar2(40)    null,
     [exec]  20  	     sales_channel   number(10)      null
     [exec]  21  ,constraint dcspp_order_p primary key (order_id)
     [exec]  22  ,constraint dcspp_order_c check (explicitly_saved IN (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index order_lastmod_idx on dcspp_order (last_modified_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index order_profile_idx on dcspp_order (profile_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index order_submit_idx on dcspp_order (submitted_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_ship_group (
     [exec]   2  	     shipping_group_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     shipgrp_class_type      varchar2(40)    null,
     [exec]   6  	     shipping_method varchar2(40)    null,
     [exec]   7  	     description     varchar2(64)    null,
     [exec]   8  	     ship_on_date    date    null,
     [exec]   9  	     actual_ship_date	     date    null,
     [exec]  10  	     state   varchar2(40)    null,
     [exec]  11  	     state_detail    varchar2(254)   null,
     [exec]  12  	     submitted_date  date    null,
     [exec]  13  	     price_info      varchar2(40)    null,
     [exec]  14  	     order_ref	     varchar2(40)    null
     [exec]  15  ,constraint dcspp_ship_group_p primary key (shipping_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_pay_group (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     paygrp_class_type	     varchar2(40)    null,
     [exec]   6  	     payment_method  varchar2(40)    null,
     [exec]   7  	     amount  number(19,7)    null,
     [exec]   8  	     amount_authorized	     number(19,7)    null,
     [exec]   9  	     amount_debited  number(19,7)    null,
     [exec]  10  	     amount_credited number(19,7)    null,
     [exec]  11  	     currency_code   varchar2(10)    null,
     [exec]  12  	     state   varchar2(40)    null,
     [exec]  13  	     state_detail    varchar2(254)   null,
     [exec]  14  	     submitted_date  date    null,
     [exec]  15  	     order_ref	     varchar2(40)    null
     [exec]  16  ,constraint dcspp_pay_group_p primary key (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_item (
     [exec]   2  	     commerce_item_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     item_class_type varchar2(40)    null,
     [exec]   6  	     catalog_id      varchar2(40)    null,
     [exec]   7  	     catalog_ref_id  varchar2(40)    null,
     [exec]   8  	     catalog_key     varchar2(40)    null,
     [exec]   9  	     product_id      varchar2(40)    null,
     [exec]  10  	     quantity	     number(19,0)    null,
     [exec]  11  	     state   varchar2(40)    null,
     [exec]  12  	     state_detail    varchar2(254)   null,
     [exec]  13  	     price_info      varchar2(40)    null,
     [exec]  14  	     order_ref	     varchar2(40)    null
     [exec]  15  ,constraint dcspp_item_p primary key (commerce_item_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index item_catref_idx on dcspp_item (catalog_ref_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index item_prodref_idx on dcspp_item (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_relationship (
     [exec]   2  	     relationship_id varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     rel_class_type  varchar2(40)    null,
     [exec]   6  	     relationship_type	     varchar2(40)    null,
     [exec]   7  	     order_ref	     varchar2(40)    null
     [exec]   8  ,constraint dcspp_relationsh_p primary key (relationship_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_rel_orders (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     related_orders  varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_rel_orders_p primary key (order_id,sequence_num)
     [exec]   6  ,constraint dcspp_reordr_d_f foreign key (order_id) references dcspp_order (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_order_inst (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     special_inst    varchar2(254)   null
     [exec]   5  ,constraint dcspp_order_inst_p primary key (order_id,tag)
     [exec]   6  ,constraint dcspp_orordr_d_f foreign key (order_id) references dcspp_order (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index order_inst_oid_idx on dcspp_order_inst (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_order_sg (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     shipping_groups varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_order_sg_p primary key (order_id,sequence_num)
     [exec]   6  ,constraint dcspp_sgordr_d_f foreign key (order_id) references dcspp_order (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index order_sg_ordid_idx on dcspp_order_sg (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_order_pg (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     payment_groups  varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_order_pg_p primary key (order_id,sequence_num)
     [exec]   6  ,constraint dcspp_orpgordr_f foreign key (order_id) references dcspp_order (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index order_pg_ordid_idx on dcspp_order_pg (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_order_item (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     commerce_items  varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_order_item_p primary key (order_id,sequence_num)
     [exec]   6  ,constraint dcspp_oritordr_d_f foreign key (order_id) references dcspp_order (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index order_item_oid_idx on dcspp_order_item (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_order_rel (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     relationships   varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_order_rel_p primary key (order_id,sequence_num)
     [exec]   6  ,constraint dcspp_orlordr_d_f foreign key (order_id) references dcspp_order (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index order_rel_orid_idx on dcspp_order_rel (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_ship_inst (
     [exec]   2  	     shipping_group_id	     varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     special_inst    varchar2(254)   null
     [exec]   5  ,constraint dcspp_ship_inst_p primary key (shipping_group_id,tag)
     [exec]   6  ,constraint dcspp_shshippng__f foreign key (shipping_group_id) references dcspp_ship_group (shipping_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ship_inst_sgid_idx on dcspp_ship_inst (shipping_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_hrd_ship_grp (
     [exec]   2  	     shipping_group_id	     varchar2(40)    not null,
     [exec]   3  	     tracking_number varchar2(40)    null
     [exec]   4  ,constraint dcspp_hrd_ship_g_p primary key (shipping_group_id)
     [exec]   5  ,constraint dcspp_hrshippng__f foreign key (shipping_group_id) references dcspp_ship_group (shipping_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_ele_ship_grp (
     [exec]   2  	     shipping_group_id	     varchar2(40)    not null,
     [exec]   3  	     email_address   varchar2(255)   null
     [exec]   4  ,constraint dcspp_ele_ship_g_p primary key (shipping_group_id)
     [exec]   5  ,constraint dcspp_elshippng__f foreign key (shipping_group_id) references dcspp_ship_group (shipping_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_ship_addr (
     [exec]   2  	     shipping_group_id	     varchar2(40)    not null,
     [exec]   3  	     prefix  varchar2(40)    null,
     [exec]   4  	     first_name      varchar2(40)    null,
     [exec]   5  	     middle_name     varchar2(40)    null,
     [exec]   6  	     last_name	     varchar2(40)    null,
     [exec]   7  	     suffix  varchar2(40)    null,
     [exec]   8  	     job_title	     varchar2(40)    null,
     [exec]   9  	     company_name    varchar2(40)    null,
     [exec]  10  	     address_1	     varchar2(50)    null,
     [exec]  11  	     address_2	     varchar2(50)    null,
     [exec]  12  	     address_3	     varchar2(50)    null,
     [exec]  13  	     city    varchar2(40)    null,
     [exec]  14  	     county  varchar2(40)    null,
     [exec]  15  	     state   varchar2(40)    null,
     [exec]  16  	     postal_code     varchar2(10)    null,
     [exec]  17  	     country varchar2(40)    null,
     [exec]  18  	     phone_number    varchar2(40)    null,
     [exec]  19  	     fax_number      varchar2(40)    null,
     [exec]  20  	     email   varchar2(255)   null
     [exec]  21  ,constraint dcspp_ship_addr_p primary key (shipping_group_id)
     [exec]  22  ,constraint dcspp_shdshippng_f foreign key (shipping_group_id) references dcspp_ship_group (shipping_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_hand_inst (
     [exec]   2  	     handling_inst_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     hndinst_class_type      varchar2(40)    null,
     [exec]   6  	     handling_method varchar2(40)    null,
     [exec]   7  	     shipping_group_id	     varchar2(40)    null,
     [exec]   8  	     commerce_item_id	     varchar2(40)    null,
     [exec]   9  	     quantity	     integer null
     [exec]  10  ,constraint dcspp_hand_inst_p primary key (handling_inst_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index hi_item_idx on dcspp_hand_inst (commerce_item_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index hi_ship_group_idx on dcspp_hand_inst (shipping_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_gift_inst (
     [exec]   2  	     handling_inst_id	     varchar2(40)    not null,
     [exec]   3  	     giftlist_id     varchar2(40)    null,
     [exec]   4  	     giftlist_item_id	     varchar2(40)    null
     [exec]   5  ,constraint dcspp_gift_inst_p primary key (handling_inst_id)
     [exec]   6  ,constraint dcspp_gihandlng__f foreign key (handling_inst_id) references dcspp_hand_inst (handling_inst_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_sg_hand_inst (
     [exec]   2  	     shipping_group_id	     varchar2(40)    not null,
     [exec]   3  	     handling_instrs varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_sg_hand_in_p primary key (shipping_group_id,sequence_num)
     [exec]   6  ,constraint dcspp_sgshippng__f foreign key (shipping_group_id) references dcspp_ship_group (shipping_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sg_hnd_ins_sgi_idx on dcspp_sg_hand_inst (shipping_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_pay_inst (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     tag     varchar2(42)    not null,
     [exec]   4  	     special_inst    varchar2(254)   null
     [exec]   5  ,constraint dcspp_pay_inst_p primary key (payment_group_id,tag)
     [exec]   6  ,constraint dcspp_papaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pay_inst_pgrid_idx on dcspp_pay_inst (payment_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_config_item (
     [exec]   2  	     config_item_id  varchar2(40)    not null,
     [exec]   3  	     reconfig_data   varchar2(255)   null,
     [exec]   4  	     notes   varchar2(255)   null
     [exec]   5  ,constraint dcspp_config_ite_p primary key (config_item_id)
     [exec]   6  ,constraint dcspp_coconfg_tm_f foreign key (config_item_id) references dcspp_item (commerce_item_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_subsku_item (
     [exec]   2  	     subsku_item_id  varchar2(40)    not null,
     [exec]   3  	     ind_quantity    integer null
     [exec]   4  ,constraint dcspp_subsku_ite_p primary key (subsku_item_id)
     [exec]   5  ,constraint dcspp_susubsk_tm_f foreign key (subsku_item_id) references dcspp_item (commerce_item_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_item_ci (
     [exec]   2  	     commerce_item_id	     varchar2(40)    not null,
     [exec]   3  	     commerce_items  varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_item_ci_p primary key (commerce_item_id,sequence_num)
     [exec]   6  ,constraint dcspp_itcommrc_t_f foreign key (commerce_item_id) references dcspp_item (commerce_item_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_gift_cert (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     profile_id      varchar2(40)    null,
     [exec]   4  	     gift_cert_number	     varchar2(50)    null
     [exec]   5  ,constraint dcspp_gift_cert_p primary key (payment_group_id)
     [exec]   6  ,constraint dcspp_gipaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index gc_number_idx on dcspp_gift_cert (gift_cert_number);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index gc_profile_idx on dcspp_gift_cert (profile_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_store_cred (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     profile_id      varchar2(40)    null,
     [exec]   4  	     store_cred_number	     varchar2(50)    null
     [exec]   5  ,constraint dcspp_store_cred_p primary key (payment_group_id)
     [exec]   6  ,constraint dcspp_stpaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sc_number_idx on dcspp_store_cred (store_cred_number);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sc_profile_idx on dcspp_store_cred (profile_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_credit_card (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     credit_card_number      varchar2(40)    null,
     [exec]   4  	     credit_card_type	     varchar2(40)    null,
     [exec]   5  	     expiration_month	     varchar2(20)    null,
     [exec]   6  	     exp_day_of_month	     varchar2(20)    null,
     [exec]   7  	     expiration_year varchar2(20)    null
     [exec]   8  ,constraint dcspp_credit_car_p primary key (payment_group_id)
     [exec]   9  ,constraint dcspp_crpaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_bill_addr (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     prefix  varchar2(40)    null,
     [exec]   4  	     first_name      varchar2(40)    null,
     [exec]   5  	     middle_name     varchar2(40)    null,
     [exec]   6  	     last_name	     varchar2(40)    null,
     [exec]   7  	     suffix  varchar2(40)    null,
     [exec]   8  	     job_title	     varchar2(40)    null,
     [exec]   9  	     company_name    varchar2(40)    null,
     [exec]  10  	     address_1	     varchar2(50)    null,
     [exec]  11  	     address_2	     varchar2(50)    null,
     [exec]  12  	     address_3	     varchar2(50)    null,
     [exec]  13  	     city    varchar2(40)    null,
     [exec]  14  	     county  varchar2(40)    null,
     [exec]  15  	     state   varchar2(40)    null,
     [exec]  16  	     postal_code     varchar2(10)    null,
     [exec]  17  	     country varchar2(40)    null,
     [exec]  18  	     phone_number    varchar2(40)    null,
     [exec]  19  	     fax_number      varchar2(40)    null,
     [exec]  20  	     email   varchar2(255)   null
     [exec]  21  ,constraint dcspp_bill_addr_p primary key (payment_group_id)
     [exec]  22  ,constraint dcspp_bipaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_pay_status (
     [exec]   2  	     status_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     trans_id	     varchar2(50)    null,
     [exec]   6  	     amount  number(19,7)    null,
     [exec]   7  	     trans_success   number(1,0)     null,
     [exec]   8  	     error_message   varchar2(254)   null,
     [exec]   9  	     trans_timestamp date    null
     [exec]  10  ,constraint dcspp_pay_status_p primary key (status_id)
     [exec]  11  ,constraint dcspp_pay_status_c check (trans_success IN (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_cc_status (
     [exec]   2  	     status_id	     varchar2(40)    not null,
     [exec]   3  	     auth_expiration date    null,
     [exec]   4  	     avs_code	     varchar2(40)    null,
     [exec]   5  	     avs_desc_result varchar2(254)   null,
     [exec]   6  	     integration_data	     varchar2(256)   null
     [exec]   7  ,constraint dcspp_cc_status_p primary key (status_id)
     [exec]   8  ,constraint dcspp_ccstats_d_f foreign key (status_id) references dcspp_pay_status (status_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_gc_status (
     [exec]   2  	     status_id	     varchar2(40)    not null,
     [exec]   3  	     auth_expiration date    null
     [exec]   4  ,constraint dcspp_gc_status_p primary key (status_id)
     [exec]   5  ,constraint dcspp_gcstats_d_f foreign key (status_id) references dcspp_pay_status (status_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_sc_status (
     [exec]   2  	     status_id	     varchar2(40)    not null,
     [exec]   3  	     auth_expiration date    null
     [exec]   4  ,constraint dcspp_sc_status_p primary key (status_id)
     [exec]   5  ,constraint dcspp_scstats_d_f foreign key (status_id) references dcspp_pay_status (status_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_auth_status (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     auth_status     varchar2(254)   not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_auth_statu_p primary key (payment_group_id,sequence_num)
     [exec]   6  ,constraint dcspp_atpaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index auth_stat_pgid_idx on dcspp_auth_status (payment_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_debit_status (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     debit_status    varchar2(254)   not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_debit_stat_p primary key (payment_group_id,sequence_num)
     [exec]   6  ,constraint dcspp_depaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index debit_stat_pgi_idx on dcspp_debit_status (payment_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_cred_status (
     [exec]   2  	     payment_group_id	     varchar2(40)    not null,
     [exec]   3  	     credit_status   varchar2(254)   not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_cred_statu_p primary key (payment_group_id,sequence_num)
     [exec]   6  ,constraint dcspp_crpaymntgr_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index cred_stat_pgid_idx on dcspp_cred_status (payment_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_shipitem_rel (
     [exec]   2  	     relationship_id varchar2(40)    not null,
     [exec]   3  	     shipping_group_id	     varchar2(40)    null,
     [exec]   4  	     commerce_item_id	     varchar2(40)    null,
     [exec]   5  	     quantity	     number(19,0)    null,
     [exec]   6  	     returned_qty    number(19,0)    null,
     [exec]   7  	     amount  number(19,7)    null,
     [exec]   8  	     state   varchar2(40)    null,
     [exec]   9  	     state_detail    varchar2(254)   null
     [exec]  10  ,constraint dcspp_shipitem_r_p primary key (relationship_id)
     [exec]  11  ,constraint dcspp_shreltnshp_f foreign key (relationship_id) references dcspp_relationship (relationship_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sirel_item_idx on dcspp_shipitem_rel (commerce_item_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index sirel_shipgrp_idx on dcspp_shipitem_rel (shipping_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_rel_range (
     [exec]   2  	     relationship_id varchar2(40)    not null,
     [exec]   3  	     low_bound	     integer null,
     [exec]   4  	     high_bound      integer null
     [exec]   5  ,constraint dcspp_rel_range_p primary key (relationship_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_payitem_rel (
     [exec]   2  	     relationship_id varchar2(40)    not null,
     [exec]   3  	     payment_group_id	     varchar2(40)    null,
     [exec]   4  	     commerce_item_id	     varchar2(40)    null,
     [exec]   5  	     quantity	     number(19,0)    null,
     [exec]   6  	     amount  number(19,7)    null
     [exec]   7  ,constraint dcspp_payitem_re_p primary key (relationship_id)
     [exec]   8  ,constraint dcspp_pareltnshp_f foreign key (relationship_id) references dcspp_relationship (relationship_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index pirel_item_idx on dcspp_payitem_rel (commerce_item_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index pirel_paygrp_idx on dcspp_payitem_rel (payment_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_payship_rel (
     [exec]   2  	     relationship_id varchar2(40)    not null,
     [exec]   3  	     payment_group_id	     varchar2(40)    null,
     [exec]   4  	     shipping_group_id	     varchar2(40)    null,
     [exec]   5  	     amount  number(19,7)    null
     [exec]   6  ,constraint dcspp_payship_re_p primary key (relationship_id)
     [exec]   7  ,constraint dcspp_pshrltnshp_f foreign key (relationship_id) references dcspp_relationship (relationship_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index psrel_paygrp_idx on dcspp_payship_rel (payment_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index psrel_shipgrp_idx on dcspp_payship_rel (shipping_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_payorder_rel (
     [exec]   2  	     relationship_id varchar2(40)    not null,
     [exec]   3  	     payment_group_id	     varchar2(40)    null,
     [exec]   4  	     order_id	     varchar2(40)    null,
     [exec]   5  	     amount  number(19,7)    null
     [exec]   6  ,constraint dcspp_payorder_r_p primary key (relationship_id)
     [exec]   7  ,constraint dcspp_odreltnshp_f foreign key (relationship_id) references dcspp_relationship (relationship_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index porel_order_idx on dcspp_payorder_rel (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index porel_paygrp_idx on dcspp_payorder_rel (payment_group_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_amount_info (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     currency_code   varchar2(10)    null,
     [exec]   6  	     amount  number(19,7)    null,
     [exec]   7  	     discounted      number(1,0)     null,
     [exec]   8  	     amount_is_final number(1,0)     null
     [exec]   9  ,constraint dcspp_amount_inf_p primary key (amount_info_id)
     [exec]  10  ,constraint dcspp_amount_in1_c check (discounted IN (0,1))
     [exec]  11  ,constraint dcspp_amount_in2_c check (amount_is_final IN (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_order_price (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     raw_subtotal    number(19,7)    null,
     [exec]   4  	     tax     number(19,7)    null,
     [exec]   5  	     shipping	     number(19,7)    null,
     [exec]   6  	     manual_adj_total	     number(19,7)    null
     [exec]   7  ,constraint dcspp_order_pric_p primary key (amount_info_id)
     [exec]   8  ,constraint dcspp_oramnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_item_price (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     list_price      number(19,7)    null,
     [exec]   4  	     raw_total_price number(19,7)    null,
     [exec]   5  	     sale_price      number(19,7)    null,
     [exec]   6  	     on_sale number(1,0)     null,
     [exec]   7  	     order_discount  number(19,7)    null,
     [exec]   8  	     qty_discounted  number(19,0)    null,
     [exec]   9  	     qty_as_qualifier	     number(19,0)    null,
     [exec]  10  	     price_list      varchar2(40)    null
     [exec]  11  ,constraint dcspp_item_price_p primary key (amount_info_id)
     [exec]  12  ,constraint dcspp_itamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id)
     [exec]  13  ,constraint dcspp_item_price_c check (on_sale IN (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_tax_price (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     city_tax	     number(19,7)    null,
     [exec]   4  	     county_tax      number(19,7)    null,
     [exec]   5  	     state_tax	     number(19,7)    null,
     [exec]   6  	     country_tax     number(19,7)    null
     [exec]   7  ,constraint dcspp_tax_price_p primary key (amount_info_id)
     [exec]   8  ,constraint dcspp_taamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_ship_price (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     raw_shipping    number(19,7)    null
     [exec]   4  ,constraint dcspp_ship_price_p primary key (amount_info_id)
     [exec]   5  ,constraint dcspp_shamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_amtinfo_adj (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     adjustments     varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_amtinfo_ad_p primary key (amount_info_id,sequence_num)
     [exec]   6  ,constraint dcspp_amamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index amtinf_adj_aid_idx on dcspp_amtinfo_adj (amount_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_price_adjust (
     [exec]   2  	     adjustment_id   varchar2(40)    not null,
     [exec]   3  	     version integer not null,
     [exec]   4  	     adj_description varchar2(254)   null,
     [exec]   5  	     pricing_model   varchar2(40)    null,
     [exec]   6  	     manual_adjustment	     varchar2(40)    null,
     [exec]   7  	     adjustment      number(19,7)    null,
     [exec]   8  	     qty_adjusted    integer null
     [exec]   9  ,constraint dcspp_price_adju_p primary key (adjustment_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_shipitem_sub (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     shipping_group_id	     varchar2(42)    not null,
     [exec]   4  	     ship_item_subtotal      varchar2(40)    not null
     [exec]   5  ,constraint dcspp_shipitem_s_p primary key (amount_info_id,shipping_group_id)
     [exec]   6  ,constraint dcspp_sbamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ship_item_sub_idx on dcspp_shipitem_sub (amount_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_taxshipitem (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     shipping_group_id	     varchar2(42)    not null,
     [exec]   4  	     tax_ship_item_sub	     varchar2(40)    not null
     [exec]   5  ,constraint dcspp_taxshipite_p primary key (amount_info_id,shipping_group_id)
     [exec]   6  ,constraint dcspp_shamntxnfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index tax_ship_item_idx on dcspp_taxshipitem (amount_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_ntaxshipitem (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     shipping_group_id	     varchar2(42)    not null,
     [exec]   4  	     non_tax_item_sub	     varchar2(40)    not null
     [exec]   5  ,constraint dcspp_ntaxshipit_p primary key (amount_info_id,shipping_group_id)
     [exec]   6  ,constraint dcspp_ntamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ntax_ship_item_idx on dcspp_ntaxshipitem (amount_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_shipitem_tax (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     shipping_group_id	     varchar2(42)    not null,
     [exec]   4  	     ship_item_tax   varchar2(40)    not null
     [exec]   5  ,constraint dcspp_shipitem_t_p primary key (amount_info_id,shipping_group_id)
     [exec]   6  ,constraint dcspp_txamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index ship_item_tax_idx on dcspp_shipitem_tax (amount_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_itmprice_det (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     cur_price_details	     varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_itmprice_d_p primary key (amount_info_id,sequence_num)
     [exec]   6  ,constraint dcspp_sbamntnfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index itmprc_det_aii_idx on dcspp_itmprice_det (amount_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_det_price (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     tax     number(19,7)    null,
     [exec]   4  	     order_discount  number(19,7)    null,
     [exec]   5  	     order_manual_adj	     number(19,7)    null,
     [exec]   6  	     quantity	     number(19,0)    null,
     [exec]   7  	     qty_as_qualifier	     number(19,0)    null
     [exec]   8  ,constraint dcspp_det_price_p primary key (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_det_range (
     [exec]   2  	     amount_info_id  varchar2(40)    not null,
     [exec]   3  	     low_bound	     integer null,
     [exec]   4  	     high_bound      integer null
     [exec]   5  ,constraint dcspp_det_range_p primary key (amount_info_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_order_adj (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     adjustment_id   varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_order_adj_p primary key (order_id,sequence_num)
     [exec]   6  ,constraint dcspp_oradj_d_f foreign key (order_id) references dcspp_order (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index order_adj_orid_idx on dcspp_order_adj (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_manual_adj (
     [exec]   2  	     manual_adjust_id	     varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     adjustment_type integer not null,
     [exec]   5  	     reason  integer not null,
     [exec]   6  	     amount  number(19,7)    null,
     [exec]   7  	     notes   varchar2(255)   null,
     [exec]   8  	     version integer not null
     [exec]   9  ,constraint dcspp_manual_adj_p primary key (manual_adjust_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dbcpp_sched_order (
     [exec]   2  	     scheduled_order_id      varchar2(40)    not null,
     [exec]   3  	     type    integer not null,
     [exec]   4  	     version integer not null,
     [exec]   5  	     name    varchar2(32)    null,
     [exec]   6  	     profile_id      varchar2(40)    null,
     [exec]   7  	     create_date     date    null,
     [exec]   8  	     start_date      date    null,
     [exec]   9  	     end_date	     date    null,
     [exec]  10  	     template_order  varchar2(32)    null,
     [exec]  11  	     state   integer null,
     [exec]  12  	     next_scheduled  date    null,
     [exec]  13  	     schedule	     varchar2(255)   null
     [exec]  14  ,constraint dbcpp_sched_orde_p primary key (scheduled_order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dbcpp_sched_clone (
     [exec]   2  	     scheduled_order_id      varchar2(40)    not null,
     [exec]   3  	     cloned_order    varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dbcpp_sched_clon_p primary key (scheduled_order_id,sequence_num)
     [exec]   6  ,constraint dbcpp_scschedld__f foreign key (scheduled_order_id) references dbcpp_sched_order (scheduled_order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_scherr_aux (
     [exec]   2  	     scheduled_order_id      varchar2(40)    not null,
     [exec]   3  	     sched_error_id  varchar2(40)    not null
     [exec]   4  ,constraint dcspp_scherr_aux_p primary key (scheduled_order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index sched_error_idx on dcspp_scherr_aux (sched_error_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_sched_error (
     [exec]   2  	     sched_error_id  varchar2(40)    not null,
     [exec]   3  	     error_date      date    not null
     [exec]   4  ,constraint dcspp_sched_err_p primary key (sched_error_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_schd_errmsg (
     [exec]   2  	     sched_error_id  varchar2(40)    not null,
     [exec]   3  	     error_txt	     varchar2(254)   not null,
     [exec]   4  	     sequence_num    integer not null
     [exec]   5  ,constraint dcspp_schd_errs_p primary key (sched_error_id,sequence_num)
     [exec]   6  ,constraint dcspp_sch_errs_f foreign key (sched_error_id) references dcspp_sched_error (sched_error_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- dcs_mappers.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cart_event (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     timestamp	     date    null,
     [exec]   4  	     orderid varchar2(40)    null,
     [exec]   5  	     itemid  varchar2(40)    null,
     [exec]   6  	     sessionid	     varchar2(100)   null,
     [exec]   7  	     parentsessionid varchar2(100)   null,
     [exec]   8  	     quantity	     integer null,
     [exec]   9  	     amount  number(19,7)    null,
     [exec]  10  	     profileid	     varchar2(40)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_submt_ord_evt (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     orderid varchar2(40)    null,
     [exec]   5  	     profileid	     varchar2(40)    null,
     [exec]   6  	     sessionid	     varchar2(100)   null,
     [exec]   7  	     parentsessionid varchar2(100)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prom_used_evt (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     orderid varchar2(40)    null,
     [exec]   5  	     profileid	     varchar2(40)    null,
     [exec]   6  	     sessionid	     varchar2(100)   null,
     [exec]   7  	     parentsessionid varchar2(100)   null,
     [exec]   8  	     promotionid     varchar2(40)    null,
     [exec]   9  	     order_amount    number(26,7)    null,
     [exec]  10  	     discount	     number(26,7)    null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_ord_merge_evt (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     clocktime	     date    null,
     [exec]   4  	     sourceorderid   varchar2(40)    null,
     [exec]   5  	     destorderid     varchar2(40)    null,
     [exec]   6  	     profileid	     varchar2(40)    null,
     [exec]   7  	     sessionid	     varchar2(100)   null,
     [exec]   8  	     parentsessionid varchar2(100)   null,
     [exec]   9  	     sourceremoved   number(1,0)     null
     [exec]  10  ,constraint dcs_ordmergeevt_ck check (sourceremoved in (0,1)));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_promo_rvkd (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     time_stamp      date    null,
     [exec]   4  	     promotionid     varchar2(254)   not null,
     [exec]   5  	     profileid	     varchar2(254)   not null,
     [exec]   6  	     sessionid	     varchar2(100)   null,
     [exec]   7  	     parentsessionid varchar2(100)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_promo_grntd (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     time_stamp      date    null,
     [exec]   4  	     promotionid     varchar2(254)   not null,
     [exec]   5  	     profileid	     varchar2(254)   not null,
     [exec]   6  	     sessionid	     varchar2(100)   null,
     [exec]   7  	     parentsessionid varchar2(100)   null);
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- versioned_claimable_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcspp_claimable (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     claimable_id    varchar2(40)    not null,
     [exec]  11  	     version integer not null,
     [exec]  12  	     type    integer not null,
     [exec]  13  	     status  integer null,
     [exec]  14  	     expiration_date date    null
     [exec]  15  ,constraint dcspp_claimable_p primary key (claimable_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcspp_claimabl_wsx on dcspp_claimable (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcspp_claimabl_cix on dcspp_claimable (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_giftcert (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     giftcertificate_id      varchar2(40)    not null,
     [exec]   4  	     amount  double precision	     not null,
     [exec]   5  	     amount_authorized	     double precision	     not null,
     [exec]   6  	     amount_remaining	     double precision	     not null,
     [exec]   7  	     purchaser_id    varchar2(40)    null,
     [exec]   8  	     purchase_date   date    null,
     [exec]   9  	     last_used	     date    null
     [exec]  10  ,constraint dcspp_giftcert_p primary key (giftcertificate_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index claimable_user_idx on dcspp_giftcert (purchaser_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_storecred_clm (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     store_credit_id varchar2(40)    not null,
     [exec]   4  	     amount  number(19,7)    not null,
     [exec]   5  	     amount_authorized	     number(19,7)    not null,
     [exec]   6  	     amount_remaining	     number(19,7)    not null,
     [exec]   7  	     owner_id	     varchar2(40)    null,
     [exec]   8  	     issue_date      date    null,
     [exec]   9  	     expiration_date date    null,
     [exec]  10  	     last_used	     date    null
     [exec]  11  ,constraint dcs_storecred_cl_p primary key (store_credit_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index storecr_issue_idx on dcs_storecred_clm (issue_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index storecr_owner_idx on dcs_storecred_clm (owner_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_coupon (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     coupon_id	     varchar2(40)    not null,
     [exec]   4  	     promotion_id    varchar2(40)    not null
     [exec]   5  ,constraint dcspp_coupon_p primary key (coupon_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- versioned_priceLists_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_price_list (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     price_list_id   varchar2(40)    not null,
     [exec]  11  	     version integer not null,
     [exec]  12  	     display_name    varchar2(254)   null,
     [exec]  13  	     description     varchar2(254)   null,
     [exec]  14  	     creation_date   date    null,
     [exec]  15  	     last_mod_date   date    null,
     [exec]  16  	     start_date      date    null,
     [exec]  17  	     end_date	     date    null,
     [exec]  18  	     locale  number(10)      null,
     [exec]  19  	     base_price_list varchar2(40)    null,
     [exec]  20  	     item_acl	     varchar2(1024)  null
     [exec]  21  ,constraint dcs_price_list_p primary key (price_list_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_price_list_wsx on dcs_price_list (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_price_list_cix on dcs_price_list (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_complex_price (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     complex_price_id	     varchar2(40)    not null,
     [exec]  11  	     version integer not null
     [exec]  12  ,constraint dcs_complex_pric_p primary key (complex_price_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_complex_pr_wsx on dcs_complex_price (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_complex_pr_cix on dcs_complex_price (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_price (
     [exec]   2  	     sec_asset_version	     number(19)      null,
     [exec]   3  	     asset_version   number(19)      not null,
     [exec]   4  	     workspace_id    varchar2(40)    not null,
     [exec]   5  	     branch_id	     varchar2(40)    not null,
     [exec]   6  	     is_head number(1)	     not null,
     [exec]   7  	     version_deleted number(1)	     not null,
     [exec]   8  	     version_editable	     number(1)	     not null,
     [exec]   9  	     pred_version    number(19)      null,
     [exec]  10  	     checkin_date    date    null,
     [exec]  11  	     price_id	     varchar2(40)    not null,
     [exec]  12  	     version integer not null,
     [exec]  13  	     price_list      varchar2(40)    not null,
     [exec]  14  	     product_id      varchar2(40)    null,
     [exec]  15  	     sku_id  varchar2(40)    null,
     [exec]  16  	     parent_sku_id   varchar2(40)    null,
     [exec]  17  	     pricing_scheme  integer not null,
     [exec]  18  	     list_price      number(19,7)    null,
     [exec]  19  	     complex_price   varchar2(40)    null
     [exec]  20  ,constraint dcs_price_p primary key (price_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_price_idx1 on dcs_price (product_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_price_idx2 on dcs_price (price_list,sku_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_price_wsx on dcs_price (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_price_cix on dcs_price (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_price_levels (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     complex_price_id	     varchar2(40)    not null,
     [exec]   4  	     price_levels    varchar2(40)    not null,
     [exec]   5  	     sequence_num    integer not null
     [exec]   6  ,constraint dcs_price_levels_p primary key (complex_price_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_price_level (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     price_level_id  varchar2(40)    not null,
     [exec]  11  	     version integer not null,
     [exec]  12  	     quantity	     integer not null,
     [exec]  13  	     price   number(19,7)    not null
     [exec]  14  ,constraint dcs_price_level_p primary key (price_level_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_price_leve_wsx on dcs_price_level (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_price_leve_cix on dcs_price_level (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_gen_fol_pl (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     folder_id	     varchar2(40)    not null,
     [exec]  11  	     type    integer not null,
     [exec]  12  	     name    varchar2(40)    not null,
     [exec]  13  	     parent  varchar2(40)    null,
     [exec]  14  	     description     varchar2(254)   null,
     [exec]  15  	     item_acl	     varchar2(1024)  null
     [exec]  16  ,constraint dcs_gen_fol_pl_p primary key (folder_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_gen_fol_pl_wsx on dcs_gen_fol_pl (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_gen_fol_pl_cix on dcs_gen_fol_pl (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_child_fol_pl (
     [exec]   2  	     sec_asset_version	     number(19)      not null,
     [exec]   3  	     asset_version   number(19)      not null,
     [exec]   4  	     folder_id	     varchar2(40)    not null,
     [exec]   5  	     sequence_num    integer not null,
     [exec]   6  	     child_folder_id varchar2(40)    not null
     [exec]   7  ,constraint dcs_child_fol_pl_p primary key (folder_id,sequence_num,asset_version,sec_asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_plfol_chld (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     plfol_id	     varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null,
     [exec]   5  	     price_list_id   varchar2(40)    not null
     [exec]   6  ,constraint dcs_plfol_chld_p primary key (plfol_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- order_markers_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_order_markers (
     [exec]   2  	     marker_id	     varchar2(40)    not null,
     [exec]   3  	     order_id	     varchar2(40)    not null,
     [exec]   4  	     marker_key      varchar2(100)   not null,
     [exec]   5  	     marker_value    varchar2(100)   null,
     [exec]   6  	     marker_data     varchar2(100)   null,
     [exec]   7  	     creation_date   timestamp	     null,
     [exec]   8  	     version number(10)      not null,
     [exec]   9  	     marker_type     number(10)      null
     [exec]  10  ,constraint dcsordermarkers_p primary key (marker_id,order_id)
     [exec]  11  ,constraint dcsordermarkers_f foreign key (order_id) references dcspp_order (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_ordrmarkers1_x on dcs_order_markers (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcspp_commerce_item_markers (
     [exec]   2  	     marker_id	     varchar2(40)    not null,
     [exec]   3  	     commerce_item_id	     varchar2(40)    not null,
     [exec]   4  	     marker_key      varchar2(100)   not null,
     [exec]   5  	     marker_value    varchar2(100)   null,
     [exec]   6  	     marker_data     varchar2(100)   null,
     [exec]   7  	     creation_date   timestamp	     null,
     [exec]   8  	     version number(10)      not null,
     [exec]   9  	     marker_type     number(10)      null
     [exec]  10  ,constraint dcscitemmarkers_p primary key (marker_id,commerce_item_id)
     [exec]  11  ,constraint dcscitemmarkers_f foreign key (commerce_item_id) references dcspp_item (commerce_item_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_itemmarkers1_x on dcspp_commerce_item_markers (commerce_item_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- abandoned_order_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- $Id: //product/DCS/version/9.4/templates/DCS/AbandonedOrderServices/sql/abandoned_order_ddl.xml#1 $
     [exec] SQL> 
     [exec] SQL> create table dcspp_ord_abandon (
     [exec]   2  	     abandonment_id  varchar2(40)    not null,
     [exec]   3  	     version number(10)      not null,
     [exec]   4  	     order_id	     varchar2(40)    not null,
     [exec]   5  	     ord_last_updated	     date    null,
     [exec]   6  	     abandon_state   varchar2(40)    null,
     [exec]   7  	     abandonment_count	     number(10)      null,
     [exec]   8  	     abandonment_date	     date    null,
     [exec]   9  	     reanimation_date	     date    null,
     [exec]  10  	     convert_date    date    null,
     [exec]  11  	     lost_date	     date    null
     [exec]  12  ,constraint dcspp_ord_abndn_p primary key (abandonment_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcspp_ordabandn1_x on dcspp_ord_abandon (order_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_user_abandoned (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     order_id	     varchar2(40)    not null,
     [exec]   4  	     profile_id      varchar2(40)    not null
     [exec]   5  ,constraint dcs_usr_abndnd_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table drpt_conv_order (
     [exec]   2  	     order_id	     varchar2(40)    not null,
     [exec]   3  	     converted_date  date    not null,
     [exec]   4  	     amount  number(19,7)    not null,
     [exec]   5  	     promo_count     number(10)      not null,
     [exec]   6  	     promo_value     number(19,7)    not null
     [exec]   7  ,constraint drpt_conv_order_p primary key (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table drpt_session_ord (
     [exec]   2  	     dataset_id      varchar2(40)    not null,
     [exec]   3  	     order_id	     varchar2(40)    not null,
     [exec]   4  	     date_time	     date    not null,
     [exec]   5  	     amount  number(19,7)    not null,
     [exec]   6  	     submitted	     number(10)      not null,
     [exec]   7  	     order_persistent	     number(1)	     null,
     [exec]   8  	     session_id      varchar2(40)    null,
     [exec]   9  	     parent_session_id	     varchar2(40)    null
     [exec]  10  ,constraint drpt_session_ord_p primary key (order_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- the source for this section is
     [exec] SQL> -- abandoned_order_views.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create or replace view drpt_abandon_ord
     [exec]   2  as
     [exec]   3  	   select oa.abandonment_date as abandonment_date, ai.amount as amount, decode(oa.abandon_state, 'CONVERTED', 100, 0) as converted from dcspp_order o, dcspp_ord_abandon oa, dcspp_amount_info ai where oa.order_id=o.order_id and o.price_info=ai.amount_info_id
     [exec]   4  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create or replace view drpt_tns_abndn_ord
     [exec]   2  as
     [exec]   3  	   select date_time as abandonment_date, amount as amount from drpt_session_ord where submitted=0
     [exec]   4  	      ;
     [exec] 
     [exec] View created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/CustomCatalogs/Versioned/sql/db_components/oracle/versioned_custom_catalog_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/CustomCatalogs/sql/custom_catalog_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> 
     [exec] SQL> create table dcs_catalog (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     catalog_id      varchar2(40)    not null,
     [exec]  11  	     version integer not null,
     [exec]  12  	     display_name    varchar2(254)   null,
     [exec]  13  	     creation_date   date    null,
     [exec]  14  	     last_mod_date   date    null,
     [exec]  15  	     migration_status	     number(3,0)     null,
     [exec]  16  	     migration_index number(10)      null,
     [exec]  17  	     item_acl	     varchar2(1024)  null
     [exec]  18  ,constraint dcs_catalog_p primary key (catalog_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_catalog_wsx on dcs_catalog (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_catalog_cix on dcs_catalog (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_root_cats (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null,
     [exec]   4  	     root_cat_id     varchar2(40)    not null
     [exec]   5  ,constraint dcs_root_cats_p primary key (catalog_id,root_cat_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_allroot_cats (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null,
     [exec]   4  	     root_cat_id     varchar2(40)    not null
     [exec]   5  ,constraint dcs_allroot_cats_p primary key (catalog_id,root_cat_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_root_subcats (
     [exec]   2  	     sec_asset_version	     number(19)      not null,
     [exec]   3  	     asset_version   number(19)      not null,
     [exec]   4  	     catalog_id      varchar2(40)    not null,
     [exec]   5  	     sub_catalog_id  varchar2(40)    not null
     [exec]   6  ,constraint dcs_root_subcats_p primary key (catalog_id,sub_catalog_id,asset_version,sec_asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_sub_catalogs (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null,
     [exec]   4  	     sub_catalog_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_sub_catalogs_p primary key (catalog_id,sub_catalog_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_category_info (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     category_info_id	     varchar2(40)    not null,
     [exec]  11  	     version integer not null,
     [exec]  12  	     item_acl	     varchar2(1024)  null
     [exec]  13  ,constraint dcs_category_inf_p primary key (category_info_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_category_i_wsx on dcs_category_info (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_category_i_cix on dcs_category_info (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_product_info (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     product_info_id varchar2(40)    not null,
     [exec]  11  	     version integer not null,
     [exec]  12  	     parent_cat_id   varchar2(40)    null,
     [exec]  13  	     item_acl	     varchar2(1024)  null
     [exec]  14  ,constraint dcs_product_info_p primary key (product_info_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_product_in_wsx on dcs_product_info (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_product_in_cix on dcs_product_info (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_info (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     sku_info_id     varchar2(40)    not null,
     [exec]  11  	     version integer not null,
     [exec]  12  	     item_acl	     varchar2(1024)  null
     [exec]  13  ,constraint dcs_sku_info_p primary key (sku_info_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_sku_info_wsx on dcs_sku_info (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_sku_info_cix on dcs_sku_info (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_subcats (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     category_id     varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null,
     [exec]   5  	     catalog_id      varchar2(40)    not null
     [exec]   6  ,constraint dcs_cat_subcats_p primary key (category_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_subroots (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     category_id     varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null,
     [exec]   5  	     sub_category_id varchar2(40)    not null
     [exec]   6  ,constraint dcs_cat_subroots_p primary key (category_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_catinfo (
     [exec]   2  	     sec_asset_version	     number(19)      not null,
     [exec]   3  	     asset_version   number(19)      not null,
     [exec]   4  	     category_id     varchar2(40)    not null,
     [exec]   5  	     catalog_id      varchar2(40)    not null,
     [exec]   6  	     category_info_id	     varchar2(40)    not null
     [exec]   7  ,constraint dcs_cat_catinfo_p primary key (category_id,catalog_id,asset_version,sec_asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_catinfo_anc (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     category_info_id	     varchar2(40)    not null,
     [exec]   4  	     anc_cat_id      varchar2(40)    not null
     [exec]   5  ,constraint dcs_catinfo_anc_p primary key (category_info_id,anc_cat_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_prdinfo (
     [exec]   2  	     sec_asset_version	     number(19)      not null,
     [exec]   3  	     asset_version   number(19)      not null,
     [exec]   4  	     product_id      varchar2(40)    not null,
     [exec]   5  	     catalog_id      varchar2(40)    not null,
     [exec]   6  	     product_info_id varchar2(40)    not null
     [exec]   7  ,constraint dcs_prd_prdinfo_p primary key (product_id,catalog_id,asset_version,sec_asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prdinfo_rdprd (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     product_info_id varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null,
     [exec]   5  	     related_prd_id  varchar2(40)    not null
     [exec]   6  ,constraint dcs_prdinfo_rdpr_p primary key (product_info_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prdinfo_anc (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     product_info_id varchar2(40)    not null,
     [exec]   4  	     anc_cat_id      varchar2(40)    not null
     [exec]   5  ,constraint dcs_prdinfo_anc_p primary key (product_info_id,anc_cat_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_skuinfo (
     [exec]   2  	     sec_asset_version	     number(19)      not null,
     [exec]   3  	     asset_version   number(19)      not null,
     [exec]   4  	     sku_id  varchar2(40)    not null,
     [exec]   5  	     catalog_id      varchar2(40)    not null,
     [exec]   6  	     sku_info_id     varchar2(40)    not null
     [exec]   7  ,constraint dcs_sku_skuinfo_p primary key (sku_id,catalog_id,asset_version,sec_asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_skuinfo_rplc (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     sku_info_id     varchar2(40)    not null,
     [exec]   4  	     sequence_num    integer not null,
     [exec]   5  	     replacement     varchar2(40)    not null
     [exec]   6  ,constraint dcs_skuinfo_rplc_p primary key (sku_info_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_gen_fol_cat (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     folder_id	     varchar2(40)    not null,
     [exec]  11  	     type    integer not null,
     [exec]  12  	     name    varchar2(40)    not null,
     [exec]  13  	     parent  varchar2(40)    null,
     [exec]  14  	     description     varchar2(254)   null,
     [exec]  15  	     item_acl	     varchar2(1024)  null
     [exec]  16  ,constraint dcs_gen_fol_cat_p primary key (folder_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index dcs_gen_fol_ca_wsx on dcs_gen_fol_cat (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index dcs_gen_fol_ca_cix on dcs_gen_fol_cat (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table dcs_child_fol_cat (
     [exec]   2  	     sec_asset_version	     number(19)      not null,
     [exec]   3  	     asset_version   number(19)      not null,
     [exec]   4  	     folder_id	     varchar2(40)    not null,
     [exec]   5  	     sequence_num    integer not null,
     [exec]   6  	     child_folder_id varchar2(40)    not null
     [exec]   7  ,constraint dcs_child_fol_ca_p primary key (folder_id,sequence_num,asset_version,sec_asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_catfol_chld (
     [exec]   2  	     sec_asset_version	     number(19)      not null,
     [exec]   3  	     asset_version   number(19)      not null,
     [exec]   4  	     catfol_id	     varchar2(40)    not null,
     [exec]   5  	     sequence_num    integer not null,
     [exec]   6  	     catalog_id      varchar2(40)    not null
     [exec]   7  ,constraint dcs_catfol_chld_p primary key (catfol_id,sequence_num,asset_version,sec_asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_dir_anc_ctlgs (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null,
     [exec]   5  	     anc_catalog_id  varchar2(40)    not null
     [exec]   6  ,constraint dcs_dirancctlgs_pk primary key (catalog_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_ind_anc_ctlgs (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null,
     [exec]   5  	     anc_catalog_id  varchar2(40)    not null
     [exec]   6  ,constraint dcs_indancctlgs_pk primary key (catalog_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_ctlg_anc_cats (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     catalog_id      varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null,
     [exec]   5  	     category_id     varchar2(40)    not null
     [exec]   6  ,constraint dcs_ctlganccats_pk primary key (catalog_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_prnt_ctlg (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     category_id     varchar2(40)    not null,
     [exec]   4  	     parent_ctlg_id  varchar2(40)    not null
     [exec]   5  ,constraint dcs_catprntctlg_pk primary key (category_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_anc_cats (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     category_id     varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null,
     [exec]   5  	     anc_category_id varchar2(40)    not null
     [exec]   6  ,constraint dcs_cat_anccats_pk primary key (category_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_prnt_cats (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     product_id      varchar2(40)    not null,
     [exec]   4  	     catalog_id      varchar2(40)    not null,
     [exec]   5  	     category_id     varchar2(40)    not null
     [exec]   6  ,constraint dcs_prdprntcats_pk primary key (product_id,catalog_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_anc_cats (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     product_id      varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null,
     [exec]   5  	     category_id     varchar2(40)    not null
     [exec]   6  ,constraint dcs_prdanc_cats_pk primary key (product_id,sequence_num,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_catalogs (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     category_id     varchar2(40)    not null,
     [exec]   4  	     catalog_id      varchar2(40)    not null
     [exec]   5  ,constraint dcs_cat_catalgs_pk primary key (category_id,catalog_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_prd_catalogs (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     product_id      varchar2(40)    not null,
     [exec]   4  	     catalog_id      varchar2(40)    not null
     [exec]   5  ,constraint dcs_prd_catalgs_pk primary key (product_id,catalog_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_sku_catalogs (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     sku_id  varchar2(40)    not null,
     [exec]   4  	     catalog_id      varchar2(40)    not null
     [exec]   5  ,constraint dcs_sku_catalgs_pk primary key (sku_id,catalog_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/CustomCatalogs/sql/db_components/oracle/custom_catalog_user_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/CustomCatalogs/sql/custom_catalog_user_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> 
     [exec] SQL> create table dcs_user_catalog (
     [exec]   2  	     user_id varchar2(40)    not null,
     [exec]   3  	     user_catalog    varchar2(40)    null
     [exec]   4  ,constraint dcs_usr_catalog_pk primary key (user_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- DAF Search
     [exec] SQL> @D:\ATG\ATG9.4\home/../DAF/Search/Index/sql/db_components/oracle/search_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DAF/version/9.4/Search/Index/src/sql/search_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new search schema.
     [exec] SQL> -- Add the search_config... used to track which generation is the currentgeneration.
     [exec] SQL> 
     [exec] SQL> create table srch_config (
     [exec]   2  	     config_path     varchar2(254)   not null,
     [exec]   3  	     generation      number(10)      not null,
     [exec]   4  	     claimed_generation      number(10)      null,
     [exec]   5  	     nxt_inc_generation      number(10)      null,
     [exec]   6  	     uniq_server_id  varchar2(254)   null,
     [exec]   7  	     last_activity   date    null,
     [exec]   8  	     last_full_index date    null,
     [exec]   9  	     last_incr_index date    null
     [exec]  10  ,constraint srch_config_p primary key (config_path));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Holds an association of a config path and repository name. Usedto reduce the length of the primary key for srch_update_queue
     [exec] SQL> 
     [exec] SQL> create table srch_config_repo (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     config_path     varchar2(254)   not null,
     [exec]   4  	     repository_path varchar2(254)   not null
     [exec]   5  ,constraint srch_config_repo_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the search_update_queue... used by the IncrementalLoader to trackrepository changes.
     [exec] SQL> 
     [exec] SQL> create table srch_update_queue (
     [exec]   2  	     repository_id   varchar2(254)   not null,
     [exec]   3  	     config_repo_id  varchar2(40)    not null,
     [exec]   4  	     generation      number(10)      not null,
     [exec]   5  	     item_desc_name  varchar2(64)    not null,
     [exec]   6  	     change_type     number(10)      not null
     [exec]   7  ,constraint srch_up_queue_p primary key (repository_id,config_repo_id,generation,item_desc_name)
     [exec]   8  ,constraint srch_upq_cfrp_f1 foreign key (config_repo_id) references srch_config_repo (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_updateque1_x on srch_update_queue (config_repo_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the search_update_queue... used by the IncrementalLoader to trackrepository changes.
     [exec] SQL> 
     [exec] SQL> create table srch_update_vqueue (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     config_path     varchar2(254)   not null,
     [exec]   4  	     generation      number(10)      not null,
     [exec]   5  	     repository_path varchar2(254)   not null,
     [exec]   6  	     item_desc_name  varchar2(64)    not null,
     [exec]   7  	     repository_id   varchar2(254)   not null,
     [exec]   8  	     change_type     number(10)      not null,
     [exec]   9  	     dev_line_id     varchar2(40)    not null,
     [exec]  10  	     asset_version   number(10)      not null
     [exec]  11  ,constraint srch_up_vqueue_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_up_vqueue on srch_update_vqueue (config_path,generation,repository_path,item_desc_name,repository_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DAF/Search/Versioned/sql/db_components/oracle/versioned_refinement_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DAF/version/9.4/Search/common/src/sql/refinement_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new refinement repository
     [exec] SQL> -- Add the SRCH_REFINE_ELEMS table, which lists refine elements
     [exec] SQL> 
     [exec] SQL> create table srch_refine_elems (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     id      varchar2(40)    not null,
     [exec]  11  	     type    number(10)      null,
     [exec]  12  	     label   varchar2(254)   not null,
     [exec]  13  	     property	     varchar2(254)   not null,
     [exec]  14  	     property_type   number(10)      not null,
     [exec]  15  	     range_type      number(10)      not null,
     [exec]  16  	     desired number(10)      null,
     [exec]  17  	     minimum number(10)      null,
     [exec]  18  	     incr    number(10)      null,
     [exec]  19  	     sort_type	     number(10)      null,
     [exec]  20  	     levels  number(10)      null,
     [exec]  21  	     parent_refine_elem      varchar2(40)    null,
     [exec]  22  	     priority	     number(10)      null,
     [exec]  23  	     remove_when_used	     number(3)	     not null,
     [exec]  24  	     display_fragment	     varchar2(254)   null,
     [exec]  25  	     max_values      number(10)      null,
     [exec]  26  	     round_free_range	     number(10)      null
     [exec]  27  ,constraint srch_refine_elem_p primary key (id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_refine_el_wsx on srch_refine_elems (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_refine_el_cix on srch_refine_elems (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_REFINE_SUBELS table, which lists any child refine elementsfor a refine element.
     [exec] SQL> 
     [exec] SQL> create table srch_refine_subels (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     id      varchar2(40)    not null,
     [exec]   4  	     seq     number(10)      not null,
     [exec]   5  	     refine_element  varchar2(40)    null
     [exec]   6  ,constraint srch_refine_subl_p primary key (id,seq,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFEL_ORDER table which lists the explicit order values for a refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refel_order (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     id      varchar2(40)    not null,
     [exec]   4  	     seq     number(10)      not null,
     [exec]   5  	     order_value     varchar2(254)   not null
     [exec]   6  ,constraint srch_refel_order_p primary key (id,seq,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFEL_RANGE table which lists the explicit range values for a refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refel_range (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     id      varchar2(40)    not null,
     [exec]   4  	     seq     number(10)      not null,
     [exec]   5  	     range_value     varchar2(254)   not null
     [exec]   6  ,constraint srch_refel_range_p primary key (id,seq,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFEL_SELECT table which lists the select values for a refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refel_select (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     id      varchar2(40)    not null,
     [exec]   4  	     seq     number(10)      not null,
     [exec]   5  	     select_value    varchar2(254)   not null
     [exec]   6  ,constraint srch_refel_selct_p primary key (id,seq,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_REFEL_EXCLUDE table which lists the excluded values for a refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refel_exclude (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     id      varchar2(40)    not null,
     [exec]   4  	     exclude_value   varchar2(254)   not null
     [exec]   5  ,constraint srch_refel_excl_p primary key (id,exclude_value,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_SORT_OPTIONS table which lists available sort options
     [exec] SQL> 
     [exec] SQL> create table srch_sort_options (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     id      varchar2(40)    not null,
     [exec]  11  	     label   varchar2(254)   not null,
     [exec]  12  	     property	     varchar2(254)   not null,
     [exec]  13  	     property_type   number(10)      not null,
     [exec]  14  	     ascending	     number(3)	     not null
     [exec]  15  ,constraint srch_sort_opts_p primary key (id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_sort_opti_wsx on srch_sort_options (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_sort_opti_cix on srch_sort_options (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- The SRCH_REFINE_CONFIG table, which lists the generated refinement configurations.
     [exec] SQL> 
     [exec] SQL> create table srch_refine_config (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     id      varchar2(40)    not null,
     [exec]  11  	     type    number(10)      not null,
     [exec]  12  	     refine_cfg_name varchar2(80)    null
     [exec]  13  ,constraint srch_refine_cfg_p primary key (id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_refine_co_wsx on srch_refine_config (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_refine_co_cix on srch_refine_config (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- List of refine elements that belong to a refine config
     [exec] SQL> 
     [exec] SQL> create table srch_refcfg_elems (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     id      varchar2(40)    not null,
     [exec]   4  	     seq     number(10)      not null,
     [exec]   5  	     refine_element  varchar2(40)    null
     [exec]   6  ,constraint srch_refcfg_els_p primary key (id,seq,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the list of sort options per refine element
     [exec] SQL> 
     [exec] SQL> create table srch_refine_sort (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     id      varchar2(40)    not null,
     [exec]   4  	     sort_option     varchar2(40)    not null
     [exec]   5  ,constraint srch_refine_sort_p primary key (id,sort_option,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- ============================================= Search Merchandising==================================
     [exec] SQL> -- Add the SRCH_CFG_DIM table, dimensionNode
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_dimnode (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     dim_id  varchar2(40)    not null,
     [exec]  11  	     dim_type	     number(10)      not null,
     [exec]  12  	     dim_name	     varchar2(254)   not null,
     [exec]  13  	     dim_desc	     varchar2(254)   null,
     [exec]  14  	     dim_value	     varchar2(254)   null,
     [exec]  15  	     dim_service     varchar2(254)   null
     [exec]  16  ,constraint srch_cfg_dim_p primary key (dim_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_dimno_wsx on srch_cfg_dimnode (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_cfg_dimno_cix on srch_cfg_dimnode (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_DTINFO table, dimensionTreeInfo
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_dtinfo (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     dti_id  varchar2(40)    not null,
     [exec]  11  	     dti_name	     varchar2(254)   not null,
     [exec]  12  	     dti_desc	     varchar2(254)   null,
     [exec]  13  	     dti_app number(10)      not null,
     [exec]  14  	     dti_root_id     varchar2(40)    null
     [exec]  15  ,constraint srch_cfg_dti_p primary key (dti_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_dtinf_wsx on srch_cfg_dtinfo (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_cfg_dtinf_cix on srch_cfg_dtinfo (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_FOL table, dimensionFolder
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_fol (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     fol_id  varchar2(40)    not null,
     [exec]   4  	     fol_dim_svc     varchar2(40)    null
     [exec]   5  ,constraint srch_cfg_fol_p primary key (fol_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_RULE table, searchRule
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rule (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     r_id    varchar2(40)    not null,
     [exec]  11  	     r_type  number(10)      not null,
     [exec]  12  	     r_display_name  varchar2(254)   null,
     [exec]  13  	     r_enabled	     number(3)	     not null,
     [exec]  14  	     r_rule_type     number(10)      null,
     [exec]  15  	     r_rule  clob    not null,
     [exec]  16  	     r_action	     clob    not null,
     [exec]  17  	     r_desc  varchar2(254)   null
     [exec]  18  ,constraint srch_cfg_rule_p primary key (r_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_rule_wsx on srch_cfg_rule (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_cfg_rule_cix on srch_cfg_rule (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_SYNSET table, synset
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_synset (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     syn_id  varchar2(40)    not null,
     [exec]  11  	     syn_base_term   varchar2(254)   not null,
     [exec]  12  	     syn_reciprocal  number(3)	     not null
     [exec]  13  ,constraint srch_cfg_synset_p primary key (syn_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_synse_wsx on srch_cfg_synset (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_cfg_synse_cix on srch_cfg_synset (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_APROP table, availableRankingProperty
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_aprop (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     arp_id  varchar2(40)    not null,
     [exec]  11  	     arp_name	     varchar2(254)   not null,
     [exec]  12  	     arp_data_type   number(10)      not null,
     [exec]  13  	     arp_value_type  number(10)      not null,
     [exec]  14  	     arp_app number(10)      not null
     [exec]  15  ,constraint srch_cfg_aprop_p primary key (arp_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_aprop_wsx on srch_cfg_aprop (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_cfg_aprop_cix on srch_cfg_aprop (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_RPROP table, rankingProperty
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rprop (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     workspace_id    varchar2(40)    not null,
     [exec]   4  	     branch_id	     varchar2(40)    not null,
     [exec]   5  	     is_head number(1)	     not null,
     [exec]   6  	     version_deleted number(1)	     not null,
     [exec]   7  	     version_editable	     number(1)	     not null,
     [exec]   8  	     pred_version    number(19)      null,
     [exec]   9  	     checkin_date    date    null,
     [exec]  10  	     rp_id   varchar2(40)    not null,
     [exec]  11  	     rp_arp  varchar2(40)    not null,
     [exec]  12  	     rp_def_rank     number(10)      not null,
     [exec]  13  	     rp_weighting    number(5,2)     not null,
     [exec]  14  	     rp_rng_met      number(10)      null
     [exec]  15  ,constraint srch_cfg_rprop_p primary key (rp_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srch_cfg_rprop_wsx on srch_cfg_rprop (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index srch_cfg_rprop_cix on srch_cfg_rprop (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> -- Add the SRCH_CFG_CFG table, genericSearchConfig
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_cfg (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     cfg_id  varchar2(40)    not null,
     [exec]   4  	     cfg_app number(10)      not null,
     [exec]   5  	     cfg_locale      varchar2(40)    null,
     [exec]   6  	     cfg_rm  varchar2(40)    null,
     [exec]   7  	     cfg_base_id     varchar2(40)    null,
     [exec]   8  	     use_base_rankprps	     number(3)	     not null
     [exec]   9  ,constraint srch_cfg_cfg_p primary key (cfg_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_CFG table, genericSearchConfig.baseSearchConfig & derivedSearchConfigs
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_base (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     cfg_id  varchar2(40)    not null,
     [exec]   4  	     cfg_base_id     varchar2(40)    not null
     [exec]   5  ,constraint srch_cfg_base_p primary key (cfg_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_FOL_CHLDCFGS table, dimensionFolder.searchConfigs (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_fol_chldcfgs (
     [exec]   2  	     sec_asset_version	     number(19)      not null,
     [exec]   3  	     asset_version   number(19)      not null,
     [exec]   4  	     folder_id	     varchar2(40)    not null,
     [exec]   5  	     srch_cfg_id     varchar2(40)    not null,
     [exec]   6  	     chldcfgs_seq    number(10)      not null
     [exec]   7  ,constraint srch_cfg_ccfgs_p primary key (folder_id,chldcfgs_seq,asset_version,sec_asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_FOL_CHLDFOL table, dimensionFolder.childDimensionFolders (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_fol_chldfol (
     [exec]   2  	     sec_asset_version	     number(19)      not null,
     [exec]   3  	     asset_version   number(19)      not null,
     [exec]   4  	     folder_id	     varchar2(40)    not null,
     [exec]   5  	     chldfol_seq     number(10)      not null,
     [exec]   6  	     chld_fol_id     varchar2(40)    not null
     [exec]   7  ,constraint srch_cfg_chldfol_p primary key (folder_id,chldfol_seq,asset_version,sec_asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_RPSET table, genericSearchConfig.rankingProperties (set)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rpset (
     [exec]   2  	     sec_asset_version	     number(19)      not null,
     [exec]   3  	     asset_version   number(19)      not null,
     [exec]   4  	     rpset_cfg_id    varchar2(40)    not null,
     [exec]   5  	     rpset_rp_id     varchar2(40)    not null
     [exec]   6  ,constraint srch_cfg_rpset_p primary key (rpset_cfg_id,rpset_rp_id,asset_version,sec_asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_VRPSET table, genericSearchConfig.variableRankingProperties (set)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_vrpset (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     vrpset_cfg_id   varchar2(40)    not null,
     [exec]   4  	     vrpset_rp_id    varchar2(40)    not null
     [exec]   5  ,constraint srch_cfg_vrpset_p primary key (vrpset_cfg_id,vrpset_rp_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_SYNLNK table, genericSearchConfig.synsets (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_synlnk (
     [exec]   2  	     sec_asset_version	     number(19)      not null,
     [exec]   3  	     asset_version   number(19)      not null,
     [exec]   4  	     slnk_cfg_id     varchar2(40)    not null,
     [exec]   5  	     slnk_syn_id     varchar2(40)    not null,
     [exec]   6  	     slnk_seq	     number(10)      not null
     [exec]   7  ,constraint srch_cfg_synlnk_p primary key (slnk_cfg_id,slnk_seq,asset_version,sec_asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_DRULE table, genericSearchConfig.disabledBaseRules (set)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_drule (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     dr_cfg_id	     varchar2(40)    not null,
     [exec]   4  	     dr_id   varchar2(40)    not null
     [exec]   5  ,constraint srch_cfg_drule_p primary key (dr_cfg_id,dr_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_DSYN table, genericSearchConfig.disabledBaseSynsets (set)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_dsyn (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     ds_cfg_id	     varchar2(40)    not null,
     [exec]   4  	     ds_id   varchar2(40)    not null
     [exec]   5  ,constraint srch_cfg_dsyn_p primary key (ds_cfg_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_ERULE table, genericSearchConfig.exclusionRules (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_erule (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     er_cfg_id	     varchar2(40)    not null,
     [exec]   4  	     er_id   varchar2(40)    not null,
     [exec]   5  	     er_seq  number(10)      not null
     [exec]   6  ,constraint srch_cfg_erule_p primary key (er_id,er_seq,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_RRULE table, genericSearchConfig.redirectionRules (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rrule (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     rr_cfg_id	     varchar2(40)    not null,
     [exec]   4  	     rr_id   varchar2(40)    not null,
     [exec]   5  	     rr_seq  number(10)      not null
     [exec]   6  ,constraint srch_cfg_rrule_p primary key (rr_id,rr_seq,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_PRULE table, genericSearchConfig.positioningRules (list)
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_prule (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     pr_cfg_id	     varchar2(40)    not null,
     [exec]   4  	     pr_id   varchar2(40)    not null,
     [exec]   5  	     pr_seq  number(10)      not null
     [exec]   6  ,constraint srch_cfg_prule_p primary key (pr_id,pr_seq,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_TERM table, synset.terms
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_term (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     trm_syn_id      varchar2(40)    not null,
     [exec]   4  	     trm_term	     varchar2(254)   not null
     [exec]   5  ,constraint srch_cfg_term_p primary key (trm_syn_id,trm_term,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the SRCH_CFG_RANK table, rankingProperty.valueRanks
     [exec] SQL> 
     [exec] SQL> create table srch_cfg_rank (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     rank_rp_id      varchar2(40)    not null,
     [exec]   4  	     rank_value      varchar2(254)   not null,
     [exec]   5  	     rank_rank	     number(10)      not null
     [exec]   6  ,constraint srch_cfg_rank_p primary key (rank_rp_id,rank_value,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- TO ADD
     [exec] SQL> @D:\ATG\ATG9.4\home/../DAF/Search/Topics/sql/db_components/oracle/search_topics_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table src_topic_set (
     [exec]   2  	     topic_set_id    varchar2(40)    not null,
     [exec]   3  	     language_en     varchar2(200)   null,
     [exec]   4  	     last_mod	     date    not null
     [exec]   5  ,constraint src_topic_set_pk primary key (topic_set_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table src_topic (
     [exec]   2  	     topic_id	     varchar2(40)    not null,
     [exec]   3  	     node_type	     number(10)      not null,
     [exec]   4  	     parent_id	     varchar2(40)    null,
     [exec]   5  	     name    varchar2(200)   null,
     [exec]   6  	     display_name    varchar2(200)   null,
     [exec]   7  	     description     varchar2(1000)  null
     [exec]   8  ,constraint src_topic_pk primary key (topic_id)
     [exec]   9  ,constraint src_topic_fk1 foreign key (parent_id) references src_topic (topic_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index src_topic1_ix on src_topic (parent_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index src_topic_ix1 on src_topic (name);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table src_topicchild_seq (
     [exec]   2  	     parent_topic_id varchar2(40)    not null,
     [exec]   3  	     child_topic_id  varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null
     [exec]   5  ,constraint src_topicchild_p primary key (parent_topic_id,sequence_num)
     [exec]   6  ,constraint src_topicchild_fk1 foreign key (parent_topic_id) references src_topic (topic_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table src_roottopics_seq (
     [exec]   2  	     topic_set_id    varchar2(40)    not null,
     [exec]   3  	     topic_id	     varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null
     [exec]   5  ,constraint src_roottpcs_seq_p primary key (topic_set_id,sequence_num)
     [exec]   6  ,constraint src_roottopics_fk1 foreign key (topic_set_id) references src_topic_set (topic_set_id)
     [exec]   7  ,constraint src_roottopics_fk2 foreign key (topic_id) references src_topic (topic_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index src_rttopicsseq1_x on src_roottopics_seq (topic_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table src_topic_macro (
     [exec]   2  	     macro_id	     varchar2(40)    not null,
     [exec]   3  	     macro_name      varchar2(80)    not null,
     [exec]   4  	     learn_id	     varchar2(40)    null,
     [exec]   5  	     def     varchar2(1666)  not null
     [exec]   6  ,constraint src_topicmacro_p primary key (macro_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table src_topicmacro_seq (
     [exec]   2  	     topic_id	     varchar2(40)    not null,
     [exec]   3  	     macro_id	     varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null
     [exec]   5  ,constraint src_topicmacros_p primary key (topic_id,sequence_num)
     [exec]   6  ,constraint src_topicmac_fk1 foreign key (topic_id) references src_topic (topic_id)
     [exec]   7  ,constraint src_topicmac_fk2 foreign key (macro_id) references src_topic_macro (macro_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index src_topicmac2_ix on src_topicmacro_seq (macro_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table src_global_macro (
     [exec]   2  	     macro_id	     varchar2(40)    not null,
     [exec]   3  	     macro_name      varchar2(80)    not null,
     [exec]   4  	     learn_id	     varchar2(40)    null,
     [exec]   5  	     def     varchar2(1666)  not null
     [exec]   6  ,constraint src_globalmacro_p primary key (macro_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table src_topic_pattern (
     [exec]   2  	     pattern_id      varchar2(40)    not null,
     [exec]   3  	     learn_id	     varchar2(40)    null,
     [exec]   4  	     pattern varchar2(1000)  not null,
     [exec]   5  	     weight  number(10)      not null,
     [exec]   6  	     language	     varchar2(200)   null,
     [exec]   7  	     groups  varchar2(200)   null,
     [exec]   8  	     is_enabled      number(1)	     not null
     [exec]   9  ,constraint src_topicpattern_p primary key (pattern_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table src_topic_pat_seq (
     [exec]   2  	     topic_id	     varchar2(40)    not null,
     [exec]   3  	     pattern_id      varchar2(40)    not null,
     [exec]   4  	     sequence_num    number(10)      not null
     [exec]   5  ,constraint src_topicpats_p primary key (topic_id,sequence_num)
     [exec]   6  ,constraint src_topicpats_fk1 foreign key (topic_id) references src_topic (topic_id)
     [exec]   7  ,constraint src_topicpats_fk2 foreign key (pattern_id) references src_topic_pattern (pattern_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index src_topicpats2_ix on src_topic_pat_seq (pattern_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table src_topic_label (
     [exec]   2  	     label_id	     varchar2(40)    not null,
     [exec]   3  	     name    varchar2(200)   not null,
     [exec]   4  	     topic_id	     varchar2(40)    not null
     [exec]   5  ,constraint src_topic_label_p primary key (label_id)
     [exec]   6  ,constraint srctopiclabel_fk1 foreign key (topic_id) references src_topic (topic_id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index srctopiclabel1_ix on src_topic_label (topic_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DAF/Search/Routing/sql/db_components/oracle/routing_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DAF/version/9.4/Search/Routing/src/sql/routing_ddl.xml#2 $$Change: 652444 $
     [exec] SQL> -- This file contains create table statements, which will configureyour database for use with the search routing schema.
     [exec] SQL> 
     [exec] SQL> create table rout_index (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     idx_start	     date    null,
     [exec]   4  	     idx_end date    null,
     [exec]   5  	     est_start	     date    null,
     [exec]   6  	     est_end date    null
     [exec]   7  ,constraint rout_index_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table rout_lp_summary (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     duration_seconds	     number(10)      null,
     [exec]   4  	     estimated_bytes number(19)      null,
     [exec]   5  	     actual_bytes    number(19)      null,
     [exec]   6  	     items_sent      number(10)      null,
     [exec]   7  	     items_deferred  number(10)      null,
     [exec]   8  	     error_count     number(10)      null
     [exec]   9  ,constraint rout_lp_smry_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table rout_lp_cmd_count (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     cmd_name	     varchar2(40)    null,
     [exec]   4  	     cmd_count	     number(10)      null
     [exec]   5  ,constraint rout_cmd_cnt_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table rout_lp_smry_cmds (
     [exec]   2  	     lp_summary_id   varchar2(40)    not null,
     [exec]   3  	     cmd_count_id    varchar2(40)    not null,
     [exec]   4  	     cmd_indx	     number(10)      not null
     [exec]   5  ,constraint rout_smry_cmds_m_p primary key (lp_summary_id,cmd_indx)
     [exec]   6  ,constraint rout_lpsmryp_f1 foreign key (lp_summary_id) references rout_lp_summary (id)
     [exec]   7  ,constraint rout_smry_fk2 foreign key (cmd_count_id) references rout_lp_cmd_count (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index rout_smry1_x on rout_lp_smry_cmds (cmd_count_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table rout_env (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     env_name	     varchar2(254)   not null,
     [exec]   4  	     rollback_policy number(1)	     null,
     [exec]   5  	     server_repl_policy      number(1)	     null,
     [exec]   6  	     current_index   varchar2(40)    null,
     [exec]   7  	     deploying_index varchar2(40)    null,
     [exec]   8  	     current_deployment      varchar2(40)    null,
     [exec]   9  	     deploy_type     number(1)	     null,
     [exec]  10  	     env_type	     number(1)	     null,
     [exec]  11  	     parent_project  varchar2(40)    null,
     [exec]  12  	     parent_proj_name	     varchar2(254)   null,
     [exec]  13  	     shadow  number(1)	     null,
     [exec]  14  	     request_options clob    null,
     [exec]  15  	     bulk_env_id     varchar2(40)    null,
     [exec]  16  	     indexable	     number(1)	     null,
     [exec]  17  	     searchable      number(1)	     null,
     [exec]  18  	     multiplicity    number(10)      null
     [exec]  19  ,constraint rout_env_pk primary key (id)
     [exec]  20  ,constraint env_unique unique (env_name)
     [exec]  21  ,constraint rout_env_f1 foreign key (current_index) references rout_index (id)
     [exec]  22  ,constraint rout_env_f2 foreign key (deploying_index) references rout_index (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index rout_env1_x on rout_env (current_index);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index rout_env2_x on rout_env (deploying_index);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table rout_host_inf (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     hostname	     varchar2(64)    null,
     [exec]   4  	     start_port      number(10)      null,
     [exec]   5  	     end_port	     number(10)      null,
     [exec]   6  	     lnch_svc_port   number(10)      null,
     [exec]   7  	     lnch_svc_name   varchar2(40)    null,
     [exec]   8  	     lnch_svc_protocol	     varchar2(40)    null,
     [exec]   9  	     cpu_count	     number(10)      null,
     [exec]  10  	     os_name varchar2(254)   null,
     [exec]  11  	     os_arch varchar2(254)   null,
     [exec]  12  	     os_version      varchar2(254)   null
     [exec]  13  ,constraint rout_host_inf_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table rout_host (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     host_info_id    varchar2(40)    null,
     [exec]   4  	     parent_env_id   varchar2(40)    null,
     [exec]   5  	     index_root_path varchar2(254)   null,
     [exec]   6  	     num_engines     number(10)      null
     [exec]   7  ,constraint rout_host_pk primary key (id)
     [exec]   8  ,constraint rout_host_f1 foreign key (parent_env_id) references rout_env (id)
     [exec]   9  ,constraint rout_host_f2 foreign key (host_info_id) references rout_host_inf (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index rout_host1_x on rout_host (parent_env_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index rout_host2_x on rout_host (host_info_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table rout_part (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     parent_index    varchar2(40)    null,
     [exec]   4  	     last_partition  varchar2(40)    null,
     [exec]   5  	     content_guid    varchar2(64)    null,
     [exec]   6  	     date_created    date    null,
     [exec]   7  	     files_exist     number(1)	     null,
     [exec]   8  	     space_used_kb   number(19)      null,
     [exec]   9  	     space_free_kb   number(19)      null,
     [exec]  10  	     items_indexed   number(19)      null,
     [exec]  11  	     ideamap varchar2(254)   null,
     [exec]  12  	     storage varchar2(254)   null,
     [exec]  13  	     hdocmap varchar2(254)   null,
     [exec]  14  	     needs_content_guid      number(1)	     not null,
     [exec]  15  	     shared_id	     varchar2(40)    null,
     [exec]  16  	     indexing_mode   number(1)	     not null,
     [exec]  17  	     def_wrk_path    varchar2(254)   null,
     [exec]  18  	     sent_bytes      number(19)      null,
     [exec]  19  	     content_bytes   number(19)      null,
     [exec]  20  	     max_bytes	     number(19)      null,
     [exec]  21  	     idx_start	     date    null,
     [exec]  22  	     idx_end date    null,
     [exec]  23  	     bak_start	     date    null,
     [exec]  24  	     bak_end date    null,
     [exec]  25  	     part_full	     number(1)	     null,
     [exec]  26  	     backup_ideamap  varchar2(254)   null,
     [exec]  27  	     backup_storage  varchar2(254)   null,
     [exec]  28  	     backup_ideamap_old      varchar2(254)   null,
     [exec]  29  	     backup_storage_old      varchar2(254)   null,
     [exec]  30  	     backup_time     date    null,
     [exec]  31  	     backup_time_old date    null
     [exec]  32  ,constraint rout_part_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table rout_engine (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     index_partition_id      varchar2(40)    null,
     [exec]   4  	     host_id varchar2(40)    null,
     [exec]   5  	     port    number(10)      null,
     [exec]   6  	     local_content_path      varchar2(254)   null,
     [exec]   7  	     server_state    number(1)	     null,
     [exec]   8  	     failures	     number(10)      null,
     [exec]   9  	     max_failures    number(10)      null
     [exec]  10  ,constraint rout_engine_pk primary key (id)
     [exec]  11  ,constraint rout_engine_f1 foreign key (index_partition_id) references rout_part (id)
     [exec]  12  ,constraint rout_engine_f2 foreign key (host_id) references rout_host (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index rout_engine1_x on rout_engine (index_partition_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> create index rout_engine2_x on rout_engine (host_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table rout_log_part (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     lp_name varchar2(40)    null,
     [exec]   4  	     lp_description  varchar2(254)   null,
     [exec]   5  	     parent_index    varchar2(40)    null,
     [exec]   6  	     partition_mode  number(1)	     not null,
     [exec]   7  	     orig_part_count number(10)      not null,
     [exec]   8  	     shared_id	     varchar2(40)    not null,
     [exec]   9  	     flggd_for_full  number(1)	     not null,
     [exec]  10  	     curr_idx_full   number(1)	     not null,
     [exec]  11  	     last_partition  varchar2(40)    null,
     [exec]  12  	     summary_id      varchar2(40)    null,
     [exec]  13  	     indexing_state  number(1)	     not null,
     [exec]  14  	     est_start	     date    null,
     [exec]  15  	     est_end date    null
     [exec]  16  ,constraint rout_log_part_p primary key (id)
     [exec]  17  ,constraint rout_log_part_f1 foreign key (parent_index) references rout_index (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index rout_log_part1_x on rout_log_part (parent_index);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table rout_phys_part_m (
     [exec]   2  	     log_part_id     varchar2(40)    not null,
     [exec]   3  	     phys_part_id    varchar2(40)    not null,
     [exec]   4  	     phys_indx	     number(10)      not null
     [exec]   5  ,constraint rout_phys_part_m_p primary key (log_part_id,phys_indx)
     [exec]   6  ,constraint rout_phys_m_f1 foreign key (log_part_id) references rout_log_part (id)
     [exec]   7  ,constraint rout_phys_m_f2 foreign key (phys_part_id) references rout_part (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index rout_phys_m1_x on rout_phys_part_m (phys_part_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table rout_idx_log_parts (
     [exec]   2  	     parent_index    varchar2(40)    not null,
     [exec]   3  	     log_part_id     varchar2(40)    not null,
     [exec]   4  	     log_indx	     number(10)      not null
     [exec]   5  ,constraint rout_lparts_m_p primary key (parent_index,log_indx)
     [exec]   6  ,constraint rout_idxlogp_f1 foreign key (parent_index) references rout_index (id)
     [exec]   7  ,constraint rout_idxlogp_fk2 foreign key (log_part_id) references rout_log_part (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index rout_idxlogp1_x on rout_idx_log_parts (log_part_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table rout_dep_hist (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     environment     varchar2(40)    null,
     [exec]   4  	     new_index	     varchar2(40)    null,
     [exec]   5  	     time_started    date    null,
     [exec]   6  	     time_ended      date    null,
     [exec]   7  	     deploy_status   number(1)	     null
     [exec]   8  ,constraint rout_dep_hist_pk primary key (id)
     [exec]   9  ,constraint rout_dep_hist_f1 foreign key (new_index) references rout_index (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index rout_dep_hist1_x on rout_dep_hist (new_index);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create table rout_swpchk (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     appserver_name  varchar2(254)   null,
     [exec]   4  	     last_check_time date    null,
     [exec]   5  	     swap_state      number(1)	     null
     [exec]   6  ,constraint rout_swpch_pk primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- DCS Search
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/Search/Versioned/sql/db_components/oracle/versioned_commerce_refinement_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/Search/common/sql/commerce_refinement_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new catalog-extended refinement repository
     [exec] SQL> 
     [exec] SQL> create table dcs_refine_config (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     id      varchar2(40)    not null,
     [exec]   4  	     inherit_global  number(3)	     not null,
     [exec]   5  	     inherit_category	     number(3)	     not null,
     [exec]   6  	     can_child_inherit	     number(3)	     not null,
     [exec]   7  	     is_global	     number(3)	     not null
     [exec]   8  ,constraint dcs_refine_cfg_p primary key (id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_refcfg_genels (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     id      varchar2(40)    not null,
     [exec]   4  	     seq     number(10)      not null,
     [exec]   5  	     refine_element  varchar2(40)    not null
     [exec]   6  ,constraint dcs_rfcfg_genels_p primary key (id,seq,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_cat_refcfg (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     id      varchar2(40)    not null,
     [exec]   4  	     refine_config_id	     varchar2(40)    null
     [exec]   5  ,constraint dcs_cat_refcfg_p primary key (id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> @D:\ATG\ATG9.4\home/../DCS/Search/CustomCatalogs/Versioned/sql/db_components/oracle/versioned_custom_catalog_refinement_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $Id: //product/DCS/version/9.4/templates/DCS/Search/CustomCatalogs/common/sql/custom_catalog_refinement_ddl.xml#1 $$Change: 652354 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the new catalog-extended refinement repository
     [exec] SQL> 
     [exec] SQL> create table dcs_refcfg_custom (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     id      varchar2(40)    not null,
     [exec]   4  	     inherit_catalog number(3)	     not null
     [exec]   5  ,constraint dcs_rfcf_custom_p primary key (id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_catinfo_refcfg (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     id      varchar2(40)    not null,
     [exec]   4  	     refine_config_id	     varchar2(40)    not null
     [exec]   5  ,constraint dcs_catinf_rfcfg_p primary key (id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> create table dcs_catalog_refcfg (
     [exec]   2  	     asset_version   number(19)      not null,
     [exec]   3  	     id      varchar2(40)    not null,
     [exec]   4  	     refine_config_id	     varchar2(40)    null
     [exec]   5  ,constraint dcs_cata_rfcfg_p primary key (id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- SearchTesting
     [exec] SQL> @D:\ATG\ATG9.4\home/../DAF/Search/common/sql/db_components/oracle/searchtesting_ddl.sql
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> --  @version $id: c:/work/platform/acton/daf/search/common/src/config/atg/search/repository/searchtestingrepository_ddl.xml $$change: 433350 $
     [exec] SQL> -- This file contains create table statements, which will configure your database for use with the search testing repository
     [exec] SQL> --     Add the tst_folders table, searchTestFolder
     [exec] SQL> 
     [exec] SQL> create table tst_folders (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     application     number(10)      not null,
     [exec]   4  	     owner_id	     varchar2(40)    null,
     [exec]   5  	     display_name    varchar2(254)   not null,
     [exec]   6  	     folder_type     number(10)      not null,
     [exec]   7  	     description     varchar2(254)   null,
     [exec]   8  	     parent_folder_id	     varchar2(40)    null
     [exec]   9  ,constraint tst_folders_p primary key (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Add the tst_search_tests table, searchTest
     [exec] SQL> 
     [exec] SQL> create table tst_search_tests (
     [exec]   2  	     id      varchar2(40)    not null,
     [exec]   3  	     application     number(10)      not null,
     [exec]   4  	     parent_folder_id	     varchar2(40)    not null,
     [exec]   5  	     owner_id	     varchar2(40)    null,
     [exec]   6  	     display_name    varchar2(254)   not null,
     [exec]   7  	     description     varchar2(254)   null,
     [exec]   8  	     creation_date   date    not null,
     [exec]   9  	     creation_author varchar2(40)    not null,
     [exec]  10  	     last_modified_date      date    not null,
     [exec]  11  	     last_modified_author    varchar2(40)    not null,
     [exec]  12  	     search_config_name      varchar2(254)   null,
     [exec]  13  	     refine_config_name      varchar2(254)   null,
     [exec]  14  	     category_id     varchar2(40)    null,
     [exec]  15  	     query_text      clob    null,
     [exec]  16  	     facet_trail     clob    null,
     [exec]  17  	     sort_by_type    number(10)      null,
     [exec]  18  	     sort_prop	     clob    null,
     [exec]  19  	     results number(10)      null,
     [exec]  20  	     preview_user_id varchar2(40)    null
     [exec]  21  ,constraint tst_search_tests_p primary key (id)
     [exec]  22  ,constraint tst_search_tests_f foreign key (parent_folder_id) references tst_folders (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> create index tst_search_tests_x on tst_search_tests (parent_folder_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> --     Add the tst_track_items table, searchTest.trackItems
     [exec] SQL> 
     [exec] SQL> create table tst_track_items (
     [exec]   2  	     test_id varchar2(40)    not null,
     [exec]   3  	     track_item_id   varchar2(254)   not null
     [exec]   4  ,constraint tst_track_items_p primary key (test_id,track_item_id)
     [exec]   5  ,constraint tst_track_items_f foreign key (test_id) references tst_search_tests (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Add the tst_test_types table, searchTest.testTypes
     [exec] SQL> 
     [exec] SQL> create table tst_test_types (
     [exec]   2  	     test_id varchar2(40)    not null,
     [exec]   3  	     test_type	     varchar2(40)    not null
     [exec]   4  ,constraint tst_test_types_p primary key (test_id,test_type)
     [exec]   5  ,constraint tst_test_types_f foreign key (test_id) references tst_search_tests (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Add the tst_dimension_values table, searchTest.dimensionValues
     [exec] SQL> 
     [exec] SQL> create table tst_dimension_values (
     [exec]   2  	     test_id varchar2(40)    not null,
     [exec]   3  	     dimension_name  varchar2(254)   not null,
     [exec]   4  	     dimension_value varchar2(254)   not null
     [exec]   5  ,constraint tst_dimvalues_p primary key (test_id,dimension_name)
     [exec]   6  ,constraint tst_dimvalues_f foreign key (test_id) references tst_search_tests (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --     Add the tst_advanced_parameters table, searchTest.advancedParameters
     [exec] SQL> 
     [exec] SQL> create table tst_advanced_parameters (
     [exec]   2  	     test_id varchar2(40)    not null,
     [exec]   3  	     param_key	     varchar2(254)   not null,
     [exec]   4  	     param_value     clob    not null
     [exec]   5  ,constraint tst_advparam_p primary key (test_id,param_key)
     [exec]   6  ,constraint tst_advparam_f foreign key (test_id) references tst_search_tests (id));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Castorama
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_core_order.sql
     [exec] SQL> CREATE TABLE CASTO_ORDER (
     [exec]   2    ORDER_ID VARCHAR2 (40) NOT NULL REFERENCES DCSPP_ORDER(ORDER_ID),
     [exec]   3    ISGIFT NUMBER (1,0) CONSTRAINT ISGIFT_CH CHECK (ISGIFT in (0,1)),
     [exec]   4    COMMENTAIRE VARCHAR2 (200),
     [exec]   5    EXPORTDATE DATE,
     [exec]   6    DATESUPPRESSION DATE,
     [exec]   7    AUTEUR VARCHAR2 (150),
     [exec]   8    NUMCHEQUE VARCHAR2 (50),
     [exec]   9    LIBELLE_BANQUE VARCHAR2 (30),
     [exec]  10    MONTANT_CHEQUE_FRANCS NUMBER (12,2),
     [exec]  11    MONTANT_CHEQUE_EUROS NUMBER (12,2),
     [exec]  12    CHEQUE_NON_VALIDE NUMBER,
     [exec]  13    COMMENTAIRE_CHEQUE VARCHAR2 (500),
     [exec]  14    NUM_CARTE_ATOUT VARCHAR2 (50),
     [exec]  15    DATE_VALID_ATOUT DATE,
     [exec]  16    OPTION_PAIEMENT_ATOUT NUMBER,
     [exec]  17    MESSAGE_TRANSPORTEUR VARCHAR2 (500),
     [exec]  18    BOSTATE VARCHAR2 (40),
     [exec]  19    BOSTATE_DETAIL VARCHAR2 (254),
     [exec]  20    BOSTATE_NUM NUMBER (2,0),
     [exec]  21    PREPARATION_PRICE_INFO VARCHAR2 (40) REFERENCES DCSPP_AMOUNT_INFO(AMOUNT_INFO_ID),
     [exec]  22    CVENTE NUMBER (12,0),
     [exec]  23    FETAT_INTEGRATION NUMBER (1,0),
     [exec]  24    MONTANT_CHEQUE_CADEAU NUMBER (12,2),
     [exec]  25    PAIEMENT_CHEQUE_CADEAU NUMBER (1,0),
     [exec]  26    ENREG_CCP_PRESENT VARCHAR2 (1),
     [exec]  27    COMMENTAIRE_PAIEMENT VARCHAR2 (100),
     [exec]  28    ETAGE_LIVRAISON NUMBER,
     [exec]  29    NUM_FIC_EXPORT NUMBER (10,0),
     [exec]  30    ORIGINE_MAGASIN NUMBER,
     [exec]  31    JSESSIONID VARCHAR2 (60),
     [exec]  32    MNT_TOTAL_TTC NUMBER (10,2),
     [exec]  33    MNT_LIV_NON_REMISE NUMBER (10,2),
     [exec]  34    MNT_MONTEE_ETAGE NUMBER (10,2),
     [exec]  35    MNT_REMISE_LIV_ETAGE NUMBER (10,2),
     [exec]  36    MNT_PREPA_NON_REMISE NUMBER (10,2),
     [exec]  37    MNT_FRAIS_PREPA_REMISE NUMBER (10,2),
     [exec]  38    MNT_REMISES_COMMANDE NUMBER (10,2),
     [exec]  39    CARTE_ATOUT_INDETERMINE NUMBER (1,0),
     [exec]  40    MONTANT_PFL NUMBER (12,2),
     [exec]  41    MONTANT_PFT NUMBER (12,2),
     [exec]  42    COMMANDE_ADMIN NUMBER (1,0),
     [exec]  43    LOGIN_ADMIN VARCHAR2 (50),
     [exec]  44    CP_ACCEPTEES NUMBER,
     [exec]  45    PRIMARY KEY (ORDER_ID)
     [exec]  46  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ORDER_EMAILS (
     [exec]   2  	     ORDER_ID VARCHAR2 (40) NOT NULL REFERENCES CASTO_ORDER(ORDER_ID),
     [exec]   3  	     EMAIL_TYPE VARCHAR2 (50),
     [exec]   4  	     IS_SENT NUMBER (1,0),
     [exec]   5  	     PRIMARY KEY (ORDER_ID, EMAIL_TYPE)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ORDER_COMMENTAIRE (
     [exec]   2    REPOSITORYID VARCHAR2 (50) NOT NULL PRIMARY KEY,
     [exec]   3    COMMENTAIRE VARCHAR2 (2000)
     [exec]   4  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_TRADEDOUBLER (
     [exec]   2    ORDER_ID VARCHAR2 (40) NOT NULL PRIMARY KEY,
     [exec]   3    TDUID VARCHAR2 (32) NOT NULL
     [exec]   4  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CARTE_ATOUT (
     [exec]   2    PAYMENT_GROUP_ID VARCHAR2 (40) NOT NULL PRIMARY KEY,
     [exec]   3    ID_TRANSACTION NUMBER (18,0),
     [exec]   4    NUM_AUTORISATION VARCHAR2 (20),
     [exec]   5    NUM_TRANSACTION NUMBER (18,0),
     [exec]   6    DATE_TRANSACTION TIMESTAMP(6),
     [exec]   7    DATE_PAIEMENT TIMESTAMP(6),
     [exec]   8    DATE_VALID_ATOUT TIMESTAMP(6),
     [exec]   9    NUM_CARTE_ATOUT VARCHAR2 (40),
     [exec]  10    OPTION_PAIEMENT_ATOUT NUMBER
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CARTE_CHEQUE (
     [exec]   2    PAYMENT_GROUP_ID VARCHAR2 (40) NOT NULL PRIMARY KEY,
     [exec]   3    NUMCHEQUE VARCHAR2 (50),
     [exec]   4    LIBELLE_BANQUE VARCHAR2 (30),
     [exec]   5    MONTANT_CHEQUE_FRANCS NUMBER (12,2),
     [exec]   6    MONTANT_CHEQUE_EUROS NUMBER (12,2),
     [exec]   7    CHEQUE_NON_VALIDE NUMBER,
     [exec]   8    COMMENTAIRE_CHEQUE VARCHAR2 (500)
     [exec]   9  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_BILL_ADDR (
     [exec]   2    PAYMENT_GROUP_ID VARCHAR2 (40) NOT NULL PRIMARY KEY,
     [exec]   3    CIVILITE NUMBER,
     [exec]   4    TEL_PORTABLE VARCHAR2 (30),
     [exec]   5    TEL_PROFESSIONNEL VARCHAR2 (30),
     [exec]   6    ADRESSE_LIBELLE VARCHAR2 (60),
     [exec]   7    TVA_INTRACOMUNAUTAIRE VARCHAR2 (13),
     [exec]   8    ALERTE_AUTO NUMBER (1,0),
     [exec]   9    MOYEN_CONTACT VARCHAR2 (1)
     [exec]  10  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_COMMERCE_ITEM (
     [exec]   2    COMMERCE_ITEM_ID VARCHAR2 (40) NOT NULL REFERENCES DCSPP_ITEM (COMMERCE_ITEM_ID),
     [exec]   3    POIDS NUMBER,
     [exec]   4    HORS_NORMES NUMBER (1,0),
     [exec]   5    EXONERATION_PFE NUMBER (1,0) CONSTRAINT EXONERATION_PFE_CH CHECK (EXONERATION_PFE in (0,1)),
     [exec]   6    CADEAU NUMBER (1,0) DEFAULT 0,
     [exec]   7    CODEARTICLE VARCHAR2 (40),
     [exec]   8    ENVENTE NUMBER (1,0),
     [exec]   9    DATEFINVIE DATE,
     [exec]  10    COEFFICIENTDESATISFACTION NUMBER (10,2),
     [exec]  11    GENERALEMENTLIVREENHEURES NUMBER (4,0),
     [exec]  12    SOMME_FORFAITAIRE NUMBER (19,7),
     [exec]  13    EXONERATION_PFT NUMBER (1,0),
     [exec]  14    CREATION_DATE DATE DEFAULT SYSDATE NOT NULL,
     [exec]  15    PRIMARY KEY (COMMERCE_ITEM_ID)
     [exec]  16  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_HARDGOOD_SHIPPING_GROUP (
     [exec]   2    SHIPPING_GROUP_ID VARCHAR2 (40) NOT NULL REFERENCES DCSPP_SHIP_GROUP (SHIPPING_GROUP_ID),
     [exec]   3    POIDS_TOTAL NUMBER,
     [exec]   4    FRAIS_PREPARATION NUMBER (10,2),
     [exec]   5    DELAI_ENGAGEMENT NUMBER (5,0),
     [exec]   6    LIBELLE_DELAI_ENGAGEMENT VARCHAR2 (50),
     [exec]   7    TRANCHE_HORAIRE_CLIENT_MAD VARCHAR2 (75),
     [exec]   8    POIDS_PFL NUMBER,
     [exec]   9    POIDS_PFT NUMBER,
     [exec]  10    PRIMARY KEY (SHIPPING_GROUP_ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SHIP_ADDR (
     [exec]   2    SHIPPING_GROUP_ID VARCHAR2 (40) NOT NULL PRIMARY KEY,
     [exec]   3    CIVILITE NUMBER,
     [exec]   4    TEL_PORTABLE VARCHAR2 (30),
     [exec]   5    TEL_PROFESSIONNEL VARCHAR2 (30),
     [exec]   6    ADRESSE_LIBELLE VARCHAR2 (60),
     [exec]   7    TVA_INTRACOMUNAUTAIRE VARCHAR2 (13),
     [exec]   8    ALERTE_AUTO NUMBER (1,0),
     [exec]   9    MOYEN_CONTACT VARCHAR2 (1)
     [exec]  10  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PFE_POIDS (
     [exec]   2    ID VARCHAR2 (30) NOT NULL PRIMARY KEY,
     [exec]   3    POIDS_INF NUMBER NOT NULL,
     [exec]   4    POIDS_SUP NUMBER NOT NULL,
     [exec]   5    PRIX_AU_KG NUMBER (12,2) NOT NULL,
     [exec]   6    FORFAIT_TTC NUMBER (12,2) NOT NULL,
     [exec]   7    FORFAIT_HN_TTC NUMBER (12,2) NOT NULL,
     [exec]   8    GRILLE_PFE_ID VARCHAR2 (40) DEFAULT '1'
     [exec]   9  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PREPARATION_POIDS (
     [exec]   2    ID VARCHAR2 (30) NOT NULL PRIMARY KEY,
     [exec]   3    POIDS_INF NUMBER NOT NULL,
     [exec]   4    POIDS_SUP NUMBER NOT NULL,
     [exec]   5    MONTANT NUMBER (12,2) NOT NULL
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CODESPOSTAUX_PFE (
     [exec]   2    CODE_POSTAL VARCHAR2 (5) NOT NULL PRIMARY KEY,
     [exec]   3    GRILLE_PFE_ID VARCHAR2 (40) NOT NULL,
     [exec]   4    POID_MINIMUM NUMBER NOT NULL,
     [exec]   5    VOLUME_MINIMUM NUMBER NOT NULL
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PREPARATION_PRICE_INFO (
     [exec]   2    ID VARCHAR2 (40) NOT NULL REFERENCES DCSPP_AMOUNT_INFO (AMOUNT_INFO_ID),
     [exec]   3    POIDS NUMBER NOT NULL,
     [exec]   4    PRIMARY KEY (ID)
     [exec]   5  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ORDER_PRICE_INFO (
     [exec]   2    ID VARCHAR2 (40) NOT NULL REFERENCES DCSPP_AMOUNT_INFO (AMOUNT_INFO_ID),
     [exec]   3    FRAISDEPREPARATION NUMBER NOT NULL,
     [exec]   4    PRIMARY KEY (ID)
     [exec]   5  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE cast_commerce_item (
     [exec]   2  	 COMMERCE_ITEM_ID VARCHAR2 (40) NOT NULL PRIMARY KEY,
     [exec]   3  	 CREATION_DATE DATE DEFAULT SYSDATE NOT NULL
     [exec]   4  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE DCSPP_BILL_ADDR MODIFY (
     [exec]   2  	 FIRST_NAME	     varchar2(100),
     [exec]   3  	 LAST_NAME	     varchar2(100),
     [exec]   4  	 ADDRESS_1	      varchar2(100),
     [exec]   5  	 ADDRESS_2	      varchar2(100),
     [exec]   6  	 ADDRESS_3	      varchar2(100),
     [exec]   7  	 POSTAL_CODE	     varchar2(16),
     [exec]   8  	 CITY		     varchar2(100)
     [exec]   9  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE DCSPP_SHIP_ADDR MODIFY (
     [exec]   2  	 FIRST_NAME	     varchar2(100),
     [exec]   3  	 LAST_NAME	     varchar2(100),
     [exec]   4  	 ADDRESS_1	      varchar2(100),
     [exec]   5  	 ADDRESS_2	      varchar2(100),
     [exec]   6  	 ADDRESS_3	      varchar2(100),
     [exec]   7  	 POSTAL_CODE	     varchar2(16),
     [exec]   8  	 CITY		     varchar2(100)
     [exec]   9  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD (
     [exec]   2  		     TOTAL_DISCOUNT NUMBER (10,2) NULL,
     [exec]   3  		     PROCESSING_FEES NUMBER (10,2) NULL,
     [exec]   4  		     SHIPPING_FEES NUMBER (10,2) NULL,
     [exec]   5  		     SHIPPING_DISCOUNT NUMBER (10,2) NULL,
     [exec]   6  		     TOTAL_WEIGHT NUMBER (10,2) NULL
     [exec]   7  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_COMMERCE_ITEM ADD DELIVERY_PERIOD NUMBER (4,0) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD TOTAL_DISCOUNT NUMBER (10,2) NULL;
     [exec] ALTER TABLE CASTO_ORDER ADD TOTAL_DISCOUNT NUMBER (10,2) NULL
     [exec]                             *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD PROCESSING_FEES NUMBER (10,2) NULL;
     [exec] ALTER TABLE CASTO_ORDER ADD PROCESSING_FEES NUMBER (10,2) NULL
     [exec]                             *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD SHIPPING_FEES NUMBER (10,2) NULL;
     [exec] ALTER TABLE CASTO_ORDER ADD SHIPPING_FEES NUMBER (10,2) NULL
     [exec]                             *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD SHIPPING_DISCOUNT NUMBER (10,2) NULL;
     [exec] ALTER TABLE CASTO_ORDER ADD SHIPPING_DISCOUNT NUMBER (10,2) NULL
     [exec]                             *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD TOTAL_WEIGHT NUMBER (10,2) NULL;
     [exec] ALTER TABLE CASTO_ORDER ADD TOTAL_WEIGHT NUMBER (10,2) NULL
     [exec]                             *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD ITEMS_DISCOUNT NUMBER (10,2) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_COMMERCE_ITEM ADD DELIVERY_PERIOD NUMBER (4,0) NULL;
     [exec] ALTER TABLE CASTO_COMMERCE_ITEM ADD DELIVERY_PERIOD NUMBER (4,0) NULL
     [exec]                                     *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_COMMERCE_ITEM ADD DISPLAY_NAME VARCHAR2(255 BYTE) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD TRANSACTION_COUNT NUMBER(2,0) DEFAULT 0 NOT NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD PAYBOX_HANDLED NUMBER(1,0) DEFAULT 0 NOT NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD PAYMENT_SOURCE VARCHAR2(16);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_BILL_ADDR ADD (
     [exec]   2    PHONE_NUMBER_2 VARCHAR2 (15),
     [exec]   3    LOCALITY VARCHAR2 (100) );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SHIP_ADDR ADD (
     [exec]   2    PHONE_NUMBER_2 VARCHAR2 (15),
     [exec]   3    LOCALITY VARCHAR2 (100) );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD PAYMENT_USER_ID VARCHAR2(40);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_ITEM_PRICE_INFO (
     [exec]   2    ID VARCHAR2 (40) NOT NULL REFERENCES DCSPP_AMOUNT_INFO (AMOUNT_INFO_ID),
     [exec]   3    ON_SALE_DISCOUNT_DISPLAY NUMBER(1,0) DEFAULT 0 NULL,
     [exec]   4    PRIMARY KEY (ID)
     [exec]   5  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> alter table CASTO_ORDER modify COMMENTAIRE varchar2(400);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_core_user.sql
     [exec] SQL> CREATE TABLE CASTO_QUESTIONS
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     LIBELLE VARCHAR2(200 BYTE),
     [exec]   5  	     ORDRE_AFFICHAGE VARCHAR2(10 BYTE),
     [exec]   6  	     PRIMARY KEY (ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PROFESSION
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     LIBELLE VARCHAR2(100 BYTE),
     [exec]   5  	     PRIMARY KEY (ID)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_NIVEAUX_BRICOLAGE
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     LIBELLE VARCHAR2(100 BYTE),
     [exec]   5  	     PRIMARY KEY (ID)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SAUVEGARDE_PAGE
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     LIBELLE VARCHAR2(200 BYTE),
     [exec]   5  	     URL VARCHAR2(200 BYTE),
     [exec]   6  	      PRIMARY KEY (ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_E_DECORATEUR_OBJET
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     NOM VARCHAR2(128 BYTE) NOT NULL ENABLE,
     [exec]   5  	     COULEUR VARCHAR2(32 BYTE) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SAUVEGARDE_CREATION
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     NOM_SAUVEGARDE VARCHAR2(100 BYTE),
     [exec]   5  	     NOM_PIECE VARCHAR2(100 BYTE),
     [exec]   6  	     NOM_MOBILIER VARCHAR2(100 BYTE),
     [exec]   7  	     PRIMARY KEY (ID)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_LISTE_OBJETS_DECO
     [exec]   2  (
     [exec]   3  	     SAUVEGARDE NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     OBJET NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (SAUVEGARDE, SEQ),
     [exec]   7  	     FOREIGN KEY (SAUVEGARDE)
     [exec]   8  	       REFERENCES CASTO_SAUVEGARDE_CREATION (ID),
     [exec]   9  	     FOREIGN KEY (OBJET)
     [exec]  10  	       REFERENCES CASTO_E_DECORATEUR_OBJET (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CONTACT_INFO
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     CIVILITE NUMBER(*,0),
     [exec]   5  	     SOCIETE VARCHAR2(100 BYTE),
     [exec]   6  	     TYPE_ADRESSE NUMBER(1,0),
     [exec]   7  	     EMAIL VARCHAR2(255 BYTE),
     [exec]   8  	     TEL_GSM VARCHAR2(30 BYTE),
     [exec]   9  	     TEL_PROFESSIONNEL VARCHAR2(30 BYTE),
     [exec]  10  	     NUMERO_TVA VARCHAR2(25 BYTE),
     [exec]  11  	     INFOS_SMS VARCHAR2(1 BYTE),
     [exec]  12  	     ACTIVE_ADRESSE NUMBER(1,0),
     [exec]  13  	     phone_number_2  varchar2(15)    null,
     [exec]  14  	     locality	     varchar2(100)   null,
     [exec]  15  	     PRIMARY KEY (ID),
     [exec]  16  	     FOREIGN KEY (ID)
     [exec]  17  	       REFERENCES DPS_CONTACT_INFO (ID)
     [exec]  18  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE dps_contact_info MODIFY (
     [exec]   2  	     FIRST_NAME 		     varchar2(100),
     [exec]   3  	 LAST_NAME		     varchar2(100),
     [exec]   4  	     ADDRESS1			     varchar2(100),
     [exec]   5  	     ADDRESS2			     varchar2(100),
     [exec]   6  	     ADDRESS3			     varchar2(100),
     [exec]   7  	     POSTAL_CODE	     varchar2(16),
     [exec]   8  	     CITY			     varchar2(100)
     [exec]   9  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OTHER_BILLING_ADDR
     [exec]   2  (
     [exec]   3  	     USER_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     TAG VARCHAR2(42 BYTE) NOT NULL ENABLE,
     [exec]   5  	     ADDRESS_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (TAG, USER_ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OTHER_BILLSHIP_ADDR
     [exec]   2  (
     [exec]   3  	     USER_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     TAG VARCHAR2(42 BYTE) NOT NULL ENABLE,
     [exec]   5  	     ADDRESS_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (TAG, USER_ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_LISTE_DE_COURSES
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     LIBELLE VARCHAR2(255 BYTE) NOT NULL ENABLE,
     [exec]   5  	     DATE_CREATION DATE NOT NULL ENABLE,
     [exec]   6  	      PRIMARY KEY (ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_LISTE_DE_COURSES_CONTENU
     [exec]   2  (
     [exec]   3  	     LISTE_DE_COURSES_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SKU_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     PRIMARY KEY (LISTE_DE_COURSES_ID, SKU_ID),
     [exec]   6  	     FOREIGN KEY (LISTE_DE_COURSES_ID)
     [exec]   7  	       REFERENCES CASTO_LISTE_DE_COURSES (ID) ENABLE
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> ALTER TABLE dps_user MODIFY (
     [exec]   2  	     FIRST_NAME 		     varchar2(64),
     [exec]   3  	     LAST_NAME			     varchar2(64),
     [exec]   4  	     LOGIN			     VARCHAR2(255)
     [exec]   5  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> CREATE TABLE CASTO_USER
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     PROSPECT_SINCE DATE,
     [exec]   5  	     STATUT NUMBER(*,0),
     [exec]   6  	     DATE_CHANGE_STATUT DATE,
     [exec]   7  	     CIVILITE NUMBER(*,0),
     [exec]   8  	     PROFESSION_ID NUMBER(*,0),
     [exec]   9  	     TOP_ROBINSON_LIST NUMBER(*,0),
     [exec]  10  	     NB_RECLAMATIONS NUMBER(*,0),
     [exec]  11  	     NB_APPELS_CALLCENTER NUMBER(*,0),
     [exec]  12  	     PROVENANCE_URL VARCHAR2(50 BYTE),
     [exec]  13  	     CARTE_ATOUT NUMBER(*,0),
     [exec]  14  	     ADRESSE_FACTURATION_ID VARCHAR2(40 BYTE),
     [exec]  15  	     ADRESSE_LIVRAISON1_ID VARCHAR2(40 BYTE),
     [exec]  16  	     ADRESSE_LIVRAISON2_ID VARCHAR2(40 BYTE),
     [exec]  17  	     SOCIETE VARCHAR2(100 BYTE),
     [exec]  18  	     BLOQUE NUMBER(1,0),
     [exec]  19  	     ID_MAGASIN_REF VARCHAR2(255 BYTE),
     [exec]  20  	     ACCES_FO NUMBER(22,0),
     [exec]  21  	     NUMEROCARTEATOUT VARCHAR2(100 BYTE),
     [exec]  22  	     SUPPRIME NUMBER(1,0),
     [exec]  23  	     TYPEMAJPROFIL NUMBER,
     [exec]  24  	     DATEMAJPROFIL DATE,
     [exec]  25  	     DATE_DERNIERE_COMMANDE DATE,
     [exec]  26  	     UTILISATEUR_CONCEPTION_CUISINE NUMBER(1,0),
     [exec]  27  	     price_list 	     varchar2(40)    null,
     [exec]  28  	     sale_price_list	     varchar2(40)    null,
     [exec]  29  	     PRIMARY KEY (ID),
     [exec]  30  	     FOREIGN KEY (ID)
     [exec]  31  	       REFERENCES DPS_USER (ID),
     [exec]  32  	      FOREIGN KEY (ADRESSE_FACTURATION_ID)
     [exec]  33  	       REFERENCES CASTO_CONTACT_INFO (ID),
     [exec]  34  	      FOREIGN KEY (ADRESSE_LIVRAISON1_ID)
     [exec]  35  	       REFERENCES CASTO_CONTACT_INFO (ID),
     [exec]  36  	      FOREIGN KEY (ADRESSE_LIVRAISON2_ID)
     [exec]  37  	       REFERENCES CASTO_CONTACT_INFO (ID),
     [exec]  38  	      FOREIGN KEY (PROFESSION_ID)
     [exec]  39  	       REFERENCES CASTO_PROFESSION (ID)
     [exec]  40  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_USER_LISTE_DE_COURSES
     [exec]   2  (
     [exec]   3  	     USR_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     LISTEDECOURSES_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     PRIMARY KEY (USR_ID, LISTEDECOURSES_ID),
     [exec]   6  	     FOREIGN KEY (LISTEDECOURSES_ID)
     [exec]   7  	       REFERENCES CASTO_LISTE_DE_COURSES (ID),
     [exec]   8  	     FOREIGN KEY (USR_ID)
     [exec]   9  	       REFERENCES DCS_USER (USER_ID)
     [exec]  10  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_USER_FOGROUPS
     [exec]   2  (
     [exec]   3  	     USR_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     GROUP_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     PRIMARY KEY (USR_ID, GROUP_ID)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_IDENTIFICATION_HELPER
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     REMINDER_PASSWORD VARCHAR2(100 BYTE),
     [exec]   5  	     REPONSE_REMINDER VARCHAR2(50 BYTE),
     [exec]   6  	     PRIMARY KEY (ID),
     [exec]   7  	     FOREIGN KEY (ID)
     [exec]   8  	       REFERENCES DPS_USER (ID)
     [exec]   9  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CLUB_CASTO
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     MEMBRE_CLUB NUMBER(*,0),
     [exec]   5  	     DATE_ENTREE_CLUB DATE,
     [exec]   6  	     DATE_SORTIE_CLUB DATE,
     [exec]   7  	     TOP_PARRAIN NUMBER(*,0),
     [exec]   8  	     PRIMARY KEY (ID),
     [exec]   9  	     CONSTRAINT CLUB_CASTO_ID FOREIGN KEY (ID)
     [exec]  10  	       REFERENCES DPS_USER (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_STAT_LAST_VISIT
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     NB_PAGE_DERNIERE_SESSION NUMBER(*,0),
     [exec]   5  	     PRIMARY KEY (ID),
     [exec]   6  	     CONSTRAINT STAT_LAST_VISIT_ID FOREIGN KEY (ID)
     [exec]   7  	       REFERENCES DPS_USER (ID)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SCORES
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     CODE_SEG_COMPORT_1 NUMBER(*,0),
     [exec]   5  	     POTENTIEL NUMBER(*,0),
     [exec]   6  	     CONTRIBUTION_A_LA_MARGE NUMBER(*,0),
     [exec]   7  	     SATISFACTION_CLIENT NUMBER(*,0),
     [exec]   8  	     CLUB_READERS NUMBER(*,0),
     [exec]   9  	     BLACK_LIST NUMBER(*,0),
     [exec]  10  	     NB_PROJETS_ENVOYE_AMI NUMBER(*,0),
     [exec]  11  	     CODE_RFM NUMBER(*,0),
     [exec]  12  	     RENTABILITE NUMBER(*,0),
     [exec]  13  	     PRIMARY KEY (ID),
     [exec]  14  	     CONSTRAINT CASTO_SCORES_ID FOREIGN KEY (ID)
     [exec]  15  	       REFERENCES DPS_USER (ID)
     [exec]  16  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MON_NIVEAU_BRICOLAGE
     [exec]   2  (
     [exec]   3  	ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     NIVEAU_CATEGORIE_1_ID NUMBER(*,0),
     [exec]   5  	     NIVEAU_CATEGORIE_2_ID NUMBER(*,0),
     [exec]   6  	     NIVEAU_CATEGORIE_3_ID NUMBER(*,0),
     [exec]   7  	     NIVEAU_CATEGORIE_4_ID NUMBER(*,0),
     [exec]   8  	     NIVEAU_CATEGORIE_5_ID NUMBER(*,0),
     [exec]   9  	     NIVEAU_CATEGORIE_6_ID NUMBER(*,0),
     [exec]  10  	     NIVEAU_CATEGORIE_7_ID NUMBER(*,0),
     [exec]  11  	     NIVEAU_CATEGORIE_8_ID NUMBER(*,0),
     [exec]  12  	     NIVEAU_CATEGORIE_9_ID NUMBER(*,0),
     [exec]  13  	     NIVEAU_CATEGORIE_10_ID NUMBER(*,0),
     [exec]  14  	     PRIMARY KEY (ID),
     [exec]  15  	     CONSTRAINT MON_NIVEAU_BRICOLAGE_ID FOREIGN KEY (ID)
     [exec]  16  	       REFERENCES DPS_USER (ID) ENABLE,
     [exec]  17  	     FOREIGN KEY (NIVEAU_CATEGORIE_1_ID)
     [exec]  18  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  19  	      FOREIGN KEY (NIVEAU_CATEGORIE_2_ID)
     [exec]  20  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  21  	      FOREIGN KEY (NIVEAU_CATEGORIE_3_ID)
     [exec]  22  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  23  	      FOREIGN KEY (NIVEAU_CATEGORIE_4_ID)
     [exec]  24  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  25  	      FOREIGN KEY (NIVEAU_CATEGORIE_5_ID)
     [exec]  26  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  27  	      FOREIGN KEY (NIVEAU_CATEGORIE_6_ID)
     [exec]  28  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  29  	      FOREIGN KEY (NIVEAU_CATEGORIE_7_ID)
     [exec]  30  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  31  	      FOREIGN KEY (NIVEAU_CATEGORIE_8_ID)
     [exec]  32  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  33  	      FOREIGN KEY (NIVEAU_CATEGORIE_9_ID)
     [exec]  34  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE,
     [exec]  35  	      FOREIGN KEY (NIVEAU_CATEGORIE_10_ID)
     [exec]  36  	       REFERENCES CASTO_NIVEAUX_BRICOLAGE (ID) ENABLE
     [exec]  37  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_STAT_COMMERCE
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     NB_SESSION NUMBER(*,0),
     [exec]   5  	     NB_SESSION_AVEC_ACHAT NUMBER(*,0),
     [exec]   6  	     NB_TOTAL_COMMANDES NUMBER(*,0),
     [exec]   7  	     MONTANT_TOTAL_COMMANDE_HT NUMBER(*,0),
     [exec]   8  	     MONTANT_TOTAL_COMMANDE_TTC NUMBER(*,0),
     [exec]   9  	     MONTANT_TOTAL_FACTURE_TTC NUMBER(*,0),
     [exec]  10  	     NB_ARTICLE_COMMANDE_EN_PROMO NUMBER(*,0),
     [exec]  11  	     MONTANT_PROMO_CUMULE_TTC NUMBER(*,0),
     [exec]  12  	     NB_COUPONS_UTILISE NUMBER(*,0),
     [exec]  13  	     PRIMARY KEY (ID),
     [exec]  14  	     CONSTRAINT STAT_COMMERCE_ID FOREIGN KEY (ID)
     [exec]  15  	       REFERENCES DPS_USER (ID)
     [exec]  16  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_RAYONS_UTILISE
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     COMPTEUR_USAGE_RAYON_1 NUMBER(*,0),
     [exec]   5  	     COMPTEUR_USAGE_RAYON_2 NUMBER(*,0),
     [exec]   6  	     COMPTEUR_USAGE_RAYON_3 NUMBER(*,0),
     [exec]   7  	     COMPTEUR_USAGE_RAYON_4 NUMBER(*,0),
     [exec]   8  	     COMPTEUR_USAGE_RAYON_5 NUMBER(*,0),
     [exec]   9  	     COMPTEUR_USAGE_RAYON_6 NUMBER(*,0),
     [exec]  10  	     COMPTEUR_USAGE_RAYON_7 NUMBER(*,0),
     [exec]  11  	     COMPTEUR_USAGE_RAYON_8 NUMBER(*,0),
     [exec]  12  	     COMPTEUR_USAGE_RAYON_9 NUMBER(*,0),
     [exec]  13  	     COMPTEUR_USAGE_RAYON_10 NUMBER(*,0),
     [exec]  14  	     COMPTEUR_USAGE_RAYON_11 NUMBER(*,0),
     [exec]  15  	     COMPTEUR_USAGE_RAYON_12 NUMBER(*,0),
     [exec]  16  	     PRIMARY KEY (ID),
     [exec]  17  	     CONSTRAINT RAYONS_UTILISE_ID FOREIGN KEY (ID)
     [exec]  18  	       REFERENCES DPS_USER (ID)
     [exec]  19  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_LOGEMENT
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     ANCIENNETE_LOGEMENT VARCHAR2(20 BYTE),
     [exec]   5  	     DATE_ENTREE_LOGEMENT DATE,
     [exec]   6  	     SITUATION_HABITAT NUMBER(*,0),
     [exec]   7  	     JARDIN NUMBER(*,0),
     [exec]   8  	     TYPE_LOGEMENT NUMBER(*,0),
     [exec]   9  	     BALCON NUMBER(*,0),
     [exec]  10  	     PRIMARY KEY (ID),
     [exec]  11  	     CONSTRAINT LOGEMENT_ID FOREIGN KEY (ID)
     [exec]  12  	       REFERENCES DPS_USER (ID) ENABLE
     [exec]  13  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_TELEPHONIE
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     TELEPHONE_PRIVE VARCHAR2(40 BYTE),
     [exec]   5  	     TELEPHONE_PORTABLE VARCHAR2(40 BYTE),
     [exec]   6  	     TELEPHONE_TRAVAIL VARCHAR2(40 BYTE),
     [exec]   7  	     SMS_ACCEPTED NUMBER(*,0),
     [exec]   8  	     PRIMARY KEY (ID),
     [exec]   9  	     CONSTRAINT TELEPHONIE_ID FOREIGN KEY (ID)
     [exec]  10  	       REFERENCES DPS_USER (ID) ENABLE
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_USER_MAILING
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     EMAIL_HTML NUMBER(*,0),
     [exec]   5  	     PRIMARY KEY (ID),
     [exec]   6  	     CONSTRAINT USER_MAILING_ID FOREIGN KEY (ID)
     [exec]   7  	       REFERENCES DPS_USER (ID)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SITUATION_FAMILIALE
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SITUATION_FAMILIALE NUMBER(*,0),
     [exec]   5  	     NB_ENFANTS NUMBER(*,0),
     [exec]   6  	     PRIMARY KEY (ID),
     [exec]   7  	     CONSTRAINT SITUATION_FAMILIALE_ID FOREIGN KEY (ID)
     [exec]   8  	       REFERENCES DPS_USER (ID)
     [exec]   9  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_USER_NEWSLETTER
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     ABONNEMENT_NEWSLETTER_ID VARCHAR2(100 BYTE),
     [exec]   5  	     PRIMARY KEY (ID),
     [exec]   6  	     CONSTRAINT USER_NEWSLETTER_ID FOREIGN KEY (ID)
     [exec]   7  	       REFERENCES DPS_USER (ID)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MES_PAGES_SAUVEGARDEES
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     SAUVEGARDE_ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID, SEQ),
     [exec]   7  	     CONSTRAINT MES_PAGES_SAUVEGARDEES_ID FOREIGN KEY (ID)
     [exec]   8  	       REFERENCES DPS_USER (ID),
     [exec]   9  	     FOREIGN KEY (SAUVEGARDE_ID)
     [exec]  10  	       REFERENCES CASTO_SAUVEGARDE_PAGE (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MES_CREA_SAUVEGARDEES
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     SAUVEGARDE_ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID, SEQ),
     [exec]   7  	     CONSTRAINT MES_CREA_SAUVEGARDEES_ID FOREIGN KEY (ID)
     [exec]   8  	       REFERENCES DPS_USER (ID),
     [exec]   9  	     FOREIGN KEY (SAUVEGARDE_ID)
     [exec]  10  	       REFERENCES CASTO_SAUVEGARDE_CREATION (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_WISHLIST
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     SKU_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID, SEQ)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SESSION_TRACKING
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     TRACKID VARCHAR2(40 BYTE),
     [exec]   5  	     DATE_PREMIERE_VISITE DATE,
     [exec]   6  	     DATE_DERNIERE_VISITE DATE,
     [exec]   7  	     PRIMARY KEY (ID)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_USER_SESSION_TRACKING
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER NOT NULL ENABLE,
     [exec]   5  	     TRACKID VARCHAR2(40 BYTE),
     [exec]   6  	     PRIMARY KEY (ID, SEQ),
     [exec]   7  	     CONSTRAINT USER_SESSION_TRACKING_ID FOREIGN KEY (ID)
     [exec]   8  	       REFERENCES DPS_USER (ID),
     [exec]   9  	     FOREIGN KEY (TRACKID)
     [exec]  10  	       REFERENCES CASTO_SESSION_TRACKING (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_FOGROUPS
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     LIBELLE VARCHAR2(255 BYTE) NOT NULL ENABLE,
     [exec]   5  	     DATE_CREATION DATE NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_FOPRIV
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     LIBELLE VARCHAR2(255 BYTE) NOT NULL ENABLE,
     [exec]   5  	     PRIMARY KEY (ID)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_FOGROUPS_FOPRIV
     [exec]   2  (
     [exec]   3  	     GROUP_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     PRIV_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     PRIMARY KEY (GROUP_ID, PRIV_ID)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ALERTE_DISPONIBILITE
     [exec]   2  (
     [exec]   3  	     ALERTE_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     USER_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     SKU_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     ETAT_ALERTE VARCHAR2(1 BYTE),
     [exec]   7  	     DATE_CREATION_ALERTE DATE,
     [exec]   8  	     DATE_ENVOI_EMAIL DATE,
     [exec]   9  	     PRIMARY KEY (ALERTE_ID),
     [exec]  10  	     FOREIGN KEY (USER_ID)
     [exec]  11  	       REFERENCES DCS_USER (USER_ID)
     [exec]  12  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_REFEREE
     [exec]   2  (
     [exec]   3  	     ID 		     VARCHAR2(40)    NOT NULL,
     [exec]   4  	     EMAIL	     VARCHAR2(100)   NOT NULL,
     [exec]   5  	     COUPON_ID	     VARCHAR2(40)    NOT NULL,
     [exec]   6  	     APPLIED	     number(1,0)	     DEFAULT 0 not null,
     [exec]   7  	     PRIMARY KEY (ID)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_REFEREE_COUPONID_IDX ON CASTO_REFEREE (COUPON_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_REFERRER_REFEREE
     [exec]   2  (
     [exec]   3  	     REFERRER_ID	     VARCHAR2(40)    NOT NULL REFERENCES DPS_USER(id),
     [exec]   4  	     REFEREE_ID 	     VARCHAR2(100)   NOT NULL REFERENCES CASTO_REFEREE(id),
     [exec]   5  	     PRIMARY KEY (REFERRER_ID, REFEREE_ID)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CODES_POSTAUX
     [exec]   2  (
     [exec]   3  	     REPOSITORYID	     VARCHAR2(40)    NOT NULL,
     [exec]   4  	     CODE_POSTAL	     VARCHAR2(5)     NOT NULL,
     [exec]   5  	     VILLE			     VARCHAR2(255)   NOT NULL,
     [exec]   6  	     PRIMARY KEY (REPOSITORYID)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> INSERT INTO CASTO_CODES_POSTAUX (REPOSITORYID, CODE_POSTAL, VILLE) VALUES ('36686', '98000', 'MONACO');
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> INSERT INTO CASTO_CODES_POSTAUX (REPOSITORYID, CODE_POSTAL, VILLE) VALUES ('36687', '20000', 'CORSE');
     [exec] 
     [exec] 1 row created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE MOTIF
     [exec]   2  (
     [exec]   3    ID	       VARCHAR2(40),
     [exec]   4    TITLE	   VARCHAR2(100),
     [exec]   5    CODE	   VARCHAR2(40) DEFAULT '0',
     [exec]   6    PRIMARY KEY (ID)
     [exec]   7   );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CONTACT_US_MOTIF
     [exec]   2  (
     [exec]   3    ID	       VARCHAR2(40),
     [exec]   4    MOTIF_ID    VARCHAR2(50) REFERENCES MOTIF(ID),
     [exec]   5    FORM_TYPE   VARCHAR2(40),
     [exec]   6    MESSAGE	   VARCHAR2(500),
     [exec]   7    PRIMARY KEY (ID)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE cast_faq_statistics
     [exec]   2  (
     [exec]   3    nom		   VARCHAR2(64),
     [exec]   4    prenom		   VARCHAR2(64),
     [exec]   5    email		   VARCHAR2(255),
     [exec]   6    adresse		   VARCHAR2(100),
     [exec]   7    code_postal	   VARCHAR2(5),
     [exec]   8    ville		   VARCHAR2(64),
     [exec]   9    telephone	   VARCHAR2(13),
     [exec]  10    stat_id		   varchar2(40),
     [exec]  11    type_contact	   varchar2(40),
     [exec]  12    motif		   varchar2(50),
     [exec]  13    civilite 	   varchar2(15),
     [exec]  14    adresse_reponse	   varchar2(81),
     [exec]  15    message		   varchar2(500),
     [exec]  16    question 	   varchar2(500),
     [exec]  17    reference_produit   varchar2(30),
     [exec]  18    magasin		   varchar2(60),
     [exec]  19    date_contact	   date,
     [exec]  20    type_machine	   varchar2(30),
     [exec]  21    type_processeur	   varchar2(30),
     [exec]  22    systeme_exploit	   varchar2(30),
     [exec]  23    naviguateur	   varchar2(30),
     [exec]  24    connexion	   varchar2(30),
     [exec]  25    lundi		   number(1),
     [exec]  26    mardi		   number(1),
     [exec]  27    mercredi 	   number(1),
     [exec]  28    jeudi		   number(1),
     [exec]  29    vendredi 	   number(1),
     [exec]  30    matin		   number(1),
     [exec]  31    apres_midi	   number(1),
     [exec]  32    date_enreg	   date,
     [exec]  33    profile_id	   varchar2(40),
     [exec]  34    code_motif	   varchar2(5),
     [exec]  35    order_id 	   varchar2(20),
     [exec]  36  PRIMARY KEY (stat_id)
     [exec]  37  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE MESSAGE_MOTIF
     [exec]   2  (
     [exec]   3    ID	     VARCHAR2(40) NOT NULL,
     [exec]   4    CMOTIF	     NUMBER(4,0) NOT NULL,
     [exec]   5    CONSTRAINT MESSAGE_MOTIF_PK PRIMARY KEY (ID),
     [exec]   6    CONSTRAINT MESSAGE_MOTIF_FK FOREIGN KEY (ID) REFERENCES MOTIF (ID),
     [exec]   7    CONSTRAINT MESSAGE__MOTIF_UNIQUE UNIQUE (CMOTIF)
     [exec]   8  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE MESSAGE_QUESTION
     [exec]   2  (
     [exec]   3    ID	     VARCHAR2(40) NOT NULL,
     [exec]   4    MOTIF_ID	VARCHAR2(40),
     [exec]   5    QUESTION	VARCHAR2(100) NOT NULL,
     [exec]   6    INSTRUCTION	VARCHAR2(500),
     [exec]   7    LINKTEXT	VARCHAR2(100),
     [exec]   8    LINKVALUE	VARCHAR2(100),
     [exec]   9    MESSAGE	     VARCHAR2(500),
     [exec]  10    ORDRE	     INT DEFAULT 1000 NOT NULL ,
     [exec]  11    CONSTRAINT MESSAGE_QUESTION_PK PRIMARY KEY (ID),
     [exec]  12    CONSTRAINT MESSAGE_QUESTION_MOTIF_FK FOREIGN KEY (MOTIF_ID) REFERENCES MESSAGE_MOTIF (ID)
     [exec]  13  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_RESERVATION_CATALOGUE (
     [exec]   2  	     ID 				     VARCHAR2(40)    NOT NULL,
     [exec]   3  	     EMAIL			     VARCHAR2(255)   NULL,
     [exec]   4  	     CIVILITE			     VARCHAR2(50)    NOT NULL,
     [exec]   5  	     PRENOM			     VARCHAR2(100)   NOT NULL,
     [exec]   6  	     NOM			     VARCHAR2(100)   NOT NULL,
     [exec]   7  	     ADRESSE			     VARCHAR2(100)   NOT NULL,
     [exec]   8  	     ADRESSE2			     VARCHAR2(100),
     [exec]   9  	     ADRESSE3			     VARCHAR2(100),
     [exec]  10  	     ADRESSE4			     VARCHAR2(100),
     [exec]  11  	     CPLTADRESSE	     VARCHAR2(100),
     [exec]  12  	     VILLE			     VARCHAR2(100)   NOT NULL,
     [exec]  13  	     CODEPOSTAL 		     VARCHAR2(16)    NOT NULL,
     [exec]  14  	     PAYS			     VARCHAR2(40)    NOT NULL,
     [exec]  15  	     DATENAISSANCE	     DATE,
     [exec]  16  	     DATERESERVATION	     DATE		     NOT NULL,
     [exec]  17  	     NOUVEAUCOMPTE	     NUMBER(*,0)     NULL,
     [exec]  18  	     OPTIN			     NUMBER(*,0)     NULL,
     [exec]  19  	     PHONE_NUMBER_1	     varchar2(15)    NOT NULL,
     [exec]  20  	     PHONE_NUMBER_2	     varchar2(15),
     [exec]  21  	     CATALOGUE_ID	     VARCHAR2(40)    NOT NULL,
     [exec]  22  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE HINT_SEARCH (
     [exec]   2  	     ID 				     VARCHAR2(40)    NOT NULL,
     [exec]   3  	     QUERY			     VARCHAR2(400)   NOT NULL,
     [exec]   4  	     LAST_MODIFIED	     DATE		     NOT NULL,
     [exec]   5  	     HINT_COUNT 		     INT			     NULL,
     [exec]   6  	     PRIMARY KEY (ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_REFEREE ADD REF_COUPON_ID VARCHAR2(40) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_USER ADD PASSWORD_HASHED NUMBER (1,0) DEFAULT 1;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_USER ADD
     [exec]   2  (
     [exec]   3    CONSTRAINT CASTO_USER_PASSWORD_HASHED
     [exec]   4    CHECK
     [exec]   5    (
     [exec]   6  	 PASSWORD_HASHED in (0,1)
     [exec]   7    )
     [exec]   8    NOT DEFERRABLE INITIALLY IMMEDIATE
     [exec]   9    ENABLE
     [exec]  10  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE dps_contact_info MODIFY PHONE_NUMBER VARCHAR2 (50);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE dps_contact_info MODIFY FAX_NUMBER VARCHAR2 (50);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE dps_contact_info MODIFY ADDRESS1 VARCHAR2 (120);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE dps_contact_info MODIFY ADDRESS2 VARCHAR2 (120);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE dps_user MODIFY PASSWORD VARCHAR2(40);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_REFEREE MODIFY (EMAIL VARCHAR2(255));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CONTACT_US_MOTIF ADD CASTO_DIRECT NUMBER (1,0) DEFAULT 0;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SHOPPINGLIST
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     SKU_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID, SEQ)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_newsletter.sql
     [exec] SQL> CREATE TABLE CASTO_ABONNEMENT_NEWSLETTER (
     [exec]   2  	     EMAIL				     VARCHAR2(255 BYTE) 	     NOT NULL ENABLE,
     [exec]   3  	     PROFILE_ID 			     VARCHAR2(40)		     NULL,
     [exec]   4  	     NOM				     VARCHAR2(50 BYTE),
     [exec]   5  	     PRENOM				     VARCHAR2(50 BYTE),
     [exec]   6  	     FORMAT				     NUMBER(*,0),
     [exec]   7  	     ACCES_PARTENAIRES_CASTO NUMBER(*,0),
     [exec]   8  	     IS_TEST				     NUMBER(*,0),
     [exec]   9  	     VALID				     NUMBER(*,0),
     [exec]  10  	     DATECREATION		     DATE,
     [exec]  11  	     EMAIL_STATUS		     NUMBER(*,0),
     [exec]  12  	     RECEIVE_EMAIL		     NUMBER(*,0) default 0 not null,
     [exec]  13  	     RESEIVE_OFFERS		     number(1,0) default 0 not null,
     [exec]  14  	     LOCALE				     NUMBER(*,0),
     [exec]  15  	     NBEMAILFAILURE		     NUMBER(*,0),
     [exec]  16  	     LASTFAILUREDATE		     DATE,
     [exec]  17  	     CIVILITE				     VARCHAR2(10 BYTE),
     [exec]  18  	     VILLE				     VARCHAR2(100 BYTE),
     [exec]  19  	     CODEPOSTAL 			     VARCHAR2(10 BYTE),
     [exec]  20  	     AGE				     VARCHAR2(10 BYTE),
     [exec]  21  	     PROPRIETAIRE_LOCATAIRE  VARCHAR2(20 BYTE),
     [exec]  22  	     NBPERSONNES		     VARCHAR2(10 BYTE),
     [exec]  23  	     CARTEATOUT 			     NUMBER,
     [exec]  24  	     MAISONCAMPAGNE		     NUMBER,
     [exec]  25  	     MAISON				     NUMBER,
     [exec]  26  	     appartement		     number(1,0)		     null,
     [exec]  27  	     JARDIN				     NUMBER,
     [exec]  28  	     CANALINSCRIPTION		     VARCHAR2(50 BYTE),
     [exec]  29  	     CANALDESINSCRIPTION     VARCHAR2(50 BYTE),
     [exec]  30  	     DATEDESINCRPTION		     DATE,
     [exec]  31  	     DATEDERNIEREMODIFICATION DATE,
     [exec]  32  	     DATE_OFFERS_DESINCRPTION DATE,
     [exec]  33  	     QUESTIONDES1		     VARCHAR2(50 BYTE),
     [exec]  34  	     QUESTIONDES2		     VARCHAR2(50 BYTE),
     [exec]  35  	     QUESTIONDES3		     VARCHAR2(50 BYTE),
     [exec]  36  	     QUESTIONDES4		     VARCHAR2(50 BYTE),
     [exec]  37  	     QUESTIONDES5		     VARCHAR2(50 BYTE),
     [exec]  38  	     REMARQUEDES		     VARCHAR2(500 BYTE),
     [exec]  39  	     B2B				     VARCHAR2(50 BYTE),
     [exec]  40  	     JOUEUR				     NUMBER,
     [exec]  41  	     MAGASIN				     VARCHAR2(50 BYTE),
     [exec]  42  	     DATE_REPONSE_ENQUETE_MAGASIN DATE,
     [exec]  43  	     REPONSE_LOI_LEN		     VARCHAR2(40 BYTE),
     [exec]  44  	     DATE_REPONSE_LOI_LEN    DATE,
     [exec]  45  	     PAYS				     VARCHAR2(40 BYTE),
     [exec]  46  	     ESPRIT_CONTEMPORAIN     NUMBER(22,0),
     [exec]  47  	     ESPRIT_TECHNICOLOR 	     NUMBER(22,0),
     [exec]  48  	     ESPRIT_CHARME		     NUMBER(22,0),
     [exec]  49  	     ESPRIT_AUTHENTIQUE 	     NUMBER(22,0),
     [exec]  50  	     DATE_OFFERS_INSCRIPTION DATE,
     [exec]  51  	     DATEINSCRIPTION		     DATE,
     [exec]  52  	     DATE_OF_BIRTH		     DATE,
     [exec]  53  	     CONSTRAINT CASTO_ABONNEMENT_PK PRIMARY KEY (EMAIL),
     [exec]  54  	     CONSTRAINT CASTO_ABONNEMENT_FK FOREIGN KEY (PROFILE_ID) REFERENCES CASTO_USER (ID)
     [exec]  55  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_THEME_NEWSLETTER
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(50 BYTE) NOT NULL ENABLE,
     [exec]   4  	     PRIMARY KEY (ID)
     [exec]   5  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_THEME_FAVORIS_NEWSLETTER
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     THEME_FAVORI_ID VARCHAR2(50 BYTE) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID, SEQ),
     [exec]   7  	     FOREIGN KEY (ID)
     [exec]   8  		     REFERENCES CASTO_ABONNEMENT_NEWSLETTER (EMAIL),
     [exec]   9  	     FOREIGN KEY (THEME_FAVORI_ID)
     [exec]  10  		     REFERENCES CASTO_THEME_NEWSLETTER (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PARAGRAPHE_NEWSLETTER
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     TITRE VARCHAR2(50 BYTE),
     [exec]   5  	     CONTENU VARCHAR2(500 BYTE),
     [exec]   6  	     URL_IMAGE VARCHAR2(150 BYTE),
     [exec]   7  	     THEME_TRAITE_ID VARCHAR2(50 BYTE) NOT NULL ENABLE,
     [exec]   8  	     PRIMARY KEY (ID),
     [exec]   9  	     FOREIGN KEY (THEME_TRAITE_ID)
     [exec]  10  		     REFERENCES CASTO_THEME_NEWSLETTER (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ARCHIVE_NEWSLETTER
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     EMAIL_EXPEDITEUR VARCHAR2(50 BYTE),
     [exec]   5  	     TITRE VARCHAR2(50 BYTE),
     [exec]   6  	     INTRODUCTION VARCHAR2(500 BYTE),
     [exec]   7  	     DIVERS VARCHAR2(500 BYTE),
     [exec]   8  	     TO_SEND NUMBER(*,0),
     [exec]   9  	     DATE_CREATION VARCHAR2(50 BYTE),
     [exec]  10  	     PRIMARY KEY (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ARCHIVE_CONT_PARAGRAPHE
     [exec]   2  (
     [exec]   3  	     ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   4  	     SEQ NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     PARAGRAPHE_CONTENU_ID NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (ID, SEQ),
     [exec]   7  	     FOREIGN KEY (ID)
     [exec]   8  	       REFERENCES CASTO_ARCHIVE_NEWSLETTER (ID),
     [exec]   9  	     FOREIGN KEY (PARAGRAPHE_CONTENU_ID)
     [exec]  10  	       REFERENCES CASTO_PARAGRAPHE_NEWSLETTER (ID)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_NEWSLETTER_MAILING
     [exec]   2  (
     [exec]   3  	     ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     NAME VARCHAR2(80 BYTE),
     [exec]   5  	     SUBJECT VARCHAR2(80 BYTE),
     [exec]   6  	     UNIQ_SERVER_ID VARCHAR2(255 BYTE),
     [exec]   7  	     FROM_ADDRESS VARCHAR2(255 BYTE),
     [exec]   8  	     REPLYTO VARCHAR2(255 BYTE),
     [exec]   9  	     TEMPLATE_URL VARCHAR2(255 BYTE),
     [exec]  10  	     SEND_AS_HTML NUMBER(*,0),
     [exec]  11  	     SEND_AS_TEXT NUMBER(*,0),
     [exec]  12  	     PARAMS LONG RAW,
     [exec]  13  	     START_TIME DATE,
     [exec]  14  	     END_TIME DATE,
     [exec]  15  	     STATUS NUMBER(*,0),
     [exec]  16  	     NUM_PROFILES NUMBER(*,0),
     [exec]  17  	     NUM_SENT NUMBER(*,0),
     [exec]  18  	     NUM_BOUNCES NUMBER(*,0),
     [exec]  19  	     NUM_ERRORS NUMBER(*,0),
     [exec]  20  	     FILL_FROM_TEMPL NUMBER(1,0),
     [exec]  21  	     PRIMARY KEY (ID)
     [exec]  22  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_NEWSLETTER_USER_MAILING
     [exec]   2  (
     [exec]   3  	     MAILING_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     USER_ID VARCHAR2(50 BYTE) NOT NULL ENABLE,
     [exec]   5  	     IDX NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     PRIMARY KEY (MAILING_ID, USER_ID),
     [exec]   7  	     FOREIGN KEY (MAILING_ID)
     [exec]   8  		     REFERENCES CASTO_NEWSLETTER_MAILING (ID),
     [exec]   9  	     FOREIGN KEY (USER_ID)
     [exec]  10  		     REFERENCES CASTO_ABONNEMENT_NEWSLETTER (EMAIL)
     [exec]  11  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_U_MAIL_MID ON CASTO_NEWSLETTER_USER_MAILING (MAILING_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_U_MAIL_UID ON CASTO_NEWSLETTER_USER_MAILING (USER_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/install/oracle/cast_catalog_ver.sql
     [exec] SQL> CREATE TABLE CASTO_COULEUR (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID 								     VARCHAR2(32)	     NOT NULL,
     [exec]  11  	     COULEUR								     VARCHAR2(32)	     NOT NULL,
     [exec]  12  	     NOM								     VARCHAR2(100)	     NOT NULL,
     [exec]  13  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_COULEUR_WORKSPACE_ID on CASTO_COULEUR (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_COULEUR_CHECKIN_DATE on CASTO_COULEUR (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     SKU_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     CODEARTICLE						     INTEGER			     NULL,
     [exec]   5  	     MODELE								     VARCHAR2(45)	     NULL,
     [exec]   6  	     MARQUECOMMERCIAL						     VARCHAR2(100)	     NULL,
     [exec]   7  	     RESTRICTIONSUSAGE						     VARCHAR2(300)	     NULL,
     [exec]   8  	     MENTIONSLEGALESOBLIGATOIRES		     VARCHAR2(1200)	     NULL,
     [exec]   9  	     CONTRAINTESUTILISATION				     VARCHAR2(1200),
     [exec]  10  	     PLUSDUPRODUIT						     VARCHAR2(1200)	     NULL,
     [exec]  11  	     LIBELLECLIENTCOURT 					     VARCHAR2(2200)	     NULL,
     [exec]  12  	     GENERALEMENTLIVREENHEURES				     NUMBER(2, 0)	     NULL,
     [exec]  13  	     LIVRAISONDIRECTEFOURNISSEUR		     NUMBER(1, 0),
     [exec]  14  	     CHAMPSDYNAMIQUE						     NUMBER(1, 0)	     NULL,
     [exec]  15  	     ENVENTE								     NUMBER(1, 0)	     NULL,
     [exec]  16  	     HORSNORMES 							     NUMBER(1, 0)	     NULL,
     [exec]  17  	     CODEFOURNISSEUR						     INTEGER			     NULL,
     [exec]  18  	     NOMFOURNISSEUR						     VARCHAR2(45)	     NULL,
     [exec]  19  	     POIDSUV								     INTEGER			     NULL,
     [exec]  20  	     CODERAYON								     INTEGER			     NULL,
     [exec]  21  	     CODEFAMILLE						     INTEGER			     NULL,
     [exec]  22  	     CODEMODULE 							     INTEGER			     NULL,
     [exec]  23  	     TAUXTVA								     NUMBER(12, 2)	     NULL,
     [exec]  24  	     PRIXVENTETTCFRANCS 					     NUMBER(12, 2)	     NULL,
     [exec]  25  	     PRIXVENTETTCEURO						     NUMBER(12, 2)	     NULL,
     [exec]  26  	     PRIXVENTEHTFRANCS						     NUMBER(12, 2)	     NULL,
     [exec]  27  	     PRIXVENTEHTEURO						     NUMBER(12, 2)	     NULL,
     [exec]  28  	     HAUTEURUV								     INTEGER			     NULL,
     [exec]  29  	     LARGEURUV								     INTEGER			     NULL,
     [exec]  30  	     PROFONDEURUV						     INTEGER			     NULL,
     [exec]  31  	     DATECREATIONCODEARTICLE				     DATE			     NULL,
     [exec]  32  	     DATEFINVIE 							     DATE			     NULL,
     [exec]  33  	     FRAISEXCEPTIONNEL						     NUMBER(12, 2)	     NULL,
     [exec]  34  	     GARANTIE								     VARCHAR2(70)	     NULL,
     [exec]  35  	     LIBELLEDESCRIPTIFARTICLE				     VARCHAR2(300)	     NULL,
     [exec]  36  	     LIBELLECLIENTLONG						     VARCHAR2(1200)	     NULL,
     [exec]  37  	     UNITEUV								     VARCHAR2(30)	     NULL,
     [exec]  38  	     NORMESTEXT 							     VARCHAR2(400)	     NULL,
     [exec]  39  	     CADEAU								     NUMBER(1, 0)	     NULL,
     [exec]  40  	     VENTEENMAGASINSEULEMENT				     NUMBER(1, 0)	     NULL,
     [exec]  41  	     COULEUR								     VARCHAR2(32)	     NULL,
     [exec]  42  	     COEFFICIENTDESATISFACTION				     NUMBER(10, 2)	     NULL,
     [exec]  43  	     TYPE_DE_TRANSPORT						     INTEGER			     NULL,  --unused
     [exec]  44  	     EXONERATION_PFE						     NUMBER(1, 0)	     NULL,
     [exec]  45  	     LIBELLEPROMOTIONNEL				     VARCHAR2(80)	     NULL,
     [exec]  46  	     URLGRANDPICTOREMISE				     VARCHAR2(80)	     NULL,
     [exec]  47  	     URLPETITPICTOREMISE				     VARCHAR2(80)	     NULL,
     [exec]  48  	     DATEDEBUTFONCTIONNELLE				     DATE			     NULL,
     [exec]  49  	     DATEFINFONCTIONNELLE				     DATE			     NULL,
     [exec]  50  	     DATEDEBUTAFFICHAGE 					     DATE			     NULL,
     [exec]  51  	     UNIQUEMENTSURLESITE				     NUMBER(1, 0)	     NULL,
     [exec]  52  	     LISTPRICEXLS						     NUMBER(19, 7)	     NULL,
     [exec]  53  	     TYPEEXPEDITION						     NUMBER(8, 0)	     NULL,
     [exec]  54  	     TYPEARTICLE						     NUMBER(8, 0)	     NULL,
     [exec]  55  	     TRANSPORTEUR						     VARCHAR2(40)	     NULL,
     [exec]  56  	     EXONERATIONPFT						     NUMBER(1, 0)	     NULL,
     [exec]  57  	     RETRAITMOMENTANEDATEDEBUT				     DATE			     NULL,
     [exec]  58  	     RETRAITMOMENTANEDATEFIN				     DATE			     NULL,
     [exec]  59  	     RETRAITMOMENTANEMOTIFSCODIFIES		     NUMBER(8, 0)	     NULL,
     [exec]  60  	     RETRAITMOMENTANEUTILISATEUR		     VARCHAR2(40)	     NULL,
     [exec]  61  	     DELAIEXPEDITIONBO						     NUMBER(8, 0)	     NULL, --unused
     [exec]  62  	     ECOTAXEENEURO						     NUMBER(14, 2)	     NULL,
     [exec]  63  	     VIDEO_URL								     VARCHAR2(50)	     NULL,
     [exec]  64  	     BAROMETRE								     NUMBER			     NULL,
     [exec]  65  	     CHAPO_CONTENU						     VARCHAR2(100)	     NULL,
     [exec]  66  	     CHAPO_STYLE						     NUMBER			     NULL,
     [exec]  67  	     PROMOTIONSEXCLUES						     NUMBER(1, 0)	     NULL,
     [exec]  68  	     PRIXDETAIL 							     NUMBER(12, 0)	     NULL,
     [exec]  69  	     PRIXTYPEDETAIL						     NUMBER			     NULL,
     [exec]  70  	     FIABILITESTOCK						     NUMBER(3, 0)	     NULL,
     [exec]  71  	     CACHESKUCOMPTEUR						     NUMBER(11, 2)	     NULL,
     [exec]  72  	     CODENEWMODULE						     VARCHAR2(100)	     NULL,
     [exec]  73  	     SOUMISAD3E 							     NUMBER(1, 0)	     NULL,
     [exec]  74  	     PRMP								     NUMBER(12, 2)	     NULL,
     [exec]  75  	     DELAIAPPROFOURNISSEUR				     NUMBER(12, 2)	     NULL,
     [exec]  76  	     PROMOTIONCARTEATOUT				     NUMBER(1, 0)	     NULL,
     [exec]  77  	     PURCENTPROMOCARTEATOUT				     INTEGER			     NULL,
     [exec]  78  	     ISPURCENT								     INTEGER			     NULL,
     [exec]  79  	     QUANTITE_LIMITEE						     NUMBER(1, 0)	     NULL,
     [exec]  80  	     THEME_SKU								     VARCHAR2(70)	     NULL,
     [exec]  81  	     URL_PAGE								     VARCHAR2(260)	     NULL,
     [exec]  82  	     CONDITIONSPARTICULIERES				     NUMBER			     NULL,
     [exec]  83  	     EXCLUSIONLIVRAISONCORSE				     NUMBER			     NULL,
     [exec]  84  	     SOMMEFORFAITAIRE						     NUMBER(19, 7)	     NULL,
     [exec]  85  	     FLASH_PRODUIT						     VARCHAR2(100)	     NULL,
     [exec]  86  	     FLASH_ZOOM 							     VARCHAR2(100)	     NULL,
     [exec]  87  	     DATE_DEB_DESTOCK						     DATE			     NULL,
     [exec]  88  	     DATE_FIN_DESTOCK						     DATE			     NULL,
     [exec]  89  	     DATE_INIT_DESTOCK						     DATE			     NULL,
     [exec]  90  	     VAL_STOCK_DESTOCK						     NUMBER(6, 0)	     NULL,
     [exec]  91  	     CUV								     VARCHAR2(2)		     NULL,
     [exec]  92  	     CUP								     VARCHAR2(2)		     NULL,
     [exec]  93  	     PUPUV								     NUMBER(10, 6)	     NULL,
     [exec]  94  	     PRIX_REF								     NUMBER(12, 2)	     NULL,
     [exec]  95  	     PRIX_SOLDE 							     NUMBER(12, 2)	     NULL,
     [exec]  96  	     F_SOLDE								     NUMBER(1, 0)	     NULL,
     [exec]  97  	     DATE_FIN_SOLDE						     DATE			     NULL,
     [exec]  98  	     PRIMARY KEY (SKU_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_PICTO (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)        NOT NULL,
     [exec]   3  	     SKU_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     SEQ_NUM								     INTEGER			     NOT NULL,
     [exec]   5  	     URL_PICTO								     VARCHAR2(100)	     NULL,
     [exec]   6  	     PRIMARY KEY (SKU_ID, SEQ_NUM, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_RELATED (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     SEC_ASSET_VERSION				 NUMBER(19)		     NOT NULL,
     [exec]   4  	     SKU_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     AUX_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   6  	     PRIMARY KEY (SKU_ID, AUX_ID, ASSET_VERSION, SEC_ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_CROSS_SELLING (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     CROSS_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]  11  	     SKU_ID								     VARCHAR2(40)	     NULL,
     [exec]  12  	     PRODUCT_ID 							     VARCHAR2(40)	     NULL,
     [exec]  13  	     PRIMARY KEY (CROSS_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_SKCRSSELL_WORKSPACE_ID on CASTO_SKU_CROSS_SELLING (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_SKCRSSELL_CHECKIN_DATE on CASTO_SKU_CROSS_SELLING (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_CROSS_SELLING_ASSOC (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     SKU_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     SEQUENCE_NUM						     INTEGER			     NOT NULL,
     [exec]   5  	     CROSS_ID								     VARCHAR2(40)	     NULL,
     [exec]   6  	     PRIMARY KEY (SKU_ID, SEQUENCE_NUM, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_IK_CS_ASSOC (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     SKU_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     SEQUENCE_NUM						     INTEGER			     NOT NULL,
     [exec]   5  	     CROSS_ID								     VARCHAR2(40)	     NULL,
     [exec]   6  	     PRIMARY KEY (SKU_ID, SEQUENCE_NUM, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_ATTR_VALUE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ATTRIBUTE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]  11  	     ATTRIBUTE_NAME						     VARCHAR2(42)	     NULL,
     [exec]  12  	     DISPLAYNAME						     VARCHAR2(50)	     NULL,
     [exec]  13  	     VALUEINTEGER						     INTEGER			     NULL,
     [exec]  14  	     VALUESTRING						     VARCHAR2(255)	     NULL,
     [exec]  15  	     VALUEFLOAT 							     NUMBER(12, 2)	     NULL,
     [exec]  16  	     VALUEDATE								     DATE			     NULL,
     [exec]  17  	     VALUEBOOLEAN						     NUMBER(1, 0)	     NULL,
     [exec]  18  	     UNIT								     VARCHAR2(10)	     NULL,
     [exec]  19  	     TYPE								     INTEGER			     NULL,
     [exec]  20  	     PRIMARY KEY (ATTRIBUTE_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_SKATTRVAL_WORKSPACE_ID on CASTO_SKU_ATTR_VALUE (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_SKATTRVAL_CHECKIN_DATE on CASTO_SKU_ATTR_VALUE (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_ATTR (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     SKU_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     SEQUENCE_NUM						     INTEGER			     NOT NULL,
     [exec]   5  	     ATTRIBUTE_ID						     VARCHAR2(40)	     NULL,
     [exec]   6  	     PRIMARY KEY (SKU_ID, SEQUENCE_NUM, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_ATTR_SKUID_IDX ON CASTO_SKU_ATTR (ATTRIBUTE_ID DESC);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_NORMES (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     NORMES_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]  11  	     URLPICTOGRAMME						     VARCHAR2(254)	     NULL,
     [exec]  12  	     URLPAGE								     VARCHAR2(254)	     NULL,
     [exec]  13  	     DESCRIPTION						     LONG			     NULL,
     [exec]  14  	     NOMCOURT								     VARCHAR2(20)	     NULL,
     [exec]  15  	     PRIMARY KEY (NORMES_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_NORMES_WORKSPACE_ID on CASTO_NORMES (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_NORMES_CHECKIN_DATE on CASTO_NORMES (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_NORMES (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)        NOT NULL,
     [exec]   3  	     SKU_ID								     VARCHAR2(40)	      NOT NULL,
     [exec]   4  	     SEQUENCE_NUM						     INTEGER			      NOT NULL,
     [exec]   5  	     NORMES_ID								     VARCHAR2(40)	      NOT NULL,
     [exec]   6  	     PRIMARY KEY (SKU_ID, SEQUENCE_NUM, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_SERVICE_MAGASIN (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)        NOT NULL,
     [exec]   3  	     SKU_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     ID_COUPLE								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     PRIMARY KEY (SKU_ID, ID_COUPLE, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_MEDIA (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)        NOT NULL,
     [exec]   3  	     QUAL_ID								     VARCHAR2(1)	     NOT NULL,
     [exec]   4  	     MEDIA_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     PRIMARY KEY (MEDIA_ID, QUAL_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_AFFINAGE_QUESTION (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID 									     VARCHAR2(40)	     NOT NULL,
     [exec]  11  	     LIBELLE								     VARCHAR2(500)	     NULL,
     [exec]  12  	     CONTENTGROUP						     VARCHAR2(500)	     NULL,
     [exec]  13  	     MULTIVALUE 							     NUMBER			     DEFAULT 0	     NOT NULL,
     [exec]  14  	     MEDIA_ID VARCHAR2(40)				     NULL,
     [exec]  15  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_AFFIN_QUEST_WRKSPC_ID on CASTO_AFFINAGE_QUESTION (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_AFFIN_QUEST_CHCKIN_DT on CASTO_AFFINAGE_QUESTION (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_AFFINAGE_REPONSE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID 							     VARCHAR2(32)	 NOT NULL,
     [exec]  11  	     LIBELLE							     VARCHAR2(32)	 NOT NULL,
     [exec]  12  	     CONTENTGROUP						     VARCHAR2(32),
     [exec]  13  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_AFFIN_REP_WRKSPC_ID on CASTO_AFFINAGE_REPONSE (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_AFFIN_REP_CHCKIN_DT on CASTO_AFFINAGE_REPONSE (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_AFFINAGE_QUEST_REP (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)        NOT NULL,
     [exec]   3  	     QUESTION_ID						     VARCHAR2(32)	 NOT NULL,
     [exec]   4  	     SEQUENCE_NUM						     INTEGER		 NOT NULL,
     [exec]   5  	     REPONSE_ID 						     VARCHAR2(32)	     NULL,
     [exec]   6  	     PRIMARY KEY (QUESTION_ID, SEQUENCE_NUM, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_DATA_MAGASIN (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID_COUPLE								     VARCHAR2(40)	     NOT NULL,
     [exec]  11  	     DELAI_APPRO_FOURNISSEUR				     NUMBER(12, 2)	     NULL,
     [exec]  12  	     ECO_TAXE								     NUMBER(19, 7)	     NULL,
     [exec]  13  	     SOUMISAD3E 							     NUMBER(1, 0)	     NULL,
     [exec]  14  	     COEFFICIENTDESATISFACTION				     NUMBER(10, 2)	     NULL,
     [exec]  15  	     PRMP								     NUMBER(10, 2)	     NULL,
     [exec]  16  	     PROMCORDRE 							     NUMBER(4, 0)	     NULL,
     [exec]  17  	     PROMFNAT								     NUMBER(2, 0)	     NULL,
     [exec]  18  	     PRIXLIVRE								     NUMBER(1, 0)	     NULL,
     [exec]  19  	     DDEBPROMO								     DATE			     NULL,
     [exec]  20  	     DFINPROMO								     DATE			     NULL,
     [exec]  21  	     PRODUITDETENU						     NUMBER(1, 0)	     NULL,
     [exec]  22  	     PRIXVENTETTCEURO						     NUMBER(10, 2)	     NULL,
     [exec]  23  	     PRIXVENTEHTEURO						     NUMBER(10, 2)	     NULL,
     [exec]  24  	     PRIMARY KEY (ID_COUPLE, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_DATA_MAGASIN_WRKSPC_ID on CASTO_DATA_MAGASIN (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_DATA_MAGASIN_CHCKIN_DT on CASTO_DATA_MAGASIN (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_MAGASIN (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)        NOT NULL,
     [exec]   3  	     SKU_ID								     VARCHAR2(40)    NOT     NULL,
     [exec]   4  	     ID_MAGASIN 							     VARCHAR2(40)    NOT     NULL,
     [exec]   5  	     ID_COUPLE								     VARCHAR2(40)    NOT     NULL,
     [exec]   6  	     PRIMARY KEY (ASSET_VERSION, SKU_ID, ID_MAGASIN, ID_COUPLE));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PRODUCT (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)        NOT NULL,
     [exec]   3  	     PRODUCT_ID 							     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BOUTIQUEMARQUES						     NUMBER(1, 0)	     NULL,
     [exec]   5  	     PRODUCT_TETEDEGONDOLE				     VARCHAR2(40)	     NULL,
     [exec]   6  	     PRODUCT_FIXEDRELATEDPRODUCTUP		     VARCHAR2(40)	     NULL,
     [exec]   7  	     COULEUR								     VARCHAR2(32)	     NULL,
     [exec]   8  	     AFFICHAGE_ARTICLECOMPARABLE			     NUMBER(1, 0)	     NULL,
     [exec]   9  	     MARQUECOMMERCIAL						     VARCHAR2(100)	     NULL,
     [exec]  10  	     URL_FICHE_TECHNIQUE					     VARCHAR2(50)	     NULL,
     [exec]  11  	     URL_MODE_EMPLOI						     VARCHAR2(50)	     NULL,
     [exec]  12  	     CHAPO_CONTENU						     VARCHAR2(100)	     NULL,
     [exec]  13  	     CHAPO_STYLE							     NUMBER			     NULL,
     [exec]  14  	     NATURE_TETE_GONDOLE					     NUMBER(1, 0)	     NULL,
     [exec]  15  	     TYPE_AFFICHAGE_PROMO				     NUMBER(1, 0)	     NULL,
     [exec]  16  	     VIDEO_URL								     VARCHAR2(50)	     NULL,
     [exec]  17  	     URL_PAGE								     VARCHAR2(260)	     NULL,
     [exec]  18  	     PRIMARY KEY (PRODUCT_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PRODUCT_QUESTION (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)        NOT NULL,
     [exec]   3  	     PRODUCT_ID 							     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     SEQ								     INTEGER			     NOT NULL,
     [exec]   5  	     QUESTION_ID							     VARCHAR2(40)	     NOT NULL,
     [exec]   6  	     PRIMARY KEY (PRODUCT_ID, SEQ, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PRODUCT_AFFINAGE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)        NOT NULL,
     [exec]   3  	     PRODUCT_ID 							     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     AFFINAGE								     INTEGER			     NULL,
     [exec]   5  	     PRIMARY KEY (PRODUCT_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PRODUCT_LISTE_MULTISKU (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)        NOT NULL,
     [exec]   3  	     PRODUCT_ID 							     VARCHAR2(40)  NOT NULL,
     [exec]   4  	     LIBELLE_LISTE_ID						     VARCHAR2(40)  NULL,
     [exec]   5  	     CONSTRAINT CASTO_PRODUCT_LISTE_MULTI_PK PRIMARY KEY (PRODUCT_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_IK_CATEGORY_TYPE (
     [exec]   2  	     ASSET_VERSION						     NUMBER(19,0)	     NOT NULL ENABLE,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40 BYTE)	     NOT NULL ENABLE,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40 BYTE)	     NOT NULL ENABLE,
     [exec]   5  	     IS_HEAD								     NUMBER(1,0)	     NOT NULL ENABLE,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1,0)		     NOT NULL ENABLE,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1,0)	     NOT NULL ENABLE,
     [exec]   8  	     PRED_VERSION						     NUMBER(19,0),
     [exec]   9  	     CHECKIN_DATE						     DATE,
     [exec]  10  	     TYPE_NAME								     VARCHAR2(255)	     NOT NULL,
     [exec]  11  	     PRIMARY KEY (TYPE_NAME, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CATEGORY (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)        NOT NULL,
     [exec]   3  	     CATEGORY_ID			     VARCHAR2(40)	 NOT NULL,
     [exec]   4  	     DROPDOWNTEMPLATE			     VARCHAR2(100)	 NULL,
     [exec]   5  	 PIVOT					     NUMBER(1,0)	     NULL,
     [exec]   6  	     PROMOTEMPLATE			     VARCHAR2(100)	 NULL,
     [exec]   7  	 PRODUCTS_COUNT 			     INTEGER		     NULL,
     [exec]   8  	     BOUTIQUEMARQUES				     NUMBER(1),
     [exec]   9  	     REDACTIONNELFAMILLEMARQUE1 		     VARCHAR2(255),
     [exec]  10  	     TITREBOUTIQUEMARQUE			     VARCHAR2(254),
     [exec]  11  	     COULEUR					     VARCHAR2(32),
     [exec]  12  	     HEADER_PAGE_LISTE				     NUMBER(1),
     [exec]  13  	     TYPE_TETE_GONDOLE					     NUMBER(1),
     [exec]  14  	     BOUTIQUE_EVENT					     NUMBER(1)		     DEFAULT 0,
     [exec]  15  	     IMAGE_URL					     VARCHAR2(255),
     [exec]  16  	     URL_EDITO					     VARCHAR2(255),
     [exec]  17  	     DESCRIPTIF_CATEGORIE			     VARCHAR2(255),
     [exec]  18  	     URL_INSPIRATION				     VARCHAR2(255),
     [exec]  19  	     URL_AIDE_AU_CHOIX				     VARCHAR2(255),
     [exec]  20  	     ACTIVATION_COMPARATEUR			     NUMBER(1)		     DEFAULT 1,
     [exec]  21  	     REDACTIONNELFAMILLEMARQUE3 		     VARCHAR2(100),
     [exec]  22  	     STYLECATEGORIE				     NUMBER(2)		     DEFAULT 0,
     [exec]  23  	     REDACTIONNELFAMILLEMARQUE2 		     NUMBER(2)		     DEFAULT 0,
     [exec]  24  	     TITRE_REFERENCEMENT			     VARCHAR2(200),
     [exec]  25  	     DESTOCKAGE 				     INTEGER,
     [exec]  26  	     BONNES_AFFAIRES				     NUMBER(1,0),
     [exec]  27  	     FOOTER					     CLOB,
     [exec]  28  	     COEFFIABILITE					     NUMBER(14,2),
     [exec]  29  	     IK_CATEGORY_TYPE						     VARCHAR2(255),
     [exec]  30  	     IK_CATEGORY_TYPE_NAV				     NUMBER(2)			     DEFAULT 0,
     [exec]  31  	     URL_PAGE					     VARCHAR2(260),
     [exec]  32  	     NE_PAS_AFFICHER				     INTEGER,
     [exec]  33  CONSTRAINT CASTO_CATEGORY_P PRIMARY KEY (CATEGORY_ID,ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_INSPI (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)        NOT NULL,
     [exec]   3  	     INSPI_ID								     VARCHAR2(100)		   NOT NULL,
     [exec]   4  	     PRIMARY KEY (INSPI_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CATEGORY_ESPRIT(
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)        NOT NULL,
     [exec]   3  	     ESPRIT_ID								     VARCHAR2(100)		   NOT NULL,
     [exec]   4  	     SEQ								     INTEGER			   NOT NULL,
     [exec]   5  	     INSPI_ID								     VARCHAR2(100)		   NOT NULL,
     [exec]   6  	     PRIMARY KEY  (ESPRIT_ID, INSPI_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_INSPI_NUANCIER(
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)        NOT NULL,
     [exec]   3  	     INSPI_ID								     VARCHAR2(100 )		   NOT NULL,
     [exec]   4  	     SEQ								     INTEGER			   NOT NULL,
     [exec]   5  	     ID 								     VARCHAR2(100)		       NOT NULL,
     [exec]   6  	     PRIMARY KEY  (INSPI_ID, ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_NUANCIER(
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID 							     VARCHAR2(100)	 NOT NULL,
     [exec]  11  	     LIBELLE							     VARCHAR2(255)	 NOT NULL,
     [exec]  12  	     CODE_COULEUR						     VARCHAR2(500)	 NOT NULL,
     [exec]  13  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_NUANCIER_WRKSPC_ID on CASTO_NUANCIER (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_NUANCIER_CHCKIN_DT on CASTO_NUANCIER (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CATEGORY_INSPI(
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     CATEGORY_ID						     VARCHAR2(100)	     NOT NULL,
     [exec]   4  	     SEQ							     INTEGER		 NOT NULL,
     [exec]   5  	     INSPI_ID							     VARCHAR2(100)	     NOT NULL,
     [exec]   6  	     PRIMARY KEY (CATEGORY_ID, INSPI_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CATEGORY_SEQUENCE(
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     CAT_ID								     VARCHAR2(40)	 NOT NULL,
     [exec]   4  	     SEQ_NUM								     INTEGER		 NOT NULL,
     [exec]   5  	     SEQ_ID								     VARCHAR2(50),
     [exec]   6  	     PRIMARY KEY (CAT_ID, SEQ_NUM, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CATEGORY_BOUTIQUE_MAG(
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     ID_CATEGORY						     VARCHAR2(40)	 NOT NULL,
     [exec]   4  	     ID_MAGASIN 						     VARCHAR2(40)	 NOT NULL,
     [exec]   5  	     PRIMARY KEY (ID_CATEGORY, ID_MAGASIN, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_THEMES_NORMES (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     THEME_ID							     VARCHAR2(40)	     NOT NULL,
     [exec]  11  	     NAME							     VARCHAR2(254)	     NULL,
     [exec]  12  	     DESCRIPTION						     LONG			     NULL,
     [exec]  13  	     PRIMARY KEY (THEME_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_THMSNRMS_WRKSPC_ID on CASTO_THEMES_NORMES (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_THMSNRMS_CHCKIN_DT on CASTO_THEMES_NORMES (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_THEMES_NORMES_ASSOC (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     THEME_ID							     VARCHAR2(40)	 NOT NULL,
     [exec]   4  	     SEQUENCE_NUM						     INTEGER		 NOT NULL,
     [exec]   5  	     NORMES_ID							     VARCHAR2(40)	 NOT NULL,
     [exec]   6  	     PRIMARY KEY (THEME_ID, SEQUENCE_NUM, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MARQUE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     MARQUE_ID						     VARCHAR2(40)	 NOT NULL,
     [exec]  11  	     NOMMARQUE						     VARCHAR2(254)	 NOT NULL,
     [exec]  12  	     DESCRIPTION					     LONG,
     [exec]  13  	     LOGOMARQUE 					     VARCHAR2(40),
     [exec]  14  	     PREMIER_PRIX					     VARCHAR2(20),
     [exec]  15  	     QUALITE_PRIX					     VARCHAR2(20),
     [exec]  16  	     SELECTION_EXCLUSIVE				     VARCHAR2(20),
     [exec]  17  	     GRANDE_MARQUE					     VARCHAR2(20),
     [exec]  18  	     URL								     VARCHAR2(254),
     [exec]  19  	     PRIMARY KEY (MARQUE_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_MARQUE_WRKSPC_ID on CASTO_MARQUE (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_MARQUE_CHCKIN_DT on CASTO_MARQUE (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_CODES_UNITE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     CODE_UNITE 					     VARCHAR2(2),
     [exec]  11  	     DESIGNATION					     VARCHAR2(50),
     [exec]  12  	     FLAG_AFFICHAGE_UP					     VARCHAR2(1),
     [exec]  13  	     LIBELLE_AFFICHAGE_UP				     VARCHAR2(10),
     [exec]  14  	     PRIMARY KEY (ASSET_VERSION, CODE_UNITE));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_CODES_UNITE_WRKSPC_ID on CASTO_CODES_UNITE (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_CODES_UNITE_CHCKIN_DT on CASTO_CODES_UNITE (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --------------------------- EPAM -----------------------------------------
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_SKU (
     [exec]   2    asset_version number(19)	not null,
     [exec]   3    SKU_ID			 VARCHAR2(40)	     NOT NULL,
     [exec]   4    TEST			 VARCHAR2(40),
     [exec]   5    MESSAGE_INFORMATION	 VARCHAR2(500)
     [exec]   6  ,constraint CAST_SKU_p primary key (sku_id,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_CATEGORY (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)        NOT NULL,
     [exec]   3  	     CATEGORY_ID			     VARCHAR2(40)  NOT NULL,
     [exec]   4  	     DROPDOWNTEMPLATE			     VARCHAR2(100) NULL,
     [exec]   5  	 PIVOT					     NUMBER(1,0)       NULL,
     [exec]   6  	     FEATUREDPRODUCT			     VARCHAR2(60)  NULL,
     [exec]   7  	     PROMOTEMPLATE			     VARCHAR2(100) NULL,
     [exec]   8  	 PRODUCTS_COUNT 				 integer       NULL,
     [exec]   9  	     META_KEYWORDS_PATTERN				     VARCHAR2(300)   NULL,
     [exec]  10  	     META_DESCRIPTION_PATTERN				     VARCHAR2(300)   NULL,
     [exec]  11  	     PAGE_TITLE_PATTERN 					     VARCHAR2(300)   NULL,
     [exec]  12  	 INFO_TEXT				 VARCHAR2(500)	 NULL,
     [exec]  13  	 COMMERCE_TEXT				 VARCHAR2(500)	 NULL,
     [exec]  14  CONSTRAINT CAST_CATEGORY_P PRIMARY KEY (CATEGORY_ID,ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_CATALOG_CATEGORY (
     [exec]   2  	     ASSET_VERSION						     NUMBER(19)        NOT NULL,
     [exec]   3  	     SEQUENCE_NUM						     INTEGER	   NOT NULL,
     [exec]   4  	     CATEGORY_ID						     VARCHAR2(40)  NOT NULL,
     [exec]   5  	     CATALOG_ID 				     VARCHAR2(40)  NOT NULL
     [exec]   6  ,CONSTRAINT CAST_CATALOG_CATEGORY_P PRIMARY KEY (CATEGORY_ID,CATALOG_ID,ASSET_VERSION,SEQUENCE_NUM));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_TEMPLATE_INFORMATION (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 	     NOT NULL,
     [exec]   3  	     PROMO_TEMPLATE_ID			     VARCHAR2(40)	 NOT NULL,
     [exec]   4  	     PROMO_INFORMATION_ID		     VARCHAR2(40)	 NOT NULL,
     [exec]   5  	     PROMO_KEY				     INTEGER		 NOT NULL,
     [exec]   6  	     PRIMARY KEY (PROMO_TEMPLATE_ID, PROMO_INFORMATION_ID, PROMO_KEY, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_PROMO_INFORMATION (
     [exec]   2  	     asset_version						     number(19) 	     not null,
     [exec]   3  	     workspace_id						     varchar2(40)    not null,
     [exec]   4  	     branch_id								     varchar2(40)    not null,
     [exec]   5  	     is_head								     number(1)		     not null,
     [exec]   6  	     version_deleted						     number(1)		     not null,
     [exec]   7  	     version_editable						     number(1)		     not null,
     [exec]   8  	     pred_version						     number(19) 	     null,
     [exec]   9  	     checkin_date						     date		     null,
     [exec]  10  	     PROMO_INFORMATION_ID				     VARCHAR2(40)    NOT NULL,
     [exec]  11  	     IMAGE								     VARCHAR2(40)    NULL,
     [exec]  12  	     FLASH				     VARCHAR2(40)    NULL,
     [exec]  13  	     DESCRIPTION						     VARCHAR2(400)   NULL,
     [exec]  14  	     URL								     VARCHAR2(255)   NULL,
     [exec]  15  	     VIDEOURL				     VARCHAR2(500)   NULL,
     [exec]  16  	     TITLE								     VARCHAR2(100)   NULL,
     [exec]  17  	     DOCUMENT_ID							     VARCHAR2(40)    NULL,
     [exec]  18  	     PRODUCT_ID 							     VARCHAR2(40)    NULL,
     [exec]  19  	     CATEGORY_ID							     VARCHAR2(40)    NULL
     [exec]  20  ,constraint CAST_PROMO_INFORMATION_p primary key (PROMO_INFORMATION_ID,asset_version));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_PROMO_TEMPLATE (
     [exec]   2  	     ASSET_VERSION						     NUMBER(19)       NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40) NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40) NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)	      NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)	      NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)	      NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19)       NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE	  NULL,
     [exec]  10  	     PROMO_TEMPLATE_ID			     VARCHAR2(40) NOT NULL,
     [exec]  11  	     LAYOUTTYPE 			     INTEGER	  NOT NULL
     [exec]  12  ,CONSTRAINT CAST_PROMO_TEMPLATE_P PRIMARY KEY (PROMO_TEMPLATE_ID,ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_GROUPED_PRODUCT (
     [exec]   2  	     ASSET_VERSION						     NUMBER(19)       NOT NULL,
     [exec]   3  	     GROUPED_PRODUCT_ID 		     VARCHAR2(40) NOT NULL,
     [exec]   4  	     GROUPINGTYPE						     INTEGER	  NOT NULL
     [exec]   5  ,constraint CAST_GROUPED_PRODUCT_p primary key (GROUPED_PRODUCT_ID,ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_SKU_LINK (
     [exec]   2  	     ASSET_VERSION						     NUMBER(19)       NOT NULL,
     [exec]   3  	 SKU_LINK_ID				 VARCHAR2(40) NOT NULL,
     [exec]   4  	 TABNAME								     VARCHAR2(60) NULL
     [exec]   5  ,constraint CAST_SKU_LINK_p primary key (SKU_LINK_ID,ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_SKU_PACKS (
     [exec]   2  	     ASSET_VERSION						     NUMBER(19)       NOT NULL,
     [exec]   3  	     SKU_ID				     VARCHAR2(40) NOT NULL,
     [exec]   4  	     PACKS_ID				     VARCHAR2(40) NOT NULL
     [exec]   5  ,constraint CAST_SKU_PACKS_p primary key (SKU_ID,PACKS_ID,ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_DOCUMENT (
     [exec]   2  	 ASSET_VERSION							     NUMBER(19) 	NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)   NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)   NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)		NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)		NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)		NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 	NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE	    NULL,
     [exec]  10  	 DOCUMENT_ID							     VARCHAR2(40)   NOT NULL,
     [exec]  11  	     DOCUMENT_TYPE						     INTEGER	    NULL,
     [exec]  12  	     TITLE								     VARCHAR2(254)  NULL,
     [exec]  13  	     IMAGE								     VARCHAR2(40)   NULL,
     [exec]  14  	     DESCRIPTION							     VARCHAR2(2048) NULL,
     [exec]  15  	     RELATIVE_URL						     VARCHAR2(2048) NULL,
     [exec]  16  	     RATING				     NUMBER(19,3)	NULL,
     [exec]  17  	     TEMPLATE_ID							     VARCHAR2(40)   NULL
     [exec]  18  ,CONSTRAINT CAST_DOCUMENT_P PRIMARY KEY (DOCUMENT_ID,ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_CAT_DOCUMENT (
     [exec]   2  	     SEC_ASSET_VERSION			     NUMBER(19) 	 NOT NULL,
     [exec]   3  	     ASSET_VERSION			     NUMBER(19) 	 NOT NULL,
     [exec]   4  	     CATEGORY_ID						     VARCHAR2(40)    NOT NULL,
     [exec]   5  	     SEQUENCE_NUM					     INTEGER	     NOT NULL,
     [exec]   6  	     DOCUMENT_ID						     VARCHAR2(40)    NOT NULL,
     [exec]   7  CONSTRAINT CAST_CAT_DOCUMENT_P PRIMARY KEY(CATEGORY_ID, SEQUENCE_NUM, ASSET_VERSION,  SEC_ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_DOC_KEYWRDS (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 	 NOT NULL,
     [exec]   3  	     ID 									     VARCHAR2(40)	     NOT NULL ,
     [exec]   4  	     SEQ_NUM								     INTEGER			     NOT NULL,
     [exec]   5  	     KEYWORDS								     VARCHAR2(254)	     NULL,
     [exec]   6  	     PRIMARY KEY(ID, SEQ_NUM, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_PRODUCT (
     [exec]   2  	 ASSET_VERSION				     NUMBER(19) 	 NOT NULL,
     [exec]   3  	     PRODUCT_ID 				 VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     RATING				     NUMBER(19,3)	     NULL,
     [exec]   5  	     PRODUCT_BENEFIT			     VARCHAR2(80)    NULL,
     [exec]   6  	     PRODUCT_PROMO_DESCRIPTION		     VARCHAR2(80)    NULL,
     [exec]   7  	     PROMO_BACKGROUND_COLOR				     VARCHAR2(40)    NULL,
     [exec]   8  	     PROMO_FONT_COLOR						     VARCHAR2(40)    NULL,
     [exec]   9  	     PROMO_START_DATE						     DATE	    NULL,
     [exec]  10  	     PROMO_EXPIRATION_DATE				     DATE	    NULL,
     [exec]  11  	     META_KEYWORDS_PATTERN				     VARCHAR2(300)   NULL,
     [exec]  12  	     META_DESCRIPTION_PATTERN				     VARCHAR2(300)   NULL,
     [exec]  13  	     PAGE_TITLE_PATTERN 					     VARCHAR2(300)   NULL,
     [exec]  14  	     SHOW_BRAND_LINK_PDP					     NUMBER(1, 0)    NULL,
     [exec]  15  CONSTRAINT CAST_PRODUCT_P PRIMARY KEY (PRODUCT_ID,ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE cast_style (
     [exec]   2  	     asset_version NUMBER(19) NOT NULL,
     [exec]   3  	     workspace_id VARCHAR2(40) NOT NULL,
     [exec]   4  	     branch_id VARCHAR2(40) NOT NULL,
     [exec]   5  	     is_head NUMBER(1) NOT NULL,
     [exec]   6  	     version_deleted NUMBER(1) NOT NULL,
     [exec]   7  	     version_editable NUMBER(1) NOT NULL,
     [exec]   8  	     pred_version NUMBER(19) NULL,
     [exec]   9  	     checkin_date DATE NULL,
     [exec]  10  	 style_id VARCHAR2 (40) NOT NULL,
     [exec]  11  	 color VARCHAR2 (7) DEFAULT '#000000',
     [exec]  12  	 foreground VARCHAR2 (7) DEFAULT '#FFFFFF',
     [exec]  13  	 dropdown_color VARCHAR2 (7),
     [exec]  14  	 font_name VARCHAR2 (30),
     [exec]  15  	 font_size VARCHAR2 (5),
     [exec]  16  	 font_weight NUMBER DEFAULT 0 NOT NULL,
     [exec]  17  	     tab_style VARCHAR2 (30),
     [exec]  18  	     bg_style VARCHAR2 (30),
     [exec]  19  	     link_style VARCHAR2 (30),
     [exec]  20  	     facet_style VARCHAR2 (30),
     [exec]  21  	     breadcrumbs_style VARCHAR2 (30),
     [exec]  22  	     product_promo_style VARCHAR2 (30),
     [exec]  23  	     paging_style VARCHAR2 (30),
     [exec]  24  	     cloud_style VARCHAR2 (30),
     [exec]  25  	     right_menu_style VARCHAR2 (30),
     [exec]  26  	     list_style VARCHAR2 (30),
     [exec]  27  	     border_style  VARCHAR2 (30),
     [exec]  28  	 CONSTRAINT cast_style_pk PRIMARY KEY (style_id, asset_version)
     [exec]  29  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> CREATE INDEX cast_style_wsx ON cast_style (workspace_id);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX cast_style_cix ON cast_style (checkin_date);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE cast_category_style (
     [exec]   2  	     asset_version NUMBER(19) NOT NULL,
     [exec]   3  	 category_id VARCHAR2 (40) NOT NULL,
     [exec]   4  	 style_id VARCHAR2 (40) NOT NULL,
     [exec]   5  	 CONSTRAINT cast_category_style_pk PRIMARY KEY (category_id, asset_version)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_SKU_IMAGES (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)   NOT NULL,
     [exec]   3  	 SKU_ID 				 VARCHAR2(40) NOT NULL,
     [exec]   4  	 MINIATURE_IMAGE_ID			 VARCHAR2(40) NULL,
     [exec]   5  	 CAROUSEL_IMAGE_ID			 VARCHAR2(40) NULL,
     [exec]   6  	     SUPPORTING_IMAGE_ID		     VARCHAR2(40) NULL,
     [exec]   7  	     COMPARATOR_IMAGE_ID					     VARCHAR2(40) NULL,
     [exec]   8  	     PRIMARY KEY (SKU_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_GESTPROMO_ACTIONCO (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ACTIONCO_ID						     VARCHAR2(50)	     NOT NULL,
     [exec]  11  	     ACTIONCO_NOM						     VARCHAR2(50),
     [exec]  12  	     ACTIONCO_DESCRIPTION				     VARCHAR2(100),
     [exec]  13  	     NOTICE								     VARCHAR2(100),
     [exec]  14  	     PRIMARY KEY (ACTIONCO_ID, ASSET_VERSION)
     [exec]  15  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_GESTPROMO_OPECO (
     [exec]   2  	     ASSET_VERSION	     NUMBER(19)   NOT NULL,
     [exec]   3  	     PROMOTION_ID		     VARCHAR2(50),
     [exec]   4  	     CREATEUR				     VARCHAR2(50),
     [exec]   5  	     CONDITIONAPPLICATION    VARCHAR2(2000),
     [exec]   6  	     MESSAGECOUPON		     VARCHAR2(2000),
     [exec]   7  	     TYPEAFFICHAGE		     NUMBER(*,0),
     [exec]   8  	     APPLICATIONMAGASIN 	     NUMBER(*,0),
     [exec]   9  	     ACTIONCO_ID		     VARCHAR2(50),
     [exec]  10  	     CHAPO				     VARCHAR2(255),
     [exec]  11  	     USAGEUNIQUE		     NUMBER(*,0),
     [exec]  12  	     OPECO_NC_ALL		     NUMBER(*,0),
     [exec]  13  	     PRIMARY KEY (PROMOTION_ID, ASSET_VERSION)
     [exec]  14  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_GESTPROMO_ELEMENT (
     [exec]   2  	     ASSET_VERSION	     NUMBER(19)      NOT NULL,
     [exec]   3  	     PROMOTION_ID		     VARCHAR2(50)    NOT NULL,
     [exec]   4  	     SEQUENCE_NUM		     NUMBER(*,0)     NOT NULL,
     [exec]   5  	     ELEMENT				     VARCHAR2(100),
     [exec]   6  	     PRIMARY KEY (PROMOTION_ID, SEQUENCE_NUM, ASSET_VERSION)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_GESTPROMO_OPECO_NC (
     [exec]   2  	     ASSET_VERSION	     NUMBER(19)      NOT NULL,
     [exec]   3  	     PROMOTION_ID		     VARCHAR2(50)    NOT NULL,
     [exec]   4  	     SEQUENCE_NUM		     NUMBER(*,0)     NOT NULL,
     [exec]   5  	     PROMOTIONNC_ID		     VARCHAR2(50),
     [exec]   6  	     PRIMARY KEY (PROMOTION_ID, SEQUENCE_NUM, ASSET_VERSION)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_PROMOTION (
     [exec]   2  	     ASSET_VERSION	     NUMBER(19)   NOT NULL,
     [exec]   3  	     PROMOTION_ID		     VARCHAR2(50) NOT NULL,
     [exec]   4  	     TYPAGE_PROMOTION		     NUMBER(*,0),
     [exec]   5  	     PRIMARY KEY (PROMOTION_ID, ASSET_VERSION)
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_PRODUCT_CHARACTERISTICS (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 	 NOT NULL,
     [exec]   3  	     CATALOG_ID 							     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     SEQUENCE_NUM						     INTEGER			     NOT NULL,
     [exec]   5  	     CHARACTERISTIC_PROPERTY				     VARCHAR2(50)	     NULL,
     [exec]   6  	     PRIMARY KEY(CATALOG_ID, SEQUENCE_NUM, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE DCS_CATEGORY
     [exec]   2  	     MODIFY (DESCRIPTION VARCHAR2(300));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_LEGACY_URL (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID 									     VARCHAR2(40)	     NOT NULL,
     [exec]  11  	     URI								     VARCHAR2(400)	     NOT NULL,
     [exec]  12  	     CATEGORY_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]  13  	     PRIMARY KEY (ID, ASSET_VERSION)
     [exec]  14  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_STAGE (
     [exec]   2  	     ASSET_VERSION	 NUMBER(19)		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID	     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID			     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD			     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED	     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE	     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION	     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE	     DATE		     NULL,
     [exec]  10  	     ID 		 VARCHAR2(40) NOT NULL,
     [exec]  11  	     NOM		 VARCHAR2(100),
     [exec]  12  	     descriptif 	 VARCHAR2(800),
     [exec]  13  	     datestage		 DATE,
     [exec]  14  	     horaires		 VARCHAR2(100),
     [exec]  15  	     VIDEO_URL			     VARCHAR2(400),
     [exec]  16  	     PRIMARY KEY(ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_CATALOGUE (
     [exec]   2  	     ASSET_VERSION	 NUMBER(19)		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID	     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID			     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD			     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED	     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE	     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION	     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE	     DATE		     NULL,
     [exec]  10  	     ID 				     VARCHAR2(40)    NOT NULL,
     [exec]  11  	     TITLE			     VARCHAR2(100)   NOT NULL,
     [exec]  12  	     DESCRIPTION		     VARCHAR2(300)   NOT NULL,
     [exec]  13  	     PROMO_MESSAGE	     VARCHAR2(300)   NULL,
     [exec]  14  	     ACTIVE			     NUMBER(1,0)	     default 0 not null,
     [exec]  15  	     FEATURED			     NUMBER(1,0)	     default 0 not null,
     [exec]  16  	     BOOKABLE			     NUMBER(1,0)	     default 0 not null,
     [exec]  17  	     IMAGE			     VARCHAR2(40)    NOT NULL,
     [exec]  18  	     BROWSE_URL 		     VARCHAR2(300)	     NULL,
     [exec]  19  	     DISPLAY_ORDER	     NUMBER(*,0)	     default 0,
     [exec]  20  	     RELEASE_DATE	     DATE,
     [exec]  21  	     AVAILABLE_COPIES	     NUMBER(*,0),
     [exec]  22  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_RESERVATION_CATALOGUE (
     [exec]   2  	     ASSET_VERSION	 NUMBER(19)		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID	     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID			     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD			     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED	     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE	     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION	     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE	     DATE		     NULL,
     [exec]  10  	     ID 				     VARCHAR2(40)    NOT NULL,
     [exec]  11  	     EMAIL			     VARCHAR2(255)	     NULL,
     [exec]  12  	     CIVILITE			     VARCHAR2(50)    NOT NULL,
     [exec]  13  	     PRENOM			     VARCHAR2(100)   NOT NULL,
     [exec]  14  	     NOM			     VARCHAR2(100)   NOT NULL,
     [exec]  15  	     ADRESSE			     VARCHAR2(100)   NOT NULL,
     [exec]  16  	     ADRESSE2			     VARCHAR2(100),
     [exec]  17  	     ADRESSE3			     VARCHAR2(100),
     [exec]  18  	     ADRESSE4			     VARCHAR2(100),
     [exec]  19  	     CPLTADRESSE	     VARCHAR2(100),
     [exec]  20  	     VILLE			     VARCHAR2(100)   NOT NULL,
     [exec]  21  	     CODEPOSTAL 		     VARCHAR2(10)    NOT NULL,
     [exec]  22  	     PAYS			     VARCHAR2(40)    NOT NULL,
     [exec]  23  	     DATENAISSANCE	     DATE,
     [exec]  24  	     DATERESERVATION	     DATE		     NOT NULL,
     [exec]  25  	     NOUVEAUCOMPTE	     NUMBER(*,0)     NULL,
     [exec]  26  	     OPTIN			     NUMBER(*,0)     NULL,
     [exec]  27  	     PHONE_NUMBER_1	     varchar2(15)    NOT NULL,
     [exec]  28  	     PHONE_NUMBER_2	     varchar2(15),
     [exec]  29  	     CATALOGUE_ID	     VARCHAR2(40)    NOT NULL,
     [exec]  30  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] CREATE TABLE CASTO_RESERVATION_CATALOGUE (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_INTEGRATION (
     [exec]   2  	     SKU_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   3  	     ASSET_VERSION					     NUMBER(19) 	     NOT NULL,
     [exec]   4  	     CYBERCOACH 							     NUMBER(1, 0)	     NULL,
     [exec]   5  	     RATIO								     NUMBER(8, 2)	     NULL,
     [exec]   6  	     BORNES								     NUMBER(1, 0)	     NULL,
     [exec]   7  	     KITCHEN_PLANNER						     NUMBER(1, 0)	     NULL,
     [exec]   8  	     PRIMARY KEY (SKU_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_SKU_INSTRUCTIONS (
     [exec]   2  	 ASSET_VERSION				 NUMBER(19)	     NOT NULL,
     [exec]   3  	 SKU_ID 				 VARCHAR2(40)	     NOT NULL,
     [exec]   4  	 MEDIA_ID				 VARCHAR2(40)	     NOT NULL,
     [exec]   5  	 INSTRUCTION_NAME			 VARCHAR2(100)	     NOT NULL,
     [exec]   6  	 PRIMARY KEY(ASSET_VERSION, SKU_ID, MEDIA_ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_GROUPED_ASSEMBLY_OPTIONS (
     [exec]   2  	 ASSET_VERSION				 NUMBER(19)   NOT NULL,
     [exec]   3  	 SEQUENCE_NUM				 INTEGER      NOT NULL,
     [exec]   4  	 GROUPED_PRODUCT_ID			 VARCHAR2(40) NOT NULL,
     [exec]   5  	 SKU_LINK_ID				 VARCHAR2(40) NOT NULL
     [exec]   6  ,constraint CAST_GROUPED_ASSEMBLY_OPT_p primary key (GROUPED_PRODUCT_ID,SKU_LINK_ID,ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD HTMLURL VARCHAR2(255) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_STYLE ADD LIST_VIEW NUMBER DEFAULT 0 NOT NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CAST_CATALOGUE_WSX ON CAST_CATALOGUE (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CAST_CATALOGUE_CIX ON CAST_CATALOGUE (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CAST_DOCUMENT_WSX ON CAST_DOCUMENT (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CAST_DOCUMENT_CIX ON CAST_DOCUMENT (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_GESTPROMO_ACTIONCO_WSX ON CASTO_GESTPROMO_ACTIONCO (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_GESTPROMO_ACTIONCO_CIX ON CASTO_GESTPROMO_ACTIONCO (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_LEGACY_URL_WSX ON CASTO_LEGACY_URL (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_LEGACY_URL_CIX ON CASTO_LEGACY_URL (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_STAGE_WSX ON CASTO_STAGE (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_STAGE_CIX ON CASTO_STAGE (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION MODIFY TITLE VARCHAR2 (200);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION MODIFY DESCRIPTION VARCHAR2 (500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD WRAPPAGE NUMBER(1,0) DEFAULT 0 NOT NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_GROUPED_PRODUCT ADD PROMOTEMPLATE VARCHAR2(100) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_SKU ADD ON_SALE_DISCOUNT_DISPLAY NUMBER(1,0) DEFAULT 0 NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY FLASH_PRODUIT VARCHAR2(255);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_DOCUMENT ADD PROMOTEMPLATE VARCHAR2(100)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD FLAG_IMAGE VARCHAR2(100)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD FLAG_TEXT	VARCHAR2(200)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD video_aux_url VARCHAR2(2000) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD video_full_size NUMBER(1, 0) DEFAULT 0;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> alter table CAST_CATEGORY modify info_text varchar2(1000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> alter table CAST_CATEGORY modify commerce_text varchar2(1000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU RENAME COLUMN URL_PAGE TO EAN;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_START_DATE DATE NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_END_DATE DATE NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> update CASTO_SKU set EAN = substr(EAN, 1, 13);
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY EAN VARCHAR2(13);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/install/oracle/cast_magasin_ver.sql
     [exec] SQL> CREATE TABLE CASTO_REGION_MESSAGES (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     MESSAGE_ID 						     VARCHAR2(40),
     [exec]   4  	     REGION_ID							     VARCHAR2(40),
     [exec]   5  	     SEQ							     INTEGER,
     [exec]   6  	     PRIMARY KEY (MESSAGE_ID, REGION_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MESSAGES (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     MESSAGE_ID 						     VARCHAR2(40),
     [exec]  11  	     MESSAGE_NOM						     VARCHAR2(50),
     [exec]  12  	     MESSAGE_TEXTE						     VARCHAR2(4000),
     [exec]  13  	     PRIMARY KEY (MESSAGE_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_DEPARTEMENT_OLD (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     ID 								     VARCHAR2(40)	      NOT NULL,
     [exec]   4  	     NUMERO								     VARCHAR2(40)	      NOT NULL,
     [exec]   5  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_DEPARTEMENT(
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID 								     VARCHAR2(40)	 NOT NULL,
     [exec]  11  	     NUMERO								     VARCHAR2(40)	 NOT NULL,
     [exec]  12  	     NOM								     VARCHAR2(100)	     NOT NULL,
     [exec]  13  	     REGION_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]  14  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ADRESSE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID 	    VARCHAR2(40)	     NOT NULL,
     [exec]  11  	     DEPARTEMENTID  VARCHAR2(40)		  NOT NULL,
     [exec]  12  	     VILLE	    VARCHAR2(128)	     NOT NULL,
     [exec]  13  	     CP 	    VARCHAR2(10),
     [exec]  14  	     RUE	    VARCHAR2(128),
     [exec]  15  	     TEL	    VARCHAR2(32),
     [exec]  16  	     FAX	    VARCHAR2(32),
     [exec]  17  	     COMMENTAIRE    VARCHAR2(500),
     [exec]  18  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ENTITE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID 							     VARCHAR2(40)		     NOT NULL,
     [exec]  11  	     ADRESSEID							     VARCHAR2(40)		     NOT NULL,
     [exec]  12  	     NOM							     VARCHAR2(64)		NOT NULL,
     [exec]  13  	     LOGIN_ADMIN						     VARCHAR2(64)		NOT NULL,
     [exec]  14  	     PASS_ADMIN 						     VARCHAR2(64)		NOT NULL,
     [exec]  15  	     EMAIL							     VARCHAR2(255),
     [exec]  16  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_COMMANDE_SERVICE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID_SERVICE 					     VARCHAR2(40)	      NOT NULL,
     [exec]  11  	     LIBELLE						     VARCHAR2(255)	 NOT NULL,
     [exec]  12  	     URL_BOUTON 					     VARCHAR2(255)	 NOT NULL,
     [exec]  13  	     SHIPPING_GROUP_NAME				     VARCHAR2(255)	 NOT NULL,
     [exec]  14  	     PRIMARY KEY (ID_SERVICE, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID 						     VARCHAR2(40)		NOT NULL,
     [exec]  11  	     ENTITE_ID						     VARCHAR2(40)		NOT NULL,
     [exec]  12  	     NOM						     VARCHAR2(64),
     [exec]  13  	     URL_IMG_PLAN					     VARCHAR2(128)	       DEFAULT 0		     NOT NULL,
     [exec]  14  	     URL_PDF_PLAN					     VARCHAR2(128)	       DEFAULT 0		     NOT NULL,
     [exec]  15  	     ACCES_ROUTE					     VARCHAR2(500),
     [exec]  16  	     ACCES_ROUTE2					     VARCHAR2(500),
     [exec]  17  	     ACCES_AUTOROUTE					     VARCHAR2(500),
     [exec]  18  	     ACCES_TRANSPORT_COMMUN				     VARCHAR2(500),
     [exec]  19  	     HORAIRES						     VARCHAR2(500),
     [exec]  20  	     NOM_SECONDAIRE					     VARCHAR2(64),
     [exec]  21  	     URL_IMG_PLAN_MASSE 				     VARCHAR2(128)	       DEFAULT 0		     NOT NULL,
     [exec]  22  	     URL_PDF_PLAN_MASSE 				     VARCHAR2(128)	       DEFAULT 0		     NOT NULL,
     [exec]  23  	     URL_PHOTO						     VARCHAR2(128)	       DEFAULT 0		     NOT NULL,
     [exec]  24  	     POSITION_TOP					     INTEGER		 DEFAULT 0		       NOT NULL,
     [exec]  25  	     POSITION_LEFT					     INTEGER		 DEFAULT 0		       NOT NULL,
     [exec]  26  	     KEYWORDS						     VARCHAR2(254),
     [exec]  27  	     DESCRIPTION					     VARCHAR2(254),
     [exec]  28  	     DELAI_PREPARATION					     NUMBER(14),
     [exec]  29  	     DELAI_LIVRAISON					     NUMBER(14),
     [exec]  30  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN_COMM_SERVICE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     ID_SERVICE 						     VARCHAR2(40)	      NOT NULL,
     [exec]   4  	     ID_MAGASIN 						     VARCHAR2(40)	      NOT NULL,
     [exec]   5  	     PRIMARY KEY (ID_SERVICE, ID_MAGASIN, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGAS_COUPLE_SERVICE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID_SERVICE 						     VARCHAR2(40)	      NOT NULL ,
     [exec]  11  	     ID_MAGASIN 						     VARCHAR2(40)	      NOT NULL,
     [exec]  12  	     ID_COUPLE							     VARCHAR2(40)	      NOT NULL,
     [exec]  13  	     PRIMARY KEY (ID_COUPLE, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_REGION (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID 							     VARCHAR2(40)	   NOT NULL,
     [exec]  11  	     NOM							     VARCHAR2(64)	     NOT NULL,
     [exec]  12  	     URL_IMG_REGION						     VARCHAR2(128),
     [exec]  13  	     ORDRE_AFFICHAGE						     VARCHAR2(10),
     [exec]  14  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SERVICE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID 								     VARCHAR2(40)	      NOT NULL,
     [exec]  11  	     NOM								     VARCHAR2(64)	     NOT NULL,
     [exec]  12  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN_SERVICE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     MAGASIN_ID 						     VARCHAR2(40)	      NOT NULL,
     [exec]   4  	     SEQ							     INTEGER		 NOT NULL,
     [exec]   5  	     SERVICE_ID 						     VARCHAR2(40)	      NOT NULL,
     [exec]   6  	     PRIMARY KEY (MAGASIN_ID, SERVICE_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OFFRE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID 							     VARCHAR2(40)	   NOT NULL,
     [exec]  11  	     REFERENCE							     VARCHAR2(16)	 NOT NULL,
     [exec]  12  	     TITRE							     VARCHAR2(128),
     [exec]  13  	     DATEMIN							     DATE,
     [exec]  14  	     DATEMAX							     DATE,
     [exec]  15  	     ACTIVATE							     NUMBER(1),
     [exec]  16  	     DESCRIPTION						     LONG,
     [exec]  17  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_ACTUALITE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID 								     VARCHAR2(40)	   NOT NULL,
     [exec]  11  	     TITRE								     VARCHAR2(128),
     [exec]  12  	     DATEMIN								     DATE,
     [exec]  13  	     DATEMAX								     DATE,
     [exec]  14  	     CONTENU								     VARCHAR2(1000),
     [exec]  15  	     ACTIVATE								     NUMBER(1),
     [exec]  16  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OPERATION_SPECIALE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID 							     VARCHAR2(40)			     NOT NULL,
     [exec]  11  	     TITRE_HP							     VARCHAR2(255)			     NOT NULL,
     [exec]  12  	     LIBELLE_LIEN						     VARCHAR2(255)			     NOT NULL,
     [exec]  13  	     TITRE							     VARCHAR2(255)			     NOT NULL,
     [exec]  14  	     INTRODUCTION						     VARCHAR2(2000)			     NOT NULL,
     [exec]  15  	     DATE_DEBUT 						     DATE			     NOT NULL,
     [exec]  16  	     DATE_FIN							     DATE			     NOT NULL,
     [exec]  17  	     ACTIVATE							     NUMBER			     DEFAULT 0			   NOT NULL,
     [exec]  18  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OPERATION_MAGASIN (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     ID 								     VARCHAR2(40)	       NOT NULL,
     [exec]   4  	     SEQ							     INTEGER		  NOT NULL,
     [exec]   5  	     MAGASIN_ID 						     VARCHAR2(40)	       NOT NULL,
     [exec]   6  	     PRIMARY KEY (ID, SEQ, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_IMAGE_AUX (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     IMAGE_AUX_ID						     VARCHAR2(40)	  NOT NULL,
     [exec]  11  	     MAGASIN_ID 						     VARCHAR2(40)	    NOT NULL,
     [exec]  12  	     SMALL_IMAGE_URL						     VARCHAR2(128)	 NOT NULL,
     [exec]  13  	     LARGE_IMAGE_URL						     VARCHAR2(128)	 NOT NULL,
     [exec]  14  	     PRIMARY KEY  (IMAGE_AUX_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OUVERTURE_EXCEP (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)			     NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)			     NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)			     NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 		     NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE		     NULL,
     [exec]  10  	     ID 							     VARCHAR2(40)	 NOT NULL,
     [exec]  11  	     MAGASIN_ID 						     VARCHAR2(40)	 NOT NULL,
     [exec]  12  	     LIBELLE							     VARCHAR2(100),
     [exec]  13  	     DATE_FIN_VALIDITE						     DATE		 NOT NULL,
     [exec]  14  	     PRIMARY KEY (ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_OFFRE_MAGASIN (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     OFFRE_ID							     VARCHAR2(40)	   NOT NULL,
     [exec]   4  	     SEQ							     INTEGER	      NOT NULL,
     [exec]   5  	     MAGASIN_ID 						     VARCHAR2(40)	      NOT NULL,
     [exec]   6  	     PRIMARY KEY (OFFRE_ID, MAGASIN_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASINS_ACTU (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     MAGASIN_ID 						     VARCHAR2(40)	 NOT NULL,
     [exec]   4  	     SEQ							     INTEGER		     NOT NULL,
     [exec]   5  	     ACTU_ID							     VARCHAR2(40)	 NOT NULL,
     [exec]   6  	     PRIMARY KEY (MAGASIN_ID, ACTU_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN_IMAGE_AUX (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     MAGASIN_ID 						     VARCHAR2(40)	      NOT NULL,
     [exec]   4  	     SEQ							     INTEGER		 NOT NULL,
     [exec]   5  	     IMAGE_AUX_ID						     VARCHAR2(40)	      NOT NULL,
     [exec]   6  	     PRIMARY KEY (MAGASIN_ID, IMAGE_AUX_ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN_OUVERTURE_EXCEP (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     MAGASIN_ID 						     VARCHAR2(40)	      NOT NULL,
     [exec]   4  	     SEQ							     INTEGER		 NOT NULL,
     [exec]   5  	     ID 							     VARCHAR2(40)	   NOT NULL,
     [exec]   6  	     PRIMARY KEY  (MAGASIN_ID, ID, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_MAGASIN_PROCHE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     MAGASIN_REF						     VARCHAR2(40)	      NOT NULL,
     [exec]   4  	     SEQ							     INTEGER		 NOT NULL,
     [exec]   5  	     MAGASIN_PROCHE						     VARCHAR2(40)	      NOT NULL,
     [exec]   6  	     PRIMARY KEY  (MAGASIN_REF, MAGASIN_PROCHE, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_IMAGE_AUX_WSX ON CASTO_IMAGE_AUX (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_IMAGE_AUX_CIX ON CASTO_IMAGE_AUX (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_DEPARTEMENT_WSX ON CASTO_DEPARTEMENT (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_DEPARTEMENT_CIX ON CASTO_DEPARTEMENT (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_ENTITE_WSX ON CASTO_ENTITE (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_ENTITE_CIX ON CASTO_ENTITE (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_ACTUALITE_WSX ON CASTO_ACTUALITE (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_ACTUALITE_CIX ON CASTO_ACTUALITE (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_ADRESSE_WSX ON CASTO_ADRESSE (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_ADRESSE_CIX ON CASTO_ADRESSE (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_COMMANDE_SERVICE_WSX ON CASTO_COMMANDE_SERVICE (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_COMMANDE_SERVICE_CIX ON CASTO_COMMANDE_SERVICE (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_MAGAS_COUPLE_SERVICE_WSX ON CASTO_MAGAS_COUPLE_SERVICE (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_MAGAS_COUPLE_SERVICE_CIX ON CASTO_MAGAS_COUPLE_SERVICE (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_MAGASIN_WSX ON CASTO_MAGASIN (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_MAGASIN_CIX ON CASTO_MAGASIN (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_MESSAGES_WSX ON CASTO_MESSAGES (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_MESSAGES_CIX ON CASTO_MESSAGES (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_OFFRE_WSX ON CASTO_OFFRE (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_OFFRE_CIX ON CASTO_OFFRE (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_OPERATION_SPECIALE_WSX ON CASTO_OPERATION_SPECIALE (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_OPERATION_SPECIALE_CIX ON CASTO_OPERATION_SPECIALE (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_OUVERTURE_EXCEP_WSX ON CASTO_OUVERTURE_EXCEP (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_OUVERTURE_EXCEP_CIX ON CASTO_OUVERTURE_EXCEP (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_REGION_WSX ON CASTO_REGION (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_REGION_CIX ON CASTO_REGION (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX CASTO_SERVICE_WSX ON CASTO_SERVICE (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX CASTO_SERVICE_CIX ON CASTO_SERVICE (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_bo.sql
     [exec] SQL>   CREATE TABLE "SCD_CONTACT"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0),
     [exec]   4  	     "CCONTACT" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   5  	     "CCLIENT" NUMBER(10,0),
     [exec]   6  	     "CVENTE" NUMBER(12,0),
     [exec]   7  	     "CUTILISATEUR" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   8  	     "DCONTACT" DATE NOT NULL ENABLE,
     [exec]   9  	     "TGESTION" NUMBER(1,0),
     [exec]  10  	     "CTRANSPORTEUR" NUMBER(8,0),
     [exec]  11  	     "CTYPE_LIVREUR_C007" NUMBER(4,0),
     [exec]  12  	     "NRELANCE" NUMBER(6,0),
     [exec]  13  	     "CRECLAMATION" NUMBER(8,0),
     [exec]  14  	     "CQUESTION" NUMBER(8,0),
     [exec]  15  	     "DCREATION" DATE NOT NULL ENABLE,
     [exec]  16  	     "DMODIFICATION" DATE,
     [exec]  17  	     "TMODIFICATION" NUMBER(1,0) NOT NULL ENABLE,
     [exec]  18  	     "DTRANSFERT" DATE,
     [exec]  19  	     "DFIN_CONTACT" DATE,
     [exec]  20  	     "CETAB_ORIGINE_CONTACT" NUMBER(4,0),
     [exec]  21  	     "CCATEGORIE_1" NUMBER(4,0),
     [exec]  22  	     "CCATEGORIE_2" NUMBER(4,0),
     [exec]  23  	     "CCATEGORIE_3" NUMBER(4,0),
     [exec]  24  	     "CMOTIF_CONTACT_C618" NUMBER(4,0),
     [exec]  25  	     "CSENS_CONTACT_C659" NUMBER(4,0),
     [exec]  26  	     "CONTACT_ID" VARCHAR2(40 BYTE),
     [exec]  27  	     "LCONTACT" VARCHAR2(2000 BYTE),
     [exec]  28  	     "LCOMMENTAIRE_INTERNE" VARCHAR2(1000 BYTE),
     [exec]  29  	     "DLECTURE_CLIENT" DATE,
     [exec]  30  	     "DLECTURE_CASTO" DATE,
     [exec]  31  	     "DRELANCE_SI_NON_LU" DATE,
     [exec]  32  	     "DRELANCE_EFFECTIVE" DATE,
     [exec]  33  	     "FRELANCE_AUTO" NUMBER(1,0),
     [exec]  34  	     "FREPONSE_CLIENT_ATTENDUE" NUMBER(1,0),
     [exec]  35  	     "CMOTIF_ECHEC_C664" NUMBER(4,0),
     [exec]  36  	     "FREPONSE_IMMEDIATE" NUMBER(1,0),
     [exec]  37  	     "DCLOTURE" DATE,
     [exec]  38  	     "CUTILISATEUR_LECTURE" VARCHAR2(40 BYTE),
     [exec]  39  	     "CUTILISATEUR_CLOTURE" VARCHAR2(40 BYTE),
     [exec]  40  	     "CTYPE_CONTACT_C632" NUMBER(4,0) NOT NULL ENABLE,
     [exec]  41  	     "CSUPPORT_CONTACT_C633" NUMBER(4,0),
     [exec]  42  	     "CINITIATEUR_C619" NUMBER(4,0),
     [exec]  43  	      CONSTRAINT "PK_SCD_CONTACT" PRIMARY KEY ("CCONTACT")
     [exec]  44  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_FACTURE_AVOIR"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CFACTURE_AVOIR" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   5  	     "LNOM_FACTURE" VARCHAR2(80 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "NCOMMANDE_CLIENT" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   7  	     "CCLIENT" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   8  	     "CENLEVEMENT" NUMBER(8,0),
     [exec]   9  	     "LADRESSE_1_FACTURE" VARCHAR2(48 BYTE),
     [exec]  10  	     "LADRESSE_2_FACTURE" VARCHAR2(48 BYTE),
     [exec]  11  	     "LADRESSE_3_FACTURE" VARCHAR2(48 BYTE),
     [exec]  12  	     "CODE_POSTAL_FACTURE" NUMBER(10,0) NOT NULL ENABLE,
     [exec]  13  	     "LVILLE_FACTURE" VARCHAR2(48 BYTE) NOT NULL ENABLE,
     [exec]  14  	     "CPAYS_FACTURE" NUMBER(3,0) NOT NULL ENABLE,
     [exec]  15  	     "DFACTURE_AVOIR" DATE NOT NULL ENABLE,
     [exec]  16  	     "DREPRISE_AVOIR" DATE,
     [exec]  17  	     "DAVOIR_EMIS_JDV" DATE,
     [exec]  18  	     "DAVOIR_REPRIS_JDV" DATE,
     [exec]  19  	     "LNOM_LIVRAISON" VARCHAR2(80 BYTE),
     [exec]  20  	     "LADRESSE_1_LIVRAISON" VARCHAR2(48 BYTE),
     [exec]  21  	     "LADRESSE_2_LIVRAISON" VARCHAR2(48 BYTE),
     [exec]  22  	     "LADRESSE_3_LIVRAISON" VARCHAR2(48 BYTE),
     [exec]  23  	     "CODE_POSTAL_LIVRAISON" NUMBER(5,0),
     [exec]  24  	     "LVILLE_LIVRAISON" VARCHAR2(48 BYTE),
     [exec]  25  	     "CPAYS_LIVRAISON" NUMBER(3,0),
     [exec]  26  	     "CDEVISE" NUMBER(5,0) NOT NULL ENABLE,
     [exec]  27  	     "MTOTAL_HT" NUMBER(12,2),
     [exec]  28  	     "MTOTAL_TTC" NUMBER(12,2),
     [exec]  29  	     "MTOTAL_TVA" NUMBER(12,2),
     [exec]  30  	     "LMENTION_OBLIGATOIRE" VARCHAR2(400 BYTE) NOT NULL ENABLE,
     [exec]  31  	     "LCODE_CHEQUE" VARCHAR2(20 BYTE),
     [exec]  32  	     "LCOMMENTAIRE" VARCHAR2(400 BYTE),
     [exec]  33  	     "FLIVRAISON_DIRECTE_FOURNISSEUR" NUMBER(1,0),
     [exec]  34  	     "FCADEAU" NUMBER(1,0),
     [exec]  35  	     "LCOMMENTAIRE_CADEAU" VARCHAR2(400 BYTE),
     [exec]  36  	     "FEMAIL_ENVOYE" NUMBER(1,0),
     [exec]  37  	     "DCREATION" DATE NOT NULL ENABLE,
     [exec]  38  	     "DMODIFICATION" DATE,
     [exec]  39  	     "TMODIFICATION" NUMBER(1,0) NOT NULL ENABLE,
     [exec]  40  	     "DTRANSFERT" DATE,
     [exec]  41  	     "M_REMISE" NUMBER(18,2),
     [exec]  42  	     "TCLIENT_FACTURE_C003" NUMBER(4,0),
     [exec]  43  	     "TFACTURE_AVOIR_C600" NUMBER(8,0),
     [exec]  44  	     "TMODE_REGLEMENT_C601" NUMBER(5,0) NOT NULL ENABLE,
     [exec]  45  	      CONSTRAINT "PK_SCD_FACTURE_AVOIR" PRIMARY KEY ("CFACTURE_AVOIR")
     [exec]  46  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_FACTURE_AVOIR_LIGNE"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CFACTURE_AVOIR" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   5  	     "CLIGNE" NUMBER(6,0) NOT NULL ENABLE,
     [exec]   6  	     "CARTICLE" NUMBER(10,0),
     [exec]   7  	     "LARTICLE" VARCHAR2(80 BYTE),
     [exec]   8  	     "TARTICLE" NUMBER(1,0),
     [exec]   9  	     "QUNITE_VENTE" NUMBER(8,2),
     [exec]  10  	     "MPV_HT" NUMBER(8,2),
     [exec]  11  	     "MPV_TTC" NUMBER(12,2),
     [exec]  12  	     "MTAUX_TVA" NUMBER(5,2),
     [exec]  13  	     "MTOTAL_TVA" NUMBER(8,2),
     [exec]  14  	     "MPV_TOTAL_TTC" NUMBER(12,2),
     [exec]  15  	     "DCREATION" DATE NOT NULL ENABLE,
     [exec]  16  	     "DMODIFICATION" DATE,
     [exec]  17  	     "TMODIFICATION" NUMBER(1,0) NOT NULL ENABLE,
     [exec]  18  	     "DTRANSFERT" DATE,
     [exec]  19  	     "MPV_HT_NET" NUMBER(8,2),
     [exec]  20  	     "MPV_TTC_NET" NUMBER(12,2),
     [exec]  21  	     "MTOTAL_TVA_NET" NUMBER(8,2),
     [exec]  22  	     "M_REMISE" NUMBER(18,2),
     [exec]  23  	     "TREMISE_C102" NUMBER(4,0),
     [exec]  24  	     "CLIGNE_FACTURE_ID" NUMBER(12,0),
     [exec]  25  	     "TFACTURE_AVOIR_C600" NUMBER(8,0),
     [exec]  26  	      CONSTRAINT "PK_SCD_FACTURE_AVOIR_LIGNE" PRIMARY KEY ("CLIGNE_FACTURE_ID")
     [exec]  27  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_RECLAMATION"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0),
     [exec]   4  	     "CRECLAMATION" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   5  	     "CTYPE_RECLAMATION_C62X" NUMBER(4,0),
     [exec]   6  	     "CORIGINE_RECLAMATION" NUMBER(3,0),
     [exec]   7  	     "DRECLAMATION" DATE NOT NULL ENABLE,
     [exec]   8  	     "CCONTACT" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   9  	     "CUTILISATEUR_CREATION" VARCHAR2(40 BYTE),
     [exec]  10  	     "CMOTIF_RECLAMATION_C618" NUMBER(4,0) NOT NULL ENABLE,
     [exec]  11  	     "DCLOTURE" DATE,
     [exec]  12  	     "CUTILISATEUR_CLOTURE" VARCHAR2(40 BYTE),
     [exec]  13  	     "MGESTE_COMMERCIAL" NUMBER(12,2),
     [exec]  14  	     "LCOUPON" VARCHAR2(40 BYTE),
     [exec]  15  	     "DCOUPON" DATE,
     [exec]  16  	     "FPREVISION_RETOUR" NUMBER(1,0),
     [exec]  17  	     "LRECLAMATION" VARCHAR2(2000 BYTE),
     [exec]  18  	     "DCREATION" DATE NOT NULL ENABLE,
     [exec]  19  	     "DMODIFICATION" DATE,
     [exec]  20  	     "TMODIFICATION" NUMBER(1,0) NOT NULL ENABLE,
     [exec]  21  	     "DTRANSFERT" DATE,
     [exec]  22  	     "CUTILISATEUR_RESPONSABLE" VARCHAR2(40 BYTE),
     [exec]  23  	     "DSUIVI_RECLAMATION" DATE,
     [exec]  24  	     "TYPE_CLOTURE_AUTO_C661" NUMBER(4,0),
     [exec]  25  	     "TETAT_RECLAMATION_C660" NUMBER(4,0),
     [exec]  26  	     "FCLOTURE_SI_EXPEDITION" NUMBER(1,0),
     [exec]  27  	     "TCOLIS_RECUS_C662" NUMBER(4,0),
     [exec]  28  	     "NB_COLIS_RECUS" NUMBER(6,0),
     [exec]  29  	     "TGESTE_COMMERCIAL_C665" NUMBER(4,0),
     [exec]  30  	     "LRESERVE_CLIENT_EMISES" VARCHAR2(400 BYTE),
     [exec]  31  	     "FCLOTURE_SI_VALIDATION" NUMBER(1,0),
     [exec]  32  	     "TEMBALLAGES_RECUS_C663" NUMBER(4,0),
     [exec]  33  	     "DVALIDITE_COUPON" DATE,
     [exec]  34  	     "TCOUPON_C666" NUMBER(4,0),
     [exec]  35  	     "DPRISE_EN_CHARGE" DATE,
     [exec]  36  	     "CVENTE" NUMBER(12,0),
     [exec]  37  	      CONSTRAINT "PK_SCD_RECLAMATION" PRIMARY KEY ("CRECLAMATION")
     [exec]  38  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_REMBOURSEMENT"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CREMBOURSEMENT" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   5  	     "CCLIENT" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   6  	     "CVENTE" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   7  	     "CRECLAMATION" NUMBER(8,0),
     [exec]   8  	     "CRETOUR" NUMBER(8,0),
     [exec]   9  	     "DDEMANDE_REMBOURSEMENT" DATE,
     [exec]  10  	     "M_REMBOURSEMENT_DEMANDE" NUMBER(12,2),
     [exec]  11  	     "DREMBOURSEMENT" DATE,
     [exec]  12  	     "M_REMBOURSEMENT_EFFECTIF" NUMBER(12,2),
     [exec]  13  	     "CMOTIF_REMBOURSEMENT_C635" NUMBER(4,0),
     [exec]  14  	     "CFACTURE_AVOIR" NUMBER(12,0),
     [exec]  15  	     "CUTILISATEUR" VARCHAR2(40 BYTE),
     [exec]  16  	     "CMODE_REMBOURSEMENT_C636" NUMBER(4,0),
     [exec]  17  	     "LCHEQUE" VARCHAR2(40 BYTE),
     [exec]  18  	     "LREMBOURSEMENT" VARCHAR2(200 BYTE),
     [exec]  19  	     "CUTILISATEUR_REMBOURSEMENT" VARCHAR2(40 BYTE),
     [exec]  20  	     "DINTEGRATION_JDV" DATE,
     [exec]  21  	     "DCREATION" DATE,
     [exec]  22  	     "DMODIFICATION" DATE,
     [exec]  23  	     "DTRANSFERT" DATE,
     [exec]  24  	     "TMODIFICATION" NUMBER(1,0),
     [exec]  25  	     "TFACTURE_AVOIR_C600" NUMBER(8,0),
     [exec]  26  	      CONSTRAINT "PK_SCD_REMBOURSEMENT" PRIMARY KEY ("CREMBOURSEMENT")
     [exec]  27  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_REMBOURSEMENT_LIGNE"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CREMBOURSEMENT" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   5  	     "NLIGNE" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   6  	     "NLIGNE_RETOUR" NUMBER(8,0),
     [exec]   7  	     "CVENTE" NUMBER(12,0),
     [exec]   8  	     "CVENTE_LIGNE" NUMBER(8,0),
     [exec]   9  	     "CESCLAVE" NUMBER(8,0) NOT NULL ENABLE,
     [exec]  10  	     "QTE_A_REMBOURSER" NUMBER(13,2) NOT NULL ENABLE,
     [exec]  11  	     "MPV_A_REMBOURSER" NUMBER(13,2),
     [exec]  12  	     "PFT_A_REMBOURSER" NUMBER(13,2),
     [exec]  13  	     "PFL_A_REMBOURSER" NUMBER(13,2),
     [exec]  14  	     "CMOTIF_REMBOURSEMENT_C656" NUMBER(4,0),
     [exec]  15  	     "CUTILISATEUR" VARCHAR2(20 BYTE),
     [exec]  16  	     "DCREATION" DATE,
     [exec]  17  	     "DMODIFICATION" DATE,
     [exec]  18  	     "TMODIFICATION" NUMBER(1,0),
     [exec]  19  	     "DTRANSFERT" DATE,
     [exec]  20  	      CONSTRAINT "PK_SCD_REMBOURSEMENT_LIGNE" PRIMARY KEY ("NLIGNE")
     [exec]  21  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_RETOUR"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CRETOUR" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   5  	     "CRECLAMATION" NUMBER(8,0),
     [exec]   6  	     "CCLIENT" NUMBER(12,0),
     [exec]   7  	     "CVENTE" NUMBER(12,0),
     [exec]   8  	     "M_AREMBOURSER" NUMBER(12,2),
     [exec]   9  	     "M_PFE_A_REMBOURSER" NUMBER(12,2),
     [exec]  10  	     "FENLEVEMENT_A_ORGANISER" NUMBER(1,0),
     [exec]  11  	     "DMANDAT_AU_TRANSPORTEUR" DATE,
     [exec]  12  	     "TGESTION" NUMBER(1,0),
     [exec]  13  	     "CTRANSPORTEUR_MANDATE" NUMBER(8,0),
     [exec]  14  	     "CTYPE_LIVREUR_C007" NUMBER(4,0),
     [exec]  15  	     "LNOM_PERSONNE_AYANT_MANDATE" VARCHAR2(40 BYTE),
     [exec]  16  	     "FCOLISSIMO_A_ENVOYER" NUMBER(1,0),
     [exec]  17  	     "NCOLISSIMO_ENVOYE" VARCHAR2(20 BYTE),
     [exec]  18  	     "LCOMMENTAIRE" VARCHAR2(200 BYTE),
     [exec]  19  	     "LCOMMENTAIRE_AU_TRANSPORTEUR" VARCHAR2(200 BYTE),
     [exec]  20  	     "LCOLISAGE" VARCHAR2(200 BYTE),
     [exec]  21  	     "DRETRAIT_SOUHAITEE" DATE,
     [exec]  22  	     "MMASSE_ESTIMEE" NUMBER(12,2),
     [exec]  23  	     "DRETOUR_MARCHANDISE" DATE,
     [exec]  24  	     "DVALIDATION_RETOUR" DATE,
     [exec]  25  	     "DREFUS_RETOUR" DATE,
     [exec]  26  	     "DENVOI_MAIL_PREV_RETOUR" DATE,
     [exec]  27  	     "DCREATION" DATE NOT NULL ENABLE,
     [exec]  28  	     "DMODIFICATION" DATE,
     [exec]  29  	     "TMODIFICATION" NUMBER(1,0) NOT NULL ENABLE,
     [exec]  30  	     "DTRANSFERT" DATE,
     [exec]  31  	     "NRELIVRAISON_CREEE" NUMBER(8,0),
     [exec]  32  	     "CFACTURE_AVOIR" NUMBER(12,0),
     [exec]  33  	     "FANTICIPE_ACTION" NUMBER(1,0),
     [exec]  34  	     "TFACTURE_AVOIR_C600" NUMBER(8,0),
     [exec]  35  	      CONSTRAINT "PK_SCD_RETOUR" PRIMARY KEY ("CRETOUR")
     [exec]  36  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_RETOUR_LIGNE"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CRETOUR" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   5  	     "NLIGNE" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   6  	     "CESCLAVE" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   7  	     "PRMP" NUMBER(12,3) NOT NULL ENABLE,
     [exec]   8  	     "M_PFE_LIGNE" NUMBER(12,2),
     [exec]   9  	     "QPREVUE_RETOUR" NUMBER(12,2),
     [exec]  10  	     "QARELIVRER" NUMBER(12,2),
     [exec]  11  	     "QAREMBOURSER" NUMBER(12,2),
     [exec]  12  	     "QRETOUR" NUMBER(12,2),
     [exec]  13  	     "QAREINTEGRER_EN_STOCK" NUMBER(12,2),
     [exec]  14  	     "CCONFORMITE_C637" NUMBER(4,0),
     [exec]  15  	     "QDEMARQUE" NUMBER(12,2),
     [exec]  16  	     "QLIVREE" NUMBER(12,2),
     [exec]  17  	     "LCOMMENTAIRE_CRM" VARCHAR2(400 BYTE),
     [exec]  18  	     "LCOMMENTAIRE_LOG" VARCHAR2(400 BYTE),
     [exec]  19  	     "NORDRE_MVT" NUMBER(10,0),
     [exec]  20  	     "DCREATION" DATE NOT NULL ENABLE,
     [exec]  21  	     "DMODIFICATION" DATE,
     [exec]  22  	     "TMODIFICATION" NUMBER(1,0) NOT NULL ENABLE,
     [exec]  23  	     "DTRANSFERT" DATE,
     [exec]  24  	     "QSAV" NUMBER(12,2),
     [exec]  25  	     "QSANS_RETOUR" NUMBER(12,2),
     [exec]  26  	     "FPFL_A_REMBOURSER" NUMBER(1,0),
     [exec]  27  	     "FPFT_A_REMBOURSER" NUMBER(1,0),
     [exec]  28  	     "QLITIGE_TRANSPORT" NUMBER(12,2),
     [exec]  29  	     "CLIGNE_RETOUR_ID" NUMBER(12,0),
     [exec]  30  	     "CMOTIF_RETOUR_DONNE_C640" NUMBER(8,0),
     [exec]  31  	     "CMOTIF_RETOUR_SUR_BON_C640" NUMBER(8,0),
     [exec]  32  	      CONSTRAINT "PK_SCD_RETOUR_LIGNE" PRIMARY KEY ("CLIGNE_RETOUR_ID")
     [exec]  33  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_VENTE_LIGNE"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CVENTE" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   5  	     "CVENTE_LIGNE" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   6  	     "CFACTURE_AVOIR" NUMBER(12,0),
     [exec]   7  	     "CLIGNE" NUMBER(6,0),
     [exec]   8  	     "CESCLAVE" NUMBER(8,0),
     [exec]   9  	     "QUNITE_VENTE" NUMBER(8,2),
     [exec]  10  	     "DELAI_EXPEDITION_ANNONCE" NUMBER(8,0),
     [exec]  11  	     "DPREMIERE_EXPEDITION_REELLE" DATE,
     [exec]  12  	     "NLIGNE_INITIALE" NUMBER(8,0),
     [exec]  13  	     "PV_INITIAL" NUMBER(13,2),
     [exec]  14  	     "MMASSE" NUMBER(13,0),
     [exec]  15  	     "MMASSE_PFL" NUMBER(13,2),
     [exec]  16  	     "MMASSE_PFT" NUMBER(13,2),
     [exec]  17  	     "PFL_INITIALE" NUMBER(13,2),
     [exec]  18  	     "FEXONERATION_PFT" NUMBER(1,0),
     [exec]  19  	     "FEXONERATION_PFL" NUMBER(1,0),
     [exec]  20  	     "PFT_INITIALE" NUMBER(13,2),
     [exec]  21  	     "PFL_A_PAYER" NUMBER(13,2),
     [exec]  22  	     "PFT_A_PAYER" NUMBER(13,2),
     [exec]  23  	     "DCREATION" DATE,
     [exec]  24  	     "DMODIFICATION" DATE,
     [exec]  25  	     "TMODIFICATION" NUMBER(1,0),
     [exec]  26  	     "DTRANSFERT" DATE,
     [exec]  27  	     "CETAT_APPRO_C667" NUMBER(4,0),
     [exec]  28  	     "CMOTIF_LIGNE_C652" NUMBER(6,0),
     [exec]  29  	     "TFACTURE_AVOIR_C400" NUMBER(8,0),
     [exec]  30  	      CONSTRAINT "PK_SCD_VENTE_LIGNE" PRIMARY KEY ("CVENTE_LIGNE")
     [exec]  31  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SCD_VENTE_WEB"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0),
     [exec]   4  	     "NCOMMANDE_CLIENT" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "CCLIENT_WEB" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "CVENTE" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   7  	     "CADRESSE_FACTURE" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   8  	     "CCLIENT_LIVRAISON" NUMBER(12,0),
     [exec]   9  	     "CADRESSE_LIVRAISON" NUMBER(8,0),
     [exec]  10  	     "CMODE_PAIEMENT_C607" NUMBER(4,0) NOT NULL ENABLE,
     [exec]  11  	     "CMODE_LIVRAISON_C609" NUMBER(4,0) NOT NULL ENABLE,
     [exec]  12  	     "CTRANSACTION_BANCAIRE" VARCHAR2(20 BYTE),
     [exec]  13  	     "DLIMITE_AUTORISATION" DATE,
     [exec]  14  	     "TETAT_COMMANDE_C602" NUMBER(4,0) NOT NULL ENABLE,
     [exec]  15  	     "DENVOI" DATE,
     [exec]  16  	     "DEXPEDITION" DATE,
     [exec]  17  	     "DENVOI_JDV" DATE,
     [exec]  18  	     "DPAIEMENT" DATE,
     [exec]  19  	     "DSUPPRESSION" DATE,
     [exec]  20  	     "CDEVISE" NUMBER(5,0) NOT NULL ENABLE,
     [exec]  21  	     "MTOTAL_HT" NUMBER(18,2) NOT NULL ENABLE,
     [exec]  22  	     "MTOTAL_TVA" NUMBER(18,2) NOT NULL ENABLE,
     [exec]  23  	     "MTOTAL_TTC" NUMBER(18,2) NOT NULL ENABLE,
     [exec]  24  	     "FCADEAU" NUMBER(1,0) NOT NULL ENABLE,
     [exec]  25  	     "CUTILISATEUR" VARCHAR2(50 BYTE),
     [exec]  26  	     "NB_LIGNES_HORS_NORME" NUMBER(6,0) NOT NULL ENABLE,
     [exec]  27  	     "NB_LIGNES_LDF" NUMBER(6,0) NOT NULL ENABLE,
     [exec]  28  	     "TCONTROLE_EMAIL_C611" NUMBER(4,0),
     [exec]  29  	     "LCOMMENTAIRE_CADEAU" VARCHAR2(400 BYTE),
     [exec]  30  	     "LCOMMENTAIRE" VARCHAR2(400 BYTE),
     [exec]  31  	     "DCREATION" DATE NOT NULL ENABLE,
     [exec]  32  	     "DMODIFICATION" DATE,
     [exec]  33  	     "TMODIFICATION" NUMBER,
     [exec]  34  	     "DTRANSFERT" DATE,
     [exec]  35  	     "DENVOI_LDF" DATE,
     [exec]  36  	     "CTEL_LIVRAISON" NUMBER(8,0),
     [exec]  37  	     "M_TRANSACTION_BANCAIRE" NUMBER(13,2),
     [exec]  38  	     "LREFERENCE_BANCAIRE" VARCHAR2(20 BYTE),
     [exec]  39  	     "LCERTIFICAT_BANCAIRE" VARCHAR2(20 BYTE),
     [exec]  40  	     "DTRANSACTION_BANCAIRE" DATE,
     [exec]  41  	     "LCODE_CHEQUE" VARCHAR2(50 BYTE),
     [exec]  42  	     "LBANQUE_CHEQUE" VARCHAR2(30 BYTE),
     [exec]  43  	     "M_VALEUR_CHEQUE" NUMBER(18,2),
     [exec]  44  	     "CCARTE_ATOUT" NUMBER(19,0),
     [exec]  45  	     "DFIN_VALIDITE_ATOUT" DATE,
     [exec]  46  	     "COPTION_PAIEMENT_ATOUT_C613" NUMBER(4,0),
     [exec]  47  	     "M_REMISE" NUMBER(18,2),
     [exec]  48  	     "LCOUPON" VARCHAR2(200 BYTE),
     [exec]  49  	     "LCOMMENTAIRE_TRANSPORT" VARCHAR2(200 BYTE),
     [exec]  50  	     "LNOM_TRANSPORTEUR" VARCHAR2(40 BYTE),
     [exec]  51  	     "LREFERENCE_TRANSPORTEUR" VARCHAR2(40 BYTE),
     [exec]  52  	     "CTRANSPORTEUR" VARCHAR2(20 BYTE),
     [exec]  53  	     "LBON_LIVRAISON" VARCHAR2(20 BYTE),
     [exec]  54  	     "MMASSE" NUMBER(8,0),
     [exec]  55  	     "LCOLIS" VARCHAR2(40 BYTE),
     [exec]  56  	     "DVALIDATION" DATE,
     [exec]  57  	     "TVENTE_C638" NUMBER(4,0),
     [exec]  58  	     "CVENTE_ORIGINE" NUMBER(12,0),
     [exec]  59  	     "CMOTIF_SUPPRESSION_C642" NUMBER(4,0),
     [exec]  60  	     "M_PAIEMENT_ATOUT" NUMBER(12,2),
     [exec]  61  	     "CVAGUE" NUMBER(8,0),
     [exec]  62  	     "CLIEU_EXPEDITION" NUMBER(4,0),
     [exec]  63  	     "DDEBUT_PREPARATION" DATE,
     [exec]  64  	     "DFIN_PREPARATION" DATE,
     [exec]  65  	     "CUTILISATEUR_PREPARATION" VARCHAR2(40 BYTE),
     [exec]  66  	     "DLIVRAISON_CALCULEE" DATE,
     [exec]  67  	     "DLIVRAISON_PREVUE" DATE,
     [exec]  68  	     "DCONTROLE" DATE,
     [exec]  69  	     "TVALIDATION_C643" NUMBER(4,0),
     [exec]  70  	     "DSUSPEND" DATE,
     [exec]  71  	     "CMOTIF_SUSPEND_C653" NUMBER(4,0),
     [exec]  72  	     "MREMISE_INITIALE" NUMBER(13,2),
     [exec]  73  	     "MPFE_PAYEE" NUMBER(13,2),
     [exec]  74  	     "MPFT_PAYEE" NUMBER(13,2),
     [exec]  75  	     "TOTAL_PFE" NUMBER(13,2),
     [exec]  76  	     "TOTAL_PFT" NUMBER(13,2),
     [exec]  77  	     "DEXPEDITION_DIFFEREE" DATE,
     [exec]  78  	     "CUTILISATEUR_SUSPEND" VARCHAR2(40 BYTE),
     [exec]  79  	     "CUTILISATEUR_SUPPRESSION" VARCHAR2(40 BYTE),
     [exec]  80  	     "CUTILISATEUR_VALIDATION" VARCHAR2(40 BYTE),
     [exec]  81  	     "CUTILISATEUR_EXPE_DIFFEREE" VARCHAR2(40 BYTE),
     [exec]  82  	     "CTRACEUR_WEB" VARCHAR2(32 BYTE),
     [exec]  83  	     "DTRANSFERT_FO" DATE,
     [exec]  84  	      CONSTRAINT "PK_SCD_VENTE_WEB" PRIMARY KEY ("CVENTE")
     [exec]  85  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "VTE_ENLEVEMENT"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CVENTE" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   5  	     "CENLEVEMENT" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   6  	     "CCLIENT" NUMBER(12,0),
     [exec]   7  	     "CUTILISATEUR" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   8  	     "DSORTIE_PREVU" DATE,
     [exec]   9  	     "DSORTIE_REEL" DATE,
     [exec]  10  	     "M_ACOMPTE_REPRIS_PREVU" NUMBER(10,2),
     [exec]  11  	     "M_ACOMPTE_REPRIS_REEL" NUMBER(10,2),
     [exec]  12  	     "LENLEVEMENT_COMP" VARCHAR2(255 BYTE),
     [exec]  13  	     "TENLEVEMENT_C105" NUMBER(4,0),
     [exec]  14  	     "TLIVRAISON_C006" NUMBER(4,0),
     [exec]  15  	     "FENLEVEMENT_PREPARE" NUMBER(1,0),
     [exec]  16  	     "NB_PALETTE" NUMBER(5,2),
     [exec]  17  	     "CADRESSE" NUMBER(8,0),
     [exec]  18  	     "CSECTEUR_LIVRAISON" NUMBER(8,0),
     [exec]  19  	     "CJOUR" NUMBER(1,0),
     [exec]  20  	     "CPLAGE" NUMBER(8,0),
     [exec]  21  	     "DMAJ" DATE,
     [exec]  22  	     "CST_DEPORTE" NUMBER(3,0),
     [exec]  23  	     "CRETOUR" NUMBER(8,0),
     [exec]  24  	     "DVALIDATION" DATE,
     [exec]  25  	     "CUTILISATEUR_VALIDATION" VARCHAR2(40 BYTE),
     [exec]  26  	     "CUTILISATEUR_CREATION" VARCHAR2(40 BYTE),
     [exec]  27  	     "MAX_DELAI_ANNONCE" NUMBER(8,0),
     [exec]  28  	     "DATE_LIMITE_ANNONCEE" DATE,
     [exec]  29  	     "DCONFIRMEE" DATE,
     [exec]  30  	     "CUTILISATEUR_CONFIRMATION" VARCHAR2(40 BYTE),
     [exec]  31  	     "CTYPE_OL_C650" NUMBER(4,0),
     [exec]  32  	     "CFOUR" NUMBER(5,0),
     [exec]  33  	     "DATE_ENVOI_PREPA" DATE,
     [exec]  34  	     "CETAT_OL_C651" NUMBER(4,0),
     [exec]  35  	     "ORIGINE_OL" NUMBER(6,0),
     [exec]  36  	     "ENLEVEMENT_D_ORIGINE" NUMBER(12,0),
     [exec]  37  	     "DDISPO_PREVU" DATE,
     [exec]  38  	     "NRATTACHEMENT_PRECOMMANDE" NUMBER(8,0),
     [exec]  39  	     "DATE_EXPEDITION_REELLE" DATE,
     [exec]  40  	     "TRANSPORTEUR" VARCHAR2(32 BYTE),
     [exec]  41  	     "NCOLIS_TRANSPORTEUR" VARCHAR2(40 BYTE),
     [exec]  42  	     "DENVOI_JDV" DATE,
     [exec]  43  	     "DSUSPEND" DATE,
     [exec]  44  	     "CMOTIF_SUSPEND" NUMBER(2,0),
     [exec]  45  	     "CUTILISATEUR_SUSPEND" VARCHAR2(40 BYTE),
     [exec]  46  	     "NBR_COLIS" NUMBER(6,0),
     [exec]  47  	     "LNOM_LIVRAISON" VARCHAR2(80 BYTE),
     [exec]  48  	     "LADRESSE_1_LIVRAISON" VARCHAR2(48 BYTE),
     [exec]  49  	     "LADRESSE_2_LIVRAISON" VARCHAR2(48 BYTE),
     [exec]  50  	     "LADRESSE_3_LIVRAISON" VARCHAR2(48 BYTE),
     [exec]  51  	     "CPAYS_LIVRAISON" NUMBER(2,0),
     [exec]  52  	     "CODE_POSTAL_LIVRAISON" NUMBER(5,0),
     [exec]  53  	     "DMODIFICATION" DATE,
     [exec]  54  	     "NTEL_LIVRAISON" VARCHAR2(16 BYTE),
     [exec]  55  	     "CEXPEDITION_C657" NUMBER(6,0),
     [exec]  56  	      CONSTRAINT "PK_VTE_ENLEVEMENT" PRIMARY KEY ("CENLEVEMENT")
     [exec]  57  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "VTE_VENTE"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CVENTE" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   5  	     "CCLIENT" NUMBER(12,0),
     [exec]   6  	     "CDEVIS" NUMBER(8,0),
     [exec]   7  	     "CUTILISATEUR" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   8  	     "DVENTE" DATE,
     [exec]   9  	     "LVENTE_COMP" VARCHAR2(255 BYTE),
     [exec]  10  	     "TSITUATION_C104" NUMBER(4,0),
     [exec]  11  	     "LSUSPENDU" VARCHAR2(48 BYTE),
     [exec]  12  	     "M_ACOMPTE_VERSE_PREVU" NUMBER(10,2),
     [exec]  13  	     "M_ACOMPTE_VERSE_REEL" NUMBER(10,2),
     [exec]  14  	     "DCLOTURE" DATE,
     [exec]  15  	     "DMAJ" DATE,
     [exec]  16  	     "FPOSE" NUMBER(1,0),
     [exec]  17  	     "MMASSE" NUMBER(12,0),
     [exec]  18  	      CONSTRAINT "PK_VTE_VENTE" PRIMARY KEY ("CVENTE")
     [exec]  19  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "VTE_VENTE_LIGNE"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CVENTE" NUMBER(12,0) NOT NULL ENABLE,
     [exec]   5  	     "CVENTE_LIGNE" NUMBER(8,0) NOT NULL ENABLE,
     [exec]   6  	     "CESCLAVE" NUMBER(6,0) NOT NULL ENABLE,
     [exec]   7  	     "CENLEVEMENT" NUMBER(8,0),
     [exec]   8  	     "CUTILISATEUR_CREATION" VARCHAR2(20 BYTE) NOT NULL ENABLE,
     [exec]   9  	     "CUTILISATEUR_MODIF" VARCHAR2(20 BYTE),
     [exec]  10  	     "QDIM1_SAISI" NUMBER(9,3),
     [exec]  11  	     "QDIM2_SAISI" NUMBER(9,3),
     [exec]  12  	     "QDIM3_SAISI" NUMBER(9,3),
     [exec]  13  	     "QTE_SAISI" NUMBER(9,3),
     [exec]  14  	     "STOCK_DISPO" NUMBER(8,2),
     [exec]  15  	     "M_PV_FICHIER" NUMBER(10,2),
     [exec]  16  	     "M_PV_SAISI" NUMBER(10,2),
     [exec]  17  	     "TREMISE_C102" NUMBER(4,0),
     [exec]  18  	     "M_REMISE" NUMBER(10,2),
     [exec]  19  	     "PREMISE" NUMBER(5,2),
     [exec]  20  	     "M_PRMP" NUMBER(10,2),
     [exec]  21  	     "LARTICLE_COMP" VARCHAR2(255 BYTE),
     [exec]  22  	     "DDISPO_PREVU" DATE,
     [exec]  23  	     "QTE_SORTIE_REEL" NUMBER(9,3),
     [exec]  24  	     "FCDE_FOUR" NUMBER(1,0),
     [exec]  25  	     "FCDE_SPEC" NUMBER(1,0),
     [exec]  26  	     "FBON_PREPA" NUMBER(1,0),
     [exec]  27  	     "TSITUATION_C104" NUMBER(4,0),
     [exec]  28  	     "DMAJ" DATE,
     [exec]  29  	     "CFOUR" NUMBER(5,0),
     [exec]  30  	     "LREFFOUR" VARCHAR2(18 BYTE),
     [exec]  31  	     "CTICKET" NUMBER(10,0),
     [exec]  32  	     "DJOURNEE_VENTE" DATE,
     [exec]  33  	     "CALVEOLE" NUMBER(4,0),
     [exec]  34  	     "QTE_ALVEOLE" NUMBER(9,3),
     [exec]  35  	     "DMVT_ALVEOLE" DATE,
     [exec]  36  	     "NB_COLIS" NUMBER(2,0),
     [exec]  37  	     "MMASSE" NUMBER(12,0),
     [exec]  38  	     "FHORS_NORMES_PFE" NUMBER(1,0),
     [exec]  39  	     "FEXONERATION_PFE" NUMBER(1,0),
     [exec]  40  	      CONSTRAINT "PK_VTE_VENTE_LIGNE" PRIMARY KEY ("CVENTE_LIGNE")
     [exec]  41  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "TYPE_LISTE_LANGUE"
     [exec]   2  	(
     [exec]   3  	     "CLISTE" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CLISTE_DETAIL" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   5  	     "CLANGUE" VARCHAR2(3 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "LLISTE_DETAIL" VARCHAR2(100 BYTE) NOT NULL ENABLE,
     [exec]   7  	     "DCREATION" DATE NOT NULL ENABLE,
     [exec]   8  	     "DMODIFICATION" DATE,
     [exec]   9  	     "TMODIFICATION" NUMBER(1,0) NOT NULL ENABLE,
     [exec]  10  	     "DTRANSFERT" DATE,
     [exec]  11  	     "CMNEMO_LISTE_DETAIL" VARCHAR2(3 BYTE),
     [exec]  12  	     "ID" NUMBER(8,0),
     [exec]  13  	      CONSTRAINT "PK_TYPE_LISTE_LANGUE" PRIMARY KEY ("ID")
     [exec]  14  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "RESERVATION_ARTICLE"
     [exec]   2  	(
     [exec]   3  	     "CETAB" NUMBER(4,0) NOT NULL ENABLE,
     [exec]   4  	     "CNATURE" NUMBER(3,0) NOT NULL ENABLE,
     [exec]   5  	     "CARTICLE" NUMBER(6,0) NOT NULL ENABLE,
     [exec]   6  	     "DMVTSTOCK" DATE NOT NULL ENABLE,
     [exec]   7  	     "QQTE" NUMBER(11,2) NOT NULL ENABLE,
     [exec]   8  	     "DFIN" DATE,
     [exec]   9  	     "PDEVALUATION" NUMBER(5,2),
     [exec]  10  	     "DMODIFICATION" DATE NOT NULL ENABLE,
     [exec]  11  	     "TMODIFICATION" NUMBER,
     [exec]  12  	     "DTRANSFERT_ODS" DATE,
     [exec]  13  	     "CORIGINE_RESERVATION_C610" NUMBER(4,0),
     [exec]  14  	     "CIDENTIFIANT1_RESERVATION" NUMBER(6,0),
     [exec]  15  	     "CIDENTIFIANT2_RESERVATION" NUMBER(6,0),
     [exec]  16  	      CONSTRAINT "RESERVATION_ARTICLE_PK" PRIMARY KEY ("CIDENTIFIANT2_RESERVATION")
     [exec]  17  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 	     ALTER TABLE "SCD_FACTURE_AVOIR_LIGNE"
     [exec]   2  		     MODIFY ("LARTICLE" VARCHAR2(90));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 	     ALTER TABLE "SCD_CONTACT"
     [exec]   2  		     ADD "EMAILED"  DATE;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "SCD_FACTURE_AVOIR" MODIFY (
     [exec]   2    "LADRESSE_1_FACTURE" VARCHAR2(80 BYTE),
     [exec]   3    "LADRESSE_2_FACTURE" VARCHAR2(80 BYTE),
     [exec]   4    "LADRESSE_3_FACTURE" VARCHAR2(80 BYTE),
     [exec]   5    "LADRESSE_1_LIVRAISON" VARCHAR2(80 BYTE),
     [exec]   6    "LADRESSE_2_LIVRAISON" VARCHAR2(80 BYTE),
     [exec]   7    "LADRESSE_3_LIVRAISON" VARCHAR2(80 BYTE)
     [exec]   8  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "VTE_ENLEVEMENT" MODIFY (
     [exec]   2    "LADRESSE_1_LIVRAISON" VARCHAR2(80 BYTE),
     [exec]   3    "LADRESSE_2_LIVRAISON" VARCHAR2(80 BYTE),
     [exec]   4    "LADRESSE_3_LIVRAISON" VARCHAR2(80 BYTE)
     [exec]   5  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "SCD_VENTE_WEB" MODIFY (
     [exec]   2    "LCOMMENTAIRE_TRANSPORT" VARCHAR2(240 BYTE),
     [exec]   3    "LBANQUE_CHEQUE" VARCHAR2(40 BYTE),
     [exec]   4    "LCOMMENTAIRE" VARCHAR2(480 BYTE)
     [exec]   5  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "SCD_RETOUR" MODIFY (
     [exec]   2    "LCOMMENTAIRE_AU_TRANSPORTEUR" VARCHAR2(240 BYTE),
     [exec]   3    "LCOMMENTAIRE" VARCHAR2(240 BYTE)
     [exec]   4  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "SCD_FACTURE_AVOIR_LIGNE" MODIFY (
     [exec]   2    "LARTICLE" VARCHAR2(100)
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "SCD_CONTACT" MODIFY (
     [exec]   2    "LCONTACT" VARCHAR2(2400)
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "SCD_VENTE_WEB" MODIFY (
     [exec]   2    "LCODE_CHEQUE" VARCHAR2(60)
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "SCD_REMBOURSEMENT" MODIFY (
     [exec]   2    "LREMBOURSEMENT" VARCHAR2(240)
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_order_message.sql
     [exec] SQL>   CREATE TABLE "THEME"
     [exec]   2  	(
     [exec]   3  	     "IDTHEME" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "LIBELLE" VARCHAR2(255 BYTE),
     [exec]   5  	      CONSTRAINT "PK_THEME" PRIMARY KEY ("IDTHEME")
     [exec]   6  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "SOUS_THEME"
     [exec]   2  	(
     [exec]   3  	     "IDSOUSTHEME" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "LIBELLESOUSTHEME" VARCHAR2(255 BYTE),
     [exec]   5  	     "IDTHEME" VARCHAR2(40 BYTE),
     [exec]   6  	      CONSTRAINT "PK_SOUS_THEME" PRIMARY KEY ("IDSOUSTHEME")
     [exec]   7  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CASTO_CONTACT"
     [exec]   2  	(
     [exec]   3  	     "IDCONTACT" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "IDORDER" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "NUMCONTACT" NUMBER(8,0),
     [exec]   6  	     "NUMDOSSIER" NUMBER(8,0),
     [exec]   7  	     "CONTENU" VARCHAR2(2000 BYTE) NOT NULL ENABLE,
     [exec]   8  	     "DATECONTACT" DATE NOT NULL ENABLE,
     [exec]   9  	     "DATELECTURECLIENT" DATE,
     [exec]  10  	     "DATEENVOYEBO" DATE,
     [exec]  11  	     "CMOTIF_C618" NUMBER(4,0) NOT NULL ENABLE,
     [exec]  12  	     "TYPECONTACT_C632" NUMBER(4,0) NOT NULL ENABLE,
     [exec]  13  	     "INITIATEURCONTACT_C659" NUMBER(4,0) NOT NULL ENABLE,
     [exec]  14  	      CONSTRAINT "PK_CASTO_CONTACT_FO" PRIMARY KEY ("IDCONTACT")
     [exec]  15  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "QUESTION_REPONSE"
     [exec]   2  	(
     [exec]   3  	     "LIBELLE_QUESTION" VARCHAR2(512 BYTE),
     [exec]   4  	     "LIBELLE_REPONSE" VARCHAR2(2048 BYTE),
     [exec]   5  	     "IDSOUSTHEME" VARCHAR2(40 BYTE),
     [exec]   6  	     "IDQR" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   7  	      CONSTRAINT "PK_QUESTION_REPONSE" PRIMARY KEY ("IDQR")
     [exec]   8  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CASTO_CONTACT_STATUS"
     [exec]   2  	(
     [exec]   3  	     "STATUS_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "IDCONTACT" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "IDORDER" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "NUMCONTACT" NUMBER(8,0),
     [exec]   7  	     "CVENTE" NUMBER(8,0),
     [exec]   8  	     "DATEREADED" DATE,
     [exec]   9  	     "DATEREPLIED" DATE,
     [exec]  10  	      CONSTRAINT "PK_CASTO_CONTACT_STATUS" PRIMARY KEY ("STATUS_ID")
     [exec]  11  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> -- Castorama iPhone
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/castIphone/Versioned/sql/install/oracle/cast_iphone_catalog_vers.sql
     [exec] SQL> CREATE TABLE CAST_IPHONE_CATALOG (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)   NOT NULL,
     [exec]   3  	     CATALOG_ID 			     VARCHAR2(40) NOT NULL,
     [exec]   4  	     CATEGORY_ID			     VARCHAR2(40) NULL,
     [exec]   5  	     PRIMARY KEY (CATALOG_ID,ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_IPHONE_SKU_IMAGES (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)   NOT NULL,
     [exec]   3  	 SKU_ID 				 VARCHAR2(40) NOT NULL,
     [exec]   4  	 AUG_TRANSP_IMAGE_ID			 VARCHAR2(40) NULL,
     [exec]   5  	 AUG_CAROUSEL_IMAGE_ID			 VARCHAR2(40) NULL,
     [exec]   6  	     PRIMARY KEY (SKU_ID,ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/castIphone/Versioned/sql/install/oracle/cast_iphone_catalog_retina_vers.sql
     [exec] SQL> ALTER TABLE CAST_IPHONE_SKU_IMAGES ADD (AUG_RETINA_IMAGE_ID VARCHAR2(40) NULL);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/castIphone/Versioned/sql/install/oracle/cast_iphone_R7_catalog_vers.sql
     [exec] SQL> CREATE TABLE IPH_CAT_DISPLAY_IMAGE (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)   NOT NULL,
     [exec]   3  	 CATEGORY_ID				 VARCHAR2(40) NOT NULL,
     [exec]   4  	 CAT_DISPLAY_IMAGE		     VARCHAR2(40) NULL,
     [exec]   5  	     PRIMARY KEY (CATEGORY_ID,ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE IPHONE_AUG_AUX_IMAGE(
     [exec]   2  	     ASSET_VERSION						     NUMBER(19) 	NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)   NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)   NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)		NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)		NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)		NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 	NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE	    NULL,
     [exec]  10  	     AUGM_AUX_ID						     VARCHAR2(40) NOT NULL,
     [exec]  11  	     DISPLAY_NAME						     VARCHAR2(100) NOT NULL,
     [exec]  12  	     AUG_CAR_IMAGE_ID						     VARCHAR2(40) NOT NULL,
     [exec]  13  	     AUG_TR_IMAGE_ID						     VARCHAR2(40) NOT NULL,
     [exec]  14  	     PRIMARY KEY (AUGM_AUX_ID,ASSET_VERSION)
     [exec]  15  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE IPHONE_VIDEO(
     [exec]   2  	     ASSET_VERSION						     NUMBER(19) 	NOT NULL,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40)   NOT NULL,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40)   NOT NULL,
     [exec]   5  	     IS_HEAD								     NUMBER(1)		NOT NULL,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1)		NOT NULL,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1)		NOT NULL,
     [exec]   8  	     PRED_VERSION						     NUMBER(19) 	NULL,
     [exec]   9  	     CHECKIN_DATE						     DATE	    NULL,
     [exec]  10  	     IPHONE_VIDEO_ID						     VARCHAR2(40) NOT NULL,
     [exec]  11  	     DISPLAY_NAME						     VARCHAR2(100) NOT NULL,
     [exec]  12  	     SHORT_URL								     VARCHAR2(100) NOT NULL,
     [exec]  13  	     LONG_URL								     VARCHAR2(250) NOT NULL,
     [exec]  14  	     PRIMARY KEY (IPHONE_VIDEO_ID,ASSET_VERSION)
     [exec]  15  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE IPHONE_SKU_AUG_IMAGES (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19)   NOT NULL,
     [exec]   3  	     SEQ_NUM							     INTEGER		 NOT NULL,
     [exec]   4  	     SKU_ID					     VARCHAR2(40)	 NOT NULL,
     [exec]   5  	     AUGM_AUX_ID				     VARCHAR2(40)	 NOT NULL,
     [exec]   6  	     PRIMARY KEY (SKU_ID,AUGM_AUX_ID,ASSET_VERSION)
     [exec]   7  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/castIphone/Versioned/sql/install/oracle/cast_iphone_store_vers.sql
     [exec] SQL> CREATE TABLE CAST_STORE_GEOLOCATION (
     [exec]   2  	 ASSET_VERSION			 NUMBER(19)		     NOT NULL,
     [exec]   3  	     ID 						     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     LONGITUDE					     NUMBER(12,7)	     NULL,
     [exec]   5  	     LATITUDE					     NUMBER(12,7)	     NULL,
     [exec]   6  	     CONSTRAINT CAST_STORE_GEOLOCATION_P PRIMARY KEY (ASSET_VERSION,ID));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> 
     [exec] SQL> --Order backup
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_order_backup.sql
     [exec] SQL> CREATE TABLE "CASTO_ORDER_BACKUP"
     [exec]   2  (
     [exec]   3  	     "ORDER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "LOGIN" VARCHAR2(60 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "NOM_CLIENT" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "PRENOM_CLIENT" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   7  	     "TEL_PORTABLE" VARCHAR2(40 BYTE),
     [exec]   8  	     "TEL_FIXE" VARCHAR2(40 BYTE),
     [exec]   9  	     "ADRESSE_LIBELLE_FACTU" VARCHAR2(500 BYTE),
     [exec]  10  	     "ADRESSE_LIBELLE_LIV" VARCHAR2(500 BYTE),
     [exec]  11  	     "DATE_COMMANDE" DATE NOT NULL ENABLE,
     [exec]  12  	     "TOTAL_ARTICLES" NUMBER(12,2) NOT NULL ENABLE,
     [exec]  13  	     "FRAIS_LIVRAISON" NUMBER(12,2) NOT NULL ENABLE,
     [exec]  14  	     "FRAIS_TRAITEMENT" NUMBER(12,2) NOT NULL ENABLE,
     [exec]  15  	     "TOTAL_COMMANDE" NUMBER(12,2) NOT NULL ENABLE,
     [exec]  16  	     "ORIGINE_MAGASIN" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]  17  	     "MOYEN_PAIEMENT" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]  18  	      PRIMARY KEY ("ORDER_ID")
     [exec]  19  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE "CASTO_CCE_ITEM_LISTE_BACKUP"
     [exec]   2  (
     [exec]   3  	     "ORDER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "COMMERCE_ITEM_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	      PRIMARY KEY ("ORDER_ID", "COMMERCE_ITEM_ID")
     [exec]   6  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE "CASTO_COMMERCE_ITEM_BACKUP"
     [exec]   2  (
     [exec]   3  	     "CDE_REF" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "COMMERCE_ITEM_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "CODE_ARTICLE" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "QUANTITE" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   7  	     "PRIX_UNITAIRE" NUMBER(12,2) NOT NULL ENABLE,
     [exec]   8  	      PRIMARY KEY ("COMMERCE_ITEM_ID", "CDE_REF")
     [exec]   9  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER_BACKUP MODIFY (
     [exec]   2  	 NOM_CLIENT	       varchar2(100),
     [exec]   3  	 PRENOM_CLIENT	   varchar2(100)
     [exec]   4  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> --Call center
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/install/oracle/cast_log_call_center.sql
     [exec] SQL>   CREATE TABLE "CASTO_LOG_CALL_CENTER"
     [exec]   2  	(
     [exec]   3  	     "ID_JOURNALISATION" VARCHAR2(40 BYTE),
     [exec]   4  	     "USER_ID" VARCHAR2(40 BYTE),
     [exec]   5  	     "LOGIN" VARCHAR2(40 BYTE),
     [exec]   6  	     "DATE_ACTION" DATE,
     [exec]   7  	     "ACTION" VARCHAR2(40 BYTE),
     [exec]   8  	     "ORDER_ID" VARCHAR2(40 BYTE),
     [exec]   9  	      PRIMARY KEY ("ID_JOURNALISATION")
     [exec]  10  	     );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> -- Patch
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/patch/oracle/p19/cast_pub.sql
     [exec] SQL> ALTER TABLE CAST_SKU ADD ON_SALE_DISCOUNT_DISPLAY NUMBER(1,0) DEFAULT 0 NULL;
     [exec] ALTER TABLE CAST_SKU ADD ON_SALE_DISCOUNT_DISPLAY NUMBER(1,0) DEFAULT 0 NULL
     [exec]                          *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/patch/oracle/p20/cast_pub.sql
     [exec] SQL> CREATE TABLE CAST_CATALOG_ADDITION_PROP (
     [exec]   2    ASSET_VERSION NUMBER(19,0) NOT NULL ENABLE,
     [exec]   3    CATALOG_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4    SEARCH_BY_PRODUCT NUMBER(1,0) DEFAULT 1,
     [exec]   5    SEARCH_BY_PIVOT NUMBER(1,0) DEFAULT 1,
     [exec]   6    SEARCH_BY_REGULAR NUMBER(1,0) DEFAULT 1,
     [exec]   7    BODYSTYLE VARCHAR2(500),
     [exec]   8    PRIMARY KEY (CATALOG_ID, ASSET_VERSION),
     [exec]   9    FOREIGN KEY (CATALOG_ID, ASSET_VERSION)	REFERENCES DCS_CATALOG (CATALOG_ID, ASSET_VERSION) ENABLE
     [exec]  10  );
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD CAST_PRIORITY NUMBER(*,0);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_CATEGORY ADD FREE_TEXT VARCHAR2(1000 BYTE);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/patch/oracle/p21/cast_pub.sql
     [exec] SQL> ALTER TABLE CAST_DOCUMENT ADD PAGE_TITLE_PATTERN	     VARCHAR2(300)   NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_DOCUMENT ADD META_KEYWORDS_PATTERN	VARCHAR2(300)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_DOCUMENT ADD META_DESCRIPTION_PATTERN	VARCHAR2(300)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD PAGE_TITLE_PATTERN	     VARCHAR2(300)   NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD STORE_ID VARCHAR2(40) DEFAULT '0';
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER_BACKUP MODIFY (
     [exec]   2  	 LOGIN varchar2(60)
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD FLAG_IMAGE VARCHAR2(100)	NULL;
     [exec] ALTER TABLE CAST_PRODUCT ADD FLAG_IMAGE	VARCHAR2(100)	NULL
     [exec]                              *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD FLAG_TEXT	VARCHAR2(200)	NULL;
     [exec] ALTER TABLE CAST_PRODUCT ADD FLAG_TEXT	VARCHAR2(200)	NULL
     [exec]                              *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> UPDATE CAST_DOCUMENT
     [exec]   2  SET PAGE_TITLE_PATTERN = '{title} - CASTORAMA';
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> 
     [exec] SQL> UPDATE CAST_DOCUMENT
     [exec]   2  SET META_KEYWORDS_PATTERN = '{keywords,sep=,}';
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> 
     [exec] SQL> UPDATE CAST_DOCUMENT
     [exec]   2  SET META_DESCRIPTION_PATTERN = '{description}';
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/dsp/cast_magasin.sql
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD STORE_URL VARCHAR2(254);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p22/cast_core.sql
     [exec] SQL> drop TABLE "CAST_CORE"."CASTO_COMMERCE_ITEM_BACKUP_TMP";
     [exec] drop TABLE "CAST_CORE"."CASTO_COMMERCE_ITEM_BACKUP_TMP"
     [exec]                        *
     [exec] ERROR at line 1:
     [exec] ORA-00942: table or view does not exist
     [exec] 
     [exec] 
     [exec] SQL> create table "CAST_CORE".CASTO_COMMERCE_ITEM_BACKUP_TMP as select * from "CAST_CORE"."CASTO_COMMERCE_ITEM_BACKUP" where '1' = '1';
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> alter table "CASTO_CCE_ITEM_LISTE_BACKUP" drop constraint "FK_CASTO_CCE_ITEMS_BACKUP";
     [exec] alter table "CASTO_CCE_ITEM_LISTE_BACKUP" drop constraint "FK_CASTO_CCE_ITEMS_BACKUP"
     [exec]                                                           *
     [exec] ERROR at line 1:
     [exec] ORA-02443: Cannot drop constraint  - nonexistent constraint
     [exec] 
     [exec] 
     [exec] SQL> drop TABLE "CAST_CORE"."CASTO_COMMERCE_ITEM_BACKUP"cascade constraints;
     [exec] 
     [exec] Table dropped.
     [exec] 
     [exec] SQL> alter table "CAST_CORE"."CASTO_COMMERCE_ITEM_BACKUP_TMP" rename to CASTO_COMMERCE_ITEM_BACKUP;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> alter table "CASTO_COMMERCE_ITEM_BACKUP" add constraint PK_CASTO_COMMERCE_ITEM_BACKUP primary key("COMMERCE_ITEM_ID");
     [exec] alter table "CASTO_COMMERCE_ITEM_BACKUP" add constraint PK_CASTO_COMMERCE_ITEM_BACKUP primary key("COMMERCE_ITEM_ID")
     [exec]                                                                                       *
     [exec] ERROR at line 1:
     [exec] ORA-02260: table can have only one primary key
     [exec] 
     [exec] 
     [exec] SQL> alter table "CASTO_CCE_ITEM_LISTE_BACKUP" add constraint FK_CASTO_CCE_ITEMS_BACKUP foreign key("COMMERCE_ITEM_ID") references "CASTO_COMMERCE_ITEM_BACKUP"("COMMERCE_ITEM_ID") ON DELETE CASCADE ENABLE;
     [exec] alter table "CASTO_CCE_ITEM_LISTE_BACKUP" add constraint FK_CASTO_CCE_ITEMS_BACKUP foreign key("COMMERCE_ITEM_ID") references "CASTO_COMMERCE_ITEM_BACKUP"("COMMERCE_ITEM_ID") ON DELETE CASCADE ENABLE
     [exec]                                                                                                                                                            *
     [exec] ERROR at line 1:
     [exec] ORA-02270: no matching unique or primary key for this column-list
     [exec] 
     [exec] 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p22/cast_catalog.sql
     [exec] SQL> UPDATE CAST_PROMO_INFORMATION
     [exec]   2  SET PAGE_TITLE_PATTERN = '{title} - CASTORAMA' WHERE PAGE_TITLE_PATTERN IS NULL;
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PRODUCT ADD KITCHEN_CONTENT_HTML	     VARCHAR2(200)   NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE DCS_PROMOTION MODIFY DISPLAY_NAME VARCHAR2(200);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY CONTRAINTESUTILISATION VARCHAR2(1500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY MENTIONSLEGALESOBLIGATOIRES VARCHAR2(1500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY PLUSDUPRODUIT VARCHAR2(1500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY LIBELLECLIENTLONG VARCHAR2(1500);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/patch/oracle/ik/cast_pub.sql
     [exec] SQL> ALTER TABLE CASTO_CATEGORY ADD IK_CATEGORY_TYPE VARCHAR2(255);
     [exec] ALTER TABLE CASTO_CATEGORY ADD IK_CATEGORY_TYPE	VARCHAR2(255)
     [exec]                                *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_CATEGORY ADD IK_CATEGORY_TYPE_NAV NUMBER(2) DEFAULT 0;
     [exec] ALTER TABLE CASTO_CATEGORY ADD IK_CATEGORY_TYPE_NAV NUMBER(2) DEFAULT 0
     [exec]                                *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_SKU_IK_CS_ASSOC (
     [exec]   2  	     ASSET_VERSION			     NUMBER(19) 		     NOT NULL,
     [exec]   3  	     SKU_ID								     VARCHAR2(40)	     NOT NULL,
     [exec]   4  	     SEQUENCE_NUM						     INTEGER			     NOT NULL,
     [exec]   5  	     CROSS_ID								     VARCHAR2(40)	     NULL,
     [exec]   6  	     PRIMARY KEY (SKU_ID, SEQUENCE_NUM, ASSET_VERSION));
     [exec] CREATE TABLE CASTO_SKU_IK_CS_ASSOC (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CASTO_IK_CATEGORY_TYPE (
     [exec]   2  	     ASSET_VERSION						     NUMBER(19,0)	     NOT NULL ENABLE,
     [exec]   3  	     WORKSPACE_ID						     VARCHAR2(40 BYTE)	     NOT NULL ENABLE,
     [exec]   4  	     BRANCH_ID								     VARCHAR2(40 BYTE)	     NOT NULL ENABLE,
     [exec]   5  	     IS_HEAD								     NUMBER(1,0)	     NOT NULL ENABLE,
     [exec]   6  	     VERSION_DELETED						     NUMBER(1,0)		     NOT NULL ENABLE,
     [exec]   7  	     VERSION_EDITABLE						     NUMBER(1,0)	     NOT NULL ENABLE,
     [exec]   8  	     PRED_VERSION						     NUMBER(19,0),
     [exec]   9  	     CHECKIN_DATE						     DATE,
     [exec]  10  	     TYPE_NAME								     VARCHAR2(255)	     NOT NULL,
     [exec]  11  	     PRIMARY KEY (TYPE_NAME, ASSET_VERSION));
     [exec] CREATE TABLE CASTO_IK_CATEGORY_TYPE (
     [exec]              *
     [exec] ERROR at line 1:
     [exec] ORA-00955: name is already used by an existing object
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/patch/oracle/mth/cast_pub.sql
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_THEMATIQUE"
     [exec]   2  	(
     [exec]   3  	 "ASSET_VERSION" NUMBER(19,0) NOT NULL ENABLE,
     [exec]   4  	     "WORKSPACE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "BRANCH_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "IS_HEAD" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   7  	     "VERSION_DELETED" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   8  	     "VERSION_EDITABLE" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   9  	     "PRED_VERSION" NUMBER(19,0),
     [exec]  10  	     "CHECKIN_DATE" DATE,
     [exec]  11  	     "THEMATIQUE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]  12  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]  13  	     "DESCRIPTION" VARCHAR2(2048 BYTE),
     [exec]  14  	 "S_IMAGE" VARCHAR2(40 BYTE),
     [exec]  15  	 "B_IMAGE" VARCHAR2(40 BYTE),
     [exec]  16  	 "CHAPTER" VARCHAR2(40 BYTE),
     [exec]  17  	 "BG_COLOR" VARCHAR2(25 BYTE),
     [exec]  18  	 "FONT_COLOR" VARCHAR2(25 BYTE),
     [exec]  19  	     "TOP_DOC_TITLE" VARCHAR2(254 BYTE),
     [exec]  20  	     "TOP_DOC_DESCRIPTION" VARCHAR2(2048 BYTE),
     [exec]  21  	     "BOTTOM_DOC_TITLE" VARCHAR2(254 BYTE),
     [exec]  22  	     "BOTTOM_DOC_DESCRIPTION" VARCHAR2(2048 BYTE),
     [exec]  23  	     "PAGE_TITLE_PATTERN" VARCHAR2(300 BYTE),
     [exec]  24  	     "META_DESCRIPTION_PATTERN" VARCHAR2(300 BYTE),
     [exec]  25  	      CONSTRAINT "CAST_THEMATIQUE_P" PRIMARY KEY ("THEMATIQUE_ID", "ASSET_VERSION")
     [exec]  26    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  27    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  28    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  29    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  30  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  31    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  32    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  33    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE INDEX "CAST_THEMATIQUE_CIX" ON "CAST_THEMATIQUE" ("CHECKIN_DATE")
     [exec]   2    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   3    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   4    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]   5    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE INDEX "CAST_THEMATIQUE_WSX" ON "CAST_THEMATIQUE" ("WORKSPACE_ID")
     [exec]   2    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   3    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   4    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]   5    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_THEMATIQUE_DOCS_TOP"
     [exec]   2  	(
     [exec]   3  	     "ASSET_VERSION" NUMBER(19,0) NOT NULL ENABLE,
     [exec]   4  	     "THEMATIQUE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     "DOCUMENT_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   7  	      CONSTRAINT "CAST_THEMATIQUE_DOCS_TOP_P" PRIMARY KEY ("THEMATIQUE_ID", "SEQUENCE_NUM", "ASSET_VERSION")
     [exec]   8    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   9    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  10    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  11    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  12  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  13    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  14    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  15    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_THEMATIQUE_DOCS_BOTTOM"
     [exec]   2  	(
     [exec]   3  	     "ASSET_VERSION" NUMBER(19,0) NOT NULL ENABLE,
     [exec]   4  	     "THEMATIQUE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     "DOCUMENT_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   7  	      CONSTRAINT "CAST_THEMATIQUE_DOCS_BOTTOM_P" PRIMARY KEY ("THEMATIQUE_ID", "SEQUENCE_NUM", "ASSET_VERSION" )
     [exec]   8    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   9    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  10    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  11    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  12  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  13    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  14    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  15    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_CHAPTERTHEM"
     [exec]   2  	(    "ASSET_VERSION" NUMBER(19,0) NOT NULL ENABLE,
     [exec]   3  	     "WORKSPACE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     "BRANCH_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "IS_HEAD" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   6  	     "VERSION_DELETED" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   7  	     "VERSION_EDITABLE" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   8  	     "PRED_VERSION" NUMBER(19,0),
     [exec]   9  	     "CHECKIN_DATE" DATE,
     [exec]  10  	     "CHAPTER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]  11  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]  12  	 "COLOR" VARCHAR2(25 BYTE),
     [exec]  13  	      CONSTRAINT "CAST_CHAPTERTHEM_P" PRIMARY KEY ("CHAPTER_ID", "ASSET_VERSION")
     [exec]  14    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  15    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  16    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  17    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  18  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  19    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  20    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  21    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE INDEX "CAST_CHAPTERTHEM_CIX" ON "CAST_CHAPTERTHEM" ("CHECKIN_DATE")
     [exec]   2    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   3    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   4    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]   5    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE INDEX "CAST_CHAPTERTHEM_WSX" ON "CAST_CHAPTERTHEM" ("WORKSPACE_ID")
     [exec]   2    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   3    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   4    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]   5    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_CONTTHEM"
     [exec]   2  	(
     [exec]   3  	 "ASSET_VERSION" NUMBER(19,0) NOT NULL ENABLE,
     [exec]   4  	     "WORKSPACE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "BRANCH_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "IS_HEAD" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   7  	     "VERSION_DELETED" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   8  	     "VERSION_EDITABLE" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   9  	     "PRED_VERSION" NUMBER(19,0),
     [exec]  10  	     "CHECKIN_DATE" DATE,
     [exec]  11  	     "CONTAINER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]  12  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]  13  	      CONSTRAINT "CAST_CONTTHEME_P" PRIMARY KEY ("CONTAINER_ID", "ASSET_VERSION")
     [exec]  14    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  15    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  16    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  17    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  18  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  19    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  20    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  21    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE INDEX "CAST_CONTTHEM_CIX" ON "CAST_CONTTHEM" ("CHECKIN_DATE")
     [exec]   2    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   3    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   4    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]   5    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE INDEX "CAST_CONTTHEM_WSX" ON "CAST_CONTTHEM" ("WORKSPACE_ID")
     [exec]   2    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   3    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   4    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]   5    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>  CREATE TABLE "CAST_CONT_THEM"
     [exec]   2  	(
     [exec]   3  	     "ASSET_VERSION" NUMBER(19,0) NOT NULL ENABLE,
     [exec]   4  	     "CONTAINER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   6  	     "THEMATIQUE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   7  	      CONSTRAINT "CAST_CONT_THEM_P" PRIMARY KEY ("CONTAINER_ID", "SEQUENCE_NUM", "ASSET_VERSION")
     [exec]   8    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   9    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  10    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  11    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  12  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  13    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  14    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  15    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE "CAST_CONT_CHAPT"
     [exec]   2  	(
     [exec]   3  	 "ASSET_VERSION" NUMBER(19,0) NOT NULL ENABLE,
     [exec]   4  	 "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     "CONTAINER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "CHAPTER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   7  	      CONSTRAINT "CAST_CONT_CHAPT_P" PRIMARY KEY ("CONTAINER_ID", "SEQUENCE_NUM", "ASSET_VERSION")
     [exec]   8    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   9    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  10    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  11    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  12  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  13    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  14    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  15    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   ALTER TABLE "CAST_CHAPTERTHEM" ADD "H_IMAGE" VARCHAR2(40 BYTE);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_GUIMENU"
     [exec]   2  	(
     [exec]   3  	 "ASSET_VERSION" NUMBER(19,0) NOT NULL ENABLE,
     [exec]   4  	     "WORKSPACE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "BRANCH_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "IS_HEAD" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   7  	     "VERSION_DELETED" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   8  	     "VERSION_EDITABLE" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   9  	     "PRED_VERSION" NUMBER(19,0),
     [exec]  10  	     "CHECKIN_DATE" DATE,
     [exec]  11  	 "MENU_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]  12  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]  13  	 "IMAGE" VARCHAR2(40 BYTE),
     [exec]  14  	 "CATEGORY" VARCHAR2(40) NULL ,
     [exec]  15  	 "VERSION" NUMBER(*,0) NOT NULL ENABLE,
     [exec]  16  	 "TEMPLATE" VARCHAR2(254 BYTE),
     [exec]  17  	      CONSTRAINT "CAST_GUIMENU_P" PRIMARY KEY ("MENU_ID", "ASSET_VERSION")
     [exec]  18    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  19    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  20    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  21    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  22  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  23    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  24    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  25    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE INDEX "CAST_GUIMENU_CIX" ON "CAST_GUIMENU" ("CHECKIN_DATE")
     [exec]   2    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   3    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   4    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]   5    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE INDEX "CAST_GUIMENU_WSX" ON "CAST_GUIMENU" ("WORKSPACE_ID")
     [exec]   2    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   3    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   4    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]   5    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_MENUITEM"
     [exec]   2  	(
     [exec]   3  	 "ASSET_VERSION" NUMBER(19,0) NOT NULL ENABLE,
     [exec]   4  	     "WORKSPACE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "BRANCH_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "IS_HEAD" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   7  	     "VERSION_DELETED" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   8  	     "VERSION_EDITABLE" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   9  	     "PRED_VERSION" NUMBER(19,0),
     [exec]  10  	     "CHECKIN_DATE" DATE,
     [exec]  11  	 "ITEM_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]  12  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]  13  	 "IMAGE" VARCHAR2(40 BYTE),
     [exec]  14  	 "VERSION" NUMBER(*,0) NOT NULL ENABLE,
     [exec]  15  	 "MENU" VARCHAR2(40) NULL,
     [exec]  16  	 "TEMPLATE" VARCHAR2(254 BYTE),
     [exec]  17  	      CONSTRAINT "CAST_MENUITEM_P" PRIMARY KEY ("ITEM_ID", "ASSET_VERSION")
     [exec]  18    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  19    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  20    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  21    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  22  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  23    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  24    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  25    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE INDEX "CAST_MENUITEM_CIX" ON "CAST_MENUITEM" ("CHECKIN_DATE")
     [exec]   2    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   3    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   4    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]   5    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE INDEX "CAST_MENUITEM_WSX" ON "CAST_MENUITEM" ("WORKSPACE_ID")
     [exec]   2    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   3    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]   4    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]   5    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   ALTER TABLE "CAST_MENUITEM" ADD "URL" VARCHAR2(2048 BYTE);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL>   ALTER TABLE "CAST_MENUITEM" ADD "NEW_TAB" NUMBER(1,0) DEFAULT 0 NOT NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_GUIMENU_ITEMS"
     [exec]   2  	(
     [exec]   3  	"ASSET_VERSION" NUMBER(19,0) NOT NULL ENABLE,
     [exec]   4  	 "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	 "MENU_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	 "ITEM_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   7  	  CONSTRAINT "CAST_GUIMENU_ITEMS_P" PRIMARY KEY ("ITEM_ID", "SEQUENCE_NUM", "ASSET_VERSION")
     [exec]   8    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   9    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  10    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  11    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  12  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  13    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  14    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  15    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL>   CREATE TABLE "CAST_THEMATIQUE_CHAPT"
     [exec]   2  	(
     [exec]   3  	"ASSET_VERSION" NUMBER(19,0) NOT NULL ENABLE,
     [exec]   4  	 "SEQUENCE_NUM" NUMBER(*,0) NOT NULL ENABLE,
     [exec]   5  	     "THEMATIQUE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "CHAPTER_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   7  	      CONSTRAINT "CAST_THEMATIQUE_CHAPT_P" PRIMARY KEY ("THEMATIQUE_ID", "SEQUENCE_NUM", "ASSET_VERSION")
     [exec]   8    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]   9    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  10    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  11    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  12  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  13    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  14    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  15    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "CAST_DOCUMENT" ADD "EXTERNAL_URL"	VARCHAR2(2048 BYTE)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE  "CAST_THEMATIQUE" DROP COLUMN "CHAPTER";
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE "CAST_THEMATIQUE" MODIFY
     [exec]   2  	     (
     [exec]   3  	     "TITLE" VARCHAR2(510 BYTE),
     [exec]   4  	     "DESCRIPTION" VARCHAR2(3000 BYTE),
     [exec]   5  	     "TOP_DOC_TITLE" VARCHAR2(510 BYTE),
     [exec]   6  	     "TOP_DOC_DESCRIPTION" VARCHAR2(3000 BYTE),
     [exec]   7  	     "BOTTOM_DOC_TITLE" VARCHAR2(510 BYTE),
     [exec]   8  	     "BOTTOM_DOC_DESCRIPTION" VARCHAR2(3000 BYTE)
     [exec]   9  	     );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/patch/oracle/pdr/cast_core.sql
     [exec] SP2-0310: unable to open file "D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/patch/oracle/pdr/cast_core.sql"
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/patch/oracle/p23/cast_pub.sql
     [exec] SQL> ALTER TABLE CASTO_SKU ADD video_aux_url VARCHAR2(2000) NULL;
     [exec] ALTER TABLE CASTO_SKU ADD video_aux_url	VARCHAR2(2000) NULL
     [exec]                           *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD video_full_size NUMBER(1, 0) DEFAULT 0;
     [exec] ALTER TABLE CASTO_SKU ADD video_full_size NUMBER(1, 0) DEFAULT 0
     [exec]                           *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> alter table CAST_CATEGORY modify info_text varchar2(1000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> alter table CAST_CATEGORY modify commerce_text varchar2(1000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/patch/oracle/s2/cast_catalog_ver.sql
     [exec] SQL> ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_START_DATE DATE NULL;
     [exec] ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_START_DATE DATE NULL
     [exec]                           *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_END_DATE DATE NULL;
     [exec] ALTER TABLE CASTO_SKU ADD CASTORAMA_PRICE_END_DATE DATE NULL
     [exec]                           *
     [exec] ERROR at line 1:
     [exec] ORA-01430: column being added already exists in table
     [exec] 
     [exec] 
     [exec] SQL> 
     [exec] SQL> update CASTO_SKU set EAN = substr(EAN, 1, 13);
     [exec] 
     [exec] 0 rows updated.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY EAN VARCHAR2(13);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD SHOW_M2_FIRST NUMBER(1,0) DEFAULT 1;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD EMISSION_LEVEL VARCHAR2(40);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU ADD SHOW_CARD_PRICE NUMBER(1,0);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/patch/oracle/p27/cast_pub.sql
     [exec] SQL> ALTER TABLE cast_grouped_product ADD IMPLANTA_MESSAGE VARCHAR2(50) DEFAULT 'Selon implantation type';
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE casto_category ADD custom_page_link VARCHAR2(250) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE casto_category ADD products_number_content VARCHAR2(50) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE casto_category ADD subcategories_content VARCHAR2(500) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE casto_sku ADD CUSTOM_DELIVERY_TERM NUMBER NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE casto_sku ADD CD_START_DATE DATE NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE casto_sku ADD CD_END_DATE DATE NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_CATALOGUE ADD CATALOG_WRAP_ID VARCHAR2(250) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/patch/oracle/p28/cast_pub.sql
     [exec] SQL> ALTER TABLE CASTO_SKU ADD external_app_url	VARCHAR2(2000) NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/patch/oracle/fl/cast_pub.sql
     [exec] SQL> CREATE TABLE casto_doc_filter_tag_cats (
     [exec]   2  	 ASSET_VERSION NUMBER(19,0) NOT NULL ENABLE,
     [exec]   3  	     WORKSPACE_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     BRANCH_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     IS_HEAD NUMBER(1,0) NOT NULL ENABLE,
     [exec]   6  	     VERSION_DELETED NUMBER(1,0) NOT NULL ENABLE,
     [exec]   7  	     VERSION_EDITABLE NUMBER(1,0) NOT NULL ENABLE,
     [exec]   8  	     PRED_VERSION NUMBER(19,0),
     [exec]   9  	     CHECKIN_DATE DATE,
     [exec]  10  	     tag_cat_id VARCHAR2(40) NOT NULL,
     [exec]  11  	     tag_cat_title VARCHAR2(255) NOT NULL,
     [exec]  12  	     tag_cat_image VARCHAR2(40),
     [exec]  13  	     tag_cat_number NUMBER,
     [exec]  14  	     PRIMARY KEY (tag_cat_id, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX casto_doc_filter_tag_cats_cix ON casto_doc_filter_tag_cats (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX casto_doc_filter_tag_cats_wsx ON casto_doc_filter_tag_cats (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE casto_doc_filter_tags (
     [exec]   2  	 ASSET_VERSION NUMBER(19,0) NOT NULL ENABLE,
     [exec]   3  	     WORKSPACE_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     BRANCH_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     IS_HEAD NUMBER(1,0) NOT NULL ENABLE,
     [exec]   6  	     VERSION_DELETED NUMBER(1,0) NOT NULL ENABLE,
     [exec]   7  	     VERSION_EDITABLE NUMBER(1,0) NOT NULL ENABLE,
     [exec]   8  	     PRED_VERSION NUMBER(19,0),
     [exec]   9  	     CHECKIN_DATE DATE,
     [exec]  10  	 tag_id VARCHAR2(40) NOT NULL,
     [exec]  11  	 tag_title VARCHAR2(255) NOT NULL,
     [exec]  12  	 tag_category VARCHAR2(40),
     [exec]  13  	     tag_promo VARCHAR2(40),
     [exec]  14  	     tag_number NUMBER,
     [exec]  15  	 PRIMARY KEY (tag_id, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX casto_doc_filter_tags_cix ON casto_doc_filter_tags (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX casto_doc_filter_tags_wsx ON casto_doc_filter_tags (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE cast_tag_docs (
     [exec]   2  	 ASSET_VERSION NUMBER(19,0) NOT NULL ENABLE,
     [exec]   3  	     tag_id VARCHAR2(40) NOT NULL ENABLE,
     [exec]   4  	 document_id VARCHAR2(40) NOT NULL ENABLE,
     [exec]   5  	     sequence_num INTEGER NOT NULL ENABLE,
     [exec]   6  	 PRIMARY KEY (tag_id,sequence_num,ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE casto_doc_types (
     [exec]   2  	 ASSET_VERSION NUMBER(19,0) NOT NULL ENABLE,
     [exec]   3  	     WORKSPACE_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     BRANCH_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     IS_HEAD NUMBER(1,0) NOT NULL ENABLE,
     [exec]   6  	     VERSION_DELETED NUMBER(1,0) NOT NULL ENABLE,
     [exec]   7  	     VERSION_EDITABLE NUMBER(1,0) NOT NULL ENABLE,
     [exec]   8  	     PRED_VERSION NUMBER(19,0),
     [exec]   9  	     CHECKIN_DATE DATE,
     [exec]  10  	 type_id VARCHAR2(40) NOT NULL,
     [exec]  11  	     type_title VARCHAR2(255) NOT NULL,
     [exec]  12  	     type_descr VARCHAR2(500),
     [exec]  13  	     type_number NUMBER,
     [exec]  14  	     type_def_promo VARCHAR2(40),
     [exec]  15  	     PRIMARY KEY (type_id, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX casto_doc_types_cix ON casto_doc_types (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX casto_doc_types_wsx ON casto_doc_types (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE casto_doc_subcats (
     [exec]   2  	 ASSET_VERSION NUMBER(19,0) NOT NULL ENABLE,
     [exec]   3  	     WORKSPACE_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     BRANCH_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     IS_HEAD NUMBER(1,0) NOT NULL ENABLE,
     [exec]   6  	     VERSION_DELETED NUMBER(1,0) NOT NULL ENABLE,
     [exec]   7  	     VERSION_EDITABLE NUMBER(1,0) NOT NULL ENABLE,
     [exec]   8  	     PRED_VERSION NUMBER(19,0),
     [exec]   9  	     CHECKIN_DATE DATE,
     [exec]  10  	     subcat_id VARCHAR2(40) NOT NULL,
     [exec]  11  	     subcat_title VARCHAR2(255) NOT NULL,
     [exec]  12  	     PRIMARY KEY (subcat_id, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX casto_doc_subcats_cix ON casto_doc_subcats (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX casto_doc_subcats_wsx ON casto_doc_subcats (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE casto_fast_lab_configs (
     [exec]   2  	     ASSET_VERSION NUMBER(19,0) NOT NULL ENABLE,
     [exec]   3  	     WORKSPACE_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   4  	     BRANCH_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     IS_HEAD NUMBER(1,0) NOT NULL ENABLE,
     [exec]   6  	     VERSION_DELETED NUMBER(1,0) NOT NULL ENABLE,
     [exec]   7  	     VERSION_EDITABLE NUMBER(1,0) NOT NULL ENABLE,
     [exec]   8  	     PRED_VERSION NUMBER(19,0),
     [exec]   9  	     CHECKIN_DATE DATE,
     [exec]  10  	     id VARCHAR2(40) NOT NULL,
     [exec]  11  	     fb_link_title VARCHAR2(255),
     [exec]  12  	     fb_link_value VARCHAR2(255),
     [exec]  13  	     fd_link_title VARCHAR2(255),
     [exec]  14  	     fd_link_value VARCHAR2(255),
     [exec]  15  	     eg_link_title VARCHAR2(255),
     [exec]  16  	     eg_link_value VARCHAR2(255),
     [exec]  17  	     dis_def_doc VARCHAR2(40),
     [exec]  18  	     prod_dis_fb_link_title VARCHAR2(255),
     [exec]  19  	     prod_dis_fd_link_title VARCHAR2(255),
     [exec]  20  	     prod_dis_eg_link_title VARCHAR2(255),
     [exec]  21  	     cf_enable_new NUMBER(1,0),
     [exec]  22  	     cf_page_title VARCHAR2(255),
     [exec]  23  	     cf_page_descr VARCHAR2(500),
     [exec]  24  	     cf_def_bottom_banner VARCHAR2(40),
     [exec]  25  	     cf_get_help_title VARCHAR2(255),
     [exec]  26  	     cf_get_help_descr VARCHAR2(500),
     [exec]  27  	     cf_get_help_home VARCHAR2(40),
     [exec]  28  	     cf_get_help_filtered VARCHAR2(40),
     [exec]  29  	     reinsurance_section VARCHAR2(40),
     [exec]  30  	     reinsurance_section_flap VARCHAR2(40),
     [exec]  31  	     PRIMARY KEY (id, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX casto_fast_lab_configs_cix ON casto_fast_lab_configs (CHECKIN_DATE);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> CREATE INDEX casto_fast_lab_configs_wsx ON casto_fast_lab_configs (WORKSPACE_ID);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE cast_document ADD sub_type_id VARCHAR2(40);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_document ADD subcat_id VARCHAR2(40);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_document ADD cf_description VARCHAR2(2000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_document ADD cf_r_col_dis_link_name VARCHAR2(255);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE cast_category ADD dp_promo VARCHAR2(40);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_category ADD dp_promo_width NUMBER;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_category ADD dp_promo_height NUMBER;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE cast_category ADD min_cat_number_per_col NUMBER;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE cast_product ADD flag_bg VARCHAR2(30);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/patch/oracle/p29/cast_pub.sql
     [exec] SQL> ALTER TABLE CASTO_SKU ADD (
     [exec]   2  	     COLOR_LIBELLE_CONTENU VARCHAR2(2000 BYTE),
     [exec]   3  	     COLOR_LIBELLE_COMMERCE VARCHAR2(2000 BYTE),
     [exec]   4  	     PROMOTION_COMMERCE CLOB,
     [exec]   5  	     PROMOTION_CONTENU CLOB,
     [exec]   6  	     START_PROM_COMMERCE DATE,
     [exec]   7  	     END_PROM_COMMERCE DATE,
     [exec]   8  	     START_PROM_CONTENU DATE,
     [exec]   9  	     END_PROM_CONTENU DATE,
     [exec]  10  	     SOUMISAREP NUMBER(1, 0) NULL,
     [exec]  11  	     TAXREP NUMBER(14, 2) NULL
     [exec]  12  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/patch/oracle/p30/cast_pub.sql
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY PLUSDUPRODUIT VARCHAR2(2000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CASTO_SKU MODIFY LIBELLECLIENTLONG VARCHAR2(2000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/Versioned/sql/patch/oracle/cc/cast_pub.sql
     [exec] SQL> /*
     [exec] SQL> =======================================================================================================
     [exec] SQL> Document Information
     [exec] SQL> =======================================================================================================
     [exec] SQL> Auth	  : EPAM Team
     [exec] SQL> E-mail	  :
     [exec] SQL> Created	  : 04/05/2012
     [exec] SQL> Use	  : Add local price lists to the store
     [exec] SQL> Run As	  : PUBLISHING
     [exec] SQL> Duration Est : This will take less than 20 seconds to install
     [exec] SQL> =======================================================================================================
     [exec] SQL> */
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_CATALOG_ADDITION_PROP ADD (
     [exec]   2    DISPLAY_BANNER NUMBER(1,0) DEFAULT 1,
     [exec]   3    DISPLAY_STORES NUMBER(1,0) DEFAULT 1,
     [exec]   4    COOKIE_AGE NUMBER(*,0) DEFAULT 180 NOT NULL,
     [exec]   5    POPUP_TITLE VARCHAR2(1000) DEFAULT UNISTR('S\00e9lectionnez votre magasin pour visualiser le prix et la disponibilit\00e9 de vos produits :'),
     [exec]   6    HEADER_TEXT VARCHAR2(1000) DEFAULT UNISTR('Consulter le prix et la disponibilit\00e9 de mes produits'),
     [exec]   7    CC_PROMO_INFO VARCHAR2(40) DEFAULT 'prin200000');
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    CC_DELAY_PERIOD_UNIT NUMBER(*,0) DEFAULT 0 NOT NULL,
     [exec]   3    CC_DELAY_PERIOD NUMBER(*,0) DEFAULT 2 NOT NULL,
     [exec]   4    CC_PROMO_INFO VARCHAR2(40),
     [exec]   5    CC_TOP_PROMO_INFO VARCHAR2(40),
     [exec]   6    LOCAL_LIST_PRICE_LIST VARCHAR2(40) NULL,
     [exec]   7    LOCAL_SALE_PRICE_LIST VARCHAR2(40) NULL,
     [exec]   8    RETRAIT_MAGASIN NUMBER(1,0) DEFAULT 0,
     [exec]   9    LOCAL_PRIX NUMBER(1,0) DEFAULT 0);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_CATALOG_ADDITION_PROP ADD (
     [exec]   2    DELIVERY_TOOLTIP VARCHAR2(1000),
     [exec]   3    CC_TOOLTIP VARCHAR2(1000));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    CC_PHONE VARCHAR2(1000));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_CATALOG_ADDITION_PROP ADD (
     [exec]   2    PROCESSING_FEE_NICE_WORD VARCHAR2(1000));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    CC_DELIVERY_MESSAGE VARCHAR2(1000));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD(
     [exec]   2    DELIVERY_TYPE NUMBER(*,0) DEFAULT 0 NOT NULL ENABLE,
     [exec]   3    MAGASIN_ID VARCHAR2(40) DEFAULT '999' NOT NULL ENABLE
     [exec]   4  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ORDER ADD(
     [exec]   2    PROCESSING_FEE_NICE_WORD VARCHAR2(1000));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_CATALOG_ADDITION_PROP ADD (
     [exec]   2    SHOPPING_CART_D2H_BANNER VARCHAR2(40) DEFAULT '1400037',
     [exec]   3    SHOPPING_CART_CC_BANNER VARCHAR2(40) DEFAULT '1400038');
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    PBX_SITE VARCHAR2(20),
     [exec]   3    PBX_RANG VARCHAR2(20),
     [exec]   4    PBX_IDENTIFIANT VARCHAR2(20));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_ABONNEMENT_NEWSLETTER ADD (
     [exec]   2    ACCEPT_RECONTACT NUMBER(1,0) DEFAULT 0 NOT NULL);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    LOCAL_PRICE_LIST VARCHAR2(40) NULL);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN DROP (
     [exec]   2    LOCAL_LIST_PRICE_LIST,
     [exec]   3    LOCAL_SALE_PRICE_LIST
     [exec]   4  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE INDEX PERF_DCS_PROMOTION_IDX ON DCS_PROMOTION (PROMOTION_TYPE, ASSET_VERSION);
     [exec] 
     [exec] Index created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    PBX_SITE_SOFINCO VARCHAR2(20),
     [exec]   3    PBX_RANG_SOFINCO VARCHAR2(20));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD (
     [exec]   2    PBX_IDENTIFIANT_SOFINCO VARCHAR2(20));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/p31/cast_catalog.sql
     [exec] SQL> ALTER TABLE CAST_CATEGORY ADD (
     [exec]   2  	     DEFAULT_TYPE_SORT NUMBER(1, 0) NULL
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE casto_fast_lab_configs ADD (
     [exec]   2  card_castorama_block VARCHAR2(40)
     [exec]   3  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/hmacImpl/cast_pub.sql
     [exec] SQL> ALTER TABLE CASTO_MAGASIN ADD
     [exec]   2  (
     [exec]   3    PBX_SECRET_KEY VARCHAR2(255),
     [exec]   4    PBX_SECRET_KEY_SOFINCO VARCHAR2(255),
     [exec]   5    PBX_DIRECT_PLUS_KEY VARCHAR2(255)
     [exec]   6  );
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> COMMIT;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/inventoryCheck/cast_pub.sql
     [exec] SP2-0310: unable to open file "D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/inventoryCheck/cast_pub.sql"
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/lc/cast_pub.sql
     [exec] SP2-0310: unable to open file "D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/lc/cast_pub.sql"
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/ds/cast_pub.sql
     [exec] SP2-0310: unable to open file "D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/ds/cast_pub.sql"
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/tablets/cast_pub.sql
     [exec] SQL> CREATE TABLE "CAST_FOOTER_ITEM"
     [exec]   2  	(
     [exec]   3  	"ASSET_VERSION" NUMBER(19,0) NOT NULL ENABLE,
     [exec]   4  	     "WORKSPACE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "BRANCH_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "IS_HEAD" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   7  	     "VERSION_DELETED" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   8  	     "VERSION_EDITABLE" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   9  	     "PRED_VERSION" NUMBER(19,0),
     [exec]  10  	     "CHECKIN_DATE" DATE,
     [exec]  11  	 "LINK_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]  12  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]  13  	 "VERSION" NUMBER(*,0) NOT NULL ENABLE,
     [exec]  14  	     "URL" VARCHAR2(2048 BYTE),
     [exec]  15  	     "IS_ACTIVE" NUMBER(1,0) DEFAULT 0 NOT NULL,
     [exec]  16  	     "POSITION" NUMBER(30) NULL,
     [exec]  17  	 CONSTRAINT "CAST_FOOTER_ITEM_P" PRIMARY KEY ("LINK_ID","ASSET_VERSION")
     [exec]  18    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  19    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  20    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  21    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  22  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  23    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  24    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  25    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE "CAST_NOS_SERVICES_ITEM"
     [exec]   2  	(
     [exec]   3  	"ASSET_VERSION" NUMBER(19,0) NOT NULL ENABLE,
     [exec]   4  	     "WORKSPACE_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   5  	     "BRANCH_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]   6  	     "IS_HEAD" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   7  	     "VERSION_DELETED" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   8  	     "VERSION_EDITABLE" NUMBER(1,0) NOT NULL ENABLE,
     [exec]   9  	     "PRED_VERSION" NUMBER(19,0),
     [exec]  10  	     "CHECKIN_DATE" DATE,
     [exec]  11  	 "LINK_ID" VARCHAR2(40 BYTE) NOT NULL ENABLE,
     [exec]  12  	     "TITLE" VARCHAR2(254 BYTE),
     [exec]  13  	 "VERSION" NUMBER(*,0) NOT NULL ENABLE,
     [exec]  14  	     "URL" VARCHAR2(2048 BYTE),
     [exec]  15  	     "IS_ACTIVE" NUMBER(1,0) DEFAULT 0 NOT NULL,
     [exec]  16  	     "POSITION" NUMBER(30) NULL,
     [exec]  17  	     CONSTRAINT "CAST_NOS_SERVICES_ITEM_P" PRIMARY KEY ("LINK_ID","ASSET_VERSION")
     [exec]  18    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
     [exec]  19    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  20    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  21    TABLESPACE "CAST_USERS"	ENABLE
     [exec]  22  	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
     [exec]  23    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     [exec]  24    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
     [exec]  25    TABLESPACE "CAST_USERS" ;
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CASTO_SKU
     [exec]   2  MODIFY GARANTIE VARCHAR2(2000);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/sl/cast_pub.sql
     [exec] SQL> alter table CASTO_FAST_LAB_CONFIGS add (
     [exec]   2  "CHOOSE_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]   3  "CHOOSE_STORE_DESCR" VARCHAR2(300 BYTE),
     [exec]   4  "SEARCH_INPUT_TITLE" VARCHAR2(300 BYTE),
     [exec]   5  "LEADFORMANCE_LINK_VALUE" VARCHAR2(75 BYTE),
     [exec]   6  "BEST_OFFERS" VARCHAR2(75 BYTE),
     [exec]   7  "CC_STORE_MESSAGE_LONG" VARCHAR2(75 BYTE),
     [exec]   8  "CC_STORE_MESSAGE_SHORT" VARCHAR2(75 BYTE),
     [exec]   9  "CHANGE_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]  10  "CHOOSE_OTHER_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]  11  "CHOOSE_THIS_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]  12  "YOUR_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]  13  "SEARCH_STORE_LABEL" VARCHAR2(75 BYTE),
     [exec]  14  "CATALOG_PAGE_LINK" VARCHAR2(150 BYTE),
     [exec]  15  "CLOSE_BUTTON_ENABLED" NUMBER(1,0) DEFAULT 0);
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD META_KEYWORDS_PATTERN	VARCHAR2(300)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD META_DESCRIPTION_PATTERN VARCHAR2(300)	NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> ALTER TABLE CAST_PROMO_INFORMATION ADD SHORT_DESCRIPTION	     VARCHAR2(300)   NULL;
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> CREATE TABLE CAST_PROMO_INFO_KEYWRDS (
     [exec]   2  	     ASSET_VERSION NUMBER(19) NOT NULL,
     [exec]   3  	     ID VARCHAR2(40) NOT NULL,
     [exec]   4  	     SEQUENCE_NUM INTEGER NOT NULL,
     [exec]   5  	     KEYWORDS VARCHAR2(254) NULL,
     [exec]   6  	     PRIMARY KEY(ID, SEQUENCE_NUM, ASSET_VERSION));
     [exec] 
     [exec] Table created.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/sp/cast_pub.sql
     [exec] SP2-0310: unable to open file "D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/sp/cast_pub.sql"
     [exec] SQL> @D:\ATG\ATG9.4\home/../commerce/castorama/cast/sql/patch/oracle/si/cast_pub.sql
     [exec] SQL> alter table CASTO_FAST_LAB_CONFIGS add (
     [exec]   2  "FIRST_IMAGE" VARCHAR2(40 BYTE),
     [exec]   3  "SECOND_IMAGE" VARCHAR2(40 BYTE),
     [exec]   4  "THIRD_IMAGE" VARCHAR2(40 BYTE),
     [exec]   5  "FIRST_CAT_LINK" VARCHAR2(255 BYTE),
     [exec]   6  "SECOND_CAT_LINK" VARCHAR2(255 BYTE),
     [exec]   7  "THIRD_CAT_LINK" VARCHAR2(255 BYTE),
     [exec]   8  "ERROR_NOT_FOUND_MESSAGE" VARCHAR2(500 BYTE));
     [exec] 
     [exec] Table altered.
     [exec] 
     [exec] SQL> 
     [exec] SQL> commit;
     [exec] 
     [exec] Commit complete.
     [exec] 
     [exec] SQL> Disconnected from Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production

BUILD SUCCESSFUL
Total time: 5 minutes 3 seconds
