# Dynamo enviroment properties.  
#
dynamo.home=${env.DYNAMO_HOME}
dynamo.root.dir=${dynamo.home}/..
das.root.dir=${env.DAS_ROOT}

# This is the name of the project.
project.name=cast

# This sets the order in which submodules are called when calling a main task 
# such as 'all', 'build', etc... 
# 
modules.build.order=\
${project.name}/build.xml,\
${project.name}/Production/build.xml,\
${project.name}/Versioned/build.xml,\
${project.name}Store/build.xml,\
${project.name}Merchandising/build.xml,\
${project.name}Search/build.xml,\
${project.name}Search/Production/build.xml,\
${project.name}Search/Versioned/build.xml,\
${project.name}SearchAdmin/build.xml,\
${project.name}SVS/build.xml,\
integrations/build.xml,\
integrations/Production/build.xml,\
integrations/Versioned/build.xml,\
callCenter/castoramaCommon/build.xml,\
callCenter/castoramaFO/build.xml,\
castWS/build.xml,\
iPhone/build.xml,\
iPhone/Production/build.xml,\
iPhone/Versioned/build.xml,\
iPhoneStore/build.xml,\
env/commerce/build.xml,\
env/ca/build.xml,\
env/auxserver/build.xml,\
env/integration/build.xml,\
env/callCenter/build.xml,\
env/ws/build.xml,\
env/slm/build.xml,\
env/iphone/build.xml,\
env/iphoneVersioned/build.xml

reverse.build.order=\
env/iphoneVersioned/build.xml,\
env/iphone/build.xml,\
env/slm/build.xml,\
env/ws/build.xml,\
env/callCenter/build.xml,\
env/integration/build.xml,\
env/auxserver/build.xml,\
env/ca/build.xml,\
env/commerce/build.xml,\
iPhoneStore/build.xml,\
iPhone/Versioned/build.xml,\
iPhone/Production/build.xml,\
iPhone/build.xml,\
castWS/build.xml,\
callCenter/castoramaFO/build.xml,\
callCenter/castoramaCommon/build.xml,\
integrations/Versioned/build.xml,\
integrations/Production/build.xml,\
integrations/build.xml,\
${project.name}SVS/build.xml,\
${project.name}SearchAdmin/build.xml,\
${project.name}Search/Versioned/build.xml,\
${project.name}Search/Production/build.xml,\
${project.name}Search/build.xml,\
${project.name}Merchandising/build.xml,\
${project.name}Store/build.xml,\
${project.name}/Versioned/build.xml,\
${project.name}/Production/build.xml,\
${project.name}/build.xml


# installation root for the Project.  
install.unit=commerce

# root parent for the module stack
module.root.parent=castorama

# Server names and modules for import data
storefront.scripts.server.name=${project.name}-core-scripts
staging.scripts.server.name=${project.name}-stg-scripts
publishing.scripts.server.name=${project.name}-pub-scripts
search.scripts.server.name=${project.name}-pub-scripts

topology.ca.instanceName=${project.name}-jboss-ca

# Names of a server and module to be run by the startsqlrepository task to import data
storefront.modules.for.import=-m commerce.castorama.cast.Production -m DCS.Search.CustomCatalogs -m SearchAdmin.customizations
staging.modules.for.import=-m commerce.castorama.cast.Production -m DCS.Search.CustomCatalogs -m SearchAdmin.customizations
publishing.modules.for.import=-m commerce.castorama.cast.Versioned -m BIZUI -m DCS-UI -m DCS.Search.CustomCatalogs.Versioned -m SearchAdmin.AdminUI


# Location of any server specific configuration that should be deployed
global.server.dir=servers

# Tells the clean task to exclude compiled jsps from deletion
clean.task.excludes=**/jspbuild/**,**/ServerModules/**

# This is the directory the ANT task menu will used to write the javadocs
# for all defined submodules 
# 
# This should be overridden to match your local environment needs.
#
global.javadoc.dir=../doc/javadoc

# Javadoc external references
jdk.docs.dir=${jdk.home}/docs/api
dynamo.docs.dir=${dynamo.root.dir}/manuals/dynamo/apidoc

# base directory for development specific configuration files
# such as code check tools checkstyle and pmd.  Note the directory setting is a bit 
# counter-intuitive.  This is because checkstlye, pmd, and jalopy are all run
# from the sub-modules and not this main module.
#
global.etc.dir=${global.dir}/../etc

# Executables
sqlplus.win.cmd=sqlplus
sqlplus.unix.cmd=sqlplus

# ATG's Darina command to create J2EE applications
rundarina.win.cmd=${dynamo.home}/bin/runDarina.bat
rundarina.unix.cmd=${dynamo.home}/bin/runDarina


# ********************************************************************************
#
# Common values used by sub modules
#
# ********************************************************************************

# Basic directory settings that identify common directory structures in each submodule
src.dir=${basedir}/src
etc.dir=${basedir}/etc
config.dir=${basedir}/config
liveconfig.dir=${basedir}/liveconfig
stagconfig.dir=${basedir}/configlayers/stagingandprod
inf.dir=${basedir}/META-INF
sql.dir=${basedir}/sql
lib.dir=${basedir}/lib
j2ee.dir=${basedir}/j2ee
test.dir=${basedir}/test
test.lib.dir=${test.dir}/lib
test.src.dir=${test.dir}/src

# Basic directory settings that identify the build directory structures for each submodule
build.dir=${basedir}/build
build.tempconfig.dir=${build.dir}/tempconfig
build.tempstagconfig.dir=${build.dir}/tempstagconfig
build.config.dir=${build.dir}/config
build.stagconfig.dir=${build.dir}/configlayers/stagingandprod
build.sql.dir=${build.dir}/sql
build.tempddl.dir=${build.dir}/tempddl
javadoc.dir=${build.dir}/javadoc
classes.dir=${build.dir}/classes
testclasses.dir=${build.dir}/testclasses
reports.dir=${build.dir}/reports
ear.dir=${build.dir}/ear
javadoc.dir=${build.dir}/javadoc
temp.ear.dir=${build.dir}/tempear



# Settings for Building Webservice Client Stubs

# The Apache Axis library for generating web service skeletons and stubs
axis.lib.dir=${dynamo.root.dir}/DAS/lib

# the place to store generated source stubs.  
webservice.stubs.dir=${build.dir}/wsstubs

# ---------------------------------------------------------------------------------
# J2EE Build and deployment settings
#

deploy.definition.file=deploy-jboss.xml

# Web app names to use in pattern substitutions
default.web.app.name=${project.name}.war
merch.web.app.name=castmerchandising.war
fo.web.app.name=callcenter.war
loginUser.web.app.name=loginUser.war
createUser.web.app.name=createUser.war
updateUser.web.app.name=updateUser.war
searchClients.web.app.name=rechercheClients.war
forgotPassw.web.app.name=motDePassePerdu.war
rest.web.app.name=rest.war

# This is substituted in the various places where the context root is
# required in the configuration XML and .properties files.
#
default.context.root=store
merch.context.root=castmerchandising
fo.context.root=adminFO
loginUser.context.root=loginUser
createUser.context.root=createUser
updateUser.context.root=updateUser
searchClients.context.root=rechercheClients
forgotPassw.context.root=motDePassePerdu
rest.context.root=rest

# Uncommenting this tells the deploy steps to precompile the JSPs.  
# Commented out here because most development tasks won't want this.  
# This is useful only when creating a build for release.
# 
# darina.precompile.arg=-jsp-compile

# ---------------------------------------------------------------------------------
# Additional J2EE build and deployment settings when using another application
# server (other than DAS)
#

# This setting determines the location to put the application EAR file when the 
# ATG Application Assembler tool is run.
# The default will be to put it in $DYNAMO_HOME, override in userenv.properties.
#
application.ear.install.dir=${dynamo.home}

# This is the name of the application ear that will be constructed by ATG's 
# Application Assembler tool.  
# Remember you can override this in userenv.properties
#
application.ear.filename=${install.unit}.ear


# This identifies the directory under a named server that houses the application server specific
# configuration required to run that server.  Hint:  On JBoss this directory would store the 
# connection pool information
#
appserver.config.dir=appserver-config

# ---------------------------------------------------------------------------------
# Database schema and content install/import/uninstall
#

# stuff for loading data using oracle sql import
#
import.sql.win32.cmd=imp
import.sql.unix.cmd=imp

# SQL repository import stuff
#
startSqlRepository.win32.cmd=${dynamo.home}/bin/startSQLRepository.bat
startSqlRepository.unix.cmd=${dynamo.home}/bin/startSQLRepository

# This must point to the base directory -- we can't use ${install.dir} here
# because it's local to the wrong module.
atg.uninstall.dir=${dynamo.root.dir}/${install.unit}/${module.root.parent}/base/sql/${database.type}/uninstall

# Uninstall ATG Tables
sql.uninstall.atg.catalog=${atg.uninstall.dir}/05_atg_catalog.sql

# Deploy Sketch images to web server docroot
#deploy.images=true

# The JBoss server
jboss.server.dir=
jboss.conf.dir=${jboss.server.dir}/conf
install.log4j=false
webserver.root.dir=${jboss.server.dir}/deploy/jboss-web.deployer/ROOT.war
