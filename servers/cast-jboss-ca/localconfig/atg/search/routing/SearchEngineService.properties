# @version $Id: //product/DAF/version/9.0/Search/Routing/src/config/atg/search/routing/SearchEngineService.properties#1 $$Change: 508164 $

$class=atg.search.routing.SearchEngineServiceImpl
loggingDebug=false

repository=repository/SearchConfigurationRepository
routingSystemService=RoutingSystemService
launchingService=LaunchingService
routingMonitor=RoutingMonitor

# location for search engine activity logs. Only requests that pass through this instance of Routing
# will be logged here. The logging level is controlled by the next group of settings.
engineActivityPath={serverHomeDirResource?resourceURI=logs}/searchEngineActivity

# this turns everything on and overrides all request-specific settings below.
loggingAllRequests=false

# logging for search requests, indexing requests, start & stop, et cetera

# this is for search request debugging, and generates a huge number of files
loggingSearch=false
# this is for index request debugging, and also generates a huge number of files
loggingIndex=false
# these log startup, shutdown, and content load requests
loggingStart=false
loggingStop=false
loggingLoad=false
# logs backup-related requests. This is the last part of indexing, when the index gets copied (backed-up) to the
# deploy share
loggingDeploy=false


# how many times to poll the engine after startup to verify the startup of the engine process. Until
# startup is verified, it is not started.
maxStartupPollTries=20

# how long, in ms, to delay between polls 
delayBetweenStartupTriesMs=3000

# amount of time Routing will wait before sending the actual shutdown request.
# This facilitates clean engine shutdowns on a busy site. The interval
# gives underway requests some time to finish and return normally, lowering (but not
# eliminating) the probability that an engine will be shutdown while still working on a request.
# The next two properties (maxShutdownPollTries and delayBetweenShutdownTriesMs) govern
# how this service monitors the shutdown *after* the shutdown request has been sent to the engine.
defaultStopWaitMs=5000

# how many times to poll the engine after the shutdown request to verify the shutdown. Until
# shutdown is verified, it is not stopped. See the next property, delayBetweenShutdownTriesMs.
# Consider setting maxShutdownPollTries * delayBetweenShutdownTriesMs equal to the
# SearchEngine's rwTimeout in its SOAP configuration (default 30 seconds) + readTimeoutMs (see below).
# The defaults are 25 * 2000 = 30000 (engine's rwTimeout) + 20000 (readTimeoutMs).
maxShutdownPollTries=25

# how long, in ms, to delay between polls
delayBetweenShutdownTriesMs=2000


# whether engine monitoring should be enabled. enables performance statistics
monitoringEnabled=true

# timeout in ms for non-multiplexed search and indexing for connecting to an engine prior to searching/indexing.
# If you are observing connect failures under heavy load, increase this value.
# But be careful, since the larger this value is, the longer it takes for Routing to recognize a network failure.
# For example, if the network plug is pulled for the remote engine, and this is 20000, then it can take up to
# 20 seconds to failover to another engine.
connectTimeoutMs=1000

# timeout in ms for non-multiplexed-search and non-indexing requests to engines.  For multiplexed search
# (the default strategy--see RoutingSearchService.strategyType), see SearchStrategy.requestTimeoutMs
readTimeoutMs=20000

# timeout in ms for indexing requests. This should be much higher than for search commands.
# 300k ms = 5 minutes
indexingReadTimeoutMs=300000

