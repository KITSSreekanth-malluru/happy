CREATE TABLE CASTO_ABONNEMENT_NEWSLETTER (
	EMAIL 					VARCHAR2(255 BYTE) 		NOT NULL ENABLE, 
	PROFILE_ID 				VARCHAR2(40) 			NULL,
	NOM 					VARCHAR2(50 BYTE), 
	PRENOM 					VARCHAR2(50 BYTE), 
	FORMAT 					NUMBER(*,0), 
	ACCES_PARTENAIRES_CASTO NUMBER(*,0),
	IS_TEST 				NUMBER(*,0), 
	VALID 					NUMBER(*,0), 
	DATECREATION 			DATE, 
	EMAIL_STATUS 			NUMBER(*,0), 
	RECEIVE_EMAIL 			NUMBER(*,0) default 0 not null, 
	RESEIVE_OFFERS 			number(1,0) default 0 not null,
	LOCALE 					NUMBER(*,0), 
	NBEMAILFAILURE			NUMBER(*,0), 
	LASTFAILUREDATE 		DATE, 
	CIVILITE 				VARCHAR2(10 BYTE), 
	VILLE 					VARCHAR2(100 BYTE), 
	CODEPOSTAL 				VARCHAR2(10 BYTE), 
	AGE 					VARCHAR2(10 BYTE), 
	PROPRIETAIRE_LOCATAIRE 	VARCHAR2(20 BYTE), 
	NBPERSONNES 			VARCHAR2(10 BYTE), 
	CARTEATOUT 				NUMBER, 
	MAISONCAMPAGNE			NUMBER, 
	MAISON 					NUMBER,
	appartement 			number(1,0)			null,
	JARDIN 					NUMBER, 
	CANALINSCRIPTION 		VARCHAR2(50 BYTE), 
	CANALDESINSCRIPTION 	VARCHAR2(50 BYTE), 
	DATEDESINCRPTION 		DATE, 
	DATEDERNIEREMODIFICATION DATE,
	DATE_OFFERS_DESINCRPTION DATE,
	QUESTIONDES1 			VARCHAR2(50 BYTE), 
	QUESTIONDES2 			VARCHAR2(50 BYTE), 
	QUESTIONDES3 			VARCHAR2(50 BYTE), 
	QUESTIONDES4 			VARCHAR2(50 BYTE), 
	QUESTIONDES5 			VARCHAR2(50 BYTE), 
	REMARQUEDES 			VARCHAR2(500 BYTE), 
	B2B 					VARCHAR2(50 BYTE), 
	JOUEUR 					NUMBER, 
	MAGASIN 				VARCHAR2(50 BYTE), 
	DATE_REPONSE_ENQUETE_MAGASIN DATE, 
	REPONSE_LOI_LEN 		VARCHAR2(40 BYTE), 
	DATE_REPONSE_LOI_LEN 	DATE, 
	PAYS 					VARCHAR2(40 BYTE), 
	ESPRIT_CONTEMPORAIN 	NUMBER(22,0), 
	ESPRIT_TECHNICOLOR 		NUMBER(22,0), 
	ESPRIT_CHARME 			NUMBER(22,0), 
	ESPRIT_AUTHENTIQUE 		NUMBER(22,0),
	DATE_OFFERS_INSCRIPTION DATE,
	DATEINSCRIPTION 		DATE, 
	DATE_OF_BIRTH 			DATE, 
	CONSTRAINT CASTO_ABONNEMENT_PK PRIMARY KEY (EMAIL),
	CONSTRAINT CASTO_ABONNEMENT_FK FOREIGN KEY (PROFILE_ID) REFERENCES CASTO_USER (ID)
);

CREATE TABLE CASTO_THEME_NEWSLETTER 
(
	ID VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	PRIMARY KEY (ID)
);

CREATE TABLE CASTO_THEME_FAVORIS_NEWSLETTER 
(
	ID VARCHAR2(40 BYTE) NOT NULL ENABLE, 
	SEQ NUMBER(*,0) NOT NULL ENABLE, 
	THEME_FAVORI_ID VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	PRIMARY KEY (ID, SEQ),
	FOREIGN KEY (ID)
		REFERENCES CASTO_ABONNEMENT_NEWSLETTER (EMAIL), 
	FOREIGN KEY (THEME_FAVORI_ID)
		REFERENCES CASTO_THEME_NEWSLETTER (ID)
);
 
 
CREATE TABLE CASTO_PARAGRAPHE_NEWSLETTER 
(
	ID NUMBER(*,0) NOT NULL ENABLE, 
	TITRE VARCHAR2(50 BYTE), 
	CONTENU VARCHAR2(500 BYTE), 
	URL_IMAGE VARCHAR2(150 BYTE), 
	THEME_TRAITE_ID VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	PRIMARY KEY (ID),
	FOREIGN KEY (THEME_TRAITE_ID)
		REFERENCES CASTO_THEME_NEWSLETTER (ID)
);

CREATE TABLE CASTO_ARCHIVE_NEWSLETTER 
(
	ID NUMBER(*,0) NOT NULL ENABLE, 
	EMAIL_EXPEDITEUR VARCHAR2(50 BYTE), 
	TITRE VARCHAR2(50 BYTE), 
	INTRODUCTION VARCHAR2(500 BYTE), 
	DIVERS VARCHAR2(500 BYTE), 
	TO_SEND NUMBER(*,0), 
	DATE_CREATION VARCHAR2(50 BYTE), 
	PRIMARY KEY (ID)
);


CREATE TABLE CASTO_ARCHIVE_CONT_PARAGRAPHE 
(
	ID NUMBER(*,0) NOT NULL ENABLE, 
	SEQ NUMBER(*,0) NOT NULL ENABLE, 
	PARAGRAPHE_CONTENU_ID NUMBER(*,0) NOT NULL ENABLE, 
	PRIMARY KEY (ID, SEQ),
	FOREIGN KEY (ID)
	  REFERENCES CASTO_ARCHIVE_NEWSLETTER (ID), 
	FOREIGN KEY (PARAGRAPHE_CONTENU_ID)
	  REFERENCES CASTO_PARAGRAPHE_NEWSLETTER (ID)
);


CREATE TABLE CASTO_NEWSLETTER_MAILING 
(
	ID VARCHAR2(40 BYTE) NOT NULL ENABLE, 
	NAME VARCHAR2(80 BYTE), 
	SUBJECT VARCHAR2(80 BYTE), 
	UNIQ_SERVER_ID VARCHAR2(255 BYTE), 
	FROM_ADDRESS VARCHAR2(255 BYTE), 
	REPLYTO VARCHAR2(255 BYTE), 
	TEMPLATE_URL VARCHAR2(255 BYTE), 
	SEND_AS_HTML NUMBER(*,0), 
	SEND_AS_TEXT NUMBER(*,0), 
	PARAMS LONG RAW, 
	START_TIME DATE, 
	END_TIME DATE, 
	STATUS NUMBER(*,0), 
	NUM_PROFILES NUMBER(*,0), 
	NUM_SENT NUMBER(*,0), 
	NUM_BOUNCES NUMBER(*,0), 
	NUM_ERRORS NUMBER(*,0), 
	FILL_FROM_TEMPL NUMBER(1,0), 
	PRIMARY KEY (ID)
);


CREATE TABLE CASTO_NEWSLETTER_USER_MAILING 
(
	MAILING_ID VARCHAR2(40 BYTE) NOT NULL ENABLE, 
	USER_ID VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	IDX NUMBER(*,0) NOT NULL ENABLE, 
	PRIMARY KEY (MAILING_ID, USER_ID),
	FOREIGN KEY (MAILING_ID)
		REFERENCES CASTO_NEWSLETTER_MAILING (ID), 
	FOREIGN KEY (USER_ID)
		REFERENCES CASTO_ABONNEMENT_NEWSLETTER (EMAIL)
);
 
CREATE INDEX CASTO_U_MAIL_MID ON CASTO_NEWSLETTER_USER_MAILING (MAILING_ID); 

CREATE INDEX CASTO_U_MAIL_UID ON CASTO_NEWSLETTER_USER_MAILING (USER_ID); 
