/*
=======================================================================================================
Document Information
=======================================================================================================
Auth         : EPAM Team
Created      : 02/10/2012
Use          : Script adds new column STOCK_AVAILABLE and removes unnecessary columns
=======================================================================================================
*/

ALTER TABLE MS_INVENTORY ADD (
  STOCK_AVAILABLE NUMBER(12,2)
);

ALTER TABLE MS_INVENTORY DROP(
  STOCK_THEORETICAL,
  STOCK_RESERVED
);

ALTER TABLE MS_SYNC_JOURNAL RENAME TO MS_INVENTORY_SYNC_JOURNAL;

CREATE TABLE MS_LOCAL_PRICES_SYNC_JOURNAL(
  STORE_ID NUMBER(4,0),
  ENTITY_NUMBER NUMBER(9,0),
  FILE_SEQ NUMBER(9,0),
  LAST_UPDATE DATE,
  STATUS NUMBER(1,0),
  ID NUMBER(10,0) NOT NULL,
  CONSTRAINT MS_LOCAL_PRICES_SYNC_JOURNAL_P PRIMARY KEY (ID)
);

CREATE SEQUENCE MS_LPRICES_SYNC_JOURNAL_SEQ MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER NOCYCLE;

CREATE OR REPLACE TRIGGER BI_MS_LPRICES_SYNC_JOURNAL before
  INSERT ON MS_LOCAL_PRICES_SYNC_JOURNAL FOR EACH row BEGIN
  SELECT MS_LPRICES_SYNC_JOURNAL_SEQ.nextval INTO :NEW.ID FROM dual;
END;
/
ALTER TRIGGER BI_MS_LPRICES_SYNC_JOURNAL ENABLE;


CREATE TABLE MS_ORDERS_SYNC_JOURNAL(
  LAST_UPDATE DATE,
  QUANTITY NUMBER(10,0),
  ID NUMBER(10,0) NOT NULL,
  CONSTRAINT MS_ORDERS_SYNC_JOURNAL PRIMARY KEY (ID)
);

CREATE SEQUENCE MS_ORDERS_SYNC_JOURNAL_SEQ MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER NOCYCLE;

CREATE OR REPLACE TRIGGER BI_MS_ORDERS_SYNC_JOURNAL before
  INSERT ON MS_ORDERS_SYNC_JOURNAL FOR EACH row BEGIN
  SELECT MS_ORDERS_SYNC_JOURNAL_SEQ.nextval INTO :NEW.ID FROM dual;
END;
/
ALTER TRIGGER BI_MS_ORDERS_SYNC_JOURNAL ENABLE;

ALTER TABLE MS_ORDERS_SYNC_JOURNAL ADD(
  STORE_ID NUMBER(4,0),
  STATUS NUMBER(1,0)
);

COMMIT;