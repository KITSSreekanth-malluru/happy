/* 
=======================================================================================================
Document Information
=======================================================================================================
Auth         : EPAM Team
E-mail       : 
Created      : 04/05/2012               
Use          : Add local price lists & prices
Run As       : Local price scheme
Duration Est : This will take less than 20 seconds to install
=======================================================================================================
*/

/*
   priceLis
*/
CREATE TABLE CAST_PRICE_LIST
  (
    PRICE_LIST_ID   VARCHAR2(40 BYTE) NOT NULL ENABLE,
    DISPLAY_NAME    VARCHAR2(254 BYTE),
    LOCALE          NUMBER(10,0),
    BASE_PRICE_LIST VARCHAR2(40 BYTE),
    CONSTRAINT CAST_PRICE_LIST_P PRIMARY KEY (PRICE_LIST_ID)
  );
/*
    prices
*/
CREATE TABLE CAST_PRICE
  (
    PRICE_ID       VARCHAR2(40 BYTE) NOT NULL ENABLE,
    PRICE_LIST     VARCHAR2(40 BYTE) NOT NULL ENABLE,
    PRODUCT_ID     VARCHAR2(40 BYTE),
    SKU_ID         VARCHAR2(40 BYTE),
    LIST_PRICE     NUMBER(19,7),
    PARENT_SKU_ID  VARCHAR2(40 BYTE),
    PRICING_SCHEME NUMBER(*,0) DEFAULT 0 NOT NULL ENABLE,
    END_DATE DATE,
    CONSTRAINT CAST_PRICE_P PRIMARY KEY (PRICE_ID),
    CONSTRAINT CAST_PRICPRIC_LST_F FOREIGN KEY (PRICE_LIST) REFERENCES CAST_PRICE_LIST (PRICE_LIST_ID) ENABLE
  );
CREATE INDEX CAST_PRICE_IDX1 ON CAST_PRICE
  (
    PRODUCT_ID
  );
CREATE INDEX CAST_PRICE_IDX2 ON CAST_PRICE
  (
    PRICE_LIST,
    SKU_ID
  );
  
/*
    Click and Collect
*/
CREATE TABLE CLICK_COLLECT
  (
    CC_ITEM_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
    STORE_ID   VARCHAR2(40 BYTE) NOT NULL ENABLE,
    SKU_ID     VARCHAR2(40 BYTE) NOT NULL ENABLE,
    CONSTRAINT CLICK_COLLECT_P PRIMARY KEY (CC_ITEM_ID)
  );
CREATE INDEX CLICK_COLLECT_INDEX1 ON CLICK_COLLECT
  (
    STORE_ID
  );
CREATE INDEX CLICK_COLLECT_INDEX2 ON CLICK_COLLECT
  (
    SKU_ID
  );
/*
    Discount
*/
CREATE TABLE DISCOUNT
  (
    DISCOUNT_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
    STORE_ID    VARCHAR2(40 BYTE) NOT NULL ENABLE,
    SKU_ID      VARCHAR2(40 BYTE) NOT NULL ENABLE,
    DISPLAY_DISCOUNT_BEGIN_DATE DATE NOT NULL ENABLE,
    DISPLAY_DISCOUNT_END_DATE DATE NOT NULL ENABLE,
    DISPLAY_DISCOUNT NUMBER(1,0),
    CONSTRAINT DISCOUNT_P PRIMARY KEY (DISCOUNT_ID)
  );
CREATE INDEX DISCOUNT_INDEX1 ON DISCOUNT
  (
    STORE_ID
  );
CREATE INDEX DISCOUNT_INDEX2 ON DISCOUNT
  (
    SKU_ID
  );
  
/*
    ecoTaxInfo
*/
CREATE TABLE ECOTAX_INFO
  (
    ECOTAX_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
    SKU_ID    VARCHAR2(40 BYTE) NOT NULL ENABLE,
    STORE_ID  VARCHAR2(40 BYTE) NOT NULL ENABLE,
    MD3E      NUMBER(13,2),
    MREP      NUMBER(13,2),
    CONSTRAINT ECOTAX_INFO_P PRIMARY KEY (ECOTAX_ID)
  );
CREATE INDEX ECOTAX_INFO_INDEX1 ON ECOTAX_INFO
  (
    SKU_ID
  );
CREATE INDEX ECOTAX_INFO_INDEX2 ON ECOTAX_INFO
  (
    STORE_ID
  );
  
/*
    notAllowedSkus
*/
CREATE TABLE NOT_ALLOWED_SKUS
  (
    ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
    SKUS CLOB,
    CONSTRAINT NOT_ALLOWED_SKUS_P PRIMARY KEY (ID)
  );

/*
    ProcesingFee
*/
CREATE TABLE PROCESSING_FEE
  (
    FEE_ID   VARCHAR2(40 BYTE) NOT NULL ENABLE,
    STORE_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
    AMOUNT   NUMBER(19,7),
    CONSTRAINT PROCESSING_FEE_P PRIMARY KEY (FEE_ID)
  );
CREATE INDEX PROCESSING_FEE_INDEX1 ON PROCESSING_FEE
  (
    STORE_ID
  );
  
/*
    promoInfo
*/
CREATE TABLE PROMO_INFO
  (
    PROMO_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
    STORE_ID VARCHAR2(40 BYTE) NOT NULL ENABLE,
    SKU_ID   VARCHAR2(40 BYTE) NOT NULL ENABLE,
    F_PROMO  NUMBER(1,0),
    C_PROMO  NUMBER(5,0),
    CONSTRAINT PROMO_INFO_P PRIMARY KEY (PROMO_ID)
  );
CREATE INDEX PROMO_INFO_INDEX1 ON PROMO_INFO
  (
    STORE_ID
  );
CREATE INDEX PROMO_INFO_INDEX2 ON PROMO_INFO
  (
    SKU_ID
  );

INSERT INTO NOT_ALLOWED_SKUS(ID) VALUES ('1');

CREATE TABLE LOCAL_PRICE_TO_STORE(
    PRICE_LIST_ID VARCHAR2(40 BYTE) NOT NULL,
    STORE_ID      VARCHAR2(40 BYTE) NOT NULL,
    RETRAIT_MAGASIN NUMBER(1,0) DEFAULT 0,
    LOCAL_PRIX NUMBER(1,0) DEFAULT 0,
    CONSTRAINT LOCAL_PRICE_TO_STORE_P PRIMARY KEY (PRICE_LIST_ID)
);

ALTER TABLE CAST_PRICE drop column END_DATE;

DROP INDEX PROMO_INFO_INDEX1;
DROP INDEX PROMO_INFO_INDEX2;
CREATE INDEX PERF_PROMO_INFO_IDX ON PROMO_INFO (STORE_ID, SKU_ID);

COMMIT;