<dsp:getvalueof var="addFacet" param="addFacet"/>
<dsp:getvalueof var="contextPath" bean="/OriginatingRequest.contextPath"/>
<dsp:getvalueof var="searchFormPlaceholder" bean="/com/castorama/seo/SEOConfiguration.searchFormPlaceholder" />
<dsp:importbean bean="/com/castorama/seo/SEOConfiguration"/>
<form name="search" action="${contextPath }/rechercher" method="get" id="search" onsubmit="prepareURL();return false;">
    <div class="block1">
        <div class="search-form-wrapper">
            <script type="text/javascript">
                $(document).ready(function(){
                    var searchInput = $("#search-question");
                    if($(searchInput).val() == ''){
                        $(searchInput).val('${searchFormPlaceholder}');
                    }
                    $(searchInput).removeAttr('disabled');
                    $("#search-question").focus(function(event) {
                        var searchQuestion = $(this).val();
                        if (searchQuestion == '${searchFormPlaceholder}') {
                            $(this).val('');
                        }
                    });

                    $("#search-question").blur(function(event) {
                        var searchQuestion = $(this).val();
                        if (searchQuestion == null || searchQuestion == '') {
                            $(this).val("${searchFormPlaceholder}");
                        }
                    });
                    $("#search-question").autocomplete("${pageContext.request.contextPath}/castCommon/includes/autocomplete.jsp", {
                        minChars: 3,
                        formatResult: formatResult,
                        formatItem: formatItem,
                        selectFirst: false
                    });
                    $("#search-question").result(function (event, data, formatted) {
                        prepareURL();
                    });
                    function formatResult(row) {
                        return row[0].replace("&nbsp;", " ").replace("&amp;","&").replace("&#39;", "'").replace(/^\s+|\s+$/g, '');
                    }

                    function formatItem(row) {
                        return row = row[0].replace("&nbsp;", " ");
                    }
                    var searchTypeValue=1;
                    initSearchPlaceHolder();
                });
                function initSearchPlaceHolder(){
                    var searchInput = $('#search-question');
                    $(searchInput).parent().siblings('input[type=submit]').removeAttr('disabled');
                    $(searchInput).bind('click',function(){
                        $(this).unbind('click');
                        $(this).val('');
                    });
                }

                function prepareURL(){
                    var na = $("#search")[0].action;
                    na+='4/';
                    var queryS = $("#search-question")[0].value;
                    /*var m = /%/.exec(queryS);
                    if (m != null){
                        //queryS = escape(queryS);
                        queryS = queryS.replace(/%/,"procentsEscape");
                    }

                    if (m != null){
                        //queryS = escape(queryS);
                        queryS = queryS.replace(/procentsEscape/,"%25");
                    }   */
                    if (queryS == "" || queryS == "${searchFormPlaceholder}") {
                        showSearchPopup("msgPopupDiv");
                        $("#search-question").focus();
                        elem = document.getElementById("search-question");
                        if (msieversion() > 0) {
                            elem.onfocusout = function() {hideSearchPopup('msgPopupDiv');};
                        } else {
                            elem.onblur = function() {hideSearchPopup('msgPopupDiv');};
                        }
                        return false;
                    }

                    //var regex = /(<([^>]+)>*)/ig  ;
                    //queryS = queryS.replace(regex, "");

                    queryS = encodeURIComponent(queryS);
                    queryS = queryS.replace(/%2F/g, "");
                    queryS = queryS.replace(/%5C/g, "");
                    queryS = queryS.replace(/%3A/g, "");
                    queryS = queryS.replace(/%7C/g, "");

                    testString = queryS.replace("%2B", "+").replace("-", "");

                    queryS = queryS.replace(/^\s/g,"");
                    queryS = queryS.replace(/\s$/g,"");
                    queryS = queryS.replace(/\s/g, "-");
                    na+=queryS;

                    $("#search :input").attr('disabled', true);
                    //inp.parentNode.removeChild(inp);

                    /*if (queryS == "" || testString == "") {
                        na = "404";
                        na.submit();
                    } */
                    // var searchInput = $('#search-question');
                    // if (document.getElementById("search-question").value == ":") {
                    //     document.getElementById("search-question").value = "&#58";
                    // }

                    $("#search")[0].action=na;
                    //var inp = $("#searchType")[0];
                    //inp.parentNode.removeChild(inp);
                    $("#search").submit();
                }
            </script>
            <input name="question" type="text" value="" maxlength="80" id="search-question" disabled/>
        </div>
        <%-- <div class="ddWrapper">
         %> <span id="select" class="select">Dans tout le site</span>
          <select class="styled" name="searchType" id="searchType">
            <c:choose>
              <c:when test="${not empty param.searchType && param.searchType == '1' }">
                <option value="1" selected><fmt:message key="search_header.searchTypeFirst"/></option>
              </c:when>
              <c:otherwise>
                <option value="1" ><fmt:message key="search_header.searchTypeFirst"/></option>
              </c:otherwise>
            </c:choose>
            <c:choose>
              <c:when test="${not empty param.searchType && param.searchType == '2' }">
                <option value="2" selected onclick="searchTypeVAlue = 1; alert(searchTypeVAlue);"><fmt:message key="search_header.searchTypeSecond"/></option>
              </c:when>
              <c:otherwise>
                <option value="2"><fmt:message key="search_header.searchTypeSecond"/></option>
              </c:otherwise>
            </c:choose>
            <c:choose>
              <c:when test="${not empty param.searchType && param.searchType == '3' }">
                <option value="3" selected><fmt:message key="search_header.searchTypeThird"/></option>
              </c:when>
              <c:otherwise>
                <option value="3"><fmt:message key="search_header.searchTypeThird"/></option>
              </c:otherwise>
            </c:choose>
            <c:choose>
              <c:when test="${not empty param.searchType && param.searchType == '4' }">
                <option value="4" selected><fmt:message key="search_header.searchTypeFourth"/></option>
              </c:when>
              <c:otherwise>
                <option value="4"><fmt:message key="search_header.searchTypeFourth"/></option>
              </c:otherwise>
            </c:choose>
            </select>
          </div>--%>
        <input type="hidden" name="osearchmode" value="reg"/>
        <input type="submit" value="Rechercher" class="goBtn" disabled/>
    </div>


    <div class="whitePopupContainer SearchPopupContainer" id="msgPopupDiv">
        <div class="whitePopupContent popupSearchMessageContainer">
            <div class="popupContentContainer">
                <fmt:message key="search.popup.message"/>
            </div>
        </div>
    </div>
</form>